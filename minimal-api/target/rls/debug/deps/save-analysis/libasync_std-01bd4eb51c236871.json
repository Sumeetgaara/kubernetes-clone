{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","async_std","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=01bd4eb51c236871","-C","extra-filename=-01bd4eb51c236871","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","async_channel=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libasync_channel-ae8f905f790b49a6.rmeta","--extern","async_global_executor=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libasync_global_executor-838071145cce19a0.rmeta","--extern","async_io=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libasync_io-3da07ee002e1619b.rmeta","--extern","async_lock=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libasync_lock-a20aec4127be74ab.rmeta","--extern","crossbeam_utils=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libcrossbeam_utils-733cafa14d942422.rmeta","--extern","futures_core=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_core-fea1f369c965b980.rmeta","--extern","futures_io=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_io-55e9c66272d82234.rmeta","--extern","futures_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_lite-c9f666c62824e1d5.rmeta","--extern","kv_log_macro=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libkv_log_macro-9de9727f5d927561.rmeta","--extern","log=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\liblog-c3351cb6a598ed3e.rmeta","--extern","memchr=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libmemchr-71668c703494fa8e.rmeta","--extern","num_cpus=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libnum_cpus-d7d3f591551266a8.rmeta","--extern","once_cell=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libonce_cell-9fd1be56278cc064.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","pin_utils=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_utils-479771e35919927b.rmeta","--extern","slab=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libslab-0cbef9df9c5b3e02.rmeta","--cap-lints","allow","-L","native=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\build\\wepoll-sys-e6e3462ec406f968\\out\\wepoll-build","-L","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\build\\wepoll-sys-e6e3462ec406f968\\out\\wepoll-build","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libasync_std-01bd4eb51c236871.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[1630051784899196087,4124817596893909177]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":13,"id":{"name":"kv_log_macro","disambiguator":[10620070365757717332,10093942959501210258]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":14,"id":{"name":"log","disambiguator":[15548804450061179331,12355824409821987755]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":15,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":16,"id":{"name":"value_bag","disambiguator":[7983814905734106450,7613886499277558228]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":17,"id":{"name":"ctor","disambiguator":[18230398555697604503,8457667638075746728]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","num":18,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","num":20,"id":{"name":"async_lock","disambiguator":[9674162324520145755,9408669803221321346]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","num":21,"id":{"name":"event_listener","disambiguator":[16718974153294965114,9414809684068953069]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","num":22,"id":{"name":"async_channel","disambiguator":[10392464564630602582,15122802017290283733]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","num":23,"id":{"name":"concurrent_queue","disambiguator":[13690883887734332756,2372090323394090042]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","num":24,"id":{"name":"cache_padded","disambiguator":[18430742370163598732,8934774445746586313]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","num":25,"id":{"name":"futures_io","disambiguator":[1236178160505726825,10601705116674456136]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":26,"id":{"name":"async_io","disambiguator":[16010463240259932359,1489545870354998163]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":27,"id":{"name":"futures_lite","disambiguator":[7929227947593562983,9688460980843640366]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":28,"id":{"name":"parking","disambiguator":[8629873100962434843,14837162830194983568]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":29,"id":{"name":"waker_fn","disambiguator":[2770740284744609405,5984161034792111341]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":30,"id":{"name":"fastrand","disambiguator":[12860178853366623945,16020401611787001140]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","num":31,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":32,"id":{"name":"socket2","disambiguator":[7384941052824331967,5007430700162007164]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":33,"id":{"name":"winapi","disambiguator":[17139452019433532343,10675329208674910202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\rt\\mod.rs","num":34,"id":{"name":"once_cell","disambiguator":[15770301717060747651,17430418598302640687]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":35,"id":{"name":"polling","disambiguator":[6742757220601407151,4177681709129472121]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":36,"id":{"name":"wepoll_sys","disambiguator":[18229083904412076562,9645197850149034627]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","num":37,"id":{"name":"slab","disambiguator":[6325241530448311626,10372903147419273267]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":38,"id":{"name":"async_global_executor","disambiguator":[6027199910599542932,11380310083527368136]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":39,"id":{"name":"async_executor","disambiguator":[3989885154591931337,3138506114624148324]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":40,"id":{"name":"async_task","disambiguator":[7819238269719097839,5536517737666979164]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":41,"id":{"name":"async_mutex","disambiguator":[12274310611474537075,6776734292810188048]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":42,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":43,"id":{"name":"blocking","disambiguator":[16197177337491814371,14014352811815090667]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","num":44,"id":{"name":"atomic_waker","disambiguator":[11167180425658754839,11143837923886538176]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":11564,"line_start":1,"line_end":339,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799656,"byte_end":9799663,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":2,"index":37298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799665,"byte_end":9799669,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":2,"index":9770},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799671,"byte_end":9799676,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799698,"byte_end":9799703,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\ready.rs","byte_start":9957606,"byte_end":9957611,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1081}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799758,"byte_end":9799767,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799828,"byte_end":9799836,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799859,"byte_end":9799866,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799889,"byte_end":9799896,"line_start":136,"line_end":136,"column_start":22,"column_end":29},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799916,"byte_end":9799920,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799943,"byte_end":9799949,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799943,"byte_end":9799949,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":1103}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799976,"byte_end":9799986,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9800007,"byte_end":9800012,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9800072,"byte_end":9800077,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9800104,"byte_end":9800115,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9800117,"byte_end":9800125,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803630,"byte_end":9803636,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\future\\mod.rs","byte_start":10097580,"byte_end":10097586,"line_start":139,"line_end":139,"column_start":40,"column_end":46},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":1363}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803700,"byte_end":9803707,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803730,"byte_end":9803737,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803758,"byte_end":9803763,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803891,"byte_end":9803898,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803900,"byte_end":9803912,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816688,"byte_end":9816693,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816695,"byte_end":9816700,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816721,"byte_end":9816728,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816730,"byte_end":9816736,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816759,"byte_end":9816768,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":4498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816770,"byte_end":9816778,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816796,"byte_end":9816800,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":4459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816802,"byte_end":9816806,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816826,"byte_end":9816832,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816834,"byte_end":9816840,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816865,"byte_end":9816876,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816878,"byte_end":9816888,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":66}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816907,"byte_end":9816908,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148297,"byte_end":10148302,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":7139},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148304,"byte_end":10148313,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":7198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148315,"byte_end":10148322,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":3207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148324,"byte_end":10148334,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148336,"byte_end":10148342,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":7212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148344,"byte_end":10148352,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":25,"index":27},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148379,"byte_end":10148386,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148388,"byte_end":10148393,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":4363},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148395,"byte_end":10148400,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148427,"byte_end":10148436,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148463,"byte_end":10148472,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148474,"byte_end":10148488,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148509,"byte_end":10148513,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148535,"byte_end":10148541,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148563,"byte_end":10148568,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148570,"byte_end":10148575,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1577}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148596,"byte_end":10148597,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"_, Read","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148620,"byte_end":10148626,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148628,"byte_end":10148634,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":25,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148655,"byte_end":10148659,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148680,"byte_end":10148684,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148686,"byte_end":10148690,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":25,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148712,"byte_end":10148717,"line_start":288,"line_end":288,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":25,"index":27},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159101,"byte_end":10159108,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":25,"index":17},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159147,"byte_end":10159151,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":25,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159190,"byte_end":10159194,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":25,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159233,"byte_end":10159238,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159285,"byte_end":10159295,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159337,"byte_end":10159344,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159386,"byte_end":10159393,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159436,"byte_end":10159444,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":1625}},{"kind":"Use","ref_id":{"krate":25,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\mod.rs","byte_start":10216323,"byte_end":10216332,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1922}},{"kind":"Use","ref_id":{"krate":25,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10221508,"byte_end":10221518,"line_start":84,"line_end":84,"column_start":37,"column_end":47},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1944}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149121,"byte_end":10149128,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149130,"byte_end":10149136,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149200,"byte_end":10149206,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149208,"byte_end":10149214,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149276,"byte_end":10149281,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149283,"byte_end":10149288,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149351,"byte_end":10149357,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149359,"byte_end":10149365,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10149389,"byte_end":10149396,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":1577}},{"kind":"Use","ref_id":{"krate":1,"index":9264},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299319,"byte_end":10299330,"line_start":5,"line_end":5,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawHandle","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299332,"byte_end":10299345,"line_start":5,"line_end":5,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawHandle","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9268},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299347,"byte_end":10299360,"line_start":5,"line_end":5,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawHandle","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299362,"byte_end":10299371,"line_start":5,"line_end":5,"column_start":52,"column_end":61},"alias_span":null,"name":"RawHandle","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9291},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299381,"byte_end":10299392,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"alias_span":null,"name":"AsRawSocket","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9293},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299394,"byte_end":10299407,"line_start":6,"line_end":6,"column_start":22,"column_end":35},"alias_span":null,"name":"FromRawSocket","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9295},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299409,"byte_end":10299422,"line_start":6,"line_end":6,"column_start":37,"column_end":50},"alias_span":null,"name":"IntoRawSocket","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":1,"index":9263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299424,"byte_end":10299433,"line_start":6,"line_end":6,"column_start":52,"column_end":61},"alias_span":null,"name":"RawSocket","value":"","parent":{"krate":0,"index":2613}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150378,"byte_end":10150384,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150435,"byte_end":10150441,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150498,"byte_end":10150507,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150563,"byte_end":10150572,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":25,"index":27},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150619,"byte_end":10150626,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":25,"index":17},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150678,"byte_end":10150682,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":25,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150734,"byte_end":10150738,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":25,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150790,"byte_end":10150795,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150857,"byte_end":10150867,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150928,"byte_end":10150935,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150996,"byte_end":10151003,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10151064,"byte_end":10151072,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10151138,"byte_end":10151148,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":1580}},{"kind":"Use","ref_id":{"krate":5,"index":4522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158165,"byte_end":10158168,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":5,"index":4540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158170,"byte_end":10158174,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":29},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158214,"byte_end":10158219,"line_start":180,"line_end":180,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":75},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158221,"byte_end":10158231,"line_start":180,"line_end":180,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158233,"byte_end":10158246,"line_start":180,"line_end":180,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":155},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158286,"byte_end":10158292,"line_start":183,"line_end":183,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158294,"byte_end":10158309,"line_start":183,"line_end":183,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":220},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158311,"byte_end":10158336,"line_start":183,"line_end":183,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":20,"index":256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158338,"byte_end":10158354,"line_start":183,"line_end":183,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1581}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","byte_start":10158795,"byte_end":10158796,"line_start":4,"line_end":4,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1594}},{"kind":"Use","ref_id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303244,"byte_end":10303254,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303275,"byte_end":10303283,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303299,"byte_end":10303303,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":1,"index":7071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303324,"byte_end":10303332,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":1,"index":7040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303352,"byte_end":10303360,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303384,"byte_end":10303395,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":1,"index":7057},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303418,"byte_end":10303429,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303449,"byte_end":10303456,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303481,"byte_end":10303493,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303509,"byte_end":10303513,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303535,"byte_end":10303545,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303571,"byte_end":10303585,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303606,"byte_end":10303615,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303635,"byte_end":10303643,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303659,"byte_end":10303663,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303683,"byte_end":10303691,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303712,"byte_end":10303721,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303747,"byte_end":10303761,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303783,"byte_end":10303793,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303819,"byte_end":10303833,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303856,"byte_end":10303867,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303885,"byte_end":10303891,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303918,"byte_end":10303933,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303961,"byte_end":10303977,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303994,"byte_end":10303999,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":2636}},{"kind":"Use","ref_id":{"krate":1,"index":7071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file_type.rs","byte_start":10347996,"byte_end":10348004,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":2916}},{"kind":"Use","ref_id":{"krate":1,"index":7040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353366,"byte_end":10353374,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":2929}},{"kind":"Use","ref_id":{"krate":1,"index":7057},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\permissions.rs","byte_start":10368642,"byte_end":10368653,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":2959}},{"kind":"Use","ref_id":{"krate":1,"index":4127},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388916,"byte_end":10388928,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":7519},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388930,"byte_end":10388939,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":4403},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388941,"byte_end":10388948,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":7416},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388950,"byte_end":10388956,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":7502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388958,"byte_end":10388973,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":7597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388975,"byte_end":10388991,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":4128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388993,"byte_end":10389007,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10389032,"byte_end":10389041,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10389063,"byte_end":10389073,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10389089,"byte_end":10389093,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10389109,"byte_end":10389113,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10389132,"byte_end":10389139,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":3098}},{"kind":"Use","ref_id":{"krate":1,"index":7377},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439639,"byte_end":10439653,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7397},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439673,"byte_end":10439681,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7294},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439702,"byte_end":10439708,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7322},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439710,"byte_end":10439718,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7325},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439720,"byte_end":10439728,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439750,"byte_end":10439760,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439762,"byte_end":10439774,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":1,"index":7291},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439776,"byte_end":10439788,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439841,"byte_end":10439854,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439905,"byte_end":10439913,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439915,"byte_end":10439926,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439928,"byte_end":10439937,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":3384}},{"kind":"Use","ref_id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439988,"byte_end":10439997,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":3384}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":11564,"line_start":1,"line_end":339,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":66},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1594},{"krate":0,"index":2636},{"krate":0,"index":3098},{"krate":0,"index":3384},{"krate":0,"index":3637}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: fs/struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5342,"byte_end":5373,"line_start":114,"line_end":114,"column_start":1,"column_end":32}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5374,"byte_end":5403,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5404,"byte_end":5439,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5440,"byte_end":5443,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5444,"byte_end":5482,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5483,"byte_end":5486,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5487,"byte_end":5547,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5548,"byte_end":5551,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5552,"byte_end":5622,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5623,"byte_end":5690,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5691,"byte_end":5767,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5768,"byte_end":5787,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5788,"byte_end":5791,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5792,"byte_end":5831,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5832,"byte_end":5881,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5882,"byte_end":5929,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5930,"byte_end":5933,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5934,"byte_end":5948,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5949,"byte_end":5952,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":5953,"byte_end":6032,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6033,"byte_end":6108,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6109,"byte_end":6182,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6183,"byte_end":6203,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6204,"byte_end":6207,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6208,"byte_end":6258,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6259,"byte_end":6262,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6374,"byte_end":6400,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6401,"byte_end":6435,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6436,"byte_end":6441,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6442,"byte_end":6445,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6446,"byte_end":6468,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6469,"byte_end":6490,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6491,"byte_end":6517,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6518,"byte_end":6523,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6524,"byte_end":6531,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6532,"byte_end":6535,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6536,"byte_end":6607,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6608,"byte_end":6611,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6723,"byte_end":6753,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6754,"byte_end":6757,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6758,"byte_end":6780,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6781,"byte_end":6802,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6803,"byte_end":6833,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6834,"byte_end":6864,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6865,"byte_end":6912,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6913,"byte_end":6918,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6919,"byte_end":6926,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6927,"byte_end":6930,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":6931,"byte_end":7008,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7009,"byte_end":7012,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7130,"byte_end":7164,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7165,"byte_end":7168,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7169,"byte_end":7191,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7192,"byte_end":7236,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7237,"byte_end":7299,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7300,"byte_end":7358,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7359,"byte_end":7362,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7363,"byte_end":7401,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7402,"byte_end":7405,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7406,"byte_end":7420,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7421,"byte_end":7486,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7487,"byte_end":7553,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7554,"byte_end":7626,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7627,"byte_end":7636,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7637,"byte_end":7642,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7643,"byte_end":7650,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7651,"byte_end":7696,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7697,"byte_end":7700,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7701,"byte_end":7715,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7716,"byte_end":7719,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7720,"byte_end":7741,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7742,"byte_end":7751,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7752,"byte_end":7794,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7795,"byte_end":7893,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7894,"byte_end":7927,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7928,"byte_end":7996,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":7997,"byte_end":8000,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8001,"byte_end":8012,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8013,"byte_end":8041,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8042,"byte_end":8063,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8064,"byte_end":8091,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8092,"byte_end":8099,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8100,"byte_end":8103,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8104,"byte_end":8125,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8126,"byte_end":8135,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8136,"byte_end":8178,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8179,"byte_end":8277,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8278,"byte_end":8313,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8314,"byte_end":8384,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8385,"byte_end":8388,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8389,"byte_end":8400,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8401,"byte_end":8429,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8430,"byte_end":8451,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8452,"byte_end":8481,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8482,"byte_end":8489,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8490,"byte_end":8493,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8494,"byte_end":8572,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8573,"byte_end":8610,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8611,"byte_end":8614,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8615,"byte_end":8626,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8627,"byte_end":8655,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8656,"byte_end":8677,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8678,"byte_end":8703,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8704,"byte_end":8711,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8712,"byte_end":8715,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8716,"byte_end":8794,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8795,"byte_end":8813,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8814,"byte_end":8817,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8818,"byte_end":8829,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8830,"byte_end":8858,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8859,"byte_end":8880,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8881,"byte_end":8907,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8908,"byte_end":8915,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8916,"byte_end":8919,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8920,"byte_end":8998,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":8999,"byte_end":9037,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9038,"byte_end":9041,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9042,"byte_end":9053,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9054,"byte_end":9082,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9083,"byte_end":9104,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9105,"byte_end":9131,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9132,"byte_end":9139,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9140,"byte_end":9143,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9144,"byte_end":9221,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9222,"byte_end":9264,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9265,"byte_end":9268,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9269,"byte_end":9280,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9281,"byte_end":9309,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9310,"byte_end":9331,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9332,"byte_end":9360,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9361,"byte_end":9383,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9384,"byte_end":9391,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9392,"byte_end":9395,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9396,"byte_end":9471,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9472,"byte_end":9509,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9510,"byte_end":9513,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9514,"byte_end":9525,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9526,"byte_end":9554,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9555,"byte_end":9576,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9577,"byte_end":9605,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9606,"byte_end":9630,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9631,"byte_end":9638,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9639,"byte_end":9642,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9643,"byte_end":9670,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9671,"byte_end":9674,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9675,"byte_end":9744,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9745,"byte_end":9757,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9758,"byte_end":9761,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9762,"byte_end":9824,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9825,"byte_end":9894,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9895,"byte_end":9962,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":9963,"byte_end":10033,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10034,"byte_end":10096,"line_start":272,"line_end":272,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10097,"byte_end":10161,"line_start":273,"line_end":273,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10162,"byte_end":10226,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10227,"byte_end":10253,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10254,"byte_end":10257,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10351,"byte_end":10422,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10423,"byte_end":10480,"line_start":281,"line_end":281,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10668,"byte_end":10696,"line_start":285,"line_end":285,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":6238},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1118},{"krate":0,"index":1151},{"krate":0,"index":1157},{"krate":0,"index":1180},{"krate":0,"index":1187},{"krate":0,"index":1195},{"krate":0,"index":1202},{"krate":0,"index":1213},{"krate":0,"index":1223},{"krate":0,"index":1260},{"krate":0,"index":1287}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16994,"byte_end":17019,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9794917,"byte_end":9794974,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9794975,"byte_end":9794978,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9794979,"byte_end":9795071,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795072,"byte_end":9795084,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795085,"byte_end":9795088,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795089,"byte_end":9795146,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795147,"byte_end":9795150,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795151,"byte_end":9795172,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795173,"byte_end":9795176,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795177,"byte_end":9795276,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795277,"byte_end":9795374,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795375,"byte_end":9795443,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795444,"byte_end":9795447,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795448,"byte_end":9795545,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795546,"byte_end":9795636,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795637,"byte_end":9795736,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795737,"byte_end":9795805,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795806,"byte_end":9795809,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795810,"byte_end":9795907,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9795908,"byte_end":9796005,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796006,"byte_end":9796105,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796106,"byte_end":9796178,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796179,"byte_end":9796182,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796183,"byte_end":9796205,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796206,"byte_end":9796209,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796210,"byte_end":9796284,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796285,"byte_end":9796288,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796289,"byte_end":9796302,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796303,"byte_end":9796327,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796328,"byte_end":9796331,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796332,"byte_end":9796355,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796356,"byte_end":9796381,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796382,"byte_end":9796389,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796390,"byte_end":9796397,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796398,"byte_end":9796401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796402,"byte_end":9796499,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796500,"byte_end":9796587,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796588,"byte_end":9796591,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796592,"byte_end":9796691,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796692,"byte_end":9796759,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796760,"byte_end":9796763,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796764,"byte_end":9796771,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796772,"byte_end":9796796,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796797,"byte_end":9796800,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796801,"byte_end":9796840,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796841,"byte_end":9796846,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796847,"byte_end":9796882,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796883,"byte_end":9796908,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796909,"byte_end":9796916,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796917,"byte_end":9796938,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796939,"byte_end":9796965,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796966,"byte_end":9796971,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796972,"byte_end":9796980,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796981,"byte_end":9796988,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796989,"byte_end":9796992,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9796993,"byte_end":9797069,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797070,"byte_end":9797073,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797074,"byte_end":9797098,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797099,"byte_end":9797102,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797103,"byte_end":9797182,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797183,"byte_end":9797249,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797250,"byte_end":9797253,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797254,"byte_end":9797261,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797262,"byte_end":9797294,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797295,"byte_end":9797319,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797320,"byte_end":9797323,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797324,"byte_end":9797363,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797364,"byte_end":9797369,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797370,"byte_end":9797435,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797436,"byte_end":9797470,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797471,"byte_end":9797478,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797479,"byte_end":9797484,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797485,"byte_end":9797493,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797494,"byte_end":9797501,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797502,"byte_end":9797505,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797506,"byte_end":9797528,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797529,"byte_end":9797532,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797533,"byte_end":9797609,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797610,"byte_end":9797623,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797624,"byte_end":9797627,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797628,"byte_end":9797698,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797699,"byte_end":9797778,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797779,"byte_end":9797854,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797855,"byte_end":9797858,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797859,"byte_end":9797884,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797885,"byte_end":9797888,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797889,"byte_end":9797967,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9797968,"byte_end":9798042,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798043,"byte_end":9798112,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798113,"byte_end":9798190,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798191,"byte_end":9798194,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798195,"byte_end":9798278,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798279,"byte_end":9798359,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798360,"byte_end":9798445,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798446,"byte_end":9798520,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798521,"byte_end":9798606,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798607,"byte_end":9798671,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798672,"byte_end":9798675,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798676,"byte_end":9798695,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798696,"byte_end":9798699,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798700,"byte_end":9798792,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798793,"byte_end":9798886,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798887,"byte_end":9798976,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9798977,"byte_end":9799006,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799007,"byte_end":9799010,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../gsync/struct.Arc.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799011,"byte_end":9799048,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799049,"byte_end":9799077,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799078,"byte_end":9799120,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799121,"byte_end":9799181,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799182,"byte_end":9799230,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799231,"byte_end":9799293,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799294,"byte_end":9799330,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799331,"byte_end":9799385,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799386,"byte_end":9799424,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799425,"byte_end":9799455,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799456,"byte_end":9799504,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799505,"byte_end":9799550,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\mod.rs","byte_start":9799551,"byte_end":9799597,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958301,"byte_end":9958310,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957698,"byte_end":9957759,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957760,"byte_end":9957763,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957764,"byte_end":9957842,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957843,"byte_end":9957920,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957921,"byte_end":9957998,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9957999,"byte_end":9958002,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958003,"byte_end":9958041,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958042,"byte_end":9958045,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958046,"byte_end":9958098,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958099,"byte_end":9958102,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958103,"byte_end":9958117,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958118,"byte_end":9958121,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958122,"byte_end":9958138,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958139,"byte_end":9958142,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958143,"byte_end":9958150,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958151,"byte_end":9958190,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958191,"byte_end":9958196,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958197,"byte_end":9958221,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958222,"byte_end":9958225,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958226,"byte_end":9958254,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958255,"byte_end":9958260,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958261,"byte_end":9958269,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958270,"byte_end":9958277,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958278,"byte_end":9958287,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959663,"byte_end":9959671,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9958979,"byte_end":9959041,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959042,"byte_end":9959045,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959046,"byte_end":9959145,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959146,"byte_end":9959184,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959185,"byte_end":9959188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959189,"byte_end":9959228,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959229,"byte_end":9959232,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959233,"byte_end":9959285,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959286,"byte_end":9959289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959290,"byte_end":9959356,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959357,"byte_end":9959443,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959444,"byte_end":9959447,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959448,"byte_end":9959462,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959463,"byte_end":9959466,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959467,"byte_end":9959480,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959481,"byte_end":9959505,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959506,"byte_end":9959509,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959510,"byte_end":9959525,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959526,"byte_end":9959556,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959557,"byte_end":9959595,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959596,"byte_end":9959606,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959607,"byte_end":9959612,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959613,"byte_end":9959620,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\block_on.rs","byte_start":9959621,"byte_end":9959655,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960331,"byte_end":9960338,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1289}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960233,"byte_end":9960293,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960452,"byte_end":9960455,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960400,"byte_end":9960426,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960431,"byte_end":9960440,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960575,"byte_end":9960579,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960513,"byte_end":9960549,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960554,"byte_end":9960563,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9961198,"byte_end":9961203,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9961100,"byte_end":9961147,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9961152,"byte_end":9961186,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9964195,"byte_end":9964203,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9964070,"byte_end":9964144,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9964149,"byte_end":9964183,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966851,"byte_end":9966858,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966321,"byte_end":9966362,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966363,"byte_end":9966366,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966367,"byte_end":9966379,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966380,"byte_end":9966383,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966384,"byte_end":9966480,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966481,"byte_end":9966518,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966519,"byte_end":9966522,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966523,"byte_end":9966557,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966558,"byte_end":9966586,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966587,"byte_end":9966643,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966644,"byte_end":9966647,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966648,"byte_end":9966662,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966663,"byte_end":9966666,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966667,"byte_end":9966674,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966675,"byte_end":9966714,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966715,"byte_end":9966720,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966721,"byte_end":9966745,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966746,"byte_end":9966749,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966750,"byte_end":9966820,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966821,"byte_end":9966826,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966827,"byte_end":9966835,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\current.rs","byte_start":9966836,"byte_end":9966843,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967410,"byte_end":9967420,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967119,"byte_end":9967165,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967166,"byte_end":9967169,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967170,"byte_end":9967253,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967254,"byte_end":9967306,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967307,"byte_end":9967310,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967311,"byte_end":9967348,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967349,"byte_end":9967352,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967353,"byte_end":9967381,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968229,"byte_end":9968233,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967892,"byte_end":9967936,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967941,"byte_end":9967944,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967949,"byte_end":9967963,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967968,"byte_end":9967971,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967976,"byte_end":9967983,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967988,"byte_end":9968027,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968032,"byte_end":9968037,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968042,"byte_end":9968066,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968071,"byte_end":9968074,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968079,"byte_end":9968115,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968120,"byte_end":9968133,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968138,"byte_end":9968145,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968150,"byte_end":9968194,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968199,"byte_end":9968204,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968209,"byte_end":9968217,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968360,"byte_end":9968366,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968282,"byte_end":9968303,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968308,"byte_end":9968342,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970295,"byte_end":9970300,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969681,"byte_end":9969725,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969726,"byte_end":9969729,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969730,"byte_end":9969823,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969824,"byte_end":9969827,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969828,"byte_end":9969892,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969893,"byte_end":9969896,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969897,"byte_end":9969975,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969976,"byte_end":9969979,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9969980,"byte_end":9970015,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970016,"byte_end":9970019,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970020,"byte_end":9970072,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970073,"byte_end":9970076,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970077,"byte_end":9970091,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970092,"byte_end":9970095,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970096,"byte_end":9970103,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970104,"byte_end":9970143,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970144,"byte_end":9970149,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970150,"byte_end":9970178,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970179,"byte_end":9970182,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970183,"byte_end":9970207,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970208,"byte_end":9970211,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970212,"byte_end":9970258,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970259,"byte_end":9970264,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970265,"byte_end":9970273,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\sleep.rs","byte_start":9970274,"byte_end":9970281,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970918,"byte_end":9970923,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970492,"byte_end":9970510,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970511,"byte_end":9970514,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970515,"byte_end":9970609,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970610,"byte_end":9970613,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970614,"byte_end":9970685,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970686,"byte_end":9970689,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970690,"byte_end":9970704,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970705,"byte_end":9970708,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970709,"byte_end":9970716,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970717,"byte_end":9970756,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970757,"byte_end":9970762,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970763,"byte_end":9970787,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970788,"byte_end":9970791,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970792,"byte_end":9970828,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970829,"byte_end":9970842,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970843,"byte_end":9970850,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970851,"byte_end":9970854,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970855,"byte_end":9970887,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970888,"byte_end":9970893,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970894,"byte_end":9970902,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\spawn.rs","byte_start":9970903,"byte_end":9970910,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972207,"byte_end":9972211,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972155,"byte_end":9972178,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972592,"byte_end":9972594,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972528,"byte_end":9972566,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972571,"byte_end":9972580,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972831,"byte_end":9972835,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972641,"byte_end":9972675,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972680,"byte_end":9972683,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972688,"byte_end":9972752,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972757,"byte_end":9972760,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972765,"byte_end":9972819,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973512,"byte_end":9973518,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973259,"byte_end":9973294,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973295,"byte_end":9973298,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973299,"byte_end":9973313,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973314,"byte_end":9973317,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973318,"byte_end":9973325,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973326,"byte_end":9973350,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973351,"byte_end":9973354,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973355,"byte_end":9973381,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973382,"byte_end":9973434,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973435,"byte_end":9973441,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973442,"byte_end":9973449,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974444,"byte_end":9974452,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974258,"byte_end":9974303,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974304,"byte_end":9974307,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974308,"byte_end":9974400,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974401,"byte_end":9974415,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974501,"byte_end":9974507,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974548,"byte_end":9974553,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":1330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975575,"byte_end":9975579,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974611,"byte_end":9974670,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974675,"byte_end":9974678,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974683,"byte_end":9974751,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974756,"byte_end":9974759,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974764,"byte_end":9974856,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974861,"byte_end":9974864,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974869,"byte_end":9974881,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974886,"byte_end":9974889,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974894,"byte_end":9974976,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974981,"byte_end":9975032,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975037,"byte_end":9975040,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975045,"byte_end":9975079,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975084,"byte_end":9975112,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975117,"byte_end":9975173,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975178,"byte_end":9975181,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975186,"byte_end":9975200,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975205,"byte_end":9975208,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975213,"byte_end":9975220,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975225,"byte_end":9975230,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975235,"byte_end":9975259,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975264,"byte_end":9975267,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975272,"byte_end":9975296,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975301,"byte_end":9975331,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975336,"byte_end":9975339,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975344,"byte_end":9975361,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975366,"byte_end":9975414,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975419,"byte_end":9975424,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975429,"byte_end":9975432,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975437,"byte_end":9975463,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975468,"byte_end":9975509,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975514,"byte_end":9975539,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975544,"byte_end":9975551,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975556,"byte_end":9975563,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976865,"byte_end":9976873,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975769,"byte_end":9975839,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975844,"byte_end":9975847,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975852,"byte_end":9975920,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975925,"byte_end":9975928,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9975933,"byte_end":9976025,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976030,"byte_end":9976033,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976038,"byte_end":9976126,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976131,"byte_end":9976182,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976187,"byte_end":9976190,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976195,"byte_end":9976229,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976234,"byte_end":9976262,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976267,"byte_end":9976323,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976328,"byte_end":9976331,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976336,"byte_end":9976350,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976355,"byte_end":9976358,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976363,"byte_end":9976370,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976375,"byte_end":9976380,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976385,"byte_end":9976409,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976414,"byte_end":9976417,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976422,"byte_end":9976446,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976451,"byte_end":9976481,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976486,"byte_end":9976489,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976494,"byte_end":9976511,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976516,"byte_end":9976561,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976566,"byte_end":9976571,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976576,"byte_end":9976579,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976584,"byte_end":9976610,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976615,"byte_end":9976657,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976662,"byte_end":9976691,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976696,"byte_end":9976703,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976708,"byte_end":9976711,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976716,"byte_end":9976788,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976793,"byte_end":9976841,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9976846,"byte_end":9976853,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978426,"byte_end":9978437,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":1338}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978259,"byte_end":9978307,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978308,"byte_end":9978311,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978312,"byte_end":9978376,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1400},{"krate":0,"index":1421},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16994,"byte_end":17019,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801105,"byte_end":9801129,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801130,"byte_end":9801133,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801134,"byte_end":9801165,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801166,"byte_end":9801169,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801170,"byte_end":9801243,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801244,"byte_end":9801320,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801321,"byte_end":9801394,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801395,"byte_end":9801472,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801473,"byte_end":9801490,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801491,"byte_end":9801494,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801495,"byte_end":9801560,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801561,"byte_end":9801564,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801565,"byte_end":9801637,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801638,"byte_end":9801710,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801711,"byte_end":9801781,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801782,"byte_end":9801849,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801850,"byte_end":9801853,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801854,"byte_end":9801889,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801890,"byte_end":9801893,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801894,"byte_end":9801973,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9801974,"byte_end":9802060,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802061,"byte_end":9802127,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802128,"byte_end":9802131,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802132,"byte_end":9802202,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802203,"byte_end":9802275,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802276,"byte_end":9802299,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802300,"byte_end":9802303,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802304,"byte_end":9802377,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802378,"byte_end":9802455,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802456,"byte_end":9802529,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802530,"byte_end":9802577,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802578,"byte_end":9802581,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802582,"byte_end":9802662,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802663,"byte_end":9802743,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802744,"byte_end":9802797,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802798,"byte_end":9802801,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802802,"byte_end":9802888,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802889,"byte_end":9802975,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9802976,"byte_end":9803064,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803065,"byte_end":9803176,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803177,"byte_end":9803262,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803263,"byte_end":9803367,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803368,"byte_end":9803371,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803372,"byte_end":9803423,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803424,"byte_end":9803483,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803484,"byte_end":9803535,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\mod.rs","byte_start":9803536,"byte_end":9803595,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\future\\mod.rs","byte_start":10097555,"byte_end":10097564,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[],"decl_id":null,"docs":"        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108125,"byte_end":10108132,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107733,"byte_end":10107763,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107764,"byte_end":10107767,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107768,"byte_end":10107782,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107783,"byte_end":10107786,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107787,"byte_end":10107794,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107795,"byte_end":10107834,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107835,"byte_end":10107840,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107841,"byte_end":10107869,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107870,"byte_end":10107873,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107874,"byte_end":10107900,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107901,"byte_end":10107923,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107924,"byte_end":10107927,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107928,"byte_end":10107965,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107966,"byte_end":10107998,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10107999,"byte_end":10108002,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108003,"byte_end":10108061,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108062,"byte_end":10108088,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108089,"byte_end":10108094,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108095,"byte_end":10108103,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108104,"byte_end":10108111,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109067,"byte_end":10109074,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108552,"byte_end":10108623,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108624,"byte_end":10108627,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108628,"byte_end":10108694,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108695,"byte_end":10108698,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108699,"byte_end":10108713,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108714,"byte_end":10108717,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108718,"byte_end":10108725,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108726,"byte_end":10108765,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108766,"byte_end":10108771,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108772,"byte_end":10108798,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108799,"byte_end":10108840,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108841,"byte_end":10108844,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108845,"byte_end":10108904,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108905,"byte_end":10108951,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108952,"byte_end":10108957,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108958,"byte_end":10108961,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10108962,"byte_end":10109030,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109031,"byte_end":10109036,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109037,"byte_end":10109045,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109046,"byte_end":10109053,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109903,"byte_end":10109908,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109514,"byte_end":10109549,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109550,"byte_end":10109553,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109554,"byte_end":10109622,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109623,"byte_end":10109626,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109627,"byte_end":10109713,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109714,"byte_end":10109717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109718,"byte_end":10109732,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109733,"byte_end":10109736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109737,"byte_end":10109744,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109745,"byte_end":10109784,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109785,"byte_end":10109790,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109791,"byte_end":10109817,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109818,"byte_end":10109821,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109822,"byte_end":10109866,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109867,"byte_end":10109872,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109873,"byte_end":10109881,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\ready.rs","byte_start":10109882,"byte_end":10109889,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804943,"byte_end":9804950,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804415,"byte_end":9804473,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804474,"byte_end":9804477,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804478,"byte_end":9804531,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804532,"byte_end":9804583,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804584,"byte_end":9804587,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804588,"byte_end":9804602,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804603,"byte_end":9804606,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804607,"byte_end":9804614,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804615,"byte_end":9804689,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804690,"byte_end":9804695,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804696,"byte_end":9804724,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804725,"byte_end":9804728,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804729,"byte_end":9804755,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804756,"byte_end":9804759,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804760,"byte_end":9804800,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804801,"byte_end":9804840,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804841,"byte_end":9804897,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804898,"byte_end":9804903,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804904,"byte_end":9804921,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9804922,"byte_end":9804929,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806113,"byte_end":9806125,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1427}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806010,"byte_end":9806056,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":993},{"krate":0,"index":1006},{"krate":0,"index":1022},{"krate":0,"index":1035},{"krate":0,"index":1048},{"krate":0,"index":1060}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16994,"byte_end":17019,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806414,"byte_end":9806452,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806453,"byte_end":9806456,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806457,"byte_end":9806510,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806511,"byte_end":9806514,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806515,"byte_end":9806589,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806590,"byte_end":9806664,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806665,"byte_end":9806741,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806742,"byte_end":9806812,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806813,"byte_end":9806816,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806817,"byte_end":9806892,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806893,"byte_end":9806896,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806897,"byte_end":9806915,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806916,"byte_end":9806919,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806920,"byte_end":9806965,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806966,"byte_end":9806969,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9806970,"byte_end":9807047,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807048,"byte_end":9807128,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807129,"byte_end":9807170,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807171,"byte_end":9807244,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807245,"byte_end":9807318,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807319,"byte_end":9807396,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807397,"byte_end":9807476,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807477,"byte_end":9807533,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807534,"byte_end":9807537,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807538,"byte_end":9807559,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807560,"byte_end":9807587,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807588,"byte_end":9807611,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807612,"byte_end":9807615,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807616,"byte_end":9807654,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807655,"byte_end":9807658,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807659,"byte_end":9807671,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807672,"byte_end":9807675,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807676,"byte_end":9807750,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807751,"byte_end":9807782,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807783,"byte_end":9807786,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807787,"byte_end":9807794,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807795,"byte_end":9807838,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807839,"byte_end":9807863,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807864,"byte_end":9807882,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807883,"byte_end":9807901,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807902,"byte_end":9807995,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9807996,"byte_end":9808001,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808002,"byte_end":9808009,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808010,"byte_end":9808013,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808014,"byte_end":9808080,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808081,"byte_end":9808155,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808156,"byte_end":9808232,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808233,"byte_end":9808310,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808311,"byte_end":9808371,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808372,"byte_end":9808375,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808376,"byte_end":9808445,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808446,"byte_end":9808526,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808527,"byte_end":9808551,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808552,"byte_end":9808555,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808556,"byte_end":9808632,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808633,"byte_end":9808707,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808708,"byte_end":9808726,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808727,"byte_end":9808730,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808731,"byte_end":9808808,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808809,"byte_end":9808884,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808885,"byte_end":9808912,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808913,"byte_end":9808916,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808917,"byte_end":9808953,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808954,"byte_end":9808987,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9808988,"byte_end":9809033,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809034,"byte_end":9809083,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809084,"byte_end":9809087,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809088,"byte_end":9809122,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809123,"byte_end":9809126,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809127,"byte_end":9809205,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809206,"byte_end":9809209,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809210,"byte_end":9809253,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809254,"byte_end":9809305,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809306,"byte_end":9809353,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809354,"byte_end":9809357,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809358,"byte_end":9809422,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809423,"byte_end":9809452,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809453,"byte_end":9809456,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809457,"byte_end":9809482,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809483,"byte_end":9809486,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809487,"byte_end":9809563,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809564,"byte_end":9809636,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809637,"byte_end":9809715,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809716,"byte_end":9809761,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809762,"byte_end":9809765,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809766,"byte_end":9809835,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809836,"byte_end":9809839,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809840,"byte_end":9809847,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809848,"byte_end":9809880,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809881,"byte_end":9809924,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809925,"byte_end":9809949,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809950,"byte_end":9809975,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809976,"byte_end":9809979,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9809980,"byte_end":9810026,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810027,"byte_end":9810047,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810048,"byte_end":9810069,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810070,"byte_end":9810075,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810076,"byte_end":9810079,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810080,"byte_end":9810158,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810159,"byte_end":9810234,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810235,"byte_end":9810308,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810309,"byte_end":9810327,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810328,"byte_end":9810357,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810358,"byte_end":9810390,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810391,"byte_end":9810400,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810401,"byte_end":9810406,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810407,"byte_end":9810410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810411,"byte_end":9810464,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810465,"byte_end":9810468,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810469,"byte_end":9810498,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810499,"byte_end":9810540,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810541,"byte_end":9810567,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810568,"byte_end":9810571,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810572,"byte_end":9810622,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810623,"byte_end":9810721,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810722,"byte_end":9810789,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810790,"byte_end":9810818,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810819,"byte_end":9810822,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810823,"byte_end":9810885,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810886,"byte_end":9810917,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810918,"byte_end":9810963,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810964,"byte_end":9810984,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9810985,"byte_end":9811018,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811019,"byte_end":9811032,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811033,"byte_end":9811042,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811043,"byte_end":9811048,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811049,"byte_end":9811052,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811053,"byte_end":9811082,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811083,"byte_end":9811157,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811158,"byte_end":9811163,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811164,"byte_end":9811201,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811202,"byte_end":9811205,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811206,"byte_end":9811248,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811249,"byte_end":9811271,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811272,"byte_end":9811275,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811276,"byte_end":9811318,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811319,"byte_end":9811341,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811342,"byte_end":9811345,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811346,"byte_end":9811388,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811389,"byte_end":9811411,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811412,"byte_end":9811415,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811416,"byte_end":9811458,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811459,"byte_end":9811481,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811482,"byte_end":9811485,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811486,"byte_end":9811528,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811529,"byte_end":9811551,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811552,"byte_end":9811557,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811558,"byte_end":9811575,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811576,"byte_end":9811583,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811584,"byte_end":9811587,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811588,"byte_end":9811648,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811649,"byte_end":9811652,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811653,"byte_end":9811732,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811733,"byte_end":9811809,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811810,"byte_end":9811824,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811825,"byte_end":9811828,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811829,"byte_end":9811865,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811866,"byte_end":9811869,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811870,"byte_end":9811964,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811965,"byte_end":9811992,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811993,"byte_end":9811996,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9811997,"byte_end":9812004,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812005,"byte_end":9812079,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812080,"byte_end":9812085,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812086,"byte_end":9812118,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812119,"byte_end":9812147,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812148,"byte_end":9812197,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812198,"byte_end":9812201,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812202,"byte_end":9812247,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812248,"byte_end":9812274,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812275,"byte_end":9812280,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812281,"byte_end":9812286,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812287,"byte_end":9812304,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812305,"byte_end":9812312,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812313,"byte_end":9812316,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812317,"byte_end":9812394,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812395,"byte_end":9812470,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812471,"byte_end":9812504,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812505,"byte_end":9812508,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812509,"byte_end":9812585,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812586,"byte_end":9812657,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812658,"byte_end":9812729,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812730,"byte_end":9812733,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812734,"byte_end":9812807,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812808,"byte_end":9812884,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812885,"byte_end":9812965,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812966,"byte_end":9812969,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9812970,"byte_end":9813011,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813012,"byte_end":9813075,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813076,"byte_end":9813079,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813080,"byte_end":9813094,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813095,"byte_end":9813098,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813099,"byte_end":9813171,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813172,"byte_end":9813242,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813243,"byte_end":9813256,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813257,"byte_end":9813260,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813261,"byte_end":9813330,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813331,"byte_end":9813369,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813370,"byte_end":9813373,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813374,"byte_end":9813415,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813416,"byte_end":9813459,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813460,"byte_end":9813507,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813508,"byte_end":9813511,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813512,"byte_end":9813526,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813527,"byte_end":9813530,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813531,"byte_end":9813605,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813606,"byte_end":9813681,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813682,"byte_end":9813755,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813756,"byte_end":9813831,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813832,"byte_end":9813892,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813893,"byte_end":9813896,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813897,"byte_end":9813904,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813905,"byte_end":9813937,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9813938,"byte_end":9814012,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814013,"byte_end":9814018,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814019,"byte_end":9814051,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814052,"byte_end":9814080,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814081,"byte_end":9814121,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814122,"byte_end":9814155,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814156,"byte_end":9814161,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814162,"byte_end":9814179,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814180,"byte_end":9814187,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814188,"byte_end":9814191,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814192,"byte_end":9814268,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814269,"byte_end":9814337,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814338,"byte_end":9814341,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814342,"byte_end":9814353,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814354,"byte_end":9814420,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814421,"byte_end":9814451,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814452,"byte_end":9814459,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814460,"byte_end":9814463,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814464,"byte_end":9814537,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814538,"byte_end":9814567,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814568,"byte_end":9814571,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814572,"byte_end":9814579,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814580,"byte_end":9814654,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814655,"byte_end":9814660,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814661,"byte_end":9814693,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814694,"byte_end":9814722,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814723,"byte_end":9814767,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814768,"byte_end":9814771,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814772,"byte_end":9814813,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814814,"byte_end":9814840,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814841,"byte_end":9814846,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814847,"byte_end":9814852,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814853,"byte_end":9814870,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814871,"byte_end":9814878,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814879,"byte_end":9814882,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814883,"byte_end":9814924,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814925,"byte_end":9814928,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9814929,"byte_end":9815008,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815009,"byte_end":9815084,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815085,"byte_end":9815088,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815089,"byte_end":9815138,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815139,"byte_end":9815142,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815143,"byte_end":9815157,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815158,"byte_end":9815161,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815162,"byte_end":9815233,"line_start":258,"line_end":258,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815234,"byte_end":9815257,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815258,"byte_end":9815261,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815262,"byte_end":9815269,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815270,"byte_end":9815298,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815299,"byte_end":9815337,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815338,"byte_end":9815345,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815346,"byte_end":9815349,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815350,"byte_end":9815421,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815422,"byte_end":9815451,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815452,"byte_end":9815455,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815456,"byte_end":9815463,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815464,"byte_end":9815538,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815539,"byte_end":9815544,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815545,"byte_end":9815577,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815578,"byte_end":9815606,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815607,"byte_end":9815645,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815646,"byte_end":9815689,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815690,"byte_end":9815693,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815694,"byte_end":9815750,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815751,"byte_end":9815782,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815783,"byte_end":9815788,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815789,"byte_end":9815794,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815795,"byte_end":9815812,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815813,"byte_end":9815820,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815821,"byte_end":9815824,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815825,"byte_end":9815897,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815898,"byte_end":9815901,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815902,"byte_end":9815975,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9815976,"byte_end":9816054,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816055,"byte_end":9816131,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816132,"byte_end":9816200,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816201,"byte_end":9816243,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816244,"byte_end":9816247,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816248,"byte_end":9816261,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816262,"byte_end":9816306,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816307,"byte_end":9816377,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816378,"byte_end":9816452,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816453,"byte_end":9816507,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816508,"byte_end":9816515,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816516,"byte_end":9816519,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816520,"byte_end":9816584,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816585,"byte_end":9816628,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\mod.rs","byte_start":9816629,"byte_end":9816670,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891372,"byte_end":9891381,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891321,"byte_end":9891360,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9892780,"byte_end":9892789,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9892729,"byte_end":9892768,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6092},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\chain.rs","byte_start":9894489,"byte_end":9894494,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6095},{"krate":0,"index":6096}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cloned.rs","byte_start":9895882,"byte_end":9895888,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6056}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5996},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cmp.rs","byte_start":9896845,"byte_end":9896854,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":5999},{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5965},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\copied.rs","byte_start":9899629,"byte_end":9899635,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":5967}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","byte_start":9900427,"byte_end":9900432,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":5927},{"krate":0,"index":5928}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\enumerate.rs","byte_start":9901358,"byte_end":9901367,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\eq.rs","byte_start":9902486,"byte_end":9902494,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":5838},{"krate":0,"index":5839}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter.rs","byte_start":9904096,"byte_end":9904102,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter_map.rs","byte_start":9905128,"byte_end":9905137,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906160,"byte_end":9906170,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906109,"byte_end":9906148,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907197,"byte_end":9907210,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907146,"byte_end":9907185,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fold.rs","byte_start":9908330,"byte_end":9908340,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\for_each.rs","byte_start":9909581,"byte_end":9909594,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":5633},{"krate":0,"index":5634}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fuse.rs","byte_start":9910820,"byte_end":9910824,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5546},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ge.rs","byte_start":9912028,"byte_end":9912036,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":5549}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\gt.rs","byte_start":9913311,"byte_end":9913319,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":5508}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\inspect.rs","byte_start":9914598,"byte_end":9914605,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5467}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\last.rs","byte_start":9915516,"byte_end":9915526,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":5414},{"krate":0,"index":5415}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\le.rs","byte_start":9916784,"byte_end":9916792,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":5373}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\lt.rs","byte_start":9918077,"byte_end":9918085,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":5332}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\map.rs","byte_start":9919133,"byte_end":9919136,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5290},{"krate":0,"index":5291}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max.rs","byte_start":9919999,"byte_end":9920008,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":5238},{"krate":0,"index":5239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by.rs","byte_start":9921329,"byte_end":9921340,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by_key.rs","byte_start":9922810,"byte_end":9922824,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5076},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min.rs","byte_start":9924529,"byte_end":9924538,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":5079},{"krate":0,"index":5080}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5019},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by.rs","byte_start":9925856,"byte_end":9925867,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4962},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by_key.rs","byte_start":9927364,"byte_end":9927378,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4917},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ne.rs","byte_start":9929203,"byte_end":9929211,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":4920},{"krate":0,"index":4921}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\next.rs","byte_start":9930576,"byte_end":9930586,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":692}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\next.rs","byte_start":9930525,"byte_end":9930564,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931085,"byte_end":9931094,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931034,"byte_end":9931073,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":9932390,"byte_end":9932406,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10500378,"byte_end":10500387,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935229,"byte_end":9935243,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935178,"byte_end":9935217,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4815},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\scan.rs","byte_start":9936765,"byte_end":9936769,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":4819},{"krate":0,"index":4820}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip.rs","byte_start":9938035,"byte_end":9938039,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":4774}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4724},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip_while.rs","byte_start":9939304,"byte_end":9939313,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\step_by.rs","byte_start":9940906,"byte_end":9940912,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take.rs","byte_start":9942373,"byte_end":9942377,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4637},{"krate":0,"index":4638}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take_while.rs","byte_start":9943661,"byte_end":9943670,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":4591},{"krate":0,"index":4592}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944734,"byte_end":9944747,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944683,"byte_end":9944722,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946126,"byte_end":9946142,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946075,"byte_end":9946114,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9947544,"byte_end":9947547,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9823663,"byte_end":9823672,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542}],"decl_id":null,"docs":"        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9824507,"byte_end":9824511,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9825191,"byte_end":9825195,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9825924,"byte_end":9825934,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9828175,"byte_end":9828182,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9829102,"byte_end":9829107,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9829991,"byte_end":9829997,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9830863,"byte_end":9830869,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9831713,"byte_end":9831718,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9832628,"byte_end":9832637,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9834794,"byte_end":9834797,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9835737,"byte_end":9835744,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9836793,"byte_end":9836797,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9837756,"byte_end":9837760,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9838526,"byte_end":9838532,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9841656,"byte_end":9841666,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9842655,"byte_end":9842665,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9843784,"byte_end":9843794,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9844998,"byte_end":9845004,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9846015,"byte_end":9846018,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9846963,"byte_end":9846966,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9848093,"byte_end":9848099,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9849824,"byte_end":9849827,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9851417,"byte_end":9851420,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9851396,"byte_end":9851405,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9852705,"byte_end":9852709,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9853530,"byte_end":9853538,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9854398,"byte_end":9854402,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9856385,"byte_end":9856393,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9857986,"byte_end":9857989,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9857965,"byte_end":9857974,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9861005,"byte_end":9861009,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9860984,"byte_end":9860993,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9862129,"byte_end":9862139,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9862888,"byte_end":9862892,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9865081,"byte_end":9865089,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9866384,"byte_end":9866396,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9868103,"byte_end":9868106,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9868082,"byte_end":9868091,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9874083,"byte_end":9874094,"line_start":1962,"line_end":1962,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9875255,"byte_end":9875263,"line_start":2002,"line_end":2002,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9876581,"byte_end":9876584,"line_start":2040,"line_end":2040,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9878598,"byte_end":9878600,"line_start":2106,"line_end":2106,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9879824,"byte_end":9879826,"line_start":2143,"line_end":2143,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9881042,"byte_end":9881044,"line_start":2180,"line_end":2180,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9882258,"byte_end":9882260,"line_start":2217,"line_end":2217,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9883470,"byte_end":9883472,"line_start":2254,"line_end":2254,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9884676,"byte_end":9884678,"line_start":2291,"line_end":2291,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949481,"byte_end":9949486,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949050,"byte_end":9949100,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949101,"byte_end":9949104,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949105,"byte_end":9949168,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949169,"byte_end":9949196,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949197,"byte_end":9949200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949201,"byte_end":9949229,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949230,"byte_end":9949233,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949234,"byte_end":9949248,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949249,"byte_end":9949252,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949253,"byte_end":9949260,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949261,"byte_end":9949300,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949301,"byte_end":9949306,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949307,"byte_end":9949337,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949338,"byte_end":9949364,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949365,"byte_end":9949368,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949369,"byte_end":9949408,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949409,"byte_end":9949412,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949413,"byte_end":9949450,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949451,"byte_end":9949456,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949457,"byte_end":9949465,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949466,"byte_end":9949473,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949723,"byte_end":9949728,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":1546}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949557,"byte_end":9949599,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949600,"byte_end":9949603,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949604,"byte_end":9949661,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949662,"byte_end":9949665,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949666,"byte_end":9949694,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950298,"byte_end":9950304,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":1552}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950074,"byte_end":9950129,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950130,"byte_end":9950133,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950134,"byte_end":9950197,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950198,"byte_end":9950225,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950226,"byte_end":9950229,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950230,"byte_end":9950262,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951164,"byte_end":9951171,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950355,"byte_end":9950443,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950444,"byte_end":9950447,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950448,"byte_end":9950538,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950539,"byte_end":9950620,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950621,"byte_end":9950624,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950625,"byte_end":9950639,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950640,"byte_end":9950643,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950644,"byte_end":9950651,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950652,"byte_end":9950691,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950692,"byte_end":9950697,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950698,"byte_end":9950728,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950729,"byte_end":9950755,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950756,"byte_end":9950759,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950760,"byte_end":9950784,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950785,"byte_end":9950817,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950818,"byte_end":9950837,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950838,"byte_end":9950860,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950861,"byte_end":9950877,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950878,"byte_end":9950894,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950895,"byte_end":9950918,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950919,"byte_end":9950928,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950929,"byte_end":9950936,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950937,"byte_end":9950940,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950941,"byte_end":9950968,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950969,"byte_end":9950972,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950973,"byte_end":9951013,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951014,"byte_end":9951054,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951055,"byte_end":9951095,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951096,"byte_end":9951133,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951134,"byte_end":9951139,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951140,"byte_end":9951148,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951149,"byte_end":9951156,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952048,"byte_end":9952056,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":4500}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952556,"byte_end":9952565,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952088,"byte_end":9952127,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952128,"byte_end":9952131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952132,"byte_end":9952146,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952147,"byte_end":9952150,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952151,"byte_end":9952158,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952159,"byte_end":9952198,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952199,"byte_end":9952204,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952205,"byte_end":9952235,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952236,"byte_end":9952262,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952263,"byte_end":9952266,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952267,"byte_end":9952319,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952320,"byte_end":9952323,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952324,"byte_end":9952364,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952365,"byte_end":9952405,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952406,"byte_end":9952446,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952447,"byte_end":9952487,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952488,"byte_end":9952525,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952526,"byte_end":9952531,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952532,"byte_end":9952540,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952541,"byte_end":9952548,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953713,"byte_end":9953717,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953380,"byte_end":9953427,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953428,"byte_end":9953431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953432,"byte_end":9953446,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953447,"byte_end":9953450,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953451,"byte_end":9953458,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953459,"byte_end":9953498,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953499,"byte_end":9953504,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953505,"byte_end":9953535,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953536,"byte_end":9953562,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953563,"byte_end":9953566,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953567,"byte_end":9953599,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953600,"byte_end":9953603,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953604,"byte_end":9953644,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953645,"byte_end":9953682,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953683,"byte_end":9953688,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953689,"byte_end":9953697,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9953698,"byte_end":9953705,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9954017,"byte_end":9954021,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4461}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954965,"byte_end":9954971,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954616,"byte_end":9954674,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954675,"byte_end":9954678,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954679,"byte_end":9954693,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954694,"byte_end":9954697,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954698,"byte_end":9954705,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954706,"byte_end":9954745,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954746,"byte_end":9954751,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954752,"byte_end":9954782,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954783,"byte_end":9954809,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954810,"byte_end":9954813,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954814,"byte_end":9954848,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954849,"byte_end":9954852,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954853,"byte_end":9954893,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954894,"byte_end":9954934,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954935,"byte_end":9954940,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954941,"byte_end":9954949,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9954950,"byte_end":9954957,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955258,"byte_end":9955264,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":1561}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955042,"byte_end":9955092,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955093,"byte_end":9955096,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955097,"byte_end":9955159,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955160,"byte_end":9955187,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955188,"byte_end":9955191,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955192,"byte_end":9955222,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955887,"byte_end":9955897,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":1570}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955618,"byte_end":9955706,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955707,"byte_end":9955710,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955711,"byte_end":9955778,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955779,"byte_end":9955806,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955807,"byte_end":9955810,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955811,"byte_end":9955851,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9957003,"byte_end":9957014,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955952,"byte_end":9956054,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956055,"byte_end":9956058,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956059,"byte_end":9956073,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956074,"byte_end":9956077,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956078,"byte_end":9956094,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956095,"byte_end":9956098,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956099,"byte_end":9956106,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956107,"byte_end":9956146,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956147,"byte_end":9956152,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956153,"byte_end":9956183,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956184,"byte_end":9956210,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956211,"byte_end":9956214,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956215,"byte_end":9956253,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956254,"byte_end":9956257,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956258,"byte_end":9956285,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956286,"byte_end":9956289,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956290,"byte_end":9956330,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956331,"byte_end":9956371,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956372,"byte_end":9956412,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956413,"byte_end":9956453,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956454,"byte_end":9956462,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956463,"byte_end":9956470,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956471,"byte_end":9956474,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956475,"byte_end":9956492,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956493,"byte_end":9956496,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956497,"byte_end":9956504,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956505,"byte_end":9956544,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956545,"byte_end":9956550,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956551,"byte_end":9956581,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956582,"byte_end":9956608,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956609,"byte_end":9956612,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956613,"byte_end":9956631,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956632,"byte_end":9956668,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956669,"byte_end":9956690,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956691,"byte_end":9956706,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956707,"byte_end":9956719,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956720,"byte_end":9956726,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956727,"byte_end":9956740,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956741,"byte_end":9956744,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956745,"byte_end":9956772,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956773,"byte_end":9956776,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956777,"byte_end":9956817,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956818,"byte_end":9956858,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956859,"byte_end":9956899,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956900,"byte_end":9956940,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956941,"byte_end":9956978,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956979,"byte_end":9956987,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9956988,"byte_end":9956995,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1634},{"krate":0,"index":1728},{"krate":0,"index":1922},{"krate":0,"index":1944},{"krate":0,"index":2046},{"krate":0,"index":2064},{"krate":0,"index":2111},{"krate":0,"index":2149},{"krate":0,"index":2174},{"krate":0,"index":2220},{"krate":0,"index":2241},{"krate":0,"index":2257},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2434},{"krate":0,"index":2453},{"krate":0,"index":2478},{"krate":0,"index":2490}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139510,"byte_end":10139579,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139580,"byte_end":10139583,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139584,"byte_end":10139661,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139662,"byte_end":10139731,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139732,"byte_end":10139788,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139789,"byte_end":10139857,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139858,"byte_end":10139861,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139862,"byte_end":10139913,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139914,"byte_end":10139917,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139918,"byte_end":10139978,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139979,"byte_end":10139982,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10139983,"byte_end":10140003,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140004,"byte_end":10140007,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140008,"byte_end":10140087,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140088,"byte_end":10140163,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140164,"byte_end":10140239,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140240,"byte_end":10140319,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140320,"byte_end":10140399,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140400,"byte_end":10140414,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140415,"byte_end":10140418,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140419,"byte_end":10140432,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140433,"byte_end":10140461,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140462,"byte_end":10140492,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140493,"byte_end":10140496,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140497,"byte_end":10140571,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140572,"byte_end":10140577,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140578,"byte_end":10140623,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140624,"byte_end":10140653,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140654,"byte_end":10140657,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140658,"byte_end":10140684,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140685,"byte_end":10140724,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140725,"byte_end":10140728,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140729,"byte_end":10140775,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140776,"byte_end":10140781,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140782,"byte_end":10140799,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140800,"byte_end":10140807,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140808,"byte_end":10140811,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140812,"byte_end":10140894,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140895,"byte_end":10140972,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10140973,"byte_end":10141037,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141038,"byte_end":10141041,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141042,"byte_end":10141065,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141066,"byte_end":10141069,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141070,"byte_end":10141145,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141146,"byte_end":10141216,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141217,"byte_end":10141294,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141295,"byte_end":10141311,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141312,"byte_end":10141315,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141316,"byte_end":10141329,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141330,"byte_end":10141358,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141359,"byte_end":10141391,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141392,"byte_end":10141422,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141423,"byte_end":10141426,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141427,"byte_end":10141501,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141502,"byte_end":10141507,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141508,"byte_end":10141553,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141554,"byte_end":10141583,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141584,"byte_end":10141587,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141588,"byte_end":10141632,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141633,"byte_end":10141671,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141672,"byte_end":10141675,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141676,"byte_end":10141702,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141703,"byte_end":10141742,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141743,"byte_end":10141746,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141747,"byte_end":10141793,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141794,"byte_end":10141799,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141800,"byte_end":10141817,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141818,"byte_end":10141825,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141826,"byte_end":10141829,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141830,"byte_end":10141916,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141917,"byte_end":10141995,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10141996,"byte_end":10141999,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142000,"byte_end":10142030,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142031,"byte_end":10142034,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142035,"byte_end":10142116,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142117,"byte_end":10142191,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142192,"byte_end":10142273,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142274,"byte_end":10142348,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142349,"byte_end":10142423,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142424,"byte_end":10142427,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142428,"byte_end":10142504,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142505,"byte_end":10142531,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142532,"byte_end":10142535,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142536,"byte_end":10142549,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142550,"byte_end":10142578,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142579,"byte_end":10142612,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142613,"byte_end":10142643,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142644,"byte_end":10142647,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142648,"byte_end":10142722,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142723,"byte_end":10142728,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142729,"byte_end":10142770,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142771,"byte_end":10142810,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142811,"byte_end":10142846,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142847,"byte_end":10142850,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142851,"byte_end":10142881,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142882,"byte_end":10142923,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142924,"byte_end":10142927,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142928,"byte_end":10142955,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142956,"byte_end":10142961,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142962,"byte_end":10142979,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142980,"byte_end":10142987,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142988,"byte_end":10142991,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10142992,"byte_end":10143073,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143074,"byte_end":10143107,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143108,"byte_end":10143111,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143112,"byte_end":10143125,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143126,"byte_end":10143154,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143155,"byte_end":10143189,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143190,"byte_end":10143223,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143224,"byte_end":10143227,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143228,"byte_end":10143302,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143303,"byte_end":10143308,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143309,"byte_end":10143352,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143353,"byte_end":10143358,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143359,"byte_end":10143402,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143403,"byte_end":10143406,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143407,"byte_end":10143444,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143445,"byte_end":10143480,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143481,"byte_end":10143541,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143542,"byte_end":10143548,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143549,"byte_end":10143554,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143555,"byte_end":10143572,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143573,"byte_end":10143580,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143581,"byte_end":10143584,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143585,"byte_end":10143617,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143618,"byte_end":10143621,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143622,"byte_end":10143674,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143675,"byte_end":10143678,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143679,"byte_end":10143692,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143693,"byte_end":10143715,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143716,"byte_end":10143719,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143720,"byte_end":10143794,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143795,"byte_end":10143800,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143801,"byte_end":10143835,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143836,"byte_end":10143839,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143840,"byte_end":10143885,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143886,"byte_end":10143889,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143890,"byte_end":10143934,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143935,"byte_end":10143940,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143941,"byte_end":10143958,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143959,"byte_end":10143966,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143967,"byte_end":10143970,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10143971,"byte_end":10144050,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144051,"byte_end":10144120,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144121,"byte_end":10144185,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144186,"byte_end":10144189,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144190,"byte_end":10144203,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144204,"byte_end":10144226,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144227,"byte_end":10144230,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144231,"byte_end":10144305,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144306,"byte_end":10144311,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144312,"byte_end":10144346,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144347,"byte_end":10144350,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144351,"byte_end":10144404,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144405,"byte_end":10144410,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144411,"byte_end":10144428,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144429,"byte_end":10144436,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144437,"byte_end":10144440,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144441,"byte_end":10144499,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144500,"byte_end":10144503,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144504,"byte_end":10144517,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144518,"byte_end":10144540,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144541,"byte_end":10144575,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144576,"byte_end":10144579,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144580,"byte_end":10144654,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144655,"byte_end":10144660,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144661,"byte_end":10144698,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144699,"byte_end":10144704,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144705,"byte_end":10144722,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144723,"byte_end":10144730,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144731,"byte_end":10144734,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144735,"byte_end":10144814,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144815,"byte_end":10144832,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144833,"byte_end":10144836,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144837,"byte_end":10144858,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144859,"byte_end":10144862,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144863,"byte_end":10144937,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10144938,"byte_end":10145014,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145015,"byte_end":10145025,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145026,"byte_end":10145029,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145030,"byte_end":10145043,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145044,"byte_end":10145072,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145073,"byte_end":10145106,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145107,"byte_end":10145137,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145138,"byte_end":10145141,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145142,"byte_end":10145216,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145217,"byte_end":10145222,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145223,"byte_end":10145264,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145265,"byte_end":10145300,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145301,"byte_end":10145304,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145305,"byte_end":10145340,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145341,"byte_end":10145388,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145389,"byte_end":10145419,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145420,"byte_end":10145425,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145426,"byte_end":10145431,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145432,"byte_end":10145449,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145450,"byte_end":10145457,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145458,"byte_end":10145461,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145462,"byte_end":10145478,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145479,"byte_end":10145482,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145483,"byte_end":10145565,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145566,"byte_end":10145647,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145648,"byte_end":10145691,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145692,"byte_end":10145695,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145696,"byte_end":10145709,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145710,"byte_end":10145732,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145733,"byte_end":10145736,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145737,"byte_end":10145811,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145812,"byte_end":10145817,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145818,"byte_end":10145875,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145876,"byte_end":10145881,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145882,"byte_end":10145899,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145900,"byte_end":10145907,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145908,"byte_end":10145911,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145912,"byte_end":10145946,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145947,"byte_end":10145950,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145951,"byte_end":10145968,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145969,"byte_end":10145972,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10145973,"byte_end":10146044,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146045,"byte_end":10146124,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146125,"byte_end":10146206,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146207,"byte_end":10146241,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146242,"byte_end":10146245,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146246,"byte_end":10146253,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146254,"byte_end":10146278,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146279,"byte_end":10146301,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146302,"byte_end":10146305,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146306,"byte_end":10146351,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146352,"byte_end":10146390,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146391,"byte_end":10146394,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146395,"byte_end":10146444,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146445,"byte_end":10146448,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146449,"byte_end":10146497,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146498,"byte_end":10146501,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146502,"byte_end":10146516,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146517,"byte_end":10146522,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146523,"byte_end":10146530,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146531,"byte_end":10146534,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146535,"byte_end":10146615,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146616,"byte_end":10146700,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146701,"byte_end":10146785,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146786,"byte_end":10146836,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146837,"byte_end":10146840,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146841,"byte_end":10146874,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146875,"byte_end":10146878,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146879,"byte_end":10146960,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10146961,"byte_end":10147041,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147042,"byte_end":10147129,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147130,"byte_end":10147220,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147221,"byte_end":10147307,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147308,"byte_end":10147371,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147372,"byte_end":10147375,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147376,"byte_end":10147405,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147406,"byte_end":10147437,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147438,"byte_end":10147467,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147468,"byte_end":10147503,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147504,"byte_end":10147540,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147541,"byte_end":10147588,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147589,"byte_end":10147627,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147628,"byte_end":10147668,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147669,"byte_end":10147709,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147710,"byte_end":10147763,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147764,"byte_end":10147798,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147799,"byte_end":10147838,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147839,"byte_end":10147871,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147872,"byte_end":10147908,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147909,"byte_end":10147993,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10147994,"byte_end":10148043,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148044,"byte_end":10148113,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148114,"byte_end":10148200,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158803,"byte_end":10158829,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158830,"byte_end":10158833,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158834,"byte_end":10158914,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158915,"byte_end":10158975,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158976,"byte_end":10158979,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158980,"byte_end":10158987,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10158988,"byte_end":10159019,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159020,"byte_end":10159054,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\prelude.rs","byte_start":10159055,"byte_end":10159062,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\lines.rs","byte_start":10172386,"byte_end":10172391,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_line.rs","byte_start":10174367,"byte_end":10174381,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_line.rs","byte_start":10174316,"byte_end":10174355,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_until.rs","byte_start":10175895,"byte_end":10175910,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_until.rs","byte_start":10175844,"byte_end":10175883,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4363},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\split.rs","byte_start":10177164,"byte_end":10177169,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10161863,"byte_end":10161873,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2295}],"decl_id":null,"docs":"        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10163637,"byte_end":10163647,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10165436,"byte_end":10165445,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10166903,"byte_end":10166908,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10168672,"byte_end":10168677,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194758,"byte_end":10194763,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":2298}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194500,"byte_end":10194542,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194543,"byte_end":10194546,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194547,"byte_end":10194617,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194618,"byte_end":10194681,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194682,"byte_end":10194685,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194686,"byte_end":10194729,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4309},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196550,"byte_end":10196555,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4314}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197279,"byte_end":10197289,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196728,"byte_end":10196784,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196789,"byte_end":10196792,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196797,"byte_end":10196811,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196816,"byte_end":10196819,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196824,"byte_end":10196837,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196842,"byte_end":10196922,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196927,"byte_end":10196932,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196937,"byte_end":10196967,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196972,"byte_end":10197000,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197005,"byte_end":10197008,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197013,"byte_end":10197061,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197066,"byte_end":10197114,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197119,"byte_end":10197122,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197127,"byte_end":10197168,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197173,"byte_end":10197223,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197228,"byte_end":10197233,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197238,"byte_end":10197255,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197260,"byte_end":10197267,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197907,"byte_end":10197914,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197353,"byte_end":10197415,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197420,"byte_end":10197423,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197428,"byte_end":10197442,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197447,"byte_end":10197450,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197455,"byte_end":10197468,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197473,"byte_end":10197553,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197558,"byte_end":10197563,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197568,"byte_end":10197598,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197603,"byte_end":10197631,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197636,"byte_end":10197639,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197644,"byte_end":10197692,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197697,"byte_end":10197745,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197750,"byte_end":10197753,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197758,"byte_end":10197799,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197804,"byte_end":10197851,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197856,"byte_end":10197861,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197866,"byte_end":10197883,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197888,"byte_end":10197895,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198730,"byte_end":10198737,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10197983,"byte_end":10198053,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198058,"byte_end":10198061,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198066,"byte_end":10198139,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198144,"byte_end":10198217,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198222,"byte_end":10198234,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198239,"byte_end":10198242,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198247,"byte_end":10198261,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198266,"byte_end":10198269,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198274,"byte_end":10198287,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198292,"byte_end":10198372,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198377,"byte_end":10198382,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198387,"byte_end":10198417,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198422,"byte_end":10198450,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198455,"byte_end":10198458,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198463,"byte_end":10198511,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198516,"byte_end":10198564,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198569,"byte_end":10198572,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198577,"byte_end":10198622,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198627,"byte_end":10198674,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198679,"byte_end":10198684,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198689,"byte_end":10198706,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198711,"byte_end":10198718,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read.rs","byte_start":10202018,"byte_end":10202028,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read.rs","byte_start":10201967,"byte_end":10202006,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_exact.rs","byte_start":10202619,"byte_end":10202634,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_exact.rs","byte_start":10202568,"byte_end":10202607,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10203553,"byte_end":10203568,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10203502,"byte_end":10203541,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_string.rs","byte_start":10206092,"byte_end":10206110,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_string.rs","byte_start":10206041,"byte_end":10206080,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_vectored.rs","byte_start":10207567,"byte_end":10207585,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_vectored.rs","byte_start":10207516,"byte_end":10207555,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208494,"byte_end":10208498,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4277}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209388,"byte_end":10209393,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208610,"byte_end":10208684,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208689,"byte_end":10208704,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208709,"byte_end":10208712,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208717,"byte_end":10208727,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208732,"byte_end":10208735,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208740,"byte_end":10208817,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208822,"byte_end":10208886,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208891,"byte_end":10208894,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208899,"byte_end":10208928,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208933,"byte_end":10208936,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208941,"byte_end":10208955,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208960,"byte_end":10208963,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208968,"byte_end":10208981,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208986,"byte_end":10209066,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209071,"byte_end":10209076,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209081,"byte_end":10209111,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209116,"byte_end":10209144,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209149,"byte_end":10209152,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209157,"byte_end":10209198,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209203,"byte_end":10209206,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209211,"byte_end":10209241,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209246,"byte_end":10209273,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209278,"byte_end":10209281,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209286,"byte_end":10209328,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209333,"byte_end":10209338,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209343,"byte_end":10209364,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209369,"byte_end":10209376,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210182,"byte_end":10210191,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209440,"byte_end":10209511,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209516,"byte_end":10209590,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209595,"byte_end":10209670,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209675,"byte_end":10209699,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209704,"byte_end":10209707,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209712,"byte_end":10209726,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209731,"byte_end":10209734,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209739,"byte_end":10209752,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209757,"byte_end":10209837,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209842,"byte_end":10209847,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209852,"byte_end":10209882,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209887,"byte_end":10209915,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209920,"byte_end":10209923,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209928,"byte_end":10209969,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209974,"byte_end":10209977,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10209982,"byte_end":10210012,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210017,"byte_end":10210048,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210053,"byte_end":10210078,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210083,"byte_end":10210086,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210091,"byte_end":10210126,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210131,"byte_end":10210136,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210141,"byte_end":10210158,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210163,"byte_end":10210170,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210808,"byte_end":10210818,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210256,"byte_end":10210310,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210315,"byte_end":10210318,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210323,"byte_end":10210337,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210342,"byte_end":10210345,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210350,"byte_end":10210363,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210368,"byte_end":10210448,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210453,"byte_end":10210458,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210463,"byte_end":10210493,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210498,"byte_end":10210526,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210531,"byte_end":10210534,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210539,"byte_end":10210583,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210588,"byte_end":10210591,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210596,"byte_end":10210624,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210629,"byte_end":10210663,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210668,"byte_end":10210704,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210709,"byte_end":10210712,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210717,"byte_end":10210752,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210757,"byte_end":10210762,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210767,"byte_end":10210784,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210789,"byte_end":10210796,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211403,"byte_end":10211410,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210862,"byte_end":10210908,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210913,"byte_end":10210916,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210921,"byte_end":10210935,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210940,"byte_end":10210943,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210948,"byte_end":10210961,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10210966,"byte_end":10211046,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211051,"byte_end":10211056,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211061,"byte_end":10211091,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211096,"byte_end":10211124,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211129,"byte_end":10211132,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211137,"byte_end":10211181,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211186,"byte_end":10211189,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211194,"byte_end":10211222,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211227,"byte_end":10211261,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211266,"byte_end":10211302,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211307,"byte_end":10211310,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211315,"byte_end":10211347,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211352,"byte_end":10211357,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211362,"byte_end":10211379,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211384,"byte_end":10211391,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212185,"byte_end":10212192,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211457,"byte_end":10211511,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211516,"byte_end":10211519,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211524,"byte_end":10211597,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211602,"byte_end":10211674,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211679,"byte_end":10211690,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211695,"byte_end":10211698,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211703,"byte_end":10211717,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211722,"byte_end":10211725,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211730,"byte_end":10211743,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211748,"byte_end":10211828,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211833,"byte_end":10211838,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211843,"byte_end":10211873,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211878,"byte_end":10211906,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211911,"byte_end":10211914,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211919,"byte_end":10211963,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211968,"byte_end":10211971,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10211976,"byte_end":10212004,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212009,"byte_end":10212043,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212048,"byte_end":10212084,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212089,"byte_end":10212092,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212097,"byte_end":10212129,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212134,"byte_end":10212139,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212144,"byte_end":10212161,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212166,"byte_end":10212173,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10180200,"byte_end":10180207,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330}],"decl_id":null,"docs":"        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10181400,"byte_end":10181404,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10182196,"byte_end":10182209,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10183366,"byte_end":10183377,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10184515,"byte_end":10184529,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10186610,"byte_end":10186620,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10187974,"byte_end":10187978,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10189193,"byte_end":10189199,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10190201,"byte_end":10190206,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10191341,"byte_end":10191346,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":2314},"children":[],"decl_id":null,"docs":"            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\seek.rs","byte_start":10218540,"byte_end":10218550,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\seek.rs","byte_start":10218489,"byte_end":10218528,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\mod.rs","byte_start":10216302,"byte_end":10216309,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":2347}],"decl_id":null,"docs":"        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\mod.rs","byte_start":10217043,"byte_end":10217047,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":2344},"children":[],"decl_id":null,"docs":"            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\flush.rs","byte_start":10230219,"byte_end":10230230,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":1957}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\flush.rs","byte_start":10230168,"byte_end":10230207,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write.rs","byte_start":10230731,"byte_end":10230742,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write.rs","byte_start":10230680,"byte_end":10230719,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_all.rs","byte_start":10231325,"byte_end":10231339,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_all.rs","byte_start":10231274,"byte_end":10231313,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_fmt.rs","byte_start":10232257,"byte_end":10232271,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_fmt.rs","byte_start":10232194,"byte_end":10232233,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_fmt.rs","byte_start":10232234,"byte_end":10232245,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_vectored.rs","byte_start":10233881,"byte_end":10233900,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_vectored.rs","byte_start":10233830,"byte_end":10233869,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2360},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10221486,"byte_end":10221494,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370}],"decl_id":null,"docs":"        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10222411,"byte_end":10222416,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10223218,"byte_end":10223223,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10223946,"byte_end":10223960,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10225057,"byte_end":10225066,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10226275,"byte_end":10226284,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237150,"byte_end":10237159,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237790,"byte_end":10237793,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237308,"byte_end":10237367,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237372,"byte_end":10237375,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237380,"byte_end":10237453,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237458,"byte_end":10237461,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237466,"byte_end":10237480,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237485,"byte_end":10237488,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237493,"byte_end":10237506,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237511,"byte_end":10237585,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237590,"byte_end":10237595,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237600,"byte_end":10237628,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237633,"byte_end":10237666,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237671,"byte_end":10237674,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237679,"byte_end":10237734,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237739,"byte_end":10237744,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237749,"byte_end":10237766,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237771,"byte_end":10237778,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238306,"byte_end":10238319,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237891,"byte_end":10237953,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237958,"byte_end":10237961,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237966,"byte_end":10237980,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237985,"byte_end":10237988,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237993,"byte_end":10238006,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238011,"byte_end":10238085,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238090,"byte_end":10238095,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238100,"byte_end":10238128,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238133,"byte_end":10238166,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238171,"byte_end":10238174,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238179,"byte_end":10238250,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238255,"byte_end":10238260,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238265,"byte_end":10238282,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238287,"byte_end":10238294,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239040,"byte_end":10239047,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238545,"byte_end":10238591,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238596,"byte_end":10238599,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238604,"byte_end":10238670,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238675,"byte_end":10238678,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238683,"byte_end":10238697,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238702,"byte_end":10238705,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238710,"byte_end":10238723,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238728,"byte_end":10238802,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238807,"byte_end":10238812,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238817,"byte_end":10238845,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238850,"byte_end":10238883,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238888,"byte_end":10238891,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238896,"byte_end":10238951,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238956,"byte_end":10238984,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238989,"byte_end":10238994,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238999,"byte_end":10239016,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239021,"byte_end":10239028,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239607,"byte_end":10239614,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239094,"byte_end":10239148,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239153,"byte_end":10239156,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239161,"byte_end":10239227,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239232,"byte_end":10239235,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239240,"byte_end":10239254,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239259,"byte_end":10239262,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239267,"byte_end":10239280,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239285,"byte_end":10239359,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239364,"byte_end":10239369,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239374,"byte_end":10239402,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239407,"byte_end":10239440,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239445,"byte_end":10239448,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239453,"byte_end":10239515,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239520,"byte_end":10239551,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239556,"byte_end":10239561,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239566,"byte_end":10239583,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239588,"byte_end":10239595,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240411,"byte_end":10240417,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239912,"byte_end":10239959,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239964,"byte_end":10239967,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10239972,"byte_end":10240041,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240046,"byte_end":10240049,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240054,"byte_end":10240068,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240073,"byte_end":10240076,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240081,"byte_end":10240094,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240099,"byte_end":10240173,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240178,"byte_end":10240183,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240188,"byte_end":10240216,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240221,"byte_end":10240254,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240259,"byte_end":10240262,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240267,"byte_end":10240322,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240327,"byte_end":10240355,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240360,"byte_end":10240365,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240370,"byte_end":10240387,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240392,"byte_end":10240399,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240999,"byte_end":10241009,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240485,"byte_end":10240550,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240555,"byte_end":10240558,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240563,"byte_end":10240626,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240631,"byte_end":10240634,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240639,"byte_end":10240653,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240658,"byte_end":10240661,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240666,"byte_end":10240679,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240684,"byte_end":10240758,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240763,"byte_end":10240768,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240773,"byte_end":10240801,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240806,"byte_end":10240839,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240844,"byte_end":10240847,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240852,"byte_end":10240907,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240912,"byte_end":10240943,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240948,"byte_end":10240953,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240958,"byte_end":10240975,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10240980,"byte_end":10240987,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250260,"byte_end":10250269,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251134,"byte_end":10251148,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250363,"byte_end":10250429,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250430,"byte_end":10250503,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250504,"byte_end":10250556,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250557,"byte_end":10250560,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250561,"byte_end":10250575,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250576,"byte_end":10250579,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250580,"byte_end":10250593,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250594,"byte_end":10250668,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250669,"byte_end":10250702,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250703,"byte_end":10250737,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250738,"byte_end":10250741,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250742,"byte_end":10250824,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250825,"byte_end":10250828,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250829,"byte_end":10250877,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250878,"byte_end":10250932,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250933,"byte_end":10250952,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250953,"byte_end":10250972,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10250973,"byte_end":10251016,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251017,"byte_end":10251057,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251058,"byte_end":10251067,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251068,"byte_end":10251074,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251075,"byte_end":10251080,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251081,"byte_end":10251098,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251099,"byte_end":10251105,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251731,"byte_end":10251734,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251209,"byte_end":10251301,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251306,"byte_end":10251339,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251344,"byte_end":10251347,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251352,"byte_end":10251366,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251371,"byte_end":10251374,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251379,"byte_end":10251392,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251397,"byte_end":10251424,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251429,"byte_end":10251503,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251508,"byte_end":10251541,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251546,"byte_end":10251580,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251585,"byte_end":10251588,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251593,"byte_end":10251675,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251680,"byte_end":10251685,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251690,"byte_end":10251707,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251712,"byte_end":10251719,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252401,"byte_end":10252414,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251832,"byte_end":10251897,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251902,"byte_end":10251905,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251910,"byte_end":10251924,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251929,"byte_end":10251932,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251937,"byte_end":10251992,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251997,"byte_end":10252000,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252005,"byte_end":10252018,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252023,"byte_end":10252050,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252055,"byte_end":10252129,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252134,"byte_end":10252167,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252172,"byte_end":10252206,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252211,"byte_end":10252214,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252219,"byte_end":10252281,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252286,"byte_end":10252345,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252350,"byte_end":10252355,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252360,"byte_end":10252377,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252382,"byte_end":10252389,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253128,"byte_end":10253135,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252591,"byte_end":10252637,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252642,"byte_end":10252645,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252650,"byte_end":10252664,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252669,"byte_end":10252672,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252677,"byte_end":10252690,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252695,"byte_end":10252722,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252727,"byte_end":10252801,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252806,"byte_end":10252839,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252844,"byte_end":10252878,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252883,"byte_end":10252886,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252891,"byte_end":10252973,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252978,"byte_end":10252981,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10252986,"byte_end":10253030,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253035,"byte_end":10253072,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253077,"byte_end":10253082,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253087,"byte_end":10253104,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253109,"byte_end":10253116,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253773,"byte_end":10253780,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253182,"byte_end":10253236,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253241,"byte_end":10253244,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253249,"byte_end":10253314,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253319,"byte_end":10253322,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253327,"byte_end":10253341,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253346,"byte_end":10253349,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253354,"byte_end":10253367,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253372,"byte_end":10253446,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253451,"byte_end":10253484,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253489,"byte_end":10253523,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253528,"byte_end":10253531,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253536,"byte_end":10253618,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253623,"byte_end":10253626,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253631,"byte_end":10253675,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253680,"byte_end":10253717,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253722,"byte_end":10253727,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253732,"byte_end":10253749,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10253754,"byte_end":10253761,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254846,"byte_end":10254856,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254077,"byte_end":10254132,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254137,"byte_end":10254140,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254145,"byte_end":10254207,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254212,"byte_end":10254305,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254310,"byte_end":10254313,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254318,"byte_end":10254366,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254371,"byte_end":10254385,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254390,"byte_end":10254393,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254398,"byte_end":10254411,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254416,"byte_end":10254490,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254495,"byte_end":10254528,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254533,"byte_end":10254567,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254572,"byte_end":10254575,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254580,"byte_end":10254662,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254667,"byte_end":10254670,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254675,"byte_end":10254723,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254728,"byte_end":10254784,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254789,"byte_end":10254794,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254799,"byte_end":10254816,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10254821,"byte_end":10254828,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255626,"byte_end":10255632,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255093,"byte_end":10255149,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255154,"byte_end":10255157,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255162,"byte_end":10255176,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255181,"byte_end":10255184,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255189,"byte_end":10255202,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255207,"byte_end":10255281,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255286,"byte_end":10255319,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255324,"byte_end":10255358,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255363,"byte_end":10255366,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255371,"byte_end":10255453,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255458,"byte_end":10255461,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255466,"byte_end":10255514,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255519,"byte_end":10255570,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255575,"byte_end":10255580,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255585,"byte_end":10255602,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10255607,"byte_end":10255614,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260401,"byte_end":10260405,"line_start":48,"line_end":48,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R: ?Sized, W: ?Sized, '_, '_>(&'_ mut R, &'_ mut W)\n-> /*impl Trait*/ where R: Read + Unpin, W: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259149,"byte_end":10259206,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259207,"byte_end":10259210,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259211,"byte_end":10259279,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259280,"byte_end":10259344,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259345,"byte_end":10259361,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259362,"byte_end":10259365,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259366,"byte_end":10259429,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259430,"byte_end":10259467,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259468,"byte_end":10259471,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259472,"byte_end":10259552,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259553,"byte_end":10259618,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259619,"byte_end":10259622,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259623,"byte_end":10259682,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259683,"byte_end":10259686,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259687,"byte_end":10259755,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259756,"byte_end":10259792,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259793,"byte_end":10259796,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259797,"byte_end":10259809,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259810,"byte_end":10259813,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259814,"byte_end":10259889,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259890,"byte_end":10259965,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10259966,"byte_end":10260035,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260036,"byte_end":10260039,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260040,"byte_end":10260054,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260055,"byte_end":10260058,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260059,"byte_end":10260066,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260067,"byte_end":10260141,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260142,"byte_end":10260147,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260148,"byte_end":10260170,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260171,"byte_end":10260174,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260175,"byte_end":10260212,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260213,"byte_end":10260247,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260248,"byte_end":10260251,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260252,"byte_end":10260298,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260299,"byte_end":10260304,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260305,"byte_end":10260322,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260323,"byte_end":10260330,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"cfg(any(feature = \"docs\", not(feature = \"unstable\")))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260331,"byte_end":10260387,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265550,"byte_end":10265556,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2389}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264726,"byte_end":10264789,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264790,"byte_end":10264818,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264819,"byte_end":10264822,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264823,"byte_end":10264891,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264892,"byte_end":10264964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10264965,"byte_end":10265044,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265045,"byte_end":10265070,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265071,"byte_end":10265074,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265075,"byte_end":10265149,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265150,"byte_end":10265217,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265218,"byte_end":10265251,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265252,"byte_end":10265255,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265256,"byte_end":10265285,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265286,"byte_end":10265315,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265316,"byte_end":10265347,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265348,"byte_end":10265410,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265411,"byte_end":10265474,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265475,"byte_end":10265505,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266143,"byte_end":10266146,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265620,"byte_end":10265695,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265700,"byte_end":10265703,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265708,"byte_end":10265782,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265787,"byte_end":10265855,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265860,"byte_end":10265898,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265903,"byte_end":10265906,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265911,"byte_end":10265925,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265930,"byte_end":10265933,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265938,"byte_end":10265945,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265950,"byte_end":10265980,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265985,"byte_end":10265988,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265993,"byte_end":10266032,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266037,"byte_end":10266085,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266090,"byte_end":10266119,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266124,"byte_end":10266131,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266605,"byte_end":10266615,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266258,"byte_end":10266315,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266320,"byte_end":10266323,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266328,"byte_end":10266342,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266347,"byte_end":10266350,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266355,"byte_end":10266362,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266367,"byte_end":10266397,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266402,"byte_end":10266405,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266410,"byte_end":10266449,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266454,"byte_end":10266502,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266507,"byte_end":10266536,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266541,"byte_end":10266544,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266549,"byte_end":10266581,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266586,"byte_end":10266593,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267025,"byte_end":10267032,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266672,"byte_end":10266732,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266737,"byte_end":10266740,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266745,"byte_end":10266759,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266764,"byte_end":10266767,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266772,"byte_end":10266779,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266784,"byte_end":10266814,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266819,"byte_end":10266822,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266827,"byte_end":10266866,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266871,"byte_end":10266919,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266924,"byte_end":10266953,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266958,"byte_end":10266961,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10266966,"byte_end":10267001,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267006,"byte_end":10267013,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267606,"byte_end":10267613,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267088,"byte_end":10267156,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267161,"byte_end":10267164,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267169,"byte_end":10267242,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267247,"byte_end":10267309,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267314,"byte_end":10267317,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267322,"byte_end":10267336,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267341,"byte_end":10267344,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267349,"byte_end":10267356,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267361,"byte_end":10267391,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267396,"byte_end":10267399,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267404,"byte_end":10267447,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267452,"byte_end":10267500,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267505,"byte_end":10267534,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267539,"byte_end":10267542,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267547,"byte_end":10267582,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267587,"byte_end":10267594,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268334,"byte_end":10268342,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267677,"byte_end":10267725,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267730,"byte_end":10267733,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267738,"byte_end":10267752,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267757,"byte_end":10267760,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267765,"byte_end":10267772,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267777,"byte_end":10267851,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267856,"byte_end":10267861,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267866,"byte_end":10267896,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267901,"byte_end":10267935,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267940,"byte_end":10267972,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267977,"byte_end":10267980,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10267985,"byte_end":10268037,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268042,"byte_end":10268045,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268050,"byte_end":10268085,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268090,"byte_end":10268093,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268098,"byte_end":10268141,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268146,"byte_end":10268181,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268186,"byte_end":10268189,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268194,"byte_end":10268238,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268243,"byte_end":10268278,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268283,"byte_end":10268288,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268293,"byte_end":10268310,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268315,"byte_end":10268322,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268812,"byte_end":10268824,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268400,"byte_end":10268437,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268442,"byte_end":10268445,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268450,"byte_end":10268464,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268469,"byte_end":10268472,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268477,"byte_end":10268484,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268489,"byte_end":10268519,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268524,"byte_end":10268527,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268532,"byte_end":10268584,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268589,"byte_end":10268592,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268597,"byte_end":10268632,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268637,"byte_end":10268640,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268645,"byte_end":10268670,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268675,"byte_end":10268710,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268715,"byte_end":10268718,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268723,"byte_end":10268748,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268753,"byte_end":10268788,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268793,"byte_end":10268800,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272629,"byte_end":10272634,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272234,"byte_end":10272277,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272278,"byte_end":10272281,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272282,"byte_end":10272296,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272297,"byte_end":10272300,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272301,"byte_end":10272312,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272313,"byte_end":10272387,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272388,"byte_end":10272393,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272394,"byte_end":10272416,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272417,"byte_end":10272447,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272448,"byte_end":10272451,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272452,"byte_end":10272481,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272482,"byte_end":10272515,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272516,"byte_end":10272556,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272557,"byte_end":10272560,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272561,"byte_end":10272589,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272590,"byte_end":10272595,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272596,"byte_end":10272613,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272614,"byte_end":10272621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272852,"byte_end":10272857,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2232}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272678,"byte_end":10272713,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272714,"byte_end":10272717,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272718,"byte_end":10272779,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272780,"byte_end":10272807,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272808,"byte_end":10272811,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272812,"byte_end":10272840,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274169,"byte_end":10274175,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273650,"byte_end":10273719,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273720,"byte_end":10273723,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273724,"byte_end":10273820,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273821,"byte_end":10273824,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273825,"byte_end":10273840,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273841,"byte_end":10273844,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273845,"byte_end":10273856,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273857,"byte_end":10273931,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273932,"byte_end":10273937,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273938,"byte_end":10273960,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273961,"byte_end":10273991,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273992,"byte_end":10273995,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10273996,"byte_end":10274024,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274025,"byte_end":10274078,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274079,"byte_end":10274082,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274083,"byte_end":10274129,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274130,"byte_end":10274135,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274136,"byte_end":10274153,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274154,"byte_end":10274161,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274445,"byte_end":10274451,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2252}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274221,"byte_end":10274303,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274304,"byte_end":10274307,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274308,"byte_end":10274370,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274371,"byte_end":10274398,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274399,"byte_end":10274402,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274403,"byte_end":10274433,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275385,"byte_end":10275389,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275043,"byte_end":10275097,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275098,"byte_end":10275101,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275102,"byte_end":10275116,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275117,"byte_end":10275120,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275121,"byte_end":10275132,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275133,"byte_end":10275207,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275208,"byte_end":10275213,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275214,"byte_end":10275236,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275237,"byte_end":10275267,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275268,"byte_end":10275271,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275272,"byte_end":10275304,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275305,"byte_end":10275345,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275346,"byte_end":10275351,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275352,"byte_end":10275369,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275370,"byte_end":10275377,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275617,"byte_end":10275621,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2268}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275431,"byte_end":10275477,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275478,"byte_end":10275481,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275482,"byte_end":10275560,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275561,"byte_end":10275574,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275575,"byte_end":10275578,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275579,"byte_end":10275605,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277126,"byte_end":10277133,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276513,"byte_end":10276576,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276577,"byte_end":10276580,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276581,"byte_end":10276637,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276638,"byte_end":10276697,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276698,"byte_end":10276701,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276702,"byte_end":10276716,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276717,"byte_end":10276720,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276721,"byte_end":10276734,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276735,"byte_end":10276809,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276810,"byte_end":10276815,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276816,"byte_end":10276844,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276845,"byte_end":10276848,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276849,"byte_end":10276871,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276872,"byte_end":10276875,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276876,"byte_end":10276923,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276924,"byte_end":10276956,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276957,"byte_end":10276994,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10276995,"byte_end":10277045,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277046,"byte_end":10277060,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277061,"byte_end":10277067,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277068,"byte_end":10277080,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277081,"byte_end":10277086,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277087,"byte_end":10277104,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277105,"byte_end":10277112,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279160,"byte_end":10279166,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278391,"byte_end":10278464,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278465,"byte_end":10278468,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278469,"byte_end":10278530,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278531,"byte_end":10278534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278535,"byte_end":10278607,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278608,"byte_end":10278611,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278612,"byte_end":10278659,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278660,"byte_end":10278663,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278664,"byte_end":10278755,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278756,"byte_end":10278848,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278849,"byte_end":10278862,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278863,"byte_end":10278866,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278867,"byte_end":10278881,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278882,"byte_end":10278885,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278886,"byte_end":10278899,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278900,"byte_end":10278974,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278975,"byte_end":10278980,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10278981,"byte_end":10279003,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279004,"byte_end":10279034,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279035,"byte_end":10279038,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279039,"byte_end":10279073,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279074,"byte_end":10279120,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279121,"byte_end":10279126,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279127,"byte_end":10279144,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279145,"byte_end":10279152,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279796,"byte_end":10279802,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279324,"byte_end":10279382,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279383,"byte_end":10279386,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279387,"byte_end":10279467,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279468,"byte_end":10279477,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279478,"byte_end":10279481,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279482,"byte_end":10279529,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279530,"byte_end":10279533,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279534,"byte_end":10279625,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279626,"byte_end":10279718,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279719,"byte_end":10279732,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279733,"byte_end":10279736,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10279737,"byte_end":10279767,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285653,"byte_end":10285658,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10284898,"byte_end":10284971,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10284972,"byte_end":10284975,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10284976,"byte_end":10285036,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285037,"byte_end":10285040,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285041,"byte_end":10285111,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285112,"byte_end":10285115,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285116,"byte_end":10285163,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285164,"byte_end":10285167,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285168,"byte_end":10285259,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285260,"byte_end":10285352,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285353,"byte_end":10285366,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285367,"byte_end":10285370,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285371,"byte_end":10285385,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285386,"byte_end":10285389,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285390,"byte_end":10285403,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285404,"byte_end":10285478,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285479,"byte_end":10285484,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285485,"byte_end":10285507,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285508,"byte_end":10285511,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285512,"byte_end":10285540,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285541,"byte_end":10285574,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285575,"byte_end":10285613,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285614,"byte_end":10285619,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285620,"byte_end":10285637,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285638,"byte_end":10285645,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286310,"byte_end":10286315,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285841,"byte_end":10285899,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285900,"byte_end":10285903,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285904,"byte_end":10285983,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285984,"byte_end":10285993,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285994,"byte_end":10285997,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10285998,"byte_end":10286045,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286046,"byte_end":10286049,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286050,"byte_end":10286141,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286142,"byte_end":10286234,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286235,"byte_end":10286248,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286249,"byte_end":10286252,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10286253,"byte_end":10286281,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287637,"byte_end":10287646,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287232,"byte_end":10287284,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287289,"byte_end":10287292,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287297,"byte_end":10287311,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287316,"byte_end":10287319,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287324,"byte_end":10287337,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287342,"byte_end":10287416,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287421,"byte_end":10287426,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287431,"byte_end":10287453,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287458,"byte_end":10287461,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287466,"byte_end":10287494,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287499,"byte_end":10287532,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287537,"byte_end":10287575,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287580,"byte_end":10287585,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287590,"byte_end":10287607,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287612,"byte_end":10287619,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdio.rs","byte_start":10292162,"byte_end":10292168,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdio.rs","byte_start":10292339,"byte_end":10292346,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293440,"byte_end":10293446,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292670,"byte_end":10292744,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292745,"byte_end":10292748,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292749,"byte_end":10292810,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292811,"byte_end":10292814,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292815,"byte_end":10292887,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292888,"byte_end":10292891,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292892,"byte_end":10292939,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292940,"byte_end":10292943,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10292944,"byte_end":10293035,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293036,"byte_end":10293128,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293129,"byte_end":10293142,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293143,"byte_end":10293146,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293147,"byte_end":10293161,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293162,"byte_end":10293165,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293166,"byte_end":10293179,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293180,"byte_end":10293254,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293255,"byte_end":10293260,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293261,"byte_end":10293283,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293284,"byte_end":10293314,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293315,"byte_end":10293318,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293319,"byte_end":10293353,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293354,"byte_end":10293400,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293401,"byte_end":10293406,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293407,"byte_end":10293424,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293425,"byte_end":10293432,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294077,"byte_end":10294083,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293604,"byte_end":10293663,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293664,"byte_end":10293667,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293668,"byte_end":10293744,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293745,"byte_end":10293758,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293759,"byte_end":10293762,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293763,"byte_end":10293810,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293811,"byte_end":10293814,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293815,"byte_end":10293906,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10293907,"byte_end":10293999,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294000,"byte_end":10294013,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294014,"byte_end":10294017,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294018,"byte_end":10294048,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1579},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\mod.rs","parent":null,"children":[{"krate":0,"index":2612}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\mod.rs","byte_start":10149967,"byte_end":10149994,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::os::windows","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\mod.rs","parent":null,"children":[{"krate":0,"index":2613}],"decl_id":null,"docs":" Platform-specific extensions for Windows.\n","sig":null,"attributes":[{"value":"cfg(any(windows, feature = \"docs\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16049,"byte_end":16087,"line_start":170,"line_end":170,"column_start":13,"column_end":51}},{"value":"/ Platform-specific extensions for Windows.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\mod.rs","byte_start":10298969,"byte_end":10299014,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::windows::io","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"decl_id":null,"docs":" Windows-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Windows-specific I/O extensions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\io.rs","byte_start":10299221,"byte_end":10299257,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":1580},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150077,"byte_end":10150099,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150100,"byte_end":10150103,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150104,"byte_end":10150184,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150185,"byte_end":10150188,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150189,"byte_end":10150203,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150204,"byte_end":10150207,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150208,"byte_end":10150236,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150237,"byte_end":10150240,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150241,"byte_end":10150248,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150249,"byte_end":10150279,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150280,"byte_end":10150310,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\prelude.rs","byte_start":10150311,"byte_end":10150318,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151359,"byte_end":10151390,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151391,"byte_end":10151394,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151395,"byte_end":10151448,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151449,"byte_end":10151452,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151453,"byte_end":10151517,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151518,"byte_end":10151521,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151522,"byte_end":10151557,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151558,"byte_end":10151561,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151562,"byte_end":10151636,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151637,"byte_end":10151708,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151709,"byte_end":10151712,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151713,"byte_end":10151782,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151783,"byte_end":10151853,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151854,"byte_end":10151925,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151926,"byte_end":10151929,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10151930,"byte_end":10152005,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152006,"byte_end":10152009,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152010,"byte_end":10152017,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152018,"byte_end":10152044,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152045,"byte_end":10152071,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152072,"byte_end":10152098,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152099,"byte_end":10152102,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152103,"byte_end":10152118,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152119,"byte_end":10152135,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152136,"byte_end":10152154,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152155,"byte_end":10152173,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152174,"byte_end":10152196,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152197,"byte_end":10152215,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152216,"byte_end":10152258,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152259,"byte_end":10152277,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152278,"byte_end":10152287,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152288,"byte_end":10152293,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152294,"byte_end":10152301,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152302,"byte_end":10152305,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152306,"byte_end":10152383,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152384,"byte_end":10152449,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152450,"byte_end":10152469,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152470,"byte_end":10152473,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152474,"byte_end":10152545,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152546,"byte_end":10152580,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152581,"byte_end":10152584,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152585,"byte_end":10152662,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152663,"byte_end":10152736,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152737,"byte_end":10152740,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152741,"byte_end":10152816,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152817,"byte_end":10152868,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152869,"byte_end":10152872,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152873,"byte_end":10152953,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10152954,"byte_end":10153031,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153032,"byte_end":10153060,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153061,"byte_end":10153064,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153065,"byte_end":10153135,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153136,"byte_end":10153201,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153202,"byte_end":10153248,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153249,"byte_end":10153252,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153253,"byte_end":10153316,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153317,"byte_end":10153387,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153388,"byte_end":10153451,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153452,"byte_end":10153455,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153456,"byte_end":10153526,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153527,"byte_end":10153593,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153594,"byte_end":10153664,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153665,"byte_end":10153734,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153735,"byte_end":10153773,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153774,"byte_end":10153777,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153778,"byte_end":10153853,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153854,"byte_end":10153924,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153925,"byte_end":10153971,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153972,"byte_end":10153975,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10153976,"byte_end":10154046,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154047,"byte_end":10154126,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154127,"byte_end":10154130,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154131,"byte_end":10154160,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154161,"byte_end":10154164,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154165,"byte_end":10154245,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154246,"byte_end":10154266,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154267,"byte_end":10154270,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154271,"byte_end":10154347,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154348,"byte_end":10154424,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154425,"byte_end":10154503,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154504,"byte_end":10154553,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154554,"byte_end":10154557,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154558,"byte_end":10154628,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154629,"byte_end":10154686,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154687,"byte_end":10154742,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154743,"byte_end":10154746,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154747,"byte_end":10154814,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154815,"byte_end":10154872,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154873,"byte_end":10154943,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10154944,"byte_end":10155010,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155011,"byte_end":10155014,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155015,"byte_end":10155081,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155082,"byte_end":10155085,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155086,"byte_end":10155155,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155156,"byte_end":10155224,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155225,"byte_end":10155280,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155281,"byte_end":10155350,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155351,"byte_end":10155387,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155388,"byte_end":10155457,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155458,"byte_end":10155515,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155516,"byte_end":10155519,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155520,"byte_end":10155586,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155587,"byte_end":10155674,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155675,"byte_end":10155747,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155748,"byte_end":10155818,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155819,"byte_end":10155895,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155896,"byte_end":10155973,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155974,"byte_end":10155977,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10155978,"byte_end":10156021,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156022,"byte_end":10156025,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156026,"byte_end":10156104,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156105,"byte_end":10156170,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156171,"byte_end":10156212,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156213,"byte_end":10156216,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156217,"byte_end":10156283,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156284,"byte_end":10156345,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156346,"byte_end":10156400,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156401,"byte_end":10156469,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156470,"byte_end":10156481,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156482,"byte_end":10156485,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156486,"byte_end":10156551,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156552,"byte_end":10156564,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156565,"byte_end":10156568,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156569,"byte_end":10156639,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156640,"byte_end":10156707,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156708,"byte_end":10156764,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156765,"byte_end":10156768,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156769,"byte_end":10156837,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156838,"byte_end":10156908,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156909,"byte_end":10156924,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156925,"byte_end":10156928,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156929,"byte_end":10156995,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   message-based communication. Can provide a lightweight","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10156996,"byte_end":10157056,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157057,"byte_end":10157120,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"/   extra memory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157121,"byte_end":10157140,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157141,"byte_end":10157144,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157145,"byte_end":10157211,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157212,"byte_end":10157270,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157271,"byte_end":10157274,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157275,"byte_end":10157343,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157344,"byte_end":10157408,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157409,"byte_end":10157479,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157480,"byte_end":10157494,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157495,"byte_end":10157498,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157499,"byte_end":10157527,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157528,"byte_end":10157564,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157565,"byte_end":10157597,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157598,"byte_end":10157630,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157631,"byte_end":10157665,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157666,"byte_end":10157669,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157670,"byte_end":10157684,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157685,"byte_end":10157688,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157689,"byte_end":10157751,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157752,"byte_end":10157755,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157756,"byte_end":10157763,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157764,"byte_end":10157803,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157804,"byte_end":10157809,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157810,"byte_end":10157848,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157849,"byte_end":10157873,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157874,"byte_end":10157877,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157878,"byte_end":10157915,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157916,"byte_end":10157940,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157941,"byte_end":10157944,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157945,"byte_end":10157973,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10157974,"byte_end":10158003,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158004,"byte_end":10158010,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158011,"byte_end":10158022,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158023,"byte_end":10158026,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158027,"byte_end":10158063,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158064,"byte_end":10158069,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158070,"byte_end":10158078,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158079,"byte_end":10158086,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\sync\\mod.rs","byte_start":10158088,"byte_end":10158128,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","parent":null,"children":[{"krate":0,"index":1595}],"decl_id":null,"docs":" Channels\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":16792,"byte_end":16815,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\channel.rs","byte_start":10158743,"byte_end":10158755,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2675},{"krate":0,"index":2687},{"krate":0,"index":2698},{"krate":0,"index":2709},{"krate":0,"index":2722},{"krate":0,"index":2751},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2929},{"krate":0,"index":2938},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2971},{"krate":0,"index":2997},{"krate":0,"index":3010},{"krate":0,"index":3021},{"krate":0,"index":3032},{"krate":0,"index":3043},{"krate":0,"index":3054},{"krate":0,"index":3066},{"krate":0,"index":3076},{"krate":0,"index":3086}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":17201,"byte_end":17228,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11119,"byte_end":11153,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302460,"byte_end":10302499,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302500,"byte_end":10302503,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302504,"byte_end":10302555,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302556,"byte_end":10302559,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302560,"byte_end":10302606,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302607,"byte_end":10302659,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302660,"byte_end":10302720,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302721,"byte_end":10302724,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302725,"byte_end":10302759,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302760,"byte_end":10302763,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302764,"byte_end":10302808,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302809,"byte_end":10302859,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302860,"byte_end":10302863,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302864,"byte_end":10302878,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302879,"byte_end":10302882,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302883,"byte_end":10302932,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302933,"byte_end":10302936,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302937,"byte_end":10302950,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10302951,"byte_end":10303025,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303026,"byte_end":10303031,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303032,"byte_end":10303060,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303061,"byte_end":10303091,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303092,"byte_end":10303095,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303096,"byte_end":10303144,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303145,"byte_end":10303189,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303190,"byte_end":10303195,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303196,"byte_end":10303213,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\mod.rs","byte_start":10303214,"byte_end":10303221,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305362,"byte_end":10305374,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304560,"byte_end":10304601,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304602,"byte_end":10304605,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304606,"byte_end":10304704,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304705,"byte_end":10304724,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304725,"byte_end":10304728,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304729,"byte_end":10304796,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304797,"byte_end":10304800,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304801,"byte_end":10304885,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304886,"byte_end":10304889,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304890,"byte_end":10304902,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304903,"byte_end":10304906,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304907,"byte_end":10304965,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304966,"byte_end":10304969,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10304970,"byte_end":10305031,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305032,"byte_end":10305089,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305090,"byte_end":10305126,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305127,"byte_end":10305130,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305131,"byte_end":10305145,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305146,"byte_end":10305149,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305150,"byte_end":10305163,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305164,"byte_end":10305238,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305239,"byte_end":10305244,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305245,"byte_end":10305267,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305268,"byte_end":10305271,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305272,"byte_end":10305316,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305317,"byte_end":10305322,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305323,"byte_end":10305340,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\canonicalize.rs","byte_start":10305341,"byte_end":10305348,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10307006,"byte_end":10307010,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10305808,"byte_end":10305876,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10305877,"byte_end":10305880,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10305881,"byte_end":10305980,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10305981,"byte_end":10306006,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306007,"byte_end":10306010,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306011,"byte_end":10306108,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306109,"byte_end":10306183,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306184,"byte_end":10306187,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306188,"byte_end":10306284,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306285,"byte_end":10306311,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306312,"byte_end":10306315,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306316,"byte_end":10306375,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306376,"byte_end":10306379,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306380,"byte_end":10306410,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306411,"byte_end":10306447,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306448,"byte_end":10306516,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306517,"byte_end":10306520,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306521,"byte_end":10306533,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306534,"byte_end":10306537,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306538,"byte_end":10306596,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306597,"byte_end":10306600,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306601,"byte_end":10306649,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306650,"byte_end":10306723,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306724,"byte_end":10306760,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306761,"byte_end":10306764,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306765,"byte_end":10306779,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306780,"byte_end":10306783,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306784,"byte_end":10306797,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306798,"byte_end":10306872,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306873,"byte_end":10306878,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306879,"byte_end":10306901,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306902,"byte_end":10306905,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306906,"byte_end":10306960,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306961,"byte_end":10306966,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306967,"byte_end":10306984,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\copy.rs","byte_start":10306985,"byte_end":10306992,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308455,"byte_end":10308465,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307490,"byte_end":10307518,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307519,"byte_end":10307522,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307523,"byte_end":10307620,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307621,"byte_end":10307712,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307713,"byte_end":10307716,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307717,"byte_end":10307782,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307783,"byte_end":10307786,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307787,"byte_end":10307833,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307834,"byte_end":10307914,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307915,"byte_end":10307918,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307919,"byte_end":10307931,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307932,"byte_end":10307935,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307936,"byte_end":10307994,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307995,"byte_end":10307998,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10307999,"byte_end":10308060,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308061,"byte_end":10308111,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308112,"byte_end":10308180,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308181,"byte_end":10308217,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308218,"byte_end":10308221,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308222,"byte_end":10308236,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308237,"byte_end":10308240,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308241,"byte_end":10308254,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308255,"byte_end":10308329,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308330,"byte_end":10308335,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308336,"byte_end":10308358,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308359,"byte_end":10308362,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308363,"byte_end":10308409,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308410,"byte_end":10308415,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308416,"byte_end":10308433,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir.rs","byte_start":10308434,"byte_end":10308441,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309623,"byte_end":10309637,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10308868,"byte_end":10308939,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10308940,"byte_end":10308943,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10308944,"byte_end":10309013,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309014,"byte_end":10309017,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309018,"byte_end":10309106,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309107,"byte_end":10309110,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309111,"byte_end":10309123,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309124,"byte_end":10309127,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309128,"byte_end":10309186,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309187,"byte_end":10309190,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309191,"byte_end":10309252,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309253,"byte_end":10309344,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309345,"byte_end":10309381,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309382,"byte_end":10309385,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309386,"byte_end":10309400,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309401,"byte_end":10309404,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309405,"byte_end":10309418,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309419,"byte_end":10309493,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309494,"byte_end":10309499,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309500,"byte_end":10309522,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309523,"byte_end":10309526,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309527,"byte_end":10309577,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309578,"byte_end":10309583,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309584,"byte_end":10309601,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\create_dir_all.rs","byte_start":10309602,"byte_end":10309609,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310457,"byte_end":10310467,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":3646}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310038,"byte_end":10310103,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310104,"byte_end":10310107,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310108,"byte_end":10310188,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310189,"byte_end":10310192,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310193,"byte_end":10310254,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310255,"byte_end":10310258,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310259,"byte_end":10310334,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310335,"byte_end":10310419,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310995,"byte_end":10310998,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310682,"byte_end":10310717,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310722,"byte_end":10310725,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310730,"byte_end":10310787,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310792,"byte_end":10310795,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310800,"byte_end":10310836,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310841,"byte_end":10310844,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310849,"byte_end":10310863,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310868,"byte_end":10310871,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310876,"byte_end":10310883,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310888,"byte_end":10310922,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310927,"byte_end":10310930,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310935,"byte_end":10310971,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310976,"byte_end":10310983,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311746,"byte_end":10311755,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311248,"byte_end":10311287,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311292,"byte_end":10311295,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311300,"byte_end":10311394,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311399,"byte_end":10311493,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311498,"byte_end":10311501,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311506,"byte_end":10311550,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311555,"byte_end":10311558,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311563,"byte_end":10311577,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311582,"byte_end":10311585,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311590,"byte_end":10311597,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311602,"byte_end":10311636,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311641,"byte_end":10311644,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311649,"byte_end":10311689,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311694,"byte_end":10311722,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311727,"byte_end":10311734,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312687,"byte_end":10312693,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311859,"byte_end":10311911,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311916,"byte_end":10311919,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10311924,"byte_end":10312019,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312024,"byte_end":10312027,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312032,"byte_end":10312044,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312049,"byte_end":10312052,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312057,"byte_end":10312115,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312120,"byte_end":10312123,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312128,"byte_end":10312189,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312194,"byte_end":10312285,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312290,"byte_end":10312326,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312331,"byte_end":10312334,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312339,"byte_end":10312353,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312358,"byte_end":10312361,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312366,"byte_end":10312379,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312384,"byte_end":10312458,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312463,"byte_end":10312468,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312473,"byte_end":10312507,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312512,"byte_end":10312515,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312520,"byte_end":10312541,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312546,"byte_end":10312570,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312575,"byte_end":10312610,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312615,"byte_end":10312631,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312636,"byte_end":10312641,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312646,"byte_end":10312663,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10312668,"byte_end":10312675,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313982,"byte_end":10313990,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313686,"byte_end":10313714,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313715,"byte_end":10313718,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313719,"byte_end":10313786,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313787,"byte_end":10313790,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313791,"byte_end":10313850,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313851,"byte_end":10313854,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313855,"byte_end":10313889,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10313890,"byte_end":10313970,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314881,"byte_end":10314885,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314207,"byte_end":10314247,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314252,"byte_end":10314255,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314260,"byte_end":10314354,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314359,"byte_end":10314377,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314382,"byte_end":10314385,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314390,"byte_end":10314424,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314429,"byte_end":10314432,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314437,"byte_end":10314451,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314456,"byte_end":10314459,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314464,"byte_end":10314477,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314482,"byte_end":10314556,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314561,"byte_end":10314566,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314571,"byte_end":10314593,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314598,"byte_end":10314628,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314633,"byte_end":10314636,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314641,"byte_end":10314684,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314689,"byte_end":10314692,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314697,"byte_end":10314741,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314746,"byte_end":10314771,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314776,"byte_end":10314815,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314820,"byte_end":10314825,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314830,"byte_end":10314835,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314840,"byte_end":10314857,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314862,"byte_end":10314869,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316016,"byte_end":10316024,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314946,"byte_end":10314984,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314989,"byte_end":10314992,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314997,"byte_end":10315065,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315070,"byte_end":10315073,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315078,"byte_end":10315169,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315174,"byte_end":10315186,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315191,"byte_end":10315194,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315199,"byte_end":10315249,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315254,"byte_end":10315257,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315262,"byte_end":10315274,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315279,"byte_end":10315282,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315287,"byte_end":10315345,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315350,"byte_end":10315353,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315358,"byte_end":10315431,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315436,"byte_end":10315501,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315506,"byte_end":10315542,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315547,"byte_end":10315550,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315555,"byte_end":10315569,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315574,"byte_end":10315577,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315582,"byte_end":10315595,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315600,"byte_end":10315674,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315679,"byte_end":10315684,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315689,"byte_end":10315711,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315716,"byte_end":10315746,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315751,"byte_end":10315754,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315759,"byte_end":10315802,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315807,"byte_end":10315810,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315815,"byte_end":10315859,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315864,"byte_end":10315889,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315894,"byte_end":10315944,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315949,"byte_end":10315954,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315959,"byte_end":10315964,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315969,"byte_end":10315986,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10315991,"byte_end":10315998,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317217,"byte_end":10317226,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316160,"byte_end":10316199,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316204,"byte_end":10316207,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316212,"byte_end":10316291,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316296,"byte_end":10316299,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316304,"byte_end":10316393,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316398,"byte_end":10316401,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316406,"byte_end":10316440,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316445,"byte_end":10316448,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316453,"byte_end":10316465,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316470,"byte_end":10316473,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316478,"byte_end":10316536,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316541,"byte_end":10316544,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316549,"byte_end":10316622,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316627,"byte_end":10316701,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316706,"byte_end":10316742,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316747,"byte_end":10316750,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316755,"byte_end":10316769,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316774,"byte_end":10316777,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316782,"byte_end":10316795,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316800,"byte_end":10316874,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316879,"byte_end":10316884,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316889,"byte_end":10316911,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316916,"byte_end":10316946,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316951,"byte_end":10316954,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10316959,"byte_end":10317002,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317007,"byte_end":10317010,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317015,"byte_end":10317059,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317064,"byte_end":10317089,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317094,"byte_end":10317145,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317150,"byte_end":10317155,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317160,"byte_end":10317165,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317170,"byte_end":10317187,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317192,"byte_end":10317199,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317906,"byte_end":10317915,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317363,"byte_end":10317428,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317433,"byte_end":10317436,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317441,"byte_end":10317455,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317460,"byte_end":10317463,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317468,"byte_end":10317481,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317486,"byte_end":10317560,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317565,"byte_end":10317570,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317575,"byte_end":10317597,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317602,"byte_end":10317632,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317637,"byte_end":10317640,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317645,"byte_end":10317688,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317693,"byte_end":10317696,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317701,"byte_end":10317745,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317750,"byte_end":10317775,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317780,"byte_end":10317840,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317845,"byte_end":10317850,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317855,"byte_end":10317860,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317865,"byte_end":10317882,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317887,"byte_end":10317894,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320333,"byte_end":10320337,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319058,"byte_end":10319093,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319094,"byte_end":10319097,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319098,"byte_end":10319194,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319195,"byte_end":10319207,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319208,"byte_end":10319211,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319212,"byte_end":10319307,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319308,"byte_end":10319406,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319407,"byte_end":10319410,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319411,"byte_end":10319466,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319467,"byte_end":10319470,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319471,"byte_end":10319505,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319506,"byte_end":10319578,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319579,"byte_end":10319582,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319583,"byte_end":10319597,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319598,"byte_end":10319601,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319602,"byte_end":10319651,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319652,"byte_end":10319655,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319656,"byte_end":10319669,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319670,"byte_end":10319744,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319745,"byte_end":10319750,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319751,"byte_end":10319779,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319780,"byte_end":10319810,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319811,"byte_end":10319814,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319815,"byte_end":10319863,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319864,"byte_end":10319908,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319909,"byte_end":10319914,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319915,"byte_end":10319932,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319933,"byte_end":10319940,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319941,"byte_end":10319944,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10319945,"byte_end":10320000,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320001,"byte_end":10320004,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320005,"byte_end":10320018,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320019,"byte_end":10320093,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320094,"byte_end":10320099,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320100,"byte_end":10320128,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320129,"byte_end":10320159,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320160,"byte_end":10320163,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320164,"byte_end":10320210,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320211,"byte_end":10320245,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320246,"byte_end":10320289,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320290,"byte_end":10320295,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320296,"byte_end":10320313,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320314,"byte_end":10320321,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321798,"byte_end":10321802,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320965,"byte_end":10321000,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321005,"byte_end":10321008,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321013,"byte_end":10321073,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321078,"byte_end":10321081,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321086,"byte_end":10321098,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321103,"byte_end":10321106,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321111,"byte_end":10321169,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321174,"byte_end":10321177,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321182,"byte_end":10321230,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321235,"byte_end":10321296,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321301,"byte_end":10321337,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321342,"byte_end":10321345,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321350,"byte_end":10321431,"line_start":99,"line_end":99,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321436,"byte_end":10321439,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321444,"byte_end":10321506,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321511,"byte_end":10321514,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321519,"byte_end":10321533,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321538,"byte_end":10321541,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321546,"byte_end":10321559,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321564,"byte_end":10321638,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321643,"byte_end":10321648,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321653,"byte_end":10321681,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321686,"byte_end":10321689,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321694,"byte_end":10321736,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321741,"byte_end":10321746,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321751,"byte_end":10321768,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10321773,"byte_end":10321780,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323055,"byte_end":10323061,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322110,"byte_end":10322146,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322151,"byte_end":10322154,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322159,"byte_end":10322250,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322255,"byte_end":10322258,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322263,"byte_end":10322323,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322328,"byte_end":10322331,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322336,"byte_end":10322348,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322353,"byte_end":10322356,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322361,"byte_end":10322419,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322424,"byte_end":10322427,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322432,"byte_end":10322481,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322486,"byte_end":10322551,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322556,"byte_end":10322592,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322597,"byte_end":10322600,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322605,"byte_end":10322686,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322691,"byte_end":10322694,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322699,"byte_end":10322761,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322766,"byte_end":10322769,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322774,"byte_end":10322788,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322793,"byte_end":10322796,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322801,"byte_end":10322814,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322819,"byte_end":10322893,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322898,"byte_end":10322903,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322908,"byte_end":10322936,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322941,"byte_end":10322944,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322949,"byte_end":10322993,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10322998,"byte_end":10323003,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323008,"byte_end":10323025,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323030,"byte_end":10323037,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324162,"byte_end":10324170,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323390,"byte_end":10323458,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323463,"byte_end":10323466,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323471,"byte_end":10323548,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323553,"byte_end":10323556,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323561,"byte_end":10323651,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323656,"byte_end":10323748,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323753,"byte_end":10323756,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323761,"byte_end":10323775,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323780,"byte_end":10323783,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323788,"byte_end":10323801,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323806,"byte_end":10323880,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323885,"byte_end":10323890,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323895,"byte_end":10323923,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323928,"byte_end":10323958,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323963,"byte_end":10323966,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10323971,"byte_end":10324019,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324024,"byte_end":10324068,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324073,"byte_end":10324100,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324105,"byte_end":10324110,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324115,"byte_end":10324132,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324137,"byte_end":10324144,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325375,"byte_end":10325384,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324507,"byte_end":10324562,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324567,"byte_end":10324570,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324575,"byte_end":10324662,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324667,"byte_end":10324670,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324675,"byte_end":10324767,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324772,"byte_end":10324820,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324825,"byte_end":10324828,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324833,"byte_end":10324913,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324918,"byte_end":10324921,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324926,"byte_end":10324960,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324965,"byte_end":10324968,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324973,"byte_end":10324987,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10324992,"byte_end":10324995,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325000,"byte_end":10325013,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325018,"byte_end":10325092,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325097,"byte_end":10325102,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325107,"byte_end":10325135,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325140,"byte_end":10325170,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325175,"byte_end":10325178,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325183,"byte_end":10325231,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325236,"byte_end":10325280,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325285,"byte_end":10325313,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325318,"byte_end":10325323,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325328,"byte_end":10325345,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325350,"byte_end":10325357,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326481,"byte_end":10326488,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325723,"byte_end":10325757,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325762,"byte_end":10325765,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325770,"byte_end":10325861,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325866,"byte_end":10325959,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10325964,"byte_end":10326004,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326009,"byte_end":10326012,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326017,"byte_end":10326112,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326117,"byte_end":10326154,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326159,"byte_end":10326162,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326167,"byte_end":10326181,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326186,"byte_end":10326189,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326194,"byte_end":10326207,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326212,"byte_end":10326286,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326291,"byte_end":10326296,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326301,"byte_end":10326329,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326334,"byte_end":10326337,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326342,"byte_end":10326386,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326391,"byte_end":10326419,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326424,"byte_end":10326429,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326434,"byte_end":10326451,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326456,"byte_end":10326463,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327307,"byte_end":10327315,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326938,"byte_end":10326968,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326973,"byte_end":10326976,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10326981,"byte_end":10326995,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327000,"byte_end":10327003,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327008,"byte_end":10327021,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327026,"byte_end":10327100,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327105,"byte_end":10327110,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327115,"byte_end":10327143,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327148,"byte_end":10327151,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327156,"byte_end":10327198,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327203,"byte_end":10327245,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327250,"byte_end":10327255,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327260,"byte_end":10327277,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327282,"byte_end":10327289,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328161,"byte_end":10328176,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327452,"byte_end":10327492,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327497,"byte_end":10327500,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327505,"byte_end":10327517,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327522,"byte_end":10327525,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327530,"byte_end":10327588,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327593,"byte_end":10327596,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327601,"byte_end":10327678,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327683,"byte_end":10327719,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327724,"byte_end":10327727,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327732,"byte_end":10327746,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327751,"byte_end":10327754,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327759,"byte_end":10327772,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327777,"byte_end":10327851,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327856,"byte_end":10327861,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327866,"byte_end":10327894,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327899,"byte_end":10327902,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327907,"byte_end":10327951,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327956,"byte_end":10327959,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10327964,"byte_end":10328021,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328026,"byte_end":10328055,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328060,"byte_end":10328099,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328104,"byte_end":10328109,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328114,"byte_end":10328131,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328136,"byte_end":10328143,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351673,"byte_end":10351682,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10350909,"byte_end":10350951,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10350952,"byte_end":10350955,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10350956,"byte_end":10351051,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351052,"byte_end":10351117,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351118,"byte_end":10351121,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351122,"byte_end":10351186,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351187,"byte_end":10351190,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351191,"byte_end":10351269,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351270,"byte_end":10351273,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351274,"byte_end":10351286,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351287,"byte_end":10351290,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351291,"byte_end":10351349,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351350,"byte_end":10351353,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351354,"byte_end":10351401,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351402,"byte_end":10351438,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351439,"byte_end":10351442,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351443,"byte_end":10351457,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351458,"byte_end":10351461,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351462,"byte_end":10351475,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351476,"byte_end":10351550,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351551,"byte_end":10351556,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351557,"byte_end":10351579,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351580,"byte_end":10351583,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351584,"byte_end":10351627,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351628,"byte_end":10351633,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351634,"byte_end":10351651,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\hard_link.rs","byte_start":10351652,"byte_end":10351659,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353167,"byte_end":10353175,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352222,"byte_end":10352252,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352253,"byte_end":10352256,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352257,"byte_end":10352354,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352355,"byte_end":10352446,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352447,"byte_end":10352459,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352460,"byte_end":10352463,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352464,"byte_end":10352527,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352528,"byte_end":10352531,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352532,"byte_end":10352582,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352583,"byte_end":10352659,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352660,"byte_end":10352663,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352664,"byte_end":10352676,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352677,"byte_end":10352680,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352681,"byte_end":10352739,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352740,"byte_end":10352743,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352744,"byte_end":10352805,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352806,"byte_end":10352880,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352881,"byte_end":10352917,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352918,"byte_end":10352921,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352922,"byte_end":10352936,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352937,"byte_end":10352940,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352941,"byte_end":10352954,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10352955,"byte_end":10353029,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353030,"byte_end":10353035,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353036,"byte_end":10353058,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353059,"byte_end":10353062,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353063,"byte_end":10353121,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353122,"byte_end":10353127,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353128,"byte_end":10353145,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\metadata.rs","byte_start":10353146,"byte_end":10353153,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361030,"byte_end":10361041,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359485,"byte_end":10359543,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359544,"byte_end":10359547,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359548,"byte_end":10359606,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359607,"byte_end":10359610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359611,"byte_end":10359708,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359709,"byte_end":10359754,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359755,"byte_end":10359758,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359759,"byte_end":10359855,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359856,"byte_end":10359930,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359931,"byte_end":10359934,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359935,"byte_end":10359997,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10359998,"byte_end":10360001,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360002,"byte_end":10360028,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360029,"byte_end":10360057,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360058,"byte_end":10360088,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360089,"byte_end":10360123,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360124,"byte_end":10360154,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360155,"byte_end":10360193,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360194,"byte_end":10360280,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360281,"byte_end":10360284,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360285,"byte_end":10360299,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360300,"byte_end":10360303,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360304,"byte_end":10360332,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360333,"byte_end":10360336,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360337,"byte_end":10360350,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360351,"byte_end":10360425,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360426,"byte_end":10360431,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360432,"byte_end":10360467,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360468,"byte_end":10360471,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360472,"byte_end":10360505,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360506,"byte_end":10360525,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360526,"byte_end":10360548,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360549,"byte_end":10360565,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360566,"byte_end":10360571,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360572,"byte_end":10360589,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360590,"byte_end":10360597,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360598,"byte_end":10360601,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360602,"byte_end":10360686,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360687,"byte_end":10360690,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360691,"byte_end":10360704,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360705,"byte_end":10360779,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360780,"byte_end":10360785,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360786,"byte_end":10360821,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360822,"byte_end":10360825,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360826,"byte_end":10360859,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360860,"byte_end":10360879,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360880,"byte_end":10360900,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360901,"byte_end":10360922,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360923,"byte_end":10360945,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360946,"byte_end":10360962,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360963,"byte_end":10360968,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360969,"byte_end":10360986,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10360987,"byte_end":10360994,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361538,"byte_end":10361541,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361089,"byte_end":10361124,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361129,"byte_end":10361132,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361137,"byte_end":10361182,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361187,"byte_end":10361190,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361195,"byte_end":10361209,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361214,"byte_end":10361217,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361222,"byte_end":10361235,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361240,"byte_end":10361314,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361319,"byte_end":10361324,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361329,"byte_end":10361364,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361369,"byte_end":10361372,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361377,"byte_end":10361410,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361415,"byte_end":10361434,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361439,"byte_end":10361461,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361466,"byte_end":10361482,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361487,"byte_end":10361492,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361497,"byte_end":10361514,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361519,"byte_end":10361526,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362112,"byte_end":10362116,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361621,"byte_end":10361661,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361666,"byte_end":10361669,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361674,"byte_end":10361756,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361761,"byte_end":10361764,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361769,"byte_end":10361783,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361788,"byte_end":10361791,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361796,"byte_end":10361809,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361814,"byte_end":10361888,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361893,"byte_end":10361898,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361903,"byte_end":10361938,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361943,"byte_end":10361946,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361951,"byte_end":10361984,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361989,"byte_end":10362008,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362013,"byte_end":10362035,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362040,"byte_end":10362056,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362061,"byte_end":10362066,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362071,"byte_end":10362088,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362093,"byte_end":10362100,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362836,"byte_end":10362841,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362213,"byte_end":10362254,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362259,"byte_end":10362262,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362267,"byte_end":10362349,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362354,"byte_end":10362357,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362362,"byte_end":10362456,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362461,"byte_end":10362479,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362484,"byte_end":10362487,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362492,"byte_end":10362506,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362511,"byte_end":10362514,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362519,"byte_end":10362532,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362537,"byte_end":10362611,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362616,"byte_end":10362621,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362626,"byte_end":10362661,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362666,"byte_end":10362669,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362674,"byte_end":10362707,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362712,"byte_end":10362732,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362737,"byte_end":10362759,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362764,"byte_end":10362780,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362785,"byte_end":10362790,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362795,"byte_end":10362812,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362817,"byte_end":10362824,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363526,"byte_end":10363532,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362941,"byte_end":10362983,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362988,"byte_end":10362991,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10362996,"byte_end":10363090,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363095,"byte_end":10363168,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363173,"byte_end":10363176,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363181,"byte_end":10363195,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363200,"byte_end":10363203,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363208,"byte_end":10363221,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363226,"byte_end":10363300,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363305,"byte_end":10363310,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363315,"byte_end":10363350,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363355,"byte_end":10363358,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363363,"byte_end":10363396,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363401,"byte_end":10363422,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363427,"byte_end":10363449,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363454,"byte_end":10363470,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363475,"byte_end":10363480,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363485,"byte_end":10363502,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363507,"byte_end":10363514,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364340,"byte_end":10364348,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363635,"byte_end":10363694,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363699,"byte_end":10363702,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363707,"byte_end":10363783,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363788,"byte_end":10363791,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363796,"byte_end":10363879,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363884,"byte_end":10363887,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363892,"byte_end":10363920,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363925,"byte_end":10363955,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363960,"byte_end":10363963,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363968,"byte_end":10363982,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363987,"byte_end":10363990,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10363995,"byte_end":10364008,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364013,"byte_end":10364087,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364092,"byte_end":10364097,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364102,"byte_end":10364137,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364142,"byte_end":10364145,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364150,"byte_end":10364183,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364188,"byte_end":10364208,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364213,"byte_end":10364236,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364241,"byte_end":10364263,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364268,"byte_end":10364284,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364289,"byte_end":10364294,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364299,"byte_end":10364316,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364321,"byte_end":10364328,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365187,"byte_end":10365193,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364457,"byte_end":10364527,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364532,"byte_end":10364535,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364540,"byte_end":10364629,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364634,"byte_end":10364637,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364642,"byte_end":10364728,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364733,"byte_end":10364736,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364741,"byte_end":10364769,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364774,"byte_end":10364804,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364809,"byte_end":10364812,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364817,"byte_end":10364831,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364836,"byte_end":10364839,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364844,"byte_end":10364857,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364862,"byte_end":10364936,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364941,"byte_end":10364946,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364951,"byte_end":10364986,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364991,"byte_end":10364994,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10364999,"byte_end":10365032,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365037,"byte_end":10365057,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365062,"byte_end":10365083,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365088,"byte_end":10365110,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365115,"byte_end":10365131,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365136,"byte_end":10365141,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365146,"byte_end":10365163,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365168,"byte_end":10365175,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366090,"byte_end":10366100,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365296,"byte_end":10365378,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365383,"byte_end":10365386,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365391,"byte_end":10365482,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365487,"byte_end":10365528,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365533,"byte_end":10365536,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365541,"byte_end":10365627,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365632,"byte_end":10365635,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365640,"byte_end":10365668,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365673,"byte_end":10365703,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365708,"byte_end":10365711,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365716,"byte_end":10365730,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365735,"byte_end":10365738,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365743,"byte_end":10365756,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365761,"byte_end":10365835,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365840,"byte_end":10365845,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365850,"byte_end":10365885,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365890,"byte_end":10365893,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365898,"byte_end":10365931,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365936,"byte_end":10365956,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365961,"byte_end":10365986,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10365991,"byte_end":10366013,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366018,"byte_end":10366034,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366039,"byte_end":10366044,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366049,"byte_end":10366066,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366071,"byte_end":10366078,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367538,"byte_end":10367542,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366215,"byte_end":10366260,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366265,"byte_end":10366268,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366273,"byte_end":10366285,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366290,"byte_end":10366293,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366298,"byte_end":10366356,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366361,"byte_end":10366364,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366369,"byte_end":10366450,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366455,"byte_end":10366504,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366509,"byte_end":10366593,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366598,"byte_end":10366655,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366660,"byte_end":10366754,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366759,"byte_end":10366826,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366831,"byte_end":10366917,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366922,"byte_end":10366958,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366963,"byte_end":10366966,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10366971,"byte_end":10366997,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367002,"byte_end":10367030,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367035,"byte_end":10367065,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367070,"byte_end":10367104,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367109,"byte_end":10367139,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367144,"byte_end":10367182,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367187,"byte_end":10367190,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367195,"byte_end":10367209,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367214,"byte_end":10367217,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367222,"byte_end":10367235,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367240,"byte_end":10367314,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367319,"byte_end":10367324,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367329,"byte_end":10367364,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367369,"byte_end":10367372,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367377,"byte_end":10367410,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367415,"byte_end":10367434,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367439,"byte_end":10367461,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367466,"byte_end":10367482,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367487,"byte_end":10367492,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367497,"byte_end":10367514,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367519,"byte_end":10367526,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371416,"byte_end":10371420,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370411,"byte_end":10370464,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370465,"byte_end":10370468,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370469,"byte_end":10370568,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370569,"byte_end":10370665,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370666,"byte_end":10370678,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370679,"byte_end":10370682,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370683,"byte_end":10370764,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370765,"byte_end":10370768,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370769,"byte_end":10370828,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370829,"byte_end":10370832,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370833,"byte_end":10370879,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370880,"byte_end":10370948,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370949,"byte_end":10370952,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370953,"byte_end":10370965,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370966,"byte_end":10370969,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10370970,"byte_end":10371028,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371029,"byte_end":10371032,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371033,"byte_end":10371081,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371082,"byte_end":10371143,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371144,"byte_end":10371180,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371181,"byte_end":10371184,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371185,"byte_end":10371199,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371200,"byte_end":10371203,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371204,"byte_end":10371217,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371218,"byte_end":10371292,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371293,"byte_end":10371298,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371299,"byte_end":10371321,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371322,"byte_end":10371325,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371326,"byte_end":10371370,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371371,"byte_end":10371376,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371377,"byte_end":10371394,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read.rs","byte_start":10371395,"byte_end":10371402,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373021,"byte_end":10373029,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10371929,"byte_end":10371976,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10371977,"byte_end":10371980,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10371981,"byte_end":10372075,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372076,"byte_end":10372116,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372117,"byte_end":10372120,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372121,"byte_end":10372184,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372185,"byte_end":10372188,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372189,"byte_end":10372231,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372232,"byte_end":10372270,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372271,"byte_end":10372347,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372348,"byte_end":10372351,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372352,"byte_end":10372364,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372365,"byte_end":10372368,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372369,"byte_end":10372427,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372428,"byte_end":10372431,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372432,"byte_end":10372485,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372486,"byte_end":10372568,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372569,"byte_end":10372605,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372606,"byte_end":10372609,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372610,"byte_end":10372624,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372625,"byte_end":10372628,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372629,"byte_end":10372642,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372643,"byte_end":10372717,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372718,"byte_end":10372723,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372724,"byte_end":10372746,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372747,"byte_end":10372777,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372778,"byte_end":10372781,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372782,"byte_end":10372829,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372830,"byte_end":10372833,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372834,"byte_end":10372882,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372883,"byte_end":10372908,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372909,"byte_end":10372969,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372970,"byte_end":10372975,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372976,"byte_end":10372981,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10372982,"byte_end":10372999,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373000,"byte_end":10373007,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3672},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373834,"byte_end":10373841,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373309,"byte_end":10373348,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373349,"byte_end":10373352,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373353,"byte_end":10373421,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373422,"byte_end":10373520,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373521,"byte_end":10373542,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373543,"byte_end":10373546,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373547,"byte_end":10373605,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373606,"byte_end":10373609,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373610,"byte_end":10373644,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373645,"byte_end":10373687,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373688,"byte_end":10373726,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10373727,"byte_end":10373805,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376126,"byte_end":10376135,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375507,"byte_end":10375567,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375568,"byte_end":10375571,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375572,"byte_end":10375636,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375637,"byte_end":10375640,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375641,"byte_end":10375719,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375720,"byte_end":10375723,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375724,"byte_end":10375736,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375737,"byte_end":10375740,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375741,"byte_end":10375799,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375800,"byte_end":10375803,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375804,"byte_end":10375852,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375853,"byte_end":10375889,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375890,"byte_end":10375893,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375894,"byte_end":10375908,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375909,"byte_end":10375912,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375913,"byte_end":10375926,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10375927,"byte_end":10376001,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376002,"byte_end":10376007,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376008,"byte_end":10376030,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376031,"byte_end":10376034,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376035,"byte_end":10376080,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376081,"byte_end":10376086,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376087,"byte_end":10376104,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_link.rs","byte_start":10376105,"byte_end":10376112,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377639,"byte_end":10377653,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376559,"byte_end":10376611,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376612,"byte_end":10376615,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376616,"byte_end":10376715,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376716,"byte_end":10376812,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376813,"byte_end":10376825,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376826,"byte_end":10376829,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376830,"byte_end":10376902,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376903,"byte_end":10376906,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376907,"byte_end":10376976,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376977,"byte_end":10376980,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10376981,"byte_end":10377007,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377008,"byte_end":10377096,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377097,"byte_end":10377100,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377101,"byte_end":10377113,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377114,"byte_end":10377117,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377118,"byte_end":10377176,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377177,"byte_end":10377180,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377181,"byte_end":10377229,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377230,"byte_end":10377291,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377292,"byte_end":10377356,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377357,"byte_end":10377393,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377394,"byte_end":10377397,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377398,"byte_end":10377412,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377413,"byte_end":10377416,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377417,"byte_end":10377430,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377431,"byte_end":10377505,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377506,"byte_end":10377511,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377512,"byte_end":10377534,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377535,"byte_end":10377538,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377539,"byte_end":10377593,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377594,"byte_end":10377599,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377600,"byte_end":10377617,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_to_string.rs","byte_start":10377618,"byte_end":10377625,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378727,"byte_end":10378737,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378060,"byte_end":10378091,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378092,"byte_end":10378095,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378096,"byte_end":10378161,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378162,"byte_end":10378165,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378166,"byte_end":10378246,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378247,"byte_end":10378250,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378251,"byte_end":10378263,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378264,"byte_end":10378267,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378268,"byte_end":10378326,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378327,"byte_end":10378330,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378331,"byte_end":10378383,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378384,"byte_end":10378452,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378453,"byte_end":10378489,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378490,"byte_end":10378493,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378494,"byte_end":10378508,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378509,"byte_end":10378512,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378513,"byte_end":10378526,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378527,"byte_end":10378601,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378602,"byte_end":10378607,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378608,"byte_end":10378630,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378631,"byte_end":10378634,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378635,"byte_end":10378681,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378682,"byte_end":10378687,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378688,"byte_end":10378705,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir.rs","byte_start":10378706,"byte_end":10378713,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379835,"byte_end":10379849,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379135,"byte_end":10379183,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379184,"byte_end":10379187,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379188,"byte_end":10379257,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379258,"byte_end":10379261,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379262,"byte_end":10379350,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379351,"byte_end":10379354,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379355,"byte_end":10379367,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379368,"byte_end":10379371,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379372,"byte_end":10379430,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379431,"byte_end":10379434,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379435,"byte_end":10379487,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379488,"byte_end":10379556,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379557,"byte_end":10379593,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379594,"byte_end":10379597,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379598,"byte_end":10379612,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379613,"byte_end":10379616,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379617,"byte_end":10379630,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379631,"byte_end":10379705,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379706,"byte_end":10379711,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379712,"byte_end":10379734,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379735,"byte_end":10379738,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379739,"byte_end":10379789,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379790,"byte_end":10379795,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379796,"byte_end":10379813,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_dir_all.rs","byte_start":10379814,"byte_end":10379821,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380890,"byte_end":10380901,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380251,"byte_end":10380270,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380271,"byte_end":10380274,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380275,"byte_end":10380341,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380342,"byte_end":10380345,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380346,"byte_end":10380428,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380429,"byte_end":10380432,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380433,"byte_end":10380445,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380446,"byte_end":10380449,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380450,"byte_end":10380508,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380509,"byte_end":10380512,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380513,"byte_end":10380561,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380562,"byte_end":10380625,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380626,"byte_end":10380662,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380663,"byte_end":10380666,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380667,"byte_end":10380681,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380682,"byte_end":10380685,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380686,"byte_end":10380699,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380700,"byte_end":10380774,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380775,"byte_end":10380780,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380781,"byte_end":10380803,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380804,"byte_end":10380807,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380808,"byte_end":10380844,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380845,"byte_end":10380850,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380851,"byte_end":10380868,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\remove_file.rs","byte_start":10380869,"byte_end":10380876,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382143,"byte_end":10382149,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381295,"byte_end":10381345,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381346,"byte_end":10381349,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381350,"byte_end":10381446,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381447,"byte_end":10381461,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381462,"byte_end":10381465,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381466,"byte_end":10381527,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381528,"byte_end":10381531,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381532,"byte_end":10381604,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381605,"byte_end":10381608,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381609,"byte_end":10381621,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381622,"byte_end":10381625,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381626,"byte_end":10381684,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381685,"byte_end":10381688,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381689,"byte_end":10381750,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381751,"byte_end":10381802,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381803,"byte_end":10381874,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381875,"byte_end":10381911,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381912,"byte_end":10381915,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381916,"byte_end":10381930,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381931,"byte_end":10381934,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381935,"byte_end":10381948,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10381949,"byte_end":10382023,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382024,"byte_end":10382029,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382030,"byte_end":10382052,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382053,"byte_end":10382056,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382057,"byte_end":10382097,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382098,"byte_end":10382103,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382104,"byte_end":10382121,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\rename.rs","byte_start":10382122,"byte_end":10382129,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383524,"byte_end":10383539,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382699,"byte_end":10382750,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382751,"byte_end":10382754,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382755,"byte_end":10382825,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382826,"byte_end":10382829,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382830,"byte_end":10382920,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382921,"byte_end":10382924,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382925,"byte_end":10382937,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382938,"byte_end":10382941,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10382942,"byte_end":10383000,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383001,"byte_end":10383004,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383005,"byte_end":10383066,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383067,"byte_end":10383157,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383158,"byte_end":10383194,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383195,"byte_end":10383198,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383199,"byte_end":10383213,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383214,"byte_end":10383217,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383218,"byte_end":10383231,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383232,"byte_end":10383306,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383307,"byte_end":10383312,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383313,"byte_end":10383335,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383336,"byte_end":10383339,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383340,"byte_end":10383402,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383403,"byte_end":10383431,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383432,"byte_end":10383478,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383479,"byte_end":10383484,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383485,"byte_end":10383502,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\set_permissions.rs","byte_start":10383503,"byte_end":10383510,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384771,"byte_end":10384787,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10383852,"byte_end":10383915,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10383916,"byte_end":10383919,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10383920,"byte_end":10384017,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384018,"byte_end":10384047,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384048,"byte_end":10384051,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384052,"byte_end":10384123,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384124,"byte_end":10384127,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384128,"byte_end":10384162,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384163,"byte_end":10384255,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384256,"byte_end":10384259,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384260,"byte_end":10384272,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384273,"byte_end":10384276,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384277,"byte_end":10384335,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384336,"byte_end":10384339,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384340,"byte_end":10384401,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384402,"byte_end":10384476,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384477,"byte_end":10384513,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384514,"byte_end":10384517,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384518,"byte_end":10384532,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384533,"byte_end":10384536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384537,"byte_end":10384550,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384551,"byte_end":10384625,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384626,"byte_end":10384631,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384632,"byte_end":10384654,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384655,"byte_end":10384658,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384659,"byte_end":10384725,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384726,"byte_end":10384731,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384732,"byte_end":10384749,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\symlink_metadata.rs","byte_start":10384750,"byte_end":10384757,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385883,"byte_end":10385888,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385091,"byte_end":10385149,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385150,"byte_end":10385153,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385154,"byte_end":10385251,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385252,"byte_end":10385267,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385268,"byte_end":10385271,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385272,"byte_end":10385332,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385333,"byte_end":10385336,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385337,"byte_end":10385407,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385408,"byte_end":10385411,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385412,"byte_end":10385424,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385425,"byte_end":10385428,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385429,"byte_end":10385487,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385488,"byte_end":10385491,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385492,"byte_end":10385541,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385542,"byte_end":10385607,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385608,"byte_end":10385644,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385645,"byte_end":10385648,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385649,"byte_end":10385663,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385664,"byte_end":10385667,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385668,"byte_end":10385681,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385682,"byte_end":10385756,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385757,"byte_end":10385762,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385763,"byte_end":10385785,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385786,"byte_end":10385789,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385790,"byte_end":10385837,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385838,"byte_end":10385843,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385844,"byte_end":10385861,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\write.rs","byte_start":10385862,"byte_end":10385869,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3107},{"krate":0,"index":3130},{"krate":0,"index":3161},{"krate":0,"index":3291},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":17201,"byte_end":17228,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386266,"byte_end":10386303,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386304,"byte_end":10386307,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386308,"byte_end":10386361,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386362,"byte_end":10386365,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386366,"byte_end":10386454,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386455,"byte_end":10386537,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386538,"byte_end":10386621,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386622,"byte_end":10386683,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386684,"byte_end":10386687,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386688,"byte_end":10386763,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386764,"byte_end":10386841,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386842,"byte_end":10386920,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10386921,"byte_end":10386999,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387000,"byte_end":10387068,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387069,"byte_end":10387148,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387149,"byte_end":10387152,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387153,"byte_end":10387217,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387218,"byte_end":10387221,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387222,"byte_end":10387241,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387242,"byte_end":10387245,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387246,"byte_end":10387325,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387326,"byte_end":10387346,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387347,"byte_end":10387350,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387351,"byte_end":10387418,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387419,"byte_end":10387456,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387457,"byte_end":10387460,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387461,"byte_end":10387468,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387469,"byte_end":10387499,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387500,"byte_end":10387524,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387525,"byte_end":10387528,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387529,"byte_end":10387574,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387575,"byte_end":10387578,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387579,"byte_end":10387610,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387611,"byte_end":10387663,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387664,"byte_end":10387667,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387668,"byte_end":10387705,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387706,"byte_end":10387757,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387758,"byte_end":10387761,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387762,"byte_end":10387799,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387800,"byte_end":10387851,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387852,"byte_end":10387859,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387860,"byte_end":10387863,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387864,"byte_end":10387910,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387911,"byte_end":10387914,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387915,"byte_end":10387922,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387923,"byte_end":10387956,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387957,"byte_end":10387960,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387961,"byte_end":10387985,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10387986,"byte_end":10388027,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388028,"byte_end":10388031,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388032,"byte_end":10388057,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388058,"byte_end":10388084,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388085,"byte_end":10388088,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388089,"byte_end":10388119,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388120,"byte_end":10388123,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388124,"byte_end":10388188,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388189,"byte_end":10388233,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388234,"byte_end":10388311,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388312,"byte_end":10388319,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388320,"byte_end":10388323,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388324,"byte_end":10388362,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388363,"byte_end":10388417,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388418,"byte_end":10388454,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388455,"byte_end":10388485,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388486,"byte_end":10388531,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388532,"byte_end":10388603,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388604,"byte_end":10388607,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388608,"byte_end":10388669,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388670,"byte_end":10388742,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\mod.rs","byte_start":10388743,"byte_end":10388809,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389777,"byte_end":10389786,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":3688}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389284,"byte_end":10389332,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389333,"byte_end":10389336,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389337,"byte_end":10389406,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389407,"byte_end":10389442,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389443,"byte_end":10389446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389447,"byte_end":10389461,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389462,"byte_end":10389465,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389466,"byte_end":10389473,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389474,"byte_end":10389504,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389505,"byte_end":10389508,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389509,"byte_end":10389546,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389547,"byte_end":10389550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389551,"byte_end":10389589,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389590,"byte_end":10389633,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389634,"byte_end":10389639,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389640,"byte_end":10389647,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389648,"byte_end":10389651,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389652,"byte_end":10389704,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389705,"byte_end":10389735,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390787,"byte_end":10390797,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":3699}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390217,"byte_end":10390271,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390272,"byte_end":10390275,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390276,"byte_end":10390346,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390347,"byte_end":10390382,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390383,"byte_end":10390386,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390387,"byte_end":10390401,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390402,"byte_end":10390405,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390406,"byte_end":10390413,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390414,"byte_end":10390444,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390445,"byte_end":10390448,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390449,"byte_end":10390494,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390495,"byte_end":10390498,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390499,"byte_end":10390539,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390540,"byte_end":10390576,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390577,"byte_end":10390582,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390583,"byte_end":10390590,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390591,"byte_end":10390594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390595,"byte_end":10390633,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390634,"byte_end":10390688,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390689,"byte_end":10390719,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391289,"byte_end":10391296,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390886,"byte_end":10390972,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390977,"byte_end":10390980,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390985,"byte_end":10390999,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391004,"byte_end":10391007,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391012,"byte_end":10391019,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391024,"byte_end":10391054,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391059,"byte_end":10391062,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391067,"byte_end":10391135,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391140,"byte_end":10391162,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391167,"byte_end":10391189,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391194,"byte_end":10391197,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391202,"byte_end":10391265,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391270,"byte_end":10391277,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3727},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392606,"byte_end":10392610,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3729}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392233,"byte_end":10392308,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392309,"byte_end":10392312,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392313,"byte_end":10392377,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392378,"byte_end":10392413,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392414,"byte_end":10392417,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392418,"byte_end":10392456,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392457,"byte_end":10392499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392500,"byte_end":10392546,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392547,"byte_end":10392577,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393055,"byte_end":10393062,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392682,"byte_end":10392768,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392773,"byte_end":10392776,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392781,"byte_end":10392795,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392800,"byte_end":10392803,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392808,"byte_end":10392815,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392820,"byte_end":10392850,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392855,"byte_end":10392858,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392863,"byte_end":10392919,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392924,"byte_end":10392940,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392945,"byte_end":10392961,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392966,"byte_end":10392969,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392974,"byte_end":10393031,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393036,"byte_end":10393043,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395775,"byte_end":10395779,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":3734}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394496,"byte_end":10394518,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394519,"byte_end":10394522,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394523,"byte_end":10394582,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394583,"byte_end":10394586,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394587,"byte_end":10394665,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394666,"byte_end":10394747,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394748,"byte_end":10394830,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394831,"byte_end":10394858,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394859,"byte_end":10394862,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394863,"byte_end":10394938,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10394939,"byte_end":10395004,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395005,"byte_end":10395025,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395026,"byte_end":10395029,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395030,"byte_end":10395066,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395067,"byte_end":10395143,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395144,"byte_end":10395147,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395148,"byte_end":10395207,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395208,"byte_end":10395251,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395252,"byte_end":10395255,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395256,"byte_end":10395270,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395271,"byte_end":10395274,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395275,"byte_end":10395282,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395283,"byte_end":10395307,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395308,"byte_end":10395332,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395333,"byte_end":10395336,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395337,"byte_end":10395383,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395384,"byte_end":10395426,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395427,"byte_end":10395430,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395431,"byte_end":10395462,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395463,"byte_end":10395512,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395513,"byte_end":10395516,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395517,"byte_end":10395554,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395555,"byte_end":10395606,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395607,"byte_end":10395610,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395611,"byte_end":10395648,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395649,"byte_end":10395700,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395701,"byte_end":10395708,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396411,"byte_end":10396414,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395829,"byte_end":10395881,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395886,"byte_end":10395889,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395894,"byte_end":10395929,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395934,"byte_end":10395937,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395942,"byte_end":10395956,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395961,"byte_end":10395964,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395969,"byte_end":10395976,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395981,"byte_end":10396011,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396016,"byte_end":10396019,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396024,"byte_end":10396049,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396054,"byte_end":10396061,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396066,"byte_end":10396069,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396074,"byte_end":10396139,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396144,"byte_end":10396147,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396152,"byte_end":10396159,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396164,"byte_end":10396194,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396199,"byte_end":10396202,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396207,"byte_end":10396248,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396253,"byte_end":10396294,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396299,"byte_end":10396343,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396348,"byte_end":10396387,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396392,"byte_end":10396399,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396937,"byte_end":10396946,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396558,"byte_end":10396601,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396606,"byte_end":10396609,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396614,"byte_end":10396680,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396685,"byte_end":10396688,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396693,"byte_end":10396707,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396712,"byte_end":10396715,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396720,"byte_end":10396727,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396732,"byte_end":10396756,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396761,"byte_end":10396764,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396769,"byte_end":10396799,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396804,"byte_end":10396807,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396812,"byte_end":10396862,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396867,"byte_end":10396913,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10396918,"byte_end":10396925,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397536,"byte_end":10397542,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397008,"byte_end":10397068,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397073,"byte_end":10397076,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397081,"byte_end":10397145,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397150,"byte_end":10397217,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397222,"byte_end":10397254,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397259,"byte_end":10397262,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397267,"byte_end":10397329,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397334,"byte_end":10397337,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397342,"byte_end":10397356,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397361,"byte_end":10397364,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397369,"byte_end":10397376,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397381,"byte_end":10397411,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397416,"byte_end":10397419,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397424,"byte_end":10397460,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397465,"byte_end":10397512,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397517,"byte_end":10397524,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398335,"byte_end":10398350,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397607,"byte_end":10397647,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397652,"byte_end":10397655,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397660,"byte_end":10397707,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397712,"byte_end":10397757,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397762,"byte_end":10397765,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397770,"byte_end":10397838,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397843,"byte_end":10397927,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397932,"byte_end":10397935,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397940,"byte_end":10397954,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397959,"byte_end":10397962,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10397967,"byte_end":10398028,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398033,"byte_end":10398036,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398041,"byte_end":10398048,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398053,"byte_end":10398083,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398088,"byte_end":10398091,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398096,"byte_end":10398132,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398137,"byte_end":10398187,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398192,"byte_end":10398199,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398204,"byte_end":10398207,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398212,"byte_end":10398286,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398291,"byte_end":10398323,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398759,"byte_end":10398770,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398424,"byte_end":10398470,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398475,"byte_end":10398478,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398483,"byte_end":10398519,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398524,"byte_end":10398527,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398532,"byte_end":10398546,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398551,"byte_end":10398554,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398559,"byte_end":10398566,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398571,"byte_end":10398612,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398617,"byte_end":10398620,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398625,"byte_end":10398679,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398684,"byte_end":10398735,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398740,"byte_end":10398747,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399470,"byte_end":10399481,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398850,"byte_end":10398924,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398929,"byte_end":10398955,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398960,"byte_end":10398963,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10398968,"byte_end":10399032,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399037,"byte_end":10399089,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399094,"byte_end":10399097,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399102,"byte_end":10399177,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399182,"byte_end":10399255,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399260,"byte_end":10399263,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399268,"byte_end":10399302,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399307,"byte_end":10399310,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399315,"byte_end":10399329,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399334,"byte_end":10399337,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399342,"byte_end":10399349,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399354,"byte_end":10399384,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399389,"byte_end":10399392,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399397,"byte_end":10399446,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399451,"byte_end":10399458,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399897,"byte_end":10399908,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399543,"byte_end":10399607,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399612,"byte_end":10399615,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399620,"byte_end":10399677,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399682,"byte_end":10399685,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399690,"byte_end":10399730,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399735,"byte_end":10399738,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399743,"byte_end":10399757,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399762,"byte_end":10399765,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399770,"byte_end":10399777,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399782,"byte_end":10399812,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399817,"byte_end":10399820,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399825,"byte_end":10399873,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399878,"byte_end":10399885,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400529,"byte_end":10400537,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10399970,"byte_end":10400014,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400019,"byte_end":10400022,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400027,"byte_end":10400082,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400087,"byte_end":10400090,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400095,"byte_end":10400137,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400142,"byte_end":10400210,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400215,"byte_end":10400300,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400305,"byte_end":10400361,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400366,"byte_end":10400369,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400374,"byte_end":10400388,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400393,"byte_end":10400396,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400401,"byte_end":10400408,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400413,"byte_end":10400443,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400448,"byte_end":10400451,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400456,"byte_end":10400505,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400510,"byte_end":10400517,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401242,"byte_end":10401248,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400596,"byte_end":10400664,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400669,"byte_end":10400672,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400677,"byte_end":10400741,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400746,"byte_end":10400749,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400754,"byte_end":10400834,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400839,"byte_end":10400842,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400847,"byte_end":10400861,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400866,"byte_end":10400869,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400874,"byte_end":10400881,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400886,"byte_end":10400916,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400921,"byte_end":10400924,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400929,"byte_end":10400966,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10400971,"byte_end":10401011,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401016,"byte_end":10401058,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401063,"byte_end":10401066,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401071,"byte_end":10401119,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401124,"byte_end":10401169,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401174,"byte_end":10401218,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401223,"byte_end":10401230,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402371,"byte_end":10402380,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401332,"byte_end":10401387,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401392,"byte_end":10401395,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401400,"byte_end":10401493,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401498,"byte_end":10401588,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401593,"byte_end":10401684,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401689,"byte_end":10401784,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401789,"byte_end":10401808,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401813,"byte_end":10401816,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401821,"byte_end":10401888,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401893,"byte_end":10401939,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401944,"byte_end":10401947,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401952,"byte_end":10401966,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401971,"byte_end":10401974,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401979,"byte_end":10401986,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10401991,"byte_end":10402021,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402026,"byte_end":10402029,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402034,"byte_end":10402092,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402097,"byte_end":10402166,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402171,"byte_end":10402236,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402241,"byte_end":10402303,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402308,"byte_end":10402347,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402352,"byte_end":10402359,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403425,"byte_end":10403434,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402458,"byte_end":10402521,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402526,"byte_end":10402529,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402534,"byte_end":10402628,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402633,"byte_end":10402659,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402664,"byte_end":10402667,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402672,"byte_end":10402724,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402729,"byte_end":10402732,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402737,"byte_end":10402817,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402822,"byte_end":10402825,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402830,"byte_end":10402844,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402849,"byte_end":10402852,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402857,"byte_end":10402864,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402869,"byte_end":10402893,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402898,"byte_end":10402901,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402906,"byte_end":10402936,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402941,"byte_end":10402944,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10402949,"byte_end":10403025,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403030,"byte_end":10403112,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403117,"byte_end":10403197,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403202,"byte_end":10403284,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403289,"byte_end":10403347,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403352,"byte_end":10403401,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403406,"byte_end":10403413,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404688,"byte_end":10404700,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403504,"byte_end":10403567,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403572,"byte_end":10403575,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403580,"byte_end":10403592,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403597,"byte_end":10403600,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403605,"byte_end":10403667,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403672,"byte_end":10403710,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403715,"byte_end":10403718,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403723,"byte_end":10403763,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403768,"byte_end":10403846,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403851,"byte_end":10403854,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403859,"byte_end":10403873,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403878,"byte_end":10403881,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403886,"byte_end":10403893,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403898,"byte_end":10403939,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403944,"byte_end":10403947,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10403952,"byte_end":10403999,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404004,"byte_end":10404007,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404012,"byte_end":10404087,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404092,"byte_end":10404166,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404171,"byte_end":10404246,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404251,"byte_end":10404326,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404331,"byte_end":10404407,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404412,"byte_end":10404469,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404474,"byte_end":10404532,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404537,"byte_end":10404540,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404545,"byte_end":10404586,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404591,"byte_end":10404664,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404669,"byte_end":10404676,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405385,"byte_end":10405396,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404865,"byte_end":10404917,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404922,"byte_end":10404925,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404930,"byte_end":10404980,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404985,"byte_end":10404988,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10404993,"byte_end":10405007,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405012,"byte_end":10405015,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405020,"byte_end":10405027,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405032,"byte_end":10405062,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405067,"byte_end":10405070,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405075,"byte_end":10405115,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405120,"byte_end":10405123,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405128,"byte_end":10405166,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405171,"byte_end":10405210,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405215,"byte_end":10405260,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405265,"byte_end":10405311,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405316,"byte_end":10405319,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405324,"byte_end":10405361,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405366,"byte_end":10405373,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405822,"byte_end":10405831,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405496,"byte_end":10405549,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405554,"byte_end":10405557,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405562,"byte_end":10405612,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405617,"byte_end":10405620,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405625,"byte_end":10405639,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405644,"byte_end":10405647,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405652,"byte_end":10405659,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405664,"byte_end":10405694,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405699,"byte_end":10405702,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405707,"byte_end":10405747,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405752,"byte_end":10405755,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405760,"byte_end":10405798,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405803,"byte_end":10405810,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406673,"byte_end":10406682,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405931,"byte_end":10405994,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10405999,"byte_end":10406002,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406007,"byte_end":10406059,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406064,"byte_end":10406067,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406072,"byte_end":10406088,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406093,"byte_end":10406096,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406101,"byte_end":10406141,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406146,"byte_end":10406200,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406205,"byte_end":10406293,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406298,"byte_end":10406364,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406369,"byte_end":10406372,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406377,"byte_end":10406457,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406462,"byte_end":10406465,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406470,"byte_end":10406484,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406489,"byte_end":10406492,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406497,"byte_end":10406504,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406509,"byte_end":10406539,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406544,"byte_end":10406547,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406552,"byte_end":10406587,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406592,"byte_end":10406595,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406600,"byte_end":10406649,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406654,"byte_end":10406661,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407461,"byte_end":10407470,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406752,"byte_end":10406809,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406814,"byte_end":10406817,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406822,"byte_end":10406843,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406848,"byte_end":10406851,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406856,"byte_end":10406896,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406901,"byte_end":10406944,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10406949,"byte_end":10407026,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407031,"byte_end":10407096,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407101,"byte_end":10407104,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407109,"byte_end":10407161,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407166,"byte_end":10407246,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407251,"byte_end":10407254,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407259,"byte_end":10407273,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407278,"byte_end":10407281,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407286,"byte_end":10407293,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407298,"byte_end":10407328,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407333,"byte_end":10407336,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407341,"byte_end":10407376,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407381,"byte_end":10407384,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407389,"byte_end":10407437,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407442,"byte_end":10407449,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408011,"byte_end":10408015,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407540,"byte_end":10407604,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407609,"byte_end":10407612,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407617,"byte_end":10407694,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407699,"byte_end":10407702,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407707,"byte_end":10407743,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407748,"byte_end":10407802,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407807,"byte_end":10407810,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407815,"byte_end":10407829,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407834,"byte_end":10407837,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407842,"byte_end":10407849,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407854,"byte_end":10407895,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407900,"byte_end":10407903,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407908,"byte_end":10407987,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10407992,"byte_end":10407999,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408754,"byte_end":10408768,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408118,"byte_end":10408192,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408197,"byte_end":10408200,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408205,"byte_end":10408257,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408262,"byte_end":10408265,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408270,"byte_end":10408306,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408311,"byte_end":10408383,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408388,"byte_end":10408391,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408396,"byte_end":10408410,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408415,"byte_end":10408418,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408423,"byte_end":10408430,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408435,"byte_end":10408476,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408481,"byte_end":10408484,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408489,"byte_end":10408530,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408535,"byte_end":10408613,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408618,"byte_end":10408621,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408626,"byte_end":10408659,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408664,"byte_end":10408730,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408735,"byte_end":10408742,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409387,"byte_end":10409401,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408883,"byte_end":10408957,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408962,"byte_end":10408965,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10408970,"byte_end":10409022,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409027,"byte_end":10409030,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409035,"byte_end":10409071,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409076,"byte_end":10409148,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409153,"byte_end":10409156,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409161,"byte_end":10409175,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409180,"byte_end":10409183,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409188,"byte_end":10409195,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409200,"byte_end":10409241,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409246,"byte_end":10409249,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409254,"byte_end":10409289,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409294,"byte_end":10409363,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409368,"byte_end":10409375,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410988,"byte_end":10410998,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409516,"byte_end":10409577,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409582,"byte_end":10409585,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409590,"byte_end":10409658,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409663,"byte_end":10409666,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409671,"byte_end":10409739,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409744,"byte_end":10409776,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409781,"byte_end":10409784,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409789,"byte_end":10409860,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409865,"byte_end":10409935,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10409940,"byte_end":10410011,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410016,"byte_end":10410057,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410062,"byte_end":10410065,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410070,"byte_end":10410147,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410152,"byte_end":10410155,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410160,"byte_end":10410230,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410235,"byte_end":10410307,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410312,"byte_end":10410361,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410366,"byte_end":10410369,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410374,"byte_end":10410412,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410417,"byte_end":10410467,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410472,"byte_end":10410475,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410480,"byte_end":10410494,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410499,"byte_end":10410502,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410507,"byte_end":10410514,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410519,"byte_end":10410543,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410548,"byte_end":10410551,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410556,"byte_end":10410599,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410604,"byte_end":10410607,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410612,"byte_end":10410676,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410681,"byte_end":10410684,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410689,"byte_end":10410749,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410754,"byte_end":10410832,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410837,"byte_end":10410919,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410924,"byte_end":10410964,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10410969,"byte_end":10410976,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411904,"byte_end":10411908,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411112,"byte_end":10411183,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411188,"byte_end":10411199,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411204,"byte_end":10411207,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411212,"byte_end":10411287,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411292,"byte_end":10411332,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411337,"byte_end":10411340,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411345,"byte_end":10411383,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411388,"byte_end":10411454,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411459,"byte_end":10411462,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411467,"byte_end":10411481,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411486,"byte_end":10411489,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411494,"byte_end":10411501,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411506,"byte_end":10411530,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411535,"byte_end":10411538,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411543,"byte_end":10411581,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411586,"byte_end":10411589,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411594,"byte_end":10411644,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411649,"byte_end":10411728,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411733,"byte_end":10411784,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411789,"byte_end":10411844,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411849,"byte_end":10411880,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10411885,"byte_end":10411892,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412411,"byte_end":10412418,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412004,"byte_end":10412079,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412084,"byte_end":10412122,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412127,"byte_end":10412130,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412135,"byte_end":10412204,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412209,"byte_end":10412212,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412217,"byte_end":10412231,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412236,"byte_end":10412239,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412244,"byte_end":10412251,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412256,"byte_end":10412286,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412291,"byte_end":10412294,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412299,"byte_end":10412339,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412344,"byte_end":10412347,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412352,"byte_end":10412387,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412392,"byte_end":10412399,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413184,"byte_end":10413192,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412483,"byte_end":10412529,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412534,"byte_end":10412537,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412542,"byte_end":10412619,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412624,"byte_end":10412645,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412650,"byte_end":10412653,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412658,"byte_end":10412699,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412704,"byte_end":10412707,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412712,"byte_end":10412756,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412761,"byte_end":10412764,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412769,"byte_end":10412783,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412788,"byte_end":10412791,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412796,"byte_end":10412809,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412814,"byte_end":10412888,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412893,"byte_end":10412898,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412903,"byte_end":10412933,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412938,"byte_end":10412941,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412946,"byte_end":10412988,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10412993,"byte_end":10413035,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413040,"byte_end":10413083,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413088,"byte_end":10413093,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413098,"byte_end":10413115,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413120,"byte_end":10413127,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413132,"byte_end":10413166,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413924,"byte_end":10413940,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413274,"byte_end":10413353,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413358,"byte_end":10413361,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413366,"byte_end":10413415,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413420,"byte_end":10413423,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413428,"byte_end":10413488,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413493,"byte_end":10413496,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413501,"byte_end":10413515,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413520,"byte_end":10413523,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413528,"byte_end":10413541,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413546,"byte_end":10413620,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413625,"byte_end":10413630,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413635,"byte_end":10413665,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413670,"byte_end":10413673,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413678,"byte_end":10413720,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413725,"byte_end":10413775,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413780,"byte_end":10413823,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413828,"byte_end":10413833,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413838,"byte_end":10413855,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413860,"byte_end":10413867,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10413872,"byte_end":10413906,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414767,"byte_end":10414779,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414030,"byte_end":10414071,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414076,"byte_end":10414079,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414084,"byte_end":10414173,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414178,"byte_end":10414206,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414211,"byte_end":10414214,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414219,"byte_end":10414264,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414269,"byte_end":10414272,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414277,"byte_end":10414329,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414334,"byte_end":10414337,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414342,"byte_end":10414356,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414361,"byte_end":10414364,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414369,"byte_end":10414382,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414387,"byte_end":10414461,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414466,"byte_end":10414471,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414476,"byte_end":10414517,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414522,"byte_end":10414525,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414530,"byte_end":10414583,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414588,"byte_end":10414666,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414671,"byte_end":10414676,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414681,"byte_end":10414698,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414703,"byte_end":10414710,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414715,"byte_end":10414749,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415434,"byte_end":10415443,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414860,"byte_end":10414930,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414935,"byte_end":10414938,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414943,"byte_end":10414985,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414990,"byte_end":10414993,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10414998,"byte_end":10415044,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415049,"byte_end":10415052,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415057,"byte_end":10415071,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415076,"byte_end":10415079,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415084,"byte_end":10415097,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415102,"byte_end":10415176,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415181,"byte_end":10415186,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415191,"byte_end":10415221,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415226,"byte_end":10415229,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415234,"byte_end":10415284,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415289,"byte_end":10415333,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415338,"byte_end":10415343,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415348,"byte_end":10415365,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415370,"byte_end":10415377,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415382,"byte_end":10415416,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416553,"byte_end":10416561,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415521,"byte_end":10415578,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415583,"byte_end":10415586,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415591,"byte_end":10415667,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415672,"byte_end":10415745,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415750,"byte_end":10415753,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415758,"byte_end":10415799,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415804,"byte_end":10415807,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415812,"byte_end":10415854,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415859,"byte_end":10415903,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415908,"byte_end":10415952,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415957,"byte_end":10415960,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415965,"byte_end":10415979,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415984,"byte_end":10415987,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10415992,"byte_end":10416005,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416010,"byte_end":10416084,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416089,"byte_end":10416094,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416099,"byte_end":10416121,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416126,"byte_end":10416156,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416161,"byte_end":10416191,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416196,"byte_end":10416199,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416204,"byte_end":10416240,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416245,"byte_end":10416290,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416295,"byte_end":10416298,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416303,"byte_end":10416347,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416352,"byte_end":10416377,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416382,"byte_end":10416442,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416447,"byte_end":10416452,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416457,"byte_end":10416462,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416467,"byte_end":10416484,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416489,"byte_end":10416496,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416501,"byte_end":10416535,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417590,"byte_end":10417596,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416642,"byte_end":10416702,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416707,"byte_end":10416710,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416715,"byte_end":10416792,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416797,"byte_end":10416877,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416882,"byte_end":10416885,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416890,"byte_end":10416968,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10416973,"byte_end":10417020,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417025,"byte_end":10417028,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417033,"byte_end":10417047,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417052,"byte_end":10417055,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417060,"byte_end":10417073,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417078,"byte_end":10417152,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417157,"byte_end":10417162,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417167,"byte_end":10417197,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417202,"byte_end":10417272,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417277,"byte_end":10417282,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417287,"byte_end":10417304,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417309,"byte_end":10417316,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417321,"byte_end":10417324,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417329,"byte_end":10417343,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417348,"byte_end":10417351,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417356,"byte_end":10417435,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417440,"byte_end":10417478,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417483,"byte_end":10417486,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417491,"byte_end":10417533,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417538,"byte_end":10417572,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418854,"byte_end":10418861,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417666,"byte_end":10417746,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417751,"byte_end":10417754,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417759,"byte_end":10417836,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417841,"byte_end":10417921,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417926,"byte_end":10417929,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10417934,"byte_end":10418012,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418017,"byte_end":10418064,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418069,"byte_end":10418072,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418077,"byte_end":10418091,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418096,"byte_end":10418099,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418104,"byte_end":10418117,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418122,"byte_end":10418196,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418201,"byte_end":10418206,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418211,"byte_end":10418241,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418246,"byte_end":10418316,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418321,"byte_end":10418383,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418388,"byte_end":10418393,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418398,"byte_end":10418415,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418420,"byte_end":10418427,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418432,"byte_end":10418435,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418440,"byte_end":10418454,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418459,"byte_end":10418462,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418467,"byte_end":10418546,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418551,"byte_end":10418621,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418626,"byte_end":10418667,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418672,"byte_end":10418675,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418680,"byte_end":10418722,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418727,"byte_end":10418797,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10418802,"byte_end":10418836,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420188,"byte_end":10420194,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419000,"byte_end":10419077,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419082,"byte_end":10419085,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419090,"byte_end":10419167,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419172,"byte_end":10419252,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419257,"byte_end":10419260,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419265,"byte_end":10419343,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419348,"byte_end":10419395,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419400,"byte_end":10419403,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419408,"byte_end":10419422,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419427,"byte_end":10419430,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419435,"byte_end":10419448,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419453,"byte_end":10419527,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419532,"byte_end":10419537,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419542,"byte_end":10419572,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419577,"byte_end":10419580,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419585,"byte_end":10419653,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419658,"byte_end":10419720,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419725,"byte_end":10419730,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419735,"byte_end":10419752,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419757,"byte_end":10419764,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419769,"byte_end":10419772,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419777,"byte_end":10419791,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419796,"byte_end":10419799,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419804,"byte_end":10419883,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419888,"byte_end":10419958,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10419963,"byte_end":10420003,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420008,"byte_end":10420011,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420016,"byte_end":10420058,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420063,"byte_end":10420131,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420136,"byte_end":10420170,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420761,"byte_end":10420774,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420332,"byte_end":10420405,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420410,"byte_end":10420425,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420430,"byte_end":10420433,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420438,"byte_end":10420502,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420507,"byte_end":10420543,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420548,"byte_end":10420551,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420556,"byte_end":10420570,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420575,"byte_end":10420578,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420583,"byte_end":10420590,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420595,"byte_end":10420625,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420630,"byte_end":10420633,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420638,"byte_end":10420692,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420697,"byte_end":10420737,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420742,"byte_end":10420749,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427785,"byte_end":10427792,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":4012}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427556,"byte_end":10427618,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427619,"byte_end":10427622,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427623,"byte_end":10427702,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428033,"byte_end":10428036,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427848,"byte_end":10427881,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427886,"byte_end":10427889,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427894,"byte_end":10427908,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427913,"byte_end":10427916,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427921,"byte_end":10427928,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427933,"byte_end":10427966,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427971,"byte_end":10427974,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427979,"byte_end":10428009,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428014,"byte_end":10428021,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428397,"byte_end":10428404,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428104,"byte_end":10428136,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428141,"byte_end":10428144,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428149,"byte_end":10428179,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428184,"byte_end":10428187,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428192,"byte_end":10428206,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428211,"byte_end":10428214,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428219,"byte_end":10428226,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428231,"byte_end":10428272,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428277,"byte_end":10428280,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428285,"byte_end":10428320,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428325,"byte_end":10428373,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428378,"byte_end":10428385,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429398,"byte_end":10429402,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428470,"byte_end":10428501,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428506,"byte_end":10428509,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428514,"byte_end":10428570,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428575,"byte_end":10428578,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428583,"byte_end":10428598,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428603,"byte_end":10428606,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428611,"byte_end":10428674,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428679,"byte_end":10428746,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428751,"byte_end":10428812,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428817,"byte_end":10428820,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428825,"byte_end":10428839,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428844,"byte_end":10428847,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428852,"byte_end":10428906,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428911,"byte_end":10428914,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428919,"byte_end":10428926,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428931,"byte_end":10428964,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428969,"byte_end":10428972,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10428977,"byte_end":10429018,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429023,"byte_end":10429048,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429053,"byte_end":10429105,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429110,"byte_end":10429117,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429122,"byte_end":10429125,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429130,"byte_end":10429186,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429191,"byte_end":10429194,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429199,"byte_end":10429206,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429211,"byte_end":10429244,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429249,"byte_end":10429252,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429257,"byte_end":10429298,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429303,"byte_end":10429325,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429330,"byte_end":10429374,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429379,"byte_end":10429386,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430100,"byte_end":10430103,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429491,"byte_end":10429531,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429536,"byte_end":10429539,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429544,"byte_end":10429612,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429617,"byte_end":10429647,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429652,"byte_end":10429655,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429660,"byte_end":10429740,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429745,"byte_end":10429799,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429804,"byte_end":10429807,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429812,"byte_end":10429826,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429831,"byte_end":10429834,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429839,"byte_end":10429846,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429851,"byte_end":10429892,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429897,"byte_end":10429900,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429905,"byte_end":10429952,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429957,"byte_end":10429960,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429965,"byte_end":10429977,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10429982,"byte_end":10430020,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430025,"byte_end":10430037,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430042,"byte_end":10430076,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430081,"byte_end":10430088,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431133,"byte_end":10431146,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430161,"byte_end":10430207,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430212,"byte_end":10430215,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430220,"byte_end":10430289,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430294,"byte_end":10430310,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430315,"byte_end":10430318,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430323,"byte_end":10430389,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430394,"byte_end":10430463,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430468,"byte_end":10430512,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430517,"byte_end":10430520,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430525,"byte_end":10430585,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430590,"byte_end":10430670,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430675,"byte_end":10430718,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430723,"byte_end":10430726,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430731,"byte_end":10430745,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430750,"byte_end":10430753,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430758,"byte_end":10430765,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430770,"byte_end":10430803,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430808,"byte_end":10430811,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430816,"byte_end":10430853,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430858,"byte_end":10430895,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430900,"byte_end":10430929,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430934,"byte_end":10430976,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10430981,"byte_end":10431020,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431025,"byte_end":10431058,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431063,"byte_end":10431109,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431114,"byte_end":10431121,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432159,"byte_end":10432172,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431246,"byte_end":10431292,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431297,"byte_end":10431300,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431305,"byte_end":10431376,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431381,"byte_end":10431436,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431441,"byte_end":10431444,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431449,"byte_end":10431521,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431526,"byte_end":10431545,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431550,"byte_end":10431553,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431558,"byte_end":10431618,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431623,"byte_end":10431683,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431688,"byte_end":10431768,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431773,"byte_end":10431776,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431781,"byte_end":10431795,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431800,"byte_end":10431803,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431808,"byte_end":10431815,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431820,"byte_end":10431861,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431866,"byte_end":10431869,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431874,"byte_end":10431917,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431922,"byte_end":10431925,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431930,"byte_end":10431959,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10431964,"byte_end":10432022,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432027,"byte_end":10432030,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432035,"byte_end":10432068,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432073,"byte_end":10432135,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432140,"byte_end":10432147,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432639,"byte_end":10432653,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432280,"byte_end":10432352,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432357,"byte_end":10432360,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432365,"byte_end":10432437,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432442,"byte_end":10432445,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432450,"byte_end":10432464,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432469,"byte_end":10432472,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432477,"byte_end":10432484,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432489,"byte_end":10432522,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432527,"byte_end":10432530,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432535,"byte_end":10432574,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432579,"byte_end":10432615,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432620,"byte_end":10432627,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432904,"byte_end":10432919,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432721,"byte_end":10432780,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432785,"byte_end":10432788,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432793,"byte_end":10432857,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10432862,"byte_end":10432892,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3484},{"krate":0,"index":3576}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":17201,"byte_end":17228,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437425,"byte_end":10437477,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437478,"byte_end":10437481,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437482,"byte_end":10437569,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437570,"byte_end":10437639,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437640,"byte_end":10437643,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437644,"byte_end":10437696,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437697,"byte_end":10437700,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437701,"byte_end":10437719,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437720,"byte_end":10437723,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437724,"byte_end":10437812,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437813,"byte_end":10437882,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437883,"byte_end":10437964,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10437965,"byte_end":10438024,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438025,"byte_end":10438114,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438115,"byte_end":10438189,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438190,"byte_end":10438282,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438283,"byte_end":10438365,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438366,"byte_end":10438448,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438449,"byte_end":10438452,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438453,"byte_end":10438485,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438486,"byte_end":10438524,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438525,"byte_end":10438563,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438564,"byte_end":10438604,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438605,"byte_end":10438651,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438652,"byte_end":10438698,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438699,"byte_end":10438743,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438744,"byte_end":10438784,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438785,"byte_end":10438832,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438833,"byte_end":10438873,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438874,"byte_end":10438877,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438878,"byte_end":10438912,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438913,"byte_end":10438916,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10438917,"byte_end":10439007,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439008,"byte_end":10439073,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439074,"byte_end":10439077,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439078,"byte_end":10439117,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439118,"byte_end":10439180,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439181,"byte_end":10439184,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439185,"byte_end":10439199,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439200,"byte_end":10439203,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439204,"byte_end":10439233,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439234,"byte_end":10439237,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439238,"byte_end":10439251,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439252,"byte_end":10439326,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439327,"byte_end":10439332,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439333,"byte_end":10439367,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439368,"byte_end":10439371,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439372,"byte_end":10439430,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439431,"byte_end":10439465,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439466,"byte_end":10439469,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439470,"byte_end":10439480,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439481,"byte_end":10439539,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439540,"byte_end":10439588,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439589,"byte_end":10439594,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439595,"byte_end":10439600,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439601,"byte_end":10439611,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\mod.rs","byte_start":10439612,"byte_end":10439619,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441371,"byte_end":10441384,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3422}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10440793,"byte_end":10440853,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10440854,"byte_end":10440857,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10440858,"byte_end":10440924,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10440925,"byte_end":10440928,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10440929,"byte_end":10441020,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441021,"byte_end":10441061,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441062,"byte_end":10441065,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441066,"byte_end":10441080,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441081,"byte_end":10441084,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441085,"byte_end":10441092,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441093,"byte_end":10441167,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441168,"byte_end":10441173,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441174,"byte_end":10441212,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441213,"byte_end":10441216,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441217,"byte_end":10441290,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441291,"byte_end":10441328,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441329,"byte_end":10441334,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441335,"byte_end":10441352,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441353,"byte_end":10441360,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441479,"byte_end":10441483,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441391,"byte_end":10441469,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441825,"byte_end":10441840,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441519,"byte_end":10441585,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441590,"byte_end":10441593,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441598,"byte_end":10441689,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441694,"byte_end":10441719,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441724,"byte_end":10441727,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441732,"byte_end":10441817,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442057,"byte_end":10442066,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":3423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442099,"byte_end":10442104,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":3423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442125,"byte_end":10442129,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":3423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442028,"byte_end":10442047,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3431}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10441979,"byte_end":10442018,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450007,"byte_end":10450018,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4039}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10448751,"byte_end":10448802,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10448803,"byte_end":10448806,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10448807,"byte_end":10448904,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10448905,"byte_end":10448993,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10448994,"byte_end":10449023,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449024,"byte_end":10449027,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449028,"byte_end":10449084,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449085,"byte_end":10449088,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449089,"byte_end":10449158,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449159,"byte_end":10449162,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449163,"byte_end":10449226,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449227,"byte_end":10449230,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449231,"byte_end":10449257,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449258,"byte_end":10449292,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449293,"byte_end":10449347,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449348,"byte_end":10449436,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449437,"byte_end":10449440,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449441,"byte_end":10449455,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449456,"byte_end":10449459,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449460,"byte_end":10449473,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449474,"byte_end":10449548,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449549,"byte_end":10449554,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449555,"byte_end":10449577,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449578,"byte_end":10449614,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449615,"byte_end":10449645,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449646,"byte_end":10449649,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449650,"byte_end":10449712,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449713,"byte_end":10449756,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449757,"byte_end":10449760,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449761,"byte_end":10449813,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449814,"byte_end":10449843,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449844,"byte_end":10449899,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449900,"byte_end":10449940,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449941,"byte_end":10449946,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449947,"byte_end":10449952,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449953,"byte_end":10449970,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10449971,"byte_end":10449978,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450840,"byte_end":10450844,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450090,"byte_end":10450167,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450172,"byte_end":10450175,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450180,"byte_end":10450241,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450246,"byte_end":10450249,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450254,"byte_end":10450347,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450352,"byte_end":10450420,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450425,"byte_end":10450428,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450433,"byte_end":10450447,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450452,"byte_end":10450499,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450504,"byte_end":10450507,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450512,"byte_end":10450525,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450530,"byte_end":10450604,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450609,"byte_end":10450614,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450619,"byte_end":10450655,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450660,"byte_end":10450663,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450668,"byte_end":10450727,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450732,"byte_end":10450737,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450742,"byte_end":10450759,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450764,"byte_end":10450771,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450776,"byte_end":10450779,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450784,"byte_end":10450822,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452010,"byte_end":10452016,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451477,"byte_end":10451532,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451537,"byte_end":10451540,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451545,"byte_end":10451637,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451642,"byte_end":10451645,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451650,"byte_end":10451665,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451670,"byte_end":10451673,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451678,"byte_end":10451691,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451696,"byte_end":10451770,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451775,"byte_end":10451780,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451785,"byte_end":10451821,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451826,"byte_end":10451829,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451834,"byte_end":10451893,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451898,"byte_end":10451948,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451953,"byte_end":10451958,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451963,"byte_end":10451980,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10451985,"byte_end":10451992,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453180,"byte_end":10453188,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452245,"byte_end":10452290,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452295,"byte_end":10452298,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452303,"byte_end":10452394,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452399,"byte_end":10452491,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452496,"byte_end":10452499,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452504,"byte_end":10452534,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452539,"byte_end":10452619,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452624,"byte_end":10452627,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452632,"byte_end":10452647,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452652,"byte_end":10452655,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452660,"byte_end":10452673,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452678,"byte_end":10452752,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452757,"byte_end":10452762,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452767,"byte_end":10452803,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452808,"byte_end":10452838,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452843,"byte_end":10452846,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452851,"byte_end":10452910,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452915,"byte_end":10452958,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452963,"byte_end":10452966,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10452971,"byte_end":10453023,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453028,"byte_end":10453061,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453066,"byte_end":10453114,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453119,"byte_end":10453124,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453129,"byte_end":10453134,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453139,"byte_end":10453156,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453161,"byte_end":10453168,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453853,"byte_end":10453863,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453308,"byte_end":10453369,"line_start":156,"line_end":156,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453374,"byte_end":10453377,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453382,"byte_end":10453477,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453482,"byte_end":10453496,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453501,"byte_end":10453504,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453509,"byte_end":10453523,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453528,"byte_end":10453531,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453536,"byte_end":10453549,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453554,"byte_end":10453628,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453633,"byte_end":10453638,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453643,"byte_end":10453679,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453684,"byte_end":10453687,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453692,"byte_end":10453754,"line_start":168,"line_end":168,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453759,"byte_end":10453797,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453802,"byte_end":10453807,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453812,"byte_end":10453829,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453834,"byte_end":10453841,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454503,"byte_end":10454511,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3518},{"krate":0,"index":3519}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453952,"byte_end":10453993,"line_start":178,"line_end":178,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453994,"byte_end":10453997,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10453998,"byte_end":10454096,"line_start":180,"line_end":180,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454097,"byte_end":10454155,"line_start":181,"line_end":181,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454156,"byte_end":10454159,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454160,"byte_end":10454220,"line_start":183,"line_end":183,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454221,"byte_end":10454224,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454225,"byte_end":10454305,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454306,"byte_end":10454363,"line_start":186,"line_end":186,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454364,"byte_end":10454408,"line_start":187,"line_end":187,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454409,"byte_end":10454491,"line_start":188,"line_end":188,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":4053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458988,"byte_end":10458997,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4054}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457430,"byte_end":10457483,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457484,"byte_end":10457487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457488,"byte_end":10457585,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457586,"byte_end":10457679,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457680,"byte_end":10457763,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457764,"byte_end":10457767,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457768,"byte_end":10457864,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457865,"byte_end":10457948,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457949,"byte_end":10457952,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10457953,"byte_end":10458014,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458015,"byte_end":10458018,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458019,"byte_end":10458072,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458073,"byte_end":10458127,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458128,"byte_end":10458167,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458168,"byte_end":10458246,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458247,"byte_end":10458327,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458328,"byte_end":10458398,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458399,"byte_end":10458454,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458455,"byte_end":10458539,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458540,"byte_end":10458543,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458544,"byte_end":10458559,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458560,"byte_end":10458563,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458564,"byte_end":10458577,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458578,"byte_end":10458652,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458653,"byte_end":10458658,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458659,"byte_end":10458693,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458694,"byte_end":10458724,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458725,"byte_end":10458728,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458729,"byte_end":10458794,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458795,"byte_end":10458839,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458840,"byte_end":10458843,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458844,"byte_end":10458878,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458879,"byte_end":10458920,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458921,"byte_end":10458926,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458927,"byte_end":10458944,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10458945,"byte_end":10458952,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459762,"byte_end":10459769,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459081,"byte_end":10459145,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459150,"byte_end":10459153,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459158,"byte_end":10459242,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459247,"byte_end":10459332,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459337,"byte_end":10459393,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459398,"byte_end":10459401,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459406,"byte_end":10459448,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459453,"byte_end":10459456,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459461,"byte_end":10459475,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459480,"byte_end":10459483,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459488,"byte_end":10459501,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459506,"byte_end":10459580,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459585,"byte_end":10459590,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459595,"byte_end":10459629,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459634,"byte_end":10459637,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459642,"byte_end":10459700,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459705,"byte_end":10459710,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459715,"byte_end":10459732,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459737,"byte_end":10459744,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460938,"byte_end":10460948,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460522,"byte_end":10460585,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460590,"byte_end":10460593,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460598,"byte_end":10460613,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460618,"byte_end":10460621,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460626,"byte_end":10460639,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460644,"byte_end":10460718,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460723,"byte_end":10460728,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460733,"byte_end":10460767,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460772,"byte_end":10460775,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460780,"byte_end":10460841,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460846,"byte_end":10460882,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460887,"byte_end":10460892,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460897,"byte_end":10460914,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10460919,"byte_end":10460926,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461455,"byte_end":10461464,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461039,"byte_end":10461103,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461108,"byte_end":10461111,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461116,"byte_end":10461131,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461136,"byte_end":10461139,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461144,"byte_end":10461157,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461162,"byte_end":10461236,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461241,"byte_end":10461246,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461251,"byte_end":10461285,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461290,"byte_end":10461293,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461298,"byte_end":10461359,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461364,"byte_end":10461399,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461404,"byte_end":10461409,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461414,"byte_end":10461431,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461436,"byte_end":10461443,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462119,"byte_end":10462122,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461554,"byte_end":10461612,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461617,"byte_end":10461620,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461625,"byte_end":10461685,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461690,"byte_end":10461693,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461698,"byte_end":10461730,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461735,"byte_end":10461738,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461743,"byte_end":10461757,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461762,"byte_end":10461765,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461770,"byte_end":10461783,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461788,"byte_end":10461862,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461867,"byte_end":10461872,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461877,"byte_end":10461911,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461916,"byte_end":10461919,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461924,"byte_end":10461985,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461990,"byte_end":10461993,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10461998,"byte_end":10462023,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462028,"byte_end":10462063,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462068,"byte_end":10462073,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462078,"byte_end":10462095,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462100,"byte_end":10462107,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462761,"byte_end":10462768,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462199,"byte_end":10462257,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462262,"byte_end":10462265,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462270,"byte_end":10462346,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462351,"byte_end":10462372,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462377,"byte_end":10462380,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462385,"byte_end":10462399,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462404,"byte_end":10462407,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462412,"byte_end":10462425,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462430,"byte_end":10462504,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462509,"byte_end":10462514,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462519,"byte_end":10462553,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462558,"byte_end":10462561,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462566,"byte_end":10462627,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462632,"byte_end":10462635,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462640,"byte_end":10462665,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462670,"byte_end":10462705,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462710,"byte_end":10462715,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462720,"byte_end":10462737,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462742,"byte_end":10462749,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463619,"byte_end":10463623,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462861,"byte_end":10462950,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462955,"byte_end":10462993,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10462998,"byte_end":10463001,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463006,"byte_end":10463057,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463062,"byte_end":10463065,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463070,"byte_end":10463165,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463170,"byte_end":10463211,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463216,"byte_end":10463219,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463224,"byte_end":10463238,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463243,"byte_end":10463246,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463251,"byte_end":10463264,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463269,"byte_end":10463343,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463348,"byte_end":10463353,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463358,"byte_end":10463392,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463397,"byte_end":10463400,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463405,"byte_end":10463466,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463471,"byte_end":10463474,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463479,"byte_end":10463511,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463516,"byte_end":10463557,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463562,"byte_end":10463567,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463572,"byte_end":10463589,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463594,"byte_end":10463601,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464309,"byte_end":10464316,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463718,"byte_end":10463780,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463785,"byte_end":10463788,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463793,"byte_end":10463857,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463862,"byte_end":10463865,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463870,"byte_end":10463910,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463915,"byte_end":10463918,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463923,"byte_end":10463937,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463942,"byte_end":10463945,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463950,"byte_end":10463963,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10463968,"byte_end":10464042,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464047,"byte_end":10464052,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464057,"byte_end":10464091,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464096,"byte_end":10464099,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464104,"byte_end":10464165,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464170,"byte_end":10464173,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464178,"byte_end":10464208,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464213,"byte_end":10464253,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464258,"byte_end":10464263,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464268,"byte_end":10464285,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464290,"byte_end":10464297,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465200,"byte_end":10465211,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464398,"byte_end":10464460,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464465,"byte_end":10464468,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464473,"byte_end":10464542,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464547,"byte_end":10464620,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464625,"byte_end":10464698,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464703,"byte_end":10464778,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464783,"byte_end":10464801,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464806,"byte_end":10464809,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464814,"byte_end":10464828,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464833,"byte_end":10464836,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464841,"byte_end":10464854,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464859,"byte_end":10464933,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464938,"byte_end":10464943,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464948,"byte_end":10464982,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464987,"byte_end":10464990,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10464995,"byte_end":10465056,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465061,"byte_end":10465064,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465069,"byte_end":10465099,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465104,"byte_end":10465144,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465149,"byte_end":10465154,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465159,"byte_end":10465176,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465181,"byte_end":10465188,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466048,"byte_end":10466056,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465317,"byte_end":10465383,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465388,"byte_end":10465391,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465396,"byte_end":10465485,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465490,"byte_end":10465572,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465577,"byte_end":10465580,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465585,"byte_end":10465655,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465660,"byte_end":10465663,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465668,"byte_end":10465682,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465687,"byte_end":10465690,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465695,"byte_end":10465708,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465713,"byte_end":10465787,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465792,"byte_end":10465797,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465802,"byte_end":10465829,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465834,"byte_end":10465837,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465842,"byte_end":10465876,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465881,"byte_end":10465884,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465889,"byte_end":10465950,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465955,"byte_end":10465992,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10465997,"byte_end":10466002,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466007,"byte_end":10466024,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466029,"byte_end":10466036,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471876,"byte_end":10471885,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4071}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470622,"byte_end":10470639,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470640,"byte_end":10470643,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470644,"byte_end":10470741,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470742,"byte_end":10470787,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470788,"byte_end":10470791,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470792,"byte_end":10470891,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470892,"byte_end":10470985,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470986,"byte_end":10470989,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10470990,"byte_end":10471051,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471052,"byte_end":10471055,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471056,"byte_end":10471082,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471083,"byte_end":10471121,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471122,"byte_end":10471152,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471153,"byte_end":10471197,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471198,"byte_end":10471238,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471239,"byte_end":10471301,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471302,"byte_end":10471356,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471357,"byte_end":10471441,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471442,"byte_end":10471445,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471446,"byte_end":10471461,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471462,"byte_end":10471465,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471466,"byte_end":10471479,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471480,"byte_end":10471554,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471555,"byte_end":10471560,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471561,"byte_end":10471595,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471596,"byte_end":10471599,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471600,"byte_end":10471658,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471659,"byte_end":10471693,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471694,"byte_end":10471697,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471698,"byte_end":10471708,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471709,"byte_end":10471767,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471768,"byte_end":10471816,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471817,"byte_end":10471822,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471823,"byte_end":10471828,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471829,"byte_end":10471839,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471840,"byte_end":10471847,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472540,"byte_end":10472544,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471953,"byte_end":10472001,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472006,"byte_end":10472009,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472014,"byte_end":10472109,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472114,"byte_end":10472178,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472183,"byte_end":10472186,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472191,"byte_end":10472229,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472234,"byte_end":10472237,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472242,"byte_end":10472256,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472261,"byte_end":10472264,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472269,"byte_end":10472282,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472287,"byte_end":10472361,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472366,"byte_end":10472371,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472376,"byte_end":10472410,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472415,"byte_end":10472418,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472423,"byte_end":10472478,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472483,"byte_end":10472488,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472493,"byte_end":10472510,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10472515,"byte_end":10472522,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473823,"byte_end":10473832,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473167,"byte_end":10473231,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473236,"byte_end":10473239,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473244,"byte_end":10473332,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473337,"byte_end":10473360,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473365,"byte_end":10473368,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473373,"byte_end":10473387,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473392,"byte_end":10473395,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473400,"byte_end":10473413,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473418,"byte_end":10473492,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473497,"byte_end":10473502,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473507,"byte_end":10473541,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473546,"byte_end":10473549,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473554,"byte_end":10473610,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473615,"byte_end":10473671,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473676,"byte_end":10473726,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473731,"byte_end":10473767,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473772,"byte_end":10473777,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473782,"byte_end":10473799,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10473804,"byte_end":10473811,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474548,"byte_end":10474558,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474016,"byte_end":10474077,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474082,"byte_end":10474085,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474090,"byte_end":10474178,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474183,"byte_end":10474202,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474207,"byte_end":10474210,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474215,"byte_end":10474229,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474234,"byte_end":10474237,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474242,"byte_end":10474255,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474260,"byte_end":10474334,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474339,"byte_end":10474344,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474349,"byte_end":10474383,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474388,"byte_end":10474391,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474396,"byte_end":10474451,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474456,"byte_end":10474492,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474497,"byte_end":10474502,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474507,"byte_end":10474524,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474529,"byte_end":10474536,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475602,"byte_end":10475609,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474744,"byte_end":10474794,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474799,"byte_end":10474802,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474807,"byte_end":10474859,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474864,"byte_end":10474867,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474872,"byte_end":10474886,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474891,"byte_end":10474894,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474899,"byte_end":10474912,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474917,"byte_end":10474991,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10474996,"byte_end":10475001,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475006,"byte_end":10475040,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475045,"byte_end":10475048,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475053,"byte_end":10475097,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475102,"byte_end":10475143,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475148,"byte_end":10475190,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475195,"byte_end":10475235,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475240,"byte_end":10475290,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475295,"byte_end":10475301,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475306,"byte_end":10475309,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475314,"byte_end":10475369,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475374,"byte_end":10475377,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475382,"byte_end":10475414,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475419,"byte_end":10475487,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475492,"byte_end":10475540,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475545,"byte_end":10475550,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475555,"byte_end":10475572,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10475577,"byte_end":10475584,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476724,"byte_end":10476733,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476142,"byte_end":10476176,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476181,"byte_end":10476184,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476189,"byte_end":10476253,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476258,"byte_end":10476261,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476266,"byte_end":10476280,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476285,"byte_end":10476288,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476293,"byte_end":10476306,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476311,"byte_end":10476385,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476390,"byte_end":10476395,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476400,"byte_end":10476434,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476439,"byte_end":10476442,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476447,"byte_end":10476502,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476507,"byte_end":10476510,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476515,"byte_end":10476547,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476552,"byte_end":10476606,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476611,"byte_end":10476662,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476667,"byte_end":10476672,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476677,"byte_end":10476694,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476699,"byte_end":10476706,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477461,"byte_end":10477470,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476847,"byte_end":10476912,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476917,"byte_end":10476920,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476925,"byte_end":10476991,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10476996,"byte_end":10476999,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477004,"byte_end":10477018,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477023,"byte_end":10477026,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477031,"byte_end":10477044,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477049,"byte_end":10477123,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477128,"byte_end":10477133,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477138,"byte_end":10477172,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477177,"byte_end":10477180,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477185,"byte_end":10477240,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477245,"byte_end":10477248,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477253,"byte_end":10477285,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477290,"byte_end":10477344,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477349,"byte_end":10477398,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477403,"byte_end":10477408,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477413,"byte_end":10477431,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477436,"byte_end":10477443,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478362,"byte_end":10478369,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477584,"byte_end":10477632,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477637,"byte_end":10477640,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477645,"byte_end":10477737,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477742,"byte_end":10477836,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477841,"byte_end":10477891,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477896,"byte_end":10477899,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477904,"byte_end":10477930,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477935,"byte_end":10477961,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10477966,"byte_end":10478002,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478007,"byte_end":10478010,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478015,"byte_end":10478029,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478034,"byte_end":10478037,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478042,"byte_end":10478055,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478060,"byte_end":10478134,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478139,"byte_end":10478144,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478149,"byte_end":10478183,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478188,"byte_end":10478191,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478196,"byte_end":10478251,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478256,"byte_end":10478300,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478305,"byte_end":10478310,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478315,"byte_end":10478332,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10478337,"byte_end":10478344,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479808,"byte_end":10479812,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479072,"byte_end":10479148,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479153,"byte_end":10479156,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479161,"byte_end":10479233,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479238,"byte_end":10479295,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479300,"byte_end":10479303,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479308,"byte_end":10479340,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479345,"byte_end":10479348,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479353,"byte_end":10479367,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479372,"byte_end":10479375,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479380,"byte_end":10479393,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479398,"byte_end":10479472,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479477,"byte_end":10479482,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479487,"byte_end":10479521,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479526,"byte_end":10479529,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479534,"byte_end":10479593,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479598,"byte_end":10479642,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479647,"byte_end":10479696,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479701,"byte_end":10479704,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479709,"byte_end":10479746,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479751,"byte_end":10479756,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479761,"byte_end":10479778,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479783,"byte_end":10479790,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480492,"byte_end":10480496,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479903,"byte_end":10479937,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479942,"byte_end":10479945,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10479950,"byte_end":10479999,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480004,"byte_end":10480007,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480012,"byte_end":10480026,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480031,"byte_end":10480034,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480039,"byte_end":10480052,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480057,"byte_end":10480131,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480136,"byte_end":10480141,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480146,"byte_end":10480180,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480185,"byte_end":10480188,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480193,"byte_end":10480248,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480253,"byte_end":10480297,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480302,"byte_end":10480305,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480310,"byte_end":10480342,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480347,"byte_end":10480388,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480393,"byte_end":10480430,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480435,"byte_end":10480440,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480445,"byte_end":10480462,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480467,"byte_end":10480474,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481215,"byte_end":10481219,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480591,"byte_end":10480660,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480665,"byte_end":10480668,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480673,"byte_end":10480724,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480729,"byte_end":10480732,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480737,"byte_end":10480751,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480756,"byte_end":10480759,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480764,"byte_end":10480777,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480782,"byte_end":10480856,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480861,"byte_end":10480866,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480871,"byte_end":10480905,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480910,"byte_end":10480913,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480918,"byte_end":10480973,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10480978,"byte_end":10481022,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481027,"byte_end":10481030,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481035,"byte_end":10481067,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481072,"byte_end":10481113,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481118,"byte_end":10481153,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481158,"byte_end":10481163,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481168,"byte_end":10481185,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481190,"byte_end":10481197,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481526,"byte_end":10481535,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481314,"byte_end":10481378,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481383,"byte_end":10481386,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481391,"byte_end":10481457,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481462,"byte_end":10481465,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481470,"byte_end":10481514,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481788,"byte_end":10481801,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481619,"byte_end":10481683,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481688,"byte_end":10481691,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481696,"byte_end":10481776,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482140,"byte_end":10482157,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481899,"byte_end":10481968,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481973,"byte_end":10481976,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10481981,"byte_end":10482055,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482060,"byte_end":10482063,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482068,"byte_end":10482128,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482502,"byte_end":10482523,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482249,"byte_end":10482318,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482323,"byte_end":10482326,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482331,"byte_end":10482405,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482410,"byte_end":10482413,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482418,"byte_end":10482428,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482433,"byte_end":10482436,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482441,"byte_end":10482490,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482866,"byte_end":10482882,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482629,"byte_end":10482697,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482702,"byte_end":10482705,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482710,"byte_end":10482783,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482788,"byte_end":10482791,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482796,"byte_end":10482854,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483366,"byte_end":10483386,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10482972,"byte_end":10483040,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483045,"byte_end":10483048,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483053,"byte_end":10483148,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483153,"byte_end":10483239,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483244,"byte_end":10483269,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483274,"byte_end":10483277,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483282,"byte_end":10483292,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483297,"byte_end":10483300,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483305,"byte_end":10483354,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483735,"byte_end":10483752,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483492,"byte_end":10483563,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483568,"byte_end":10483571,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483576,"byte_end":10483650,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483655,"byte_end":10483658,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483663,"byte_end":10483723,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484101,"byte_end":10484122,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483844,"byte_end":10483915,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483920,"byte_end":10483923,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10483928,"byte_end":10484004,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484009,"byte_end":10484012,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484017,"byte_end":10484027,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484032,"byte_end":10484035,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484040,"byte_end":10484089,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484416,"byte_end":10484419,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484228,"byte_end":10484286,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484291,"byte_end":10484294,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484299,"byte_end":10484359,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484364,"byte_end":10484367,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484372,"byte_end":10484404,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484681,"byte_end":10484688,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484496,"byte_end":10484554,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484559,"byte_end":10484562,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484567,"byte_end":10484643,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484648,"byte_end":10484669,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485705,"byte_end":10485722,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484781,"byte_end":10484839,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484844,"byte_end":10484847,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484852,"byte_end":10484944,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10484949,"byte_end":10485044,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485049,"byte_end":10485134,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485139,"byte_end":10485189,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485194,"byte_end":10485197,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485202,"byte_end":10485216,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485221,"byte_end":10485224,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485229,"byte_end":10485242,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485247,"byte_end":10485321,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485326,"byte_end":10485331,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485336,"byte_end":10485363,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485368,"byte_end":10485371,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485376,"byte_end":10485410,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485415,"byte_end":10485418,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485423,"byte_end":10485469,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485474,"byte_end":10485524,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485529,"byte_end":10485532,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485537,"byte_end":10485592,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485597,"byte_end":10485649,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485654,"byte_end":10485659,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485664,"byte_end":10485681,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485686,"byte_end":10485693,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486785,"byte_end":10486802,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485902,"byte_end":10485962,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485967,"byte_end":10485970,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10485975,"byte_end":10486067,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486072,"byte_end":10486166,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486171,"byte_end":10486204,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486209,"byte_end":10486212,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486217,"byte_end":10486231,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486236,"byte_end":10486239,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486244,"byte_end":10486257,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486262,"byte_end":10486336,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486341,"byte_end":10486346,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486351,"byte_end":10486392,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486397,"byte_end":10486400,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486405,"byte_end":10486439,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486444,"byte_end":10486447,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486452,"byte_end":10486539,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486544,"byte_end":10486612,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486617,"byte_end":10486671,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486676,"byte_end":10486679,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486684,"byte_end":10486729,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486734,"byte_end":10486739,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486744,"byte_end":10486761,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486766,"byte_end":10486773,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487195,"byte_end":10487213,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10486976,"byte_end":10487035,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487040,"byte_end":10487043,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487048,"byte_end":10487118,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487123,"byte_end":10487126,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487131,"byte_end":10487183,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487615,"byte_end":10487633,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487394,"byte_end":10487455,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487460,"byte_end":10487463,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487468,"byte_end":10487538,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487543,"byte_end":10487546,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487551,"byte_end":10487603,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":12182,"byte_end":12186,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958384,"byte_end":9958392,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960386,"byte_end":9960393,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9965750,"byte_end":9965767,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967671,"byte_end":9967681,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968754,"byte_end":9968764,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968913,"byte_end":9968923,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972323,"byte_end":9972327,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972937,"byte_end":9972941,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973544,"byte_end":9973550,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973961,"byte_end":9973967,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974593,"byte_end":9974601,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978481,"byte_end":9978492,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978636,"byte_end":9978647,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978812,"byte_end":9978823,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9979191,"byte_end":9979200,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_locals_wrapper.rs","byte_start":9981265,"byte_end":9981282,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_locals_wrapper.rs","byte_start":9982695,"byte_end":9982712,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108294,"byte_end":10108301,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109238,"byte_end":10109244,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109274,"byte_end":10109280,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9805275,"byte_end":9805288,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9805515,"byte_end":9805528,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806164,"byte_end":9806176,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806203,"byte_end":9806215,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891513,"byte_end":9891522,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891729,"byte_end":9891738,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891778,"byte_end":9891787,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9892921,"byte_end":9892930,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9893137,"byte_end":9893146,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9893186,"byte_end":9893195,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\chain.rs","byte_start":9894618,"byte_end":9894623,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\chain.rs","byte_start":9894841,"byte_end":9894846,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cloned.rs","byte_start":9895945,"byte_end":9895951,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cloned.rs","byte_start":9896063,"byte_end":9896069,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cmp.rs","byte_start":9897053,"byte_end":9897062,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cmp.rs","byte_start":9897291,"byte_end":9897300,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\copied.rs","byte_start":9899692,"byte_end":9899698,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\copied.rs","byte_start":9899810,"byte_end":9899816,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","byte_start":9900506,"byte_end":9900511,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","byte_start":9900696,"byte_end":9900701,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\enumerate.rs","byte_start":9901442,"byte_end":9901451,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\enumerate.rs","byte_start":9901558,"byte_end":9901567,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\eq.rs","byte_start":9902625,"byte_end":9902633,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\eq.rs","byte_start":9902847,"byte_end":9902855,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter.rs","byte_start":9904187,"byte_end":9904193,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter.rs","byte_start":9904358,"byte_end":9904364,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter_map.rs","byte_start":9905214,"byte_end":9905223,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter_map.rs","byte_start":9905342,"byte_end":9905351,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906234,"byte_end":9906244,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906378,"byte_end":9906388,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906429,"byte_end":9906439,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907274,"byte_end":9907287,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907421,"byte_end":9907434,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907478,"byte_end":9907491,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fold.rs","byte_start":9908447,"byte_end":9908457,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fold.rs","byte_start":9908650,"byte_end":9908660,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\for_each.rs","byte_start":9909671,"byte_end":9909684,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\for_each.rs","byte_start":9909833,"byte_end":9909846,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fuse.rs","byte_start":9910923,"byte_end":9910927,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fuse.rs","byte_start":9911082,"byte_end":9911086,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ge.rs","byte_start":9912157,"byte_end":9912165,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ge.rs","byte_start":9912373,"byte_end":9912381,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\gt.rs","byte_start":9913440,"byte_end":9913448,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\gt.rs","byte_start":9913656,"byte_end":9913664,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\inspect.rs","byte_start":9914682,"byte_end":9914689,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\inspect.rs","byte_start":9914838,"byte_end":9914845,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\last.rs","byte_start":9915614,"byte_end":9915624,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\last.rs","byte_start":9915740,"byte_end":9915750,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\le.rs","byte_start":9916913,"byte_end":9916921,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\le.rs","byte_start":9917129,"byte_end":9917137,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\lt.rs","byte_start":9918206,"byte_end":9918214,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\lt.rs","byte_start":9918422,"byte_end":9918430,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\map.rs","byte_start":9919213,"byte_end":9919216,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\map.rs","byte_start":9919368,"byte_end":9919371,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max.rs","byte_start":9920095,"byte_end":9920104,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max.rs","byte_start":9920219,"byte_end":9920228,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by.rs","byte_start":9921453,"byte_end":9921464,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by.rs","byte_start":9921651,"byte_end":9921662,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by_key.rs","byte_start":9922941,"byte_end":9922955,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by_key.rs","byte_start":9923140,"byte_end":9923154,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min.rs","byte_start":9924625,"byte_end":9924634,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min.rs","byte_start":9924749,"byte_end":9924758,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by.rs","byte_start":9925980,"byte_end":9925991,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by.rs","byte_start":9926178,"byte_end":9926189,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by_key.rs","byte_start":9927495,"byte_end":9927509,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by_key.rs","byte_start":9927694,"byte_end":9927708,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ne.rs","byte_start":9929342,"byte_end":9929350,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ne.rs","byte_start":9929564,"byte_end":9929572,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\next.rs","byte_start":9930693,"byte_end":9930703,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931169,"byte_end":9931178,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931202,"byte_end":9931211,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931341,"byte_end":9931350,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":9932605,"byte_end":9932621,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":9932850,"byte_end":9932866,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935343,"byte_end":9935357,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935387,"byte_end":9935401,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935604,"byte_end":9935618,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\scan.rs","byte_start":9936866,"byte_end":9936870,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\scan.rs","byte_start":9937075,"byte_end":9937079,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip.rs","byte_start":9938114,"byte_end":9938118,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip.rs","byte_start":9938232,"byte_end":9938236,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip_while.rs","byte_start":9939406,"byte_end":9939415,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip_while.rs","byte_start":9939597,"byte_end":9939606,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\step_by.rs","byte_start":9941008,"byte_end":9941014,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\step_by.rs","byte_start":9941215,"byte_end":9941221,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take.rs","byte_start":9942482,"byte_end":9942486,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take.rs","byte_start":9942657,"byte_end":9942661,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take_while.rs","byte_start":9943755,"byte_end":9943764,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take_while.rs","byte_start":9943929,"byte_end":9943938,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944847,"byte_end":9944860,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944896,"byte_end":9944909,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9945121,"byte_end":9945134,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946216,"byte_end":9946232,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946262,"byte_end":9946278,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946413,"byte_end":9946429,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9947735,"byte_end":9947738,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9947978,"byte_end":9947981,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9948183,"byte_end":9948186,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949785,"byte_end":9949790,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950341,"byte_end":9950347,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951276,"byte_end":9951282,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952704,"byte_end":9952712,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9954081,"byte_end":9954085,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955312,"byte_end":9955318,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955934,"byte_end":9955944,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9957136,"byte_end":9957146,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\lines.rs","byte_start":10172578,"byte_end":10172583,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_line.rs","byte_start":10174584,"byte_end":10174598,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_until.rs","byte_start":10176108,"byte_end":10176123,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\split.rs","byte_start":10177352,"byte_end":10177357,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194830,"byte_end":10194835,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196710,"byte_end":10196715,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198874,"byte_end":10198879,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10199121,"byte_end":10199126,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10200271,"byte_end":10200276,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read.rs","byte_start":10202167,"byte_end":10202177,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_exact.rs","byte_start":10202773,"byte_end":10202788,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10203743,"byte_end":10203758,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10204908,"byte_end":10204913,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_string.rs","byte_start":10206315,"byte_end":10206333,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_vectored.rs","byte_start":10207737,"byte_end":10207755,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208596,"byte_end":10208600,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212272,"byte_end":10212276,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10213194,"byte_end":10213198,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\seek.rs","byte_start":10218685,"byte_end":10218695,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\flush.rs","byte_start":10230336,"byte_end":10230347,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write.rs","byte_start":10230878,"byte_end":10230889,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_all.rs","byte_start":10231475,"byte_end":10231489,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_fmt.rs","byte_start":10232491,"byte_end":10232505,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_vectored.rs","byte_start":10234046,"byte_end":10234065,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10234553,"byte_end":10234559,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10234812,"byte_end":10234824,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10235111,"byte_end":10235123,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10235254,"byte_end":10235266,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237289,"byte_end":10237298,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238526,"byte_end":10238535,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10241275,"byte_end":10241284,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10242738,"byte_end":10242747,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10243669,"byte_end":10243678,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10244016,"byte_end":10244025,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251190,"byte_end":10251199,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10257031,"byte_end":10257040,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10257938,"byte_end":10257947,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10258193,"byte_end":10258202,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260734,"byte_end":10260744,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265604,"byte_end":10265610,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268911,"byte_end":10268917,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10269183,"byte_end":10269189,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10269705,"byte_end":10269711,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10270061,"byte_end":10270067,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10270826,"byte_end":10270832,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10271356,"byte_end":10271362,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272901,"byte_end":10272906,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10273025,"byte_end":10273030,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10273234,"byte_end":10273239,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274491,"byte_end":10274497,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274616,"byte_end":10274622,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275665,"byte_end":10275669,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275788,"byte_end":10275792,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277601,"byte_end":10277608,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10280679,"byte_end":10280685,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10284374,"byte_end":10284380,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287220,"byte_end":10287225,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10289241,"byte_end":10289246,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10291590,"byte_end":10291595,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294960,"byte_end":10294966,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10298655,"byte_end":10298661,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310665,"byte_end":10310675,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314022,"byte_end":10314030,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2742},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317993,"byte_end":10318001,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10318154,"byte_end":10318162,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320499,"byte_end":10320503,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2798},{"krate":0,"index":2804},{"krate":0,"index":2809},{"krate":0,"index":2814},{"krate":0,"index":2819},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328349,"byte_end":10328353,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328848,"byte_end":10328852,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2830}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328966,"byte_end":10328970,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10329451,"byte_end":10329455,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10330619,"byte_end":10330623,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10331112,"byte_end":10331116,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10331981,"byte_end":10331985,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332117,"byte_end":10332121,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332289,"byte_end":10332293,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332697,"byte_end":10332701,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332738,"byte_end":10332742,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10333009,"byte_end":10333013,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334248,"byte_end":10334257,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334294,"byte_end":10334303,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334319,"byte_end":10334328,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334719,"byte_end":10334728,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10335036,"byte_end":10335045,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10335171,"byte_end":10335180,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10336741,"byte_end":10336750,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361071,"byte_end":10361082,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367871,"byte_end":10367882,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10374137,"byte_end":10374144,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10374343,"byte_end":10374350,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389857,"byte_end":10389866,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10390071,"byte_end":10390080,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390865,"byte_end":10390875,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391384,"byte_end":10391394,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391487,"byte_end":10391497,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391603,"byte_end":10391613,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391770,"byte_end":10391780,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391905,"byte_end":10391915,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391945,"byte_end":10391954,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392667,"byte_end":10392671,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393144,"byte_end":10393148,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393310,"byte_end":10393314,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393455,"byte_end":10393466,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393763,"byte_end":10393767,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393860,"byte_end":10393864,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393981,"byte_end":10393985,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10394132,"byte_end":10394136,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395818,"byte_end":10395822,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3234},{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420984,"byte_end":10420987,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421216,"byte_end":10421219,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421514,"byte_end":10421516,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421719,"byte_end":10421723,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3246},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421847,"byte_end":10421851,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421945,"byte_end":10421949,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422027,"byte_end":10422032,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422128,"byte_end":10422131,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422257,"byte_end":10422260,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422360,"byte_end":10422368,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422549,"byte_end":10422555,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422644,"byte_end":10422651,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10425799,"byte_end":10425803,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10425910,"byte_end":10425914,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10426010,"byte_end":10426017,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3290}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427834,"byte_end":10427841,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433087,"byte_end":10433094,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433202,"byte_end":10433205,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433305,"byte_end":10433308,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433459,"byte_end":10433466,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433583,"byte_end":10433590,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433699,"byte_end":10433707,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433816,"byte_end":10433823,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433929,"byte_end":10433936,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434115,"byte_end":10434122,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434317,"byte_end":10434324,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434481,"byte_end":10434488,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434609,"byte_end":10434616,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434708,"byte_end":10434711,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434843,"byte_end":10434846,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434997,"byte_end":10435004,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435116,"byte_end":10435119,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435342,"byte_end":10435344,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435559,"byte_end":10435566,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3364}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436710,"byte_end":10436717,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436846,"byte_end":10436853,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436958,"byte_end":10436965,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442246,"byte_end":10442265,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442433,"byte_end":10442452,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442724,"byte_end":10442743,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10443446,"byte_end":10443456,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10443751,"byte_end":10443763,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3447},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10444128,"byte_end":10444140,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3451},{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10447859,"byte_end":10447865,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3482},{"krate":0,"index":3483}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450072,"byte_end":10450083,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454690,"byte_end":10454698,"line_start":196,"line_end":196,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3522}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10455244,"byte_end":10455252,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10455471,"byte_end":10455482,"line_start":222,"line_end":222,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456441,"byte_end":10456452,"line_start":258,"line_end":258,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456587,"byte_end":10456598,"line_start":264,"line_end":264,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456781,"byte_end":10456792,"line_start":270,"line_end":270,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459065,"byte_end":10459074,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466182,"byte_end":10466191,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3562}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466859,"byte_end":10466868,"line_start":312,"line_end":312,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10468124,"byte_end":10468133,"line_start":356,"line_end":356,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469318,"byte_end":10469327,"line_start":395,"line_end":395,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4065}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469472,"byte_end":10469481,"line_start":401,"line_end":401,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469660,"byte_end":10469669,"line_start":407,"line_end":407,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471937,"byte_end":10471946,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487841,"byte_end":10487850,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10488784,"byte_end":10488793,"line_start":562,"line_end":562,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10488938,"byte_end":10488947,"line_start":568,"line_end":568,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10489126,"byte_end":10489135,"line_start":574,"line_end":574,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10945,"byte_end":10949,"line_start":301,"line_end":301,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":33}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10963,"byte_end":10969,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":10983,"byte_end":10989,"line_start":303,"line_end":303,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":66}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11017,"byte_end":11019,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1577}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\mod.rs","byte_start":10148732,"byte_end":10148739,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1625}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11033,"byte_end":11035,"line_start":308,"line_end":308,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1579}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\mod.rs","byte_start":10150056,"byte_end":10150063,"line_start":8,"line_end":8,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2612}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\os\\windows\\mod.rs","byte_start":10299039,"byte_end":10299041,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2613}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11049,"byte_end":11056,"line_start":309,"line_end":309,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1580}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11070,"byte_end":11074,"line_start":310,"line_end":310,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1581}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11088,"byte_end":11095,"line_start":311,"line_end":311,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1594}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11166,"byte_end":11168,"line_start":316,"line_end":316,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2636}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11182,"byte_end":11186,"line_start":317,"line_end":317,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3098}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\lib.rs","byte_start":11200,"byte_end":11203,"line_start":318,"line_end":318,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3384}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\utils.rs","byte_start":12182,"byte_end":12186,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\yield_now.rs","byte_start":9958384,"byte_end":9958392,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9960386,"byte_end":9960393,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\builder.rs","byte_start":9965750,"byte_end":9965767,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6171},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9967671,"byte_end":9967681,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968754,"byte_end":9968764,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\join_handle.rs","byte_start":9968913,"byte_end":9968923,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972323,"byte_end":9972327,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task.rs","byte_start":9972937,"byte_end":9972941,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973544,"byte_end":9973550,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_id.rs","byte_start":9973961,"byte_end":9973967,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1312},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9974593,"byte_end":9974601,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978481,"byte_end":9978492,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978636,"byte_end":9978647,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9978812,"byte_end":9978823,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1337},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_local.rs","byte_start":9979191,"byte_end":9979200,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_locals_wrapper.rs","byte_start":9981265,"byte_end":9981282,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\task\\task_locals_wrapper.rs","byte_start":9982695,"byte_end":9982712,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\future\\mod.rs","byte_start":10093807,"byte_end":10093813,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":9585},"to":{"krate":0,"index":1376}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\pending.rs","byte_start":10108294,"byte_end":10108301,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109238,"byte_end":10109244,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1411},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\poll_fn.rs","byte_start":10109274,"byte_end":10109280,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1411},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9805275,"byte_end":9805288,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":6134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9805515,"byte_end":9805528,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":6134},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806164,"byte_end":9806176,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1426},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\future\\timeout.rs","byte_start":9806203,"byte_end":9806215,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891513,"byte_end":9891522,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891729,"byte_end":9891738,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":95},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\all.rs","byte_start":9891778,"byte_end":9891787,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":95},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9892921,"byte_end":9892930,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9893137,"byte_end":9893146,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\any.rs","byte_start":9893186,"byte_end":9893195,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\chain.rs","byte_start":9894618,"byte_end":9894623,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\chain.rs","byte_start":9894841,"byte_end":9894846,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6092},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cloned.rs","byte_start":9895945,"byte_end":9895951,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cloned.rs","byte_start":9896063,"byte_end":9896069,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6054},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cmp.rs","byte_start":9897053,"byte_end":9897062,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cmp.rs","byte_start":9897291,"byte_end":9897300,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5996},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\copied.rs","byte_start":9899692,"byte_end":9899698,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\copied.rs","byte_start":9899810,"byte_end":9899816,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5965},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","byte_start":9900506,"byte_end":9900511,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\cycle.rs","byte_start":9900696,"byte_end":9900701,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5925},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\enumerate.rs","byte_start":9901442,"byte_end":9901451,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\enumerate.rs","byte_start":9901558,"byte_end":9901567,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5885},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\eq.rs","byte_start":9902625,"byte_end":9902633,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\eq.rs","byte_start":9902847,"byte_end":9902855,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5835},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter.rs","byte_start":9904187,"byte_end":9904193,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter.rs","byte_start":9904358,"byte_end":9904364,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5793},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter_map.rs","byte_start":9905214,"byte_end":9905223,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\filter_map.rs","byte_start":9905342,"byte_end":9905351,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5744},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906234,"byte_end":9906244,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906378,"byte_end":9906388,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find.rs","byte_start":9906429,"byte_end":9906439,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":307},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907274,"byte_end":9907287,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907421,"byte_end":9907434,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\find_map.rs","byte_start":9907478,"byte_end":9907491,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fold.rs","byte_start":9908447,"byte_end":9908457,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fold.rs","byte_start":9908650,"byte_end":9908660,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5684},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\for_each.rs","byte_start":9909671,"byte_end":9909684,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\for_each.rs","byte_start":9909833,"byte_end":9909846,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5630},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fuse.rs","byte_start":9910923,"byte_end":9910927,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\fuse.rs","byte_start":9911082,"byte_end":9911086,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5592},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ge.rs","byte_start":9912157,"byte_end":9912165,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ge.rs","byte_start":9912373,"byte_end":9912381,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5546},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\gt.rs","byte_start":9913440,"byte_end":9913448,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\gt.rs","byte_start":9913656,"byte_end":9913664,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\inspect.rs","byte_start":9914682,"byte_end":9914689,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\inspect.rs","byte_start":9914838,"byte_end":9914845,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5463},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\last.rs","byte_start":9915614,"byte_end":9915624,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\last.rs","byte_start":9915740,"byte_end":9915750,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5411},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\le.rs","byte_start":9916913,"byte_end":9916921,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\le.rs","byte_start":9917129,"byte_end":9917137,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\lt.rs","byte_start":9918206,"byte_end":9918214,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\lt.rs","byte_start":9918422,"byte_end":9918430,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5329},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\map.rs","byte_start":9919213,"byte_end":9919216,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\map.rs","byte_start":9919368,"byte_end":9919371,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5287},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max.rs","byte_start":9920095,"byte_end":9920104,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max.rs","byte_start":9920219,"byte_end":9920228,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5235},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by.rs","byte_start":9921453,"byte_end":9921464,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by.rs","byte_start":9921651,"byte_end":9921662,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5178},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by_key.rs","byte_start":9922941,"byte_end":9922955,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\max_by_key.rs","byte_start":9923140,"byte_end":9923154,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5121},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min.rs","byte_start":9924625,"byte_end":9924634,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min.rs","byte_start":9924749,"byte_end":9924758,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5076},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by.rs","byte_start":9925980,"byte_end":9925991,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by.rs","byte_start":9926178,"byte_end":9926189,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5019},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by_key.rs","byte_start":9927495,"byte_end":9927509,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\min_by_key.rs","byte_start":9927694,"byte_end":9927708,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4962},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ne.rs","byte_start":9929342,"byte_end":9929350,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\ne.rs","byte_start":9929564,"byte_end":9929572,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4917},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\next.rs","byte_start":9930693,"byte_end":9930703,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931169,"byte_end":9931178,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931202,"byte_end":9931211,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\nth.rs","byte_start":9931341,"byte_end":9931350,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":9932605,"byte_end":9932621,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\partial_cmp.rs","byte_start":9932850,"byte_end":9932866,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935343,"byte_end":9935357,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935387,"byte_end":9935401,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\position.rs","byte_start":9935604,"byte_end":9935618,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\scan.rs","byte_start":9936866,"byte_end":9936870,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\scan.rs","byte_start":9937075,"byte_end":9937079,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4815},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip.rs","byte_start":9938114,"byte_end":9938118,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip.rs","byte_start":9938232,"byte_end":9938236,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4771},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip_while.rs","byte_start":9939406,"byte_end":9939415,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\skip_while.rs","byte_start":9939597,"byte_end":9939606,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4724},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\step_by.rs","byte_start":9941008,"byte_end":9941014,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\step_by.rs","byte_start":9941215,"byte_end":9941221,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4678},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take.rs","byte_start":9942482,"byte_end":9942486,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take.rs","byte_start":9942657,"byte_end":9942661,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4635},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take_while.rs","byte_start":9943755,"byte_end":9943764,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\take_while.rs","byte_start":9943929,"byte_end":9943938,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4588},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944847,"byte_end":9944860,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9944896,"byte_end":9944909,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_fold.rs","byte_start":9945121,"byte_end":9945134,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946216,"byte_end":9946232,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946262,"byte_end":9946278,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\try_for_each.rs","byte_start":9946413,"byte_end":9946429,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9947735,"byte_end":9947738,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4532},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9947978,"byte_end":9947981,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\zip.rs","byte_start":9948183,"byte_end":9948186,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4532},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\stream\\mod.rs","byte_start":9821599,"byte_end":9821605,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":1452}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\empty.rs","byte_start":9949785,"byte_end":9949790,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1544},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9950341,"byte_end":9950347,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_fn.rs","byte_start":9951276,"byte_end":9951282,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1550},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\from_iter.rs","byte_start":9952704,"byte_end":9952712,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4498},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\once.rs","byte_start":9954081,"byte_end":9954085,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4459},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat.rs","byte_start":9955312,"byte_end":9955318,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1559},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9955934,"byte_end":9955944,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1568},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\stream\\repeat_with.rs","byte_start":9957136,"byte_end":9957146,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1568},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\lines.rs","byte_start":10172578,"byte_end":10172583,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4411},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_line.rs","byte_start":10174584,"byte_end":10174598,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\read_until.rs","byte_start":10176108,"byte_end":10176123,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\split.rs","byte_start":10177352,"byte_end":10177357,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4363},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_read\\mod.rs","byte_start":10160592,"byte_end":10160599,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":25,"index":27},"to":{"krate":0,"index":2287}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\bytes.rs","byte_start":10194830,"byte_end":10194835,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2296},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10196710,"byte_end":10196715,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10198874,"byte_end":10198879,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4309},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10199121,"byte_end":10199126,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4309},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\chain.rs","byte_start":10200271,"byte_end":10200276,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4309},"to":{"krate":25,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read.rs","byte_start":10202167,"byte_end":10202177,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1783},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_exact.rs","byte_start":10202773,"byte_end":10202788,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1802},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10203743,"byte_end":10203758,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1820},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_end.rs","byte_start":10204908,"byte_end":10204913,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1832},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_to_string.rs","byte_start":10206315,"byte_end":10206333,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\read_vectored.rs","byte_start":10207737,"byte_end":10207755,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10208596,"byte_end":10208600,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10212272,"byte_end":10212276,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4274},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\take.rs","byte_start":10213194,"byte_end":10213198,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4274},"to":{"krate":25,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\read\\mod.rs","byte_start":10179436,"byte_end":10179440,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":25,"index":17},"to":{"krate":0,"index":2314}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\seek.rs","byte_start":10218685,"byte_end":10218695,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\seek\\mod.rs","byte_start":10215922,"byte_end":10215926,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":25,"index":25},"to":{"krate":0,"index":2344}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\flush.rs","byte_start":10230336,"byte_end":10230347,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1954},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write.rs","byte_start":10230878,"byte_end":10230889,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1971},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_all.rs","byte_start":10231475,"byte_end":10231489,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_fmt.rs","byte_start":10232491,"byte_end":10232505,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\write_vectored.rs","byte_start":10234046,"byte_end":10234065,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2029},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\write\\mod.rs","byte_start":10220325,"byte_end":10220330,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":25,"index":20},"to":{"krate":0,"index":2360}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10234553,"byte_end":10234559,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":2,"index":34807},"to":{"krate":0,"index":13}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10234812,"byte_end":10234824,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10235111,"byte_end":10235123,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2374},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\utils.rs","byte_start":10235254,"byte_end":10235266,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2374},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10237289,"byte_end":10237298,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10238526,"byte_end":10238535,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10241275,"byte_end":10241284,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4224},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10242738,"byte_end":10242747,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4224},"to":{"krate":25,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10243669,"byte_end":10243678,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4224},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_reader.rs","byte_start":10244016,"byte_end":10244025,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4224},"to":{"krate":25,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10251190,"byte_end":10251199,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10257031,"byte_end":10257040,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4183},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10257938,"byte_end":10257947,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4183},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\buf_writer.rs","byte_start":10258193,"byte_end":10258202,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4183},"to":{"krate":25,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\copy.rs","byte_start":10260734,"byte_end":10260744,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4134},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10265604,"byte_end":10265610,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10268911,"byte_end":10268917,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10269183,"byte_end":10269189,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10269705,"byte_end":10269711,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10270061,"byte_end":10270067,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10270826,"byte_end":10270832,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\cursor.rs","byte_start":10271356,"byte_end":10271362,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2387},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10272901,"byte_end":10272906,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2231},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10273025,"byte_end":10273030,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2231},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\empty.rs","byte_start":10273234,"byte_end":10273239,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2231},"to":{"krate":25,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274491,"byte_end":10274497,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2251},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\repeat.rs","byte_start":10274616,"byte_end":10274622,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2251},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275665,"byte_end":10275669,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2267},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\sink.rs","byte_start":10275788,"byte_end":10275792,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2267},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\timeout.rs","byte_start":10277601,"byte_end":10277608,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4092},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10280679,"byte_end":10280685,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2509},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stderr.rs","byte_start":10284374,"byte_end":10284380,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2509},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10287220,"byte_end":10287225,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10289241,"byte_end":10289246,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2543},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdin.rs","byte_start":10291590,"byte_end":10291595,"line_start":214,"line_end":214,"column_start":26,"column_end":31},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2543},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10294960,"byte_end":10294966,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2578},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\io\\stdout.rs","byte_start":10298655,"byte_end":10298661,"line_start":188,"line_end":188,"column_start":26,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2578},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_builder.rs","byte_start":10310665,"byte_end":10310675,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10314022,"byte_end":10314030,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10317993,"byte_end":10318001,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2732},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\dir_entry.rs","byte_start":10318154,"byte_end":10318162,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2732},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10320499,"byte_end":10320503,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328349,"byte_end":10328353,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2787},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328848,"byte_end":10328852,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2787},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10328966,"byte_end":10328970,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2787},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10329451,"byte_end":10329455,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2787},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10330619,"byte_end":10330623,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2787},"to":{"krate":25,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10331112,"byte_end":10331116,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2787},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10331981,"byte_end":10331985,"line_start":444,"line_end":444,"column_start":26,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2787},"to":{"krate":1,"index":9264}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332117,"byte_end":10332121,"line_start":450,"line_end":450,"column_start":28,"column_end":32},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2787},"to":{"krate":1,"index":9266}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332289,"byte_end":10332293,"line_start":456,"line_end":456,"column_start":28,"column_end":32},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2787},"to":{"krate":1,"index":9268}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332697,"byte_end":10332701,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2850},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10332738,"byte_end":10332742,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2850},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10333009,"byte_end":10333013,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334248,"byte_end":10334257,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334294,"byte_end":10334303,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334319,"byte_end":10334328,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10334719,"byte_end":10334728,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10335036,"byte_end":10335045,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10335171,"byte_end":10335180,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\file.rs","byte_start":10336741,"byte_end":10336750,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10361071,"byte_end":10361082,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\open_options.rs","byte_start":10367871,"byte_end":10367882,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10374137,"byte_end":10374144,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\fs\\read_dir.rs","byte_start":10374343,"byte_end":10374350,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3672},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10389857,"byte_end":10389866,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3686},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\ancestors.rs","byte_start":10390071,"byte_end":10390080,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3686},"to":{"krate":2,"index":5898}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10390865,"byte_end":10390875,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391384,"byte_end":10391394,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391487,"byte_end":10391497,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391603,"byte_end":10391613,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391770,"byte_end":10391780,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391905,"byte_end":10391915,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":5898}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\components.rs","byte_start":10391945,"byte_end":10391954,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":1,"index":7519},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10392667,"byte_end":10392671,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393144,"byte_end":10393148,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393310,"byte_end":10393314,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393455,"byte_end":10393466,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3147},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393763,"byte_end":10393767,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393860,"byte_end":10393864,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10393981,"byte_end":10393985,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\iter.rs","byte_start":10394132,"byte_end":10394136,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3727},"to":{"krate":2,"index":5898}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10395818,"byte_end":10395822,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10420984,"byte_end":10420987,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":5,"index":105},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421216,"byte_end":10421219,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":5,"index":4522},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421514,"byte_end":10421516,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":236}},"from":{"krate":5,"index":3593},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421719,"byte_end":10421723,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3733},"to":{"krate":5,"index":425}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421847,"byte_end":10421851,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10421945,"byte_end":10421949,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422027,"byte_end":10422032,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":1,"index":2076},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422128,"byte_end":10422131,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":241}},"from":{"krate":5,"index":434},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422257,"byte_end":10422260,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":5,"index":434},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422360,"byte_end":10422368,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":243}},"from":{"krate":1,"index":6956},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422549,"byte_end":10422555,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":245}},"from":{"krate":5,"index":5852},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10422644,"byte_end":10422651,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10425799,"byte_end":10425803,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3733},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10425910,"byte_end":10425914,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":298}},"from":{"krate":1,"index":4342},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\path.rs","byte_start":10426010,"byte_end":10426017,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":7593},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10427834,"byte_end":10427841,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433087,"byte_end":10433094,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433202,"byte_end":10433205,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":302}},"from":{"krate":5,"index":105},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433305,"byte_end":10433308,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":303}},"from":{"krate":5,"index":105},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433459,"byte_end":10433466,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433583,"byte_end":10433590,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433699,"byte_end":10433707,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":306}},"from":{"krate":1,"index":6956},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433816,"byte_end":10433823,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10433929,"byte_end":10433936,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":9028}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434115,"byte_end":10434122,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434317,"byte_end":10434324,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434481,"byte_end":10434488,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434609,"byte_end":10434616,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434708,"byte_end":10434711,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":313}},"from":{"krate":5,"index":434},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434843,"byte_end":10434846,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":5,"index":434},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10434997,"byte_end":10435004,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435116,"byte_end":10435119,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":5,"index":4522},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435342,"byte_end":10435344,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":5,"index":3593},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10435559,"byte_end":10435566,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436710,"byte_end":10436717,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436846,"byte_end":10436853,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1994}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\path\\pathbuf.rs","byte_start":10436958,"byte_end":10436965,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442246,"byte_end":10442265,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3423},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442433,"byte_end":10442452,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3423},"to":{"krate":0,"index":13}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10442724,"byte_end":10442743,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3423},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10443446,"byte_end":10443456,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":325}},"from":{"krate":1,"index":7260},"to":{"krate":0,"index":3420}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10443751,"byte_end":10443763,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":326}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":3420}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10444128,"byte_end":10444140,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":327}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":3420}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\addr.rs","byte_start":10447859,"byte_end":10447865,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":3420}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10450072,"byte_end":10450083,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10454690,"byte_end":10454698,"line_start":196,"line_end":196,"column_start":17,"column_end":25},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3516},"to":{"krate":18,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10455244,"byte_end":10455252,"line_start":214,"line_end":214,"column_start":21,"column_end":29},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3516},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10455471,"byte_end":10455482,"line_start":222,"line_end":222,"column_start":38,"column_end":49},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4038},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456441,"byte_end":10456452,"line_start":258,"line_end":258,"column_start":26,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4038},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456587,"byte_end":10456598,"line_start":264,"line_end":264,"column_start":28,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4038},"to":{"krate":1,"index":9293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\listener.rs","byte_start":10456781,"byte_end":10456792,"line_start":270,"line_end":270,"column_start":28,"column_end":39},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4038},"to":{"krate":1,"index":9295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10459065,"byte_end":10459074,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466182,"byte_end":10466191,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4053},"to":{"krate":25,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10466859,"byte_end":10466868,"line_start":312,"line_end":312,"column_start":16,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4053},"to":{"krate":25,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10468124,"byte_end":10468133,"line_start":356,"line_end":356,"column_start":36,"column_end":45},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4053},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469318,"byte_end":10469327,"line_start":395,"line_end":395,"column_start":26,"column_end":35},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4053},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469472,"byte_end":10469481,"line_start":401,"line_end":401,"column_start":28,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4053},"to":{"krate":1,"index":9293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\tcp\\stream.rs","byte_start":10469660,"byte_end":10469669,"line_start":407,"line_end":407,"column_start":28,"column_end":37},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4053},"to":{"krate":1,"index":9295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10471937,"byte_end":10471946,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10487841,"byte_end":10487850,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4070},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10488784,"byte_end":10488793,"line_start":562,"line_end":562,"column_start":26,"column_end":35},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4070},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10488938,"byte_end":10488947,"line_start":568,"line_end":568,"column_start":28,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4070},"to":{"krate":1,"index":9293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\async-std-1.9.0\\src\\net\\udp\\mod.rs","byte_start":10489126,"byte_end":10489135,"line_start":574,"line_end":574,"column_start":28,"column_end":37},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4070},"to":{"krate":1,"index":9295}}]}