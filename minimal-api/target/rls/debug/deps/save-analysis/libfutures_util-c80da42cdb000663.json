{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=c80da42cdb000663","-C","extra-filename=-c80da42cdb000663","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_core-fea1f369c965b980.rmeta","--extern","futures_io=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_io-85f2167cc863d240.rmeta","--extern","futures_macro=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\futures_macro-80e4aac8b4cf13f8.dll","--extern","futures_sink=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_sink-dddb01dae31d0637.rmeta","--extern","futures_task=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_task-eed84601372da01e.rmeta","--extern","memchr=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libmemchr-71668c703494fa8e.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","pin_utils=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_utils-479771e35919927b.rmeta","--extern","proc_macro_hack=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\proc_macro_hack-a36415b84b2c5b82.dll","--extern","proc_macro_nested=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libproc_macro_nested-f9de70d81e78c884.rmeta","--extern","slab=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libslab-0cbef9df9c5b3e02.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_util-c80da42cdb000663.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[15412685905520555047,12957580911016733995]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":13,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","num":14,"id":{"name":"pin_utils","disambiguator":[16300649773639005160,2183150147065103287]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\join_mod.rs","num":15,"id":{"name":"futures_macro","disambiguator":[7720451070280873958,8835195757274450142]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","num":16,"id":{"name":"futures_task","disambiguator":[7711611736422884463,430324380527108256]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","num":17,"id":{"name":"futures_sink","disambiguator":[515912780452359249,12260783340991913177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","num":19,"id":{"name":"slab","disambiguator":[6325241530448311626,10372903147419273267]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","num":20,"id":{"name":"futures_io","disambiguator":[342809477498788530,10410540121957329431]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","num":21,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":13,"index":131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1182,"byte_end":1187,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":7},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1208,"byte_end":1215,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1354,"byte_end":1355,"line_start":32,"line_end":32,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1463,"byte_end":1464,"line_start":38,"line_end":38,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34648},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1502,"byte_end":1508,"line_start":40,"line_end":40,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34650},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34651},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1517,"byte_end":1521,"line_start":40,"line_end":40,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":2,"index":34652},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34653},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1523,"byte_end":1527,"line_start":40,"line_end":40,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":34793},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1543,"byte_end":1546,"line_start":41,"line_end":41,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1573,"byte_end":1576,"line_start":42,"line_end":42,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":2,"index":34810},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1578,"byte_end":1580,"line_start":42,"line_end":42,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":89}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1653,"byte_end":1654,"line_start":46,"line_end":46,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":90}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35368,"byte_end":35374,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":13,"index":11},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35434,"byte_end":35443,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":13,"index":14},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35445,"byte_end":35459,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":13,"index":17},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35493,"byte_end":35504,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":13,"index":32},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35506,"byte_end":35515,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":16,"index":111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35541,"byte_end":35550,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":16,"index":77},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35552,"byte_end":35566,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":16,"index":132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35568,"byte_end":35583,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41243,"byte_end":41254,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":0,"index":5032},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35698,"byte_end":35705,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35707,"byte_end":35711,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35713,"byte_end":35722,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35724,"byte_end":35731,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35733,"byte_end":35743,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35745,"byte_end":35748,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35750,"byte_end":35757,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35759,"byte_end":35769,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35771,"byte_end":35775,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35777,"byte_end":35786,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35882,"byte_end":35895,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35944,"byte_end":35955,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36155,"byte_end":36161,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36163,"byte_end":36173,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36225,"byte_end":36232,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36234,"byte_end":36241,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36243,"byte_end":36253,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36255,"byte_end":36264,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36266,"byte_end":36276,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36278,"byte_end":36284,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6348},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36286,"byte_end":36291,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36293,"byte_end":36304,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36306,"byte_end":36312,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36318,"byte_end":36324,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36326,"byte_end":36336,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36338,"byte_end":36354,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36356,"byte_end":36368,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36370,"byte_end":36382,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36487,"byte_end":36498,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36554,"byte_end":36558,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6602},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36560,"byte_end":36564,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36605,"byte_end":36612,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36614,"byte_end":36621,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36668,"byte_end":36678,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36680,"byte_end":36689,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36744,"byte_end":36758,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36760,"byte_end":36772,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36810,"byte_end":36822,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36862,"byte_end":36869,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36871,"byte_end":36877,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36914,"byte_end":36917,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36919,"byte_end":36921,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36923,"byte_end":36928,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6679},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36930,"byte_end":36935,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36970,"byte_end":36974,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36976,"byte_end":36981,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36983,"byte_end":36988,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36990,"byte_end":36995,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6781},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":36997,"byte_end":37001,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37003,"byte_end":37008,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37010,"byte_end":37015,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37017,"byte_end":37022,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37117,"byte_end":37125,"line_start":80,"line_end":80,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37127,"byte_end":37134,"line_start":80,"line_end":80,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37173,"byte_end":37179,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7033},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37181,"byte_end":37187,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37286,"byte_end":37296,"line_start":88,"line_end":88,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37298,"byte_end":37307,"line_start":88,"line_end":88,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37355,"byte_end":37363,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37365,"byte_end":37374,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37376,"byte_end":37385,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37387,"byte_end":37396,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37398,"byte_end":37405,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37407,"byte_end":37415,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7219},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37417,"byte_end":37425,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37427,"byte_end":37435,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37540,"byte_end":37552,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37554,"byte_end":37564,"line_start":98,"line_end":98,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37611,"byte_end":37621,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37623,"byte_end":37632,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37729,"byte_end":37738,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37740,"byte_end":37748,"line_start":106,"line_end":106,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37786,"byte_end":37792,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":13190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37930,"byte_end":37939,"line_start":115,"line_end":115,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":12947},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37941,"byte_end":37952,"line_start":115,"line_end":115,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":12943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37954,"byte_end":37971,"line_start":115,"line_end":115,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":12958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":12959},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":37973,"byte_end":37980,"line_start":115,"line_end":115,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":7413}},{"kind":"Use","ref_id":{"krate":0,"index":7407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":38036,"byte_end":38045,"line_start":117,"line_end":117,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11285,"byte_end":11291,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11293,"byte_end":11302,"line_start":303,"line_end":303,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":32},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11304,"byte_end":11313,"line_start":303,"line_end":303,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11315,"byte_end":11327,"line_start":303,"line_end":303,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":62},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164258,"byte_end":164267,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":13,"index":65},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164269,"byte_end":164283,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":13,"index":82},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164317,"byte_end":164328,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":13,"index":68},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164330,"byte_end":164336,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":13,"index":97},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164338,"byte_end":164347,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":172177,"byte_end":172183,"line_start":160,"line_end":160,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1162}},{"kind":"Use","ref_id":{"krate":0,"index":9169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":172360,"byte_end":172371,"line_start":166,"line_end":166,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1162}},{"kind":"Use","ref_id":{"krate":0,"index":9498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173712,"byte_end":173723,"line_start":206,"line_end":206,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1162}},{"kind":"Use","ref_id":{"krate":0,"index":7422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164463,"byte_end":164468,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164470,"byte_end":164477,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164479,"byte_end":164485,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164487,"byte_end":164492,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164494,"byte_end":164503,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7703},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164505,"byte_end":164511,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7772},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164513,"byte_end":164522,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164524,"byte_end":164531,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164533,"byte_end":164540,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164542,"byte_end":164546,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8149},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164548,"byte_end":164555,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164561,"byte_end":164565,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164567,"byte_end":164574,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8338},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164576,"byte_end":164579,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164581,"byte_end":164585,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8589},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164587,"byte_end":164593,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164595,"byte_end":164603,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164605,"byte_end":164609,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164611,"byte_end":164619,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164621,"byte_end":164625,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8492},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164627,"byte_end":164641,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164643,"byte_end":164647,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8735},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164653,"byte_end":164662,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164664,"byte_end":164673,"line_start":23,"line_end":23,"column_start":16,"column_end":25},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164675,"byte_end":164687,"line_start":23,"line_end":23,"column_start":27,"column_end":39},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164689,"byte_end":164693,"line_start":23,"line_end":23,"column_start":41,"column_end":45},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164695,"byte_end":164704,"line_start":23,"line_end":23,"column_start":47,"column_end":56},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164706,"byte_end":164715,"line_start":23,"line_end":23,"column_start":58,"column_end":67},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8990},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164717,"byte_end":164721,"line_start":23,"line_end":23,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":7522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164723,"byte_end":164728,"line_start":23,"line_end":23,"column_start":75,"column_end":80},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9062},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164730,"byte_end":164733,"line_start":23,"line_end":23,"column_start":82,"column_end":85},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164785,"byte_end":164796,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164847,"byte_end":164853,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164904,"byte_end":164915,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":8091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165013,"byte_end":165020,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165107,"byte_end":165122,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165124,"byte_end":165132,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13475},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165134,"byte_end":165151,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9440},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165312,"byte_end":165324,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9441},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165312,"byte_end":165324,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":9484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165326,"byte_end":165335,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165337,"byte_end":165348,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":301940,"byte_end":301953,"line_start":140,"line_end":140,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2344}},{"kind":"Use","ref_id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165400,"byte_end":165410,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165412,"byte_end":165419,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165421,"byte_end":165428,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165430,"byte_end":165440,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9683},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165442,"byte_end":165451,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165453,"byte_end":165463,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165465,"byte_end":165471,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":9883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165473,"byte_end":165478,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10036},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165480,"byte_end":165486,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165492,"byte_end":165502,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10402},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165504,"byte_end":165513,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165515,"byte_end":165524,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165526,"byte_end":165538,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10305},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165540,"byte_end":165550,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165552,"byte_end":165559,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10109},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165561,"byte_end":165571,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10101},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165573,"byte_end":165580,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10563},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165586,"byte_end":165598,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165600,"byte_end":165612,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10636},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165614,"byte_end":165626,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165628,"byte_end":165637,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165762,"byte_end":165775,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13436},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165866,"byte_end":165884,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165886,"byte_end":165897,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13326},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165899,"byte_end":165919,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165976,"byte_end":165980,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":165982,"byte_end":165986,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166025,"byte_end":166031,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166033,"byte_end":166039,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166088,"byte_end":166099,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10865},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166101,"byte_end":166111,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166148,"byte_end":166153,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10874},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166155,"byte_end":166160,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166195,"byte_end":166199,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166201,"byte_end":166205,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166246,"byte_end":166253,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10916},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166255,"byte_end":166262,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166303,"byte_end":166310,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166312,"byte_end":166318,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166357,"byte_end":166363,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166365,"byte_end":166371,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166410,"byte_end":166416,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":10975},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166418,"byte_end":166424,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":11066},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166573,"byte_end":166587,"line_start":98,"line_end":98,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":11524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543345,"byte_end":10543353,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":11104}},{"kind":"Use","ref_id":{"krate":0,"index":11515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543355,"byte_end":10543359,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":11104}},{"kind":"Use","ref_id":{"krate":0,"index":11516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543355,"byte_end":10543359,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":11205}},{"kind":"Use","ref_id":{"krate":0,"index":11495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543361,"byte_end":10543368,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":11104}},{"kind":"Use","ref_id":{"krate":0,"index":11496},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543361,"byte_end":10543368,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":11206}},{"kind":"Use","ref_id":{"krate":0,"index":11485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543370,"byte_end":10543380,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":11104}},{"kind":"Use","ref_id":{"krate":0,"index":11504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543382,"byte_end":10543392,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":11104}},{"kind":"Use","ref_id":{"krate":0,"index":11290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166737,"byte_end":166753,"line_start":104,"line_end":104,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":11418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166871,"byte_end":166881,"line_start":109,"line_end":109,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13253},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166883,"byte_end":166892,"line_start":109,"line_end":109,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":13190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167006,"byte_end":167015,"line_start":114,"line_end":114,"column_start":32,"column_end":41},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":12947},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167017,"byte_end":167028,"line_start":114,"line_end":114,"column_start":43,"column_end":54},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":12943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167030,"byte_end":167047,"line_start":114,"line_end":114,"column_start":56,"column_end":73},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":12958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167049,"byte_end":167056,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":0,"index":12959},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167049,"byte_end":167056,"line_start":114,"line_end":114,"column_start":75,"column_end":82},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":11483}},{"kind":"Use","ref_id":{"krate":0,"index":11477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":167112,"byte_end":167121,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1154}},{"kind":"Use","ref_id":{"krate":13,"index":68},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11386,"byte_end":11392,"line_start":307,"line_end":307,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11394,"byte_end":11403,"line_start":307,"line_end":307,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":13,"index":97},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11405,"byte_end":11414,"line_start":307,"line_end":307,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11416,"byte_end":11428,"line_start":307,"line_end":307,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":9},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392033,"byte_end":392037,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392072,"byte_end":392077,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392113,"byte_end":392118,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392120,"byte_end":392125,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392163,"byte_end":392169,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11593},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392202,"byte_end":392206,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11604},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392241,"byte_end":392246,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392287,"byte_end":392298,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11686},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392337,"byte_end":392347,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392380,"byte_end":392384,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392425,"byte_end":392432,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392470,"byte_end":392476,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392478,"byte_end":392484,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11806},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392518,"byte_end":392522,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11889},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392573,"byte_end":392584,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":0,"index":11983},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392673,"byte_end":392679,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":3241}},{"kind":"Use","ref_id":{"krate":17,"index":9},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11581,"byte_end":11585,"line_start":314,"line_end":314,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11587,"byte_end":11594,"line_start":314,"line_end":314,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":9760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432168,"byte_end":432175,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":2,"index":37298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432177,"byte_end":432181,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":2,"index":37338},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432183,"byte_end":432191,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":2,"index":37347},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432193,"byte_end":432207,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":2,"index":9770},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432209,"byte_end":432214,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432241,"byte_end":432250,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":77},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432252,"byte_end":432266,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":13},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432268,"byte_end":432278,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":10},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432280,"byte_end":432285,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":16},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432287,"byte_end":432297,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432299,"byte_end":432314,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":236},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432340,"byte_end":432350,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":237},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432398,"byte_end":432412,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432496,"byte_end":432503,"line_start":24,"line_end":24,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432562,"byte_end":432567,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432627,"byte_end":432636,"line_start":30,"line_end":30,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":16,"index":312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432638,"byte_end":432646,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":13,"index":142},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432694,"byte_end":432705,"line_start":32,"line_end":32,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432743,"byte_end":432756,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432758,"byte_end":432766,"line_start":36,"line_end":36,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3743}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440783,"byte_end":440788,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":1,"index":7139},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440790,"byte_end":440799,"line_start":33,"line_end":33,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":1,"index":7198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440801,"byte_end":440808,"line_start":33,"line_end":33,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":1,"index":3207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440810,"byte_end":440820,"line_start":33,"line_end":33,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440822,"byte_end":440828,"line_start":33,"line_end":33,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":1,"index":7212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440830,"byte_end":440838,"line_start":33,"line_end":33,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440863,"byte_end":440875,"line_start":35,"line_end":35,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":20,"index":17},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440877,"byte_end":440886,"line_start":35,"line_end":35,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":20,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440888,"byte_end":440897,"line_start":35,"line_end":35,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":20,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440899,"byte_end":440909,"line_start":35,"line_end":35,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12039},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441507,"byte_end":441517,"line_start":56,"line_end":56,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12076},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441562,"byte_end":441571,"line_start":59,"line_end":59,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441616,"byte_end":441625,"line_start":62,"line_end":62,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441660,"byte_end":441665,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12227},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441700,"byte_end":441705,"line_start":68,"line_end":68,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441739,"byte_end":441743,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441745,"byte_end":441749,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441792,"byte_end":441800,"line_start":74,"line_end":74,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441802,"byte_end":441809,"line_start":74,"line_end":74,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441847,"byte_end":441853,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441889,"byte_end":441894,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441896,"byte_end":441901,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441943,"byte_end":441950,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":441985,"byte_end":441990,"line_start":86,"line_end":86,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442179,"byte_end":442187,"line_start":93,"line_end":93,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12456},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442222,"byte_end":442227,"line_start":96,"line_end":96,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442260,"byte_end":442264,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442315,"byte_end":442327,"line_start":102,"line_end":102,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12517},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442372,"byte_end":442381,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442424,"byte_end":442432,"line_start":108,"line_end":108,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442479,"byte_end":442488,"line_start":111,"line_end":111,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12547},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442541,"byte_end":442553,"line_start":114,"line_end":114,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442598,"byte_end":442607,"line_start":117,"line_end":117,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442645,"byte_end":442651,"line_start":120,"line_end":120,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442653,"byte_end":442659,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12569},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442693,"byte_end":442697,"line_start":123,"line_end":123,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442731,"byte_end":442735,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442737,"byte_end":442741,"line_start":126,"line_end":126,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442778,"byte_end":442786,"line_start":129,"line_end":129,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442788,"byte_end":442800,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":4486},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442788,"byte_end":442800,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4500}},{"kind":"Use","ref_id":{"krate":0,"index":12584},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442802,"byte_end":442811,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442845,"byte_end":442849,"line_start":132,"line_end":132,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442886,"byte_end":442892,"line_start":135,"line_end":135,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442927,"byte_end":442932,"line_start":138,"line_end":138,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12650},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":442985,"byte_end":442998,"line_start":141,"line_end":141,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":0,"index":12659},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443041,"byte_end":443049,"line_start":144,"line_end":144,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":3784}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11915,"byte_end":11927,"line_start":332,"line_end":332,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11929,"byte_end":11944,"line_start":332,"line_end":332,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":17},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11946,"byte_end":11955,"line_start":332,"line_end":332,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4611},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11957,"byte_end":11969,"line_start":332,"line_end":332,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":25},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11971,"byte_end":11980,"line_start":332,"line_end":332,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11982,"byte_end":11994,"line_start":332,"line_end":332,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":20},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11996,"byte_end":12006,"line_start":332,"line_end":332,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4628},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":12012,"byte_end":12025,"line_start":333,"line_end":333,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12769},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540510,"byte_end":540526,"line_start":10,"line_end":10,"column_start":27,"column_end":43},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":4669}},{"kind":"Use","ref_id":{"krate":0,"index":12690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540528,"byte_end":540533,"line_start":10,"line_end":10,"column_start":45,"column_end":50},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4669}},{"kind":"Use","ref_id":{"krate":0,"index":12727},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540535,"byte_end":540550,"line_start":10,"line_end":10,"column_start":52,"column_end":67},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":4669}},{"kind":"Use","ref_id":{"krate":0,"index":12746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540552,"byte_end":540562,"line_start":10,"line_end":10,"column_start":69,"column_end":79},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4669}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":12175,"line_start":1,"line_end":345,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":101},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":12903},{"krate":0,"index":4670},{"krate":0,"index":4878}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":313,"byte_end":401,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":569,"byte_end":590,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","byte_start":14362,"byte_end":14366,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","byte_start":14507,"byte_end":14515,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","byte_start":14441,"byte_end":14480,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\pending.rs","byte_start":15576,"byte_end":15588,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\pending.rs","byte_start":15713,"byte_end":15724,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\pending.rs","byte_start":15647,"byte_end":15686,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\random.rs","byte_start":33832,"byte_end":33839,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"pub fn shuffle<T>(&mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13377,"byte_end":13389,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13352,"byte_end":13369,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13451,"byte_end":13470,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13426,"byte_end":13443,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13547,"byte_end":13566,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\mod.rs","byte_start":13522,"byte_end":13539,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1432,"byte_end":1441,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":13670},{"krate":0,"index":85},{"krate":0,"index":13672},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":13676},{"krate":0,"index":89},{"krate":0,"index":13678},{"krate":0,"index":90}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1377,"byte_end":1408,"line_start":35,"line_end":35,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1603,"byte_end":1614,"line_start":45,"line_end":45,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1145},{"krate":0,"index":7400},{"krate":0,"index":7409},{"krate":0,"index":7410},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":14400},{"krate":0,"index":7414},{"krate":0,"index":1146}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34901,"byte_end":34925,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34926,"byte_end":34929,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34930,"byte_end":34955,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34956,"byte_end":34959,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34960,"byte_end":34987,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":34988,"byte_end":35067,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35068,"byte_end":35105,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35106,"byte_end":35185,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35186,"byte_end":35261,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\mod.rs","byte_start":35262,"byte_end":35326,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58570,"byte_end":58575,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58604,"byte_end":58610,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4905},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58639,"byte_end":58644,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58540,"byte_end":58547,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":4903},{"krate":0,"index":4905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63001,"byte_end":63005,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4948}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64824,"byte_end":64834,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63202,"byte_end":63270,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63275,"byte_end":63278,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63283,"byte_end":63351,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63356,"byte_end":63401,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63406,"byte_end":63409,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63414,"byte_end":63428,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63433,"byte_end":63436,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63441,"byte_end":63448,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63453,"byte_end":63494,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63499,"byte_end":63530,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63535,"byte_end":63591,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63596,"byte_end":63620,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63625,"byte_end":63660,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63665,"byte_end":63690,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63695,"byte_end":63698,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63703,"byte_end":63752,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63757,"byte_end":63760,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63765,"byte_end":63807,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63812,"byte_end":63851,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63856,"byte_end":63895,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63900,"byte_end":63917,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63922,"byte_end":63925,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63930,"byte_end":64000,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64005,"byte_end":64044,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64049,"byte_end":64090,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64095,"byte_end":64121,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64126,"byte_end":64129,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64134,"byte_end":64144,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64149,"byte_end":64166,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64171,"byte_end":64205,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64210,"byte_end":64257,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64262,"byte_end":64311,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64316,"byte_end":64378,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64383,"byte_end":64407,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64412,"byte_end":64455,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64460,"byte_end":64517,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64522,"byte_end":64597,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64602,"byte_end":64632,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64637,"byte_end":64654,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64659,"byte_end":64673,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64678,"byte_end":64762,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64767,"byte_end":64776,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64781,"byte_end":64786,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64791,"byte_end":64800,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64805,"byte_end":64812,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":65892,"byte_end":65902,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":65986,"byte_end":65994,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":65870,"byte_end":65873,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4987}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10405779,"byte_end":10405788,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5032},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":38996,"byte_end":39003,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5034}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":39254,"byte_end":39267,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":5082}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":39607,"byte_end":39610,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5141}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":39817,"byte_end":39827,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5200}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":40033,"byte_end":40040,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":5251}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":40233,"byte_end":40237,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5314}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":40482,"byte_end":40489,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5386}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":40730,"byte_end":40740,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5445}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":40953,"byte_end":40962,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5493}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\catch_unwind.rs","byte_start":67590,"byte_end":67601,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5544}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":68604,"byte_end":68610,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":68461,"byte_end":68524,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":68525,"byte_end":68592,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":68984,"byte_end":68994,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":68895,"byte_end":68972,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71096,"byte_end":71100,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70827,"byte_end":70901,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70906,"byte_end":70979,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70984,"byte_end":71052,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71057,"byte_end":71084,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71595,"byte_end":71604,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71452,"byte_end":71505,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71510,"byte_end":71513,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71518,"byte_end":71583,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72198,"byte_end":72210,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71786,"byte_end":71844,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71849,"byte_end":71852,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71857,"byte_end":71922,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71927,"byte_end":71930,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71935,"byte_end":71947,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71952,"byte_end":71955,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":71960,"byte_end":72053,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72058,"byte_end":72152,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72157,"byte_end":72186,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72718,"byte_end":72728,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72310,"byte_end":72366,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72371,"byte_end":72374,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72379,"byte_end":72444,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72449,"byte_end":72452,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72457,"byte_end":72469,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72474,"byte_end":72477,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72482,"byte_end":72575,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72580,"byte_end":72672,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72677,"byte_end":72706,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":79178,"byte_end":79185,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78988,"byte_end":79050,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":79055,"byte_end":79058,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":79063,"byte_end":79143,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":79148,"byte_end":79166,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41944,"byte_end":41953,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41845,"byte_end":41919,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41920,"byte_end":41933,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42785,"byte_end":42788,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41968,"byte_end":42043,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42048,"byte_end":42071,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42076,"byte_end":42079,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42084,"byte_end":42158,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42163,"byte_end":42234,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42239,"byte_end":42301,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42306,"byte_end":42309,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42314,"byte_end":42385,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42390,"byte_end":42461,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42466,"byte_end":42487,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42492,"byte_end":42495,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42500,"byte_end":42514,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42519,"byte_end":42522,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42527,"byte_end":42534,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42539,"byte_end":42580,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42585,"byte_end":42620,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42625,"byte_end":42628,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42633,"byte_end":42662,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42667,"byte_end":42710,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42715,"byte_end":42751,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42756,"byte_end":42765,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42770,"byte_end":42777,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43185,"byte_end":43193,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":42958,"byte_end":43033,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43038,"byte_end":43061,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43066,"byte_end":43069,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43074,"byte_end":43152,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43157,"byte_end":43177,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44205,"byte_end":44209,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43352,"byte_end":43428,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43433,"byte_end":43476,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43481,"byte_end":43484,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43489,"byte_end":43560,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43565,"byte_end":43639,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43644,"byte_end":43660,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43665,"byte_end":43668,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43673,"byte_end":43748,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43753,"byte_end":43764,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43769,"byte_end":43772,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43777,"byte_end":43848,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43853,"byte_end":43879,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43884,"byte_end":43887,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43892,"byte_end":43906,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43911,"byte_end":43914,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43919,"byte_end":43926,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43931,"byte_end":43972,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":43977,"byte_end":44012,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44017,"byte_end":44020,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44025,"byte_end":44059,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44064,"byte_end":44129,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44134,"byte_end":44171,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44176,"byte_end":44185,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44190,"byte_end":44197,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45079,"byte_end":45090,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44421,"byte_end":44496,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44501,"byte_end":44522,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44527,"byte_end":44530,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44535,"byte_end":44615,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44620,"byte_end":44692,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44697,"byte_end":44700,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44705,"byte_end":44719,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44724,"byte_end":44727,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44732,"byte_end":44739,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44744,"byte_end":44785,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44790,"byte_end":44825,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44830,"byte_end":44833,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44838,"byte_end":44852,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44857,"byte_end":44885,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44890,"byte_end":44926,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44931,"byte_end":44943,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44948,"byte_end":44986,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":44991,"byte_end":44997,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45002,"byte_end":45005,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45010,"byte_end":45045,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45050,"byte_end":45059,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45064,"byte_end":45071,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45929,"byte_end":45941,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45270,"byte_end":45346,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45351,"byte_end":45372,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45377,"byte_end":45380,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45385,"byte_end":45464,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45469,"byte_end":45541,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45546,"byte_end":45549,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45554,"byte_end":45568,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45573,"byte_end":45576,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45581,"byte_end":45588,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45593,"byte_end":45634,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45639,"byte_end":45674,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45679,"byte_end":45682,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45687,"byte_end":45701,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45706,"byte_end":45734,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45739,"byte_end":45775,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45780,"byte_end":45792,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45797,"byte_end":45835,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45840,"byte_end":45846,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45851,"byte_end":45854,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45859,"byte_end":45895,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45900,"byte_end":45909,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":45914,"byte_end":45921,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46720,"byte_end":46731,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46122,"byte_end":46175,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46180,"byte_end":46183,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46188,"byte_end":46262,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46267,"byte_end":46330,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46335,"byte_end":46338,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46343,"byte_end":46357,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46362,"byte_end":46365,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46370,"byte_end":46377,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46382,"byte_end":46423,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46428,"byte_end":46463,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46468,"byte_end":46503,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46508,"byte_end":46511,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46516,"byte_end":46546,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46551,"byte_end":46589,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46594,"byte_end":46645,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46650,"byte_end":46686,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46691,"byte_end":46700,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46705,"byte_end":46712,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47596,"byte_end":47603,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46870,"byte_end":46934,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46939,"byte_end":46975,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46980,"byte_end":46983,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":46988,"byte_end":47057,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47062,"byte_end":47099,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47104,"byte_end":47107,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47112,"byte_end":47172,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47177,"byte_end":47180,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47185,"byte_end":47256,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47261,"byte_end":47287,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47292,"byte_end":47295,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47300,"byte_end":47314,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47319,"byte_end":47322,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47327,"byte_end":47334,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47339,"byte_end":47380,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47385,"byte_end":47420,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47425,"byte_end":47428,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47433,"byte_end":47479,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47484,"byte_end":47525,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47530,"byte_end":47562,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47567,"byte_end":47576,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47581,"byte_end":47588,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48708,"byte_end":48722,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47817,"byte_end":47892,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47897,"byte_end":47920,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47925,"byte_end":47928,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":47933,"byte_end":48005,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48010,"byte_end":48083,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48088,"byte_end":48102,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48107,"byte_end":48110,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48115,"byte_end":48185,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48190,"byte_end":48208,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48213,"byte_end":48216,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48221,"byte_end":48235,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48240,"byte_end":48243,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48248,"byte_end":48255,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48260,"byte_end":48301,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48306,"byte_end":48341,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48346,"byte_end":48389,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48394,"byte_end":48397,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48402,"byte_end":48442,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48447,"byte_end":48513,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48518,"byte_end":48521,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48526,"byte_end":48579,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48584,"byte_end":48630,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48635,"byte_end":48674,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48679,"byte_end":48688,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48693,"byte_end":48700,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49810,"byte_end":49814,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48915,"byte_end":48988,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":48993,"byte_end":49059,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49064,"byte_end":49082,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49087,"byte_end":49090,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49095,"byte_end":49162,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49167,"byte_end":49232,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49237,"byte_end":49309,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49314,"byte_end":49388,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49393,"byte_end":49419,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49424,"byte_end":49427,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49432,"byte_end":49503,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49508,"byte_end":49583,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49588,"byte_end":49642,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49647,"byte_end":49650,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49655,"byte_end":49729,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49734,"byte_end":49802,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50654,"byte_end":50661,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":49960,"byte_end":50026,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50031,"byte_end":50034,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50039,"byte_end":50114,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50119,"byte_end":50192,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50197,"byte_end":50266,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50271,"byte_end":50321,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50326,"byte_end":50329,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50334,"byte_end":50348,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50353,"byte_end":50356,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50361,"byte_end":50368,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50373,"byte_end":50414,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50419,"byte_end":50454,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50459,"byte_end":50462,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50467,"byte_end":50496,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50501,"byte_end":50579,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50584,"byte_end":50620,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50625,"byte_end":50634,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50639,"byte_end":50646,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52199,"byte_end":52211,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50843,"byte_end":50897,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50902,"byte_end":50905,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50910,"byte_end":50985,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":50990,"byte_end":51064,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51069,"byte_end":51143,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51148,"byte_end":51199,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51204,"byte_end":51207,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51212,"byte_end":51287,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51292,"byte_end":51362,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51367,"byte_end":51434,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51439,"byte_end":51514,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51519,"byte_end":51591,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51596,"byte_end":51599,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51604,"byte_end":51668,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51673,"byte_end":51730,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51735,"byte_end":51738,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51743,"byte_end":51757,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51762,"byte_end":51765,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51770,"byte_end":51777,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51782,"byte_end":51823,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51828,"byte_end":51878,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51883,"byte_end":51886,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51891,"byte_end":51925,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51930,"byte_end":51979,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51984,"byte_end":51987,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":51992,"byte_end":52041,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52046,"byte_end":52070,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52075,"byte_end":52082,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52087,"byte_end":52137,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52142,"byte_end":52151,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52156,"byte_end":52163,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52168,"byte_end":52191,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53963,"byte_end":53969,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52441,"byte_end":52516,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52521,"byte_end":52544,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52549,"byte_end":52552,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52557,"byte_end":52631,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52636,"byte_end":52709,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52714,"byte_end":52726,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52731,"byte_end":52734,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52739,"byte_end":52803,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52808,"byte_end":52865,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52870,"byte_end":52873,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52878,"byte_end":52892,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52897,"byte_end":52900,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52905,"byte_end":52912,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52917,"byte_end":52958,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":52963,"byte_end":52998,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53003,"byte_end":53006,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53011,"byte_end":53040,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53045,"byte_end":53079,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53084,"byte_end":53118,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53123,"byte_end":53126,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53131,"byte_end":53164,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53169,"byte_end":53202,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53207,"byte_end":53216,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53221,"byte_end":53228,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53233,"byte_end":53236,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53241,"byte_end":53248,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53253,"byte_end":53322,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53327,"byte_end":53402,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53407,"byte_end":53438,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53443,"byte_end":53446,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53451,"byte_end":53492,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53497,"byte_end":53532,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53537,"byte_end":53573,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53578,"byte_end":53598,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53603,"byte_end":53606,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53611,"byte_end":53640,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53645,"byte_end":53679,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53684,"byte_end":53718,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53723,"byte_end":53768,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53773,"byte_end":53814,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53819,"byte_end":53826,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53831,"byte_end":53864,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53869,"byte_end":53901,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53906,"byte_end":53915,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53920,"byte_end":53927,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":53932,"byte_end":53955,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55131,"byte_end":55136,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":54902,"byte_end":54943,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":54948,"byte_end":54951,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":54956,"byte_end":55031,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55036,"byte_end":55093,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55098,"byte_end":55123,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55596,"byte_end":55607,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55295,"byte_end":55336,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55341,"byte_end":55344,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55349,"byte_end":55408,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55413,"byte_end":55416,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55421,"byte_end":55496,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55501,"byte_end":55558,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55563,"byte_end":55588,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55897,"byte_end":55907,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55764,"byte_end":55813,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":55818,"byte_end":55889,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56192,"byte_end":56203,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56056,"byte_end":56105,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56110,"byte_end":56184,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56434,"byte_end":56444,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56357,"byte_end":56426,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57840,"byte_end":57852,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56580,"byte_end":56652,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56657,"byte_end":56720,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56725,"byte_end":56728,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56733,"byte_end":56799,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56804,"byte_end":56807,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56812,"byte_end":56885,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56890,"byte_end":56959,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":56964,"byte_end":57034,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57039,"byte_end":57042,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57047,"byte_end":57061,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57066,"byte_end":57069,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57074,"byte_end":57081,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57086,"byte_end":57116,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57121,"byte_end":57171,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57176,"byte_end":57215,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57220,"byte_end":57271,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57276,"byte_end":57279,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57284,"byte_end":57344,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57349,"byte_end":57401,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57406,"byte_end":57413,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57418,"byte_end":57421,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57426,"byte_end":57495,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57500,"byte_end":57573,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57578,"byte_end":57610,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57615,"byte_end":57618,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57623,"byte_end":57630,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57635,"byte_end":57682,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57687,"byte_end":57726,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57731,"byte_end":57734,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57739,"byte_end":57820,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":57825,"byte_end":57832,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101329,"byte_end":101339,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5580}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102313,"byte_end":102318,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5618},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102347,"byte_end":102353,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102382,"byte_end":102387,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5613},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102280,"byte_end":102290,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107256,"byte_end":107261,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5665},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107290,"byte_end":107296,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107325,"byte_end":107330,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107220,"byte_end":107233,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5665},{"krate":0,"index":5667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5706},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":80164,"byte_end":80174,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5709}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":80422,"byte_end":80435,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5770}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":80703,"byte_end":80719,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5829}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":81062,"byte_end":81073,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":5888}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":81307,"byte_end":81314,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5961}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":81554,"byte_end":81560,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":6035}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":81810,"byte_end":81817,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6107}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":82025,"byte_end":82031,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":6168}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":82250,"byte_end":82259,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":6229}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":82531,"byte_end":82541,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6290}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6348},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":82914,"byte_end":82919,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6351}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83160,"byte_end":83166,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6412}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83423,"byte_end":83434,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6475}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83718,"byte_end":83730,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6547}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84020,"byte_end":84032,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83956,"byte_end":84009,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85184,"byte_end":85196,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84050,"byte_end":84126,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84131,"byte_end":84156,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84161,"byte_end":84164,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84169,"byte_end":84239,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84244,"byte_end":84317,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84322,"byte_end":84336,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84341,"byte_end":84344,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84349,"byte_end":84419,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84424,"byte_end":84442,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84447,"byte_end":84450,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84455,"byte_end":84469,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84474,"byte_end":84477,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84482,"byte_end":84489,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84494,"byte_end":84542,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84547,"byte_end":84575,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84580,"byte_end":84632,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84637,"byte_end":84656,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84661,"byte_end":84686,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84691,"byte_end":84694,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84699,"byte_end":84755,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84760,"byte_end":84792,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84797,"byte_end":84807,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84812,"byte_end":84829,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84834,"byte_end":84881,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84886,"byte_end":84922,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84927,"byte_end":84934,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84939,"byte_end":85000,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85005,"byte_end":85008,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85013,"byte_end":85045,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85050,"byte_end":85083,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85088,"byte_end":85095,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85100,"byte_end":85124,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86792,"byte_end":86798,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85420,"byte_end":85478,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85483,"byte_end":85486,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85491,"byte_end":85566,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85571,"byte_end":85641,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85646,"byte_end":85719,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85724,"byte_end":85753,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85758,"byte_end":85761,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85766,"byte_end":85841,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85846,"byte_end":85921,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85926,"byte_end":85973,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85978,"byte_end":85981,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":85986,"byte_end":86061,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86066,"byte_end":86092,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86097,"byte_end":86100,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86105,"byte_end":86119,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86124,"byte_end":86127,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86132,"byte_end":86139,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86144,"byte_end":86182,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86187,"byte_end":86190,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86195,"byte_end":86236,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86241,"byte_end":86286,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86291,"byte_end":86333,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86338,"byte_end":86374,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86379,"byte_end":86388,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86393,"byte_end":86400,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86405,"byte_end":86408,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86413,"byte_end":86485,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86490,"byte_end":86501,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86506,"byte_end":86509,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86514,"byte_end":86521,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86526,"byte_end":86564,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86569,"byte_end":86572,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86577,"byte_end":86618,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86623,"byte_end":86669,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86674,"byte_end":86716,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86721,"byte_end":86758,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86763,"byte_end":86772,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86777,"byte_end":86784,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88357,"byte_end":88371,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":86989,"byte_end":87106,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87111,"byte_end":87114,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87119,"byte_end":87241,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87246,"byte_end":87296,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87301,"byte_end":87304,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87309,"byte_end":87384,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87389,"byte_end":87464,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87469,"byte_end":87516,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87521,"byte_end":87524,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87529,"byte_end":87604,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87609,"byte_end":87684,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87689,"byte_end":87736,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87741,"byte_end":87744,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87749,"byte_end":87824,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87829,"byte_end":87855,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87860,"byte_end":87863,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87868,"byte_end":87882,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87887,"byte_end":87890,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87895,"byte_end":87902,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87907,"byte_end":87945,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87950,"byte_end":87953,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":87958,"byte_end":87999,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88004,"byte_end":88049,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88054,"byte_end":88115,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88120,"byte_end":88152,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88157,"byte_end":88160,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88165,"byte_end":88211,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88216,"byte_end":88277,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88282,"byte_end":88315,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88320,"byte_end":88329,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88334,"byte_end":88341,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88346,"byte_end":88349,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90054,"byte_end":90061,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88605,"byte_end":88661,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88666,"byte_end":88669,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88674,"byte_end":88748,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88753,"byte_end":88814,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88819,"byte_end":88889,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88894,"byte_end":88969,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":88974,"byte_end":89009,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89014,"byte_end":89017,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89022,"byte_end":89097,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89102,"byte_end":89177,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89182,"byte_end":89229,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89234,"byte_end":89237,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89242,"byte_end":89317,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89322,"byte_end":89348,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89353,"byte_end":89356,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89361,"byte_end":89375,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89380,"byte_end":89383,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89388,"byte_end":89395,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89400,"byte_end":89438,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89443,"byte_end":89446,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89451,"byte_end":89492,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89497,"byte_end":89543,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89548,"byte_end":89591,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89596,"byte_end":89633,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89638,"byte_end":89647,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89652,"byte_end":89659,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89664,"byte_end":89667,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89672,"byte_end":89745,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89750,"byte_end":89764,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89769,"byte_end":89772,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89777,"byte_end":89784,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89789,"byte_end":89827,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89832,"byte_end":89835,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89840,"byte_end":89881,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89886,"byte_end":89931,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89936,"byte_end":89979,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":89984,"byte_end":90020,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90025,"byte_end":90034,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90039,"byte_end":90046,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91151,"byte_end":91159,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90254,"byte_end":90324,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90329,"byte_end":90378,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90383,"byte_end":90386,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90391,"byte_end":90454,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90459,"byte_end":90527,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90532,"byte_end":90605,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90610,"byte_end":90686,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90691,"byte_end":90736,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90741,"byte_end":90744,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90749,"byte_end":90824,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90829,"byte_end":90855,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90860,"byte_end":90863,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90868,"byte_end":90882,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90887,"byte_end":90890,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90895,"byte_end":90902,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90907,"byte_end":90945,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90950,"byte_end":90953,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":90958,"byte_end":90999,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91004,"byte_end":91055,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91060,"byte_end":91117,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91122,"byte_end":91131,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91136,"byte_end":91143,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91455,"byte_end":91462,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91335,"byte_end":91393,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91398,"byte_end":91447,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93017,"byte_end":93025,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91636,"byte_end":91705,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91710,"byte_end":91784,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91789,"byte_end":91792,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91797,"byte_end":91872,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91877,"byte_end":91947,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":91952,"byte_end":92017,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92022,"byte_end":92088,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92093,"byte_end":92127,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92132,"byte_end":92135,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92140,"byte_end":92215,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92220,"byte_end":92246,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92251,"byte_end":92254,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92259,"byte_end":92273,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92278,"byte_end":92281,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92286,"byte_end":92293,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92298,"byte_end":92336,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92341,"byte_end":92344,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92349,"byte_end":92390,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92395,"byte_end":92440,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92445,"byte_end":92520,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92525,"byte_end":92561,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92566,"byte_end":92575,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92580,"byte_end":92587,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92592,"byte_end":92595,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92600,"byte_end":92676,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92681,"byte_end":92692,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92697,"byte_end":92700,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92705,"byte_end":92712,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92717,"byte_end":92755,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92760,"byte_end":92763,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92768,"byte_end":92809,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92814,"byte_end":92860,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92865,"byte_end":92941,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92946,"byte_end":92983,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":92988,"byte_end":92997,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93002,"byte_end":93009,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94646,"byte_end":94653,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93279,"byte_end":93344,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93349,"byte_end":93421,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93426,"byte_end":93429,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93434,"byte_end":93509,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93514,"byte_end":93584,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93589,"byte_end":93654,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93659,"byte_end":93735,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93740,"byte_end":93758,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93763,"byte_end":93766,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93771,"byte_end":93846,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93851,"byte_end":93877,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93882,"byte_end":93885,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93890,"byte_end":93904,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93909,"byte_end":93912,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93917,"byte_end":93924,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93929,"byte_end":93967,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93972,"byte_end":93975,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":93980,"byte_end":94021,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94026,"byte_end":94072,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94077,"byte_end":94152,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94157,"byte_end":94194,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94199,"byte_end":94208,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94213,"byte_end":94220,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94225,"byte_end":94228,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94233,"byte_end":94306,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94311,"byte_end":94325,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94330,"byte_end":94333,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94338,"byte_end":94345,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94350,"byte_end":94388,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94393,"byte_end":94396,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94401,"byte_end":94442,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94447,"byte_end":94492,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94497,"byte_end":94571,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94576,"byte_end":94612,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94617,"byte_end":94626,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94631,"byte_end":94638,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95629,"byte_end":95639,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94902,"byte_end":94975,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94980,"byte_end":94983,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":94988,"byte_end":95063,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95068,"byte_end":95141,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95146,"byte_end":95215,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95220,"byte_end":95273,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95278,"byte_end":95281,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95286,"byte_end":95300,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95305,"byte_end":95308,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95313,"byte_end":95320,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95325,"byte_end":95366,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95371,"byte_end":95409,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95414,"byte_end":95417,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95422,"byte_end":95464,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95469,"byte_end":95550,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95555,"byte_end":95595,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95600,"byte_end":95609,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95614,"byte_end":95621,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96565,"byte_end":96576,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95838,"byte_end":95909,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95914,"byte_end":95917,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":95922,"byte_end":95997,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96002,"byte_end":96075,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96080,"byte_end":96149,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96154,"byte_end":96208,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96213,"byte_end":96216,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96221,"byte_end":96235,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96240,"byte_end":96243,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96248,"byte_end":96255,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96260,"byte_end":96301,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96306,"byte_end":96344,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96349,"byte_end":96352,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96357,"byte_end":96400,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96405,"byte_end":96485,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96490,"byte_end":96531,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96536,"byte_end":96545,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96550,"byte_end":96557,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96961,"byte_end":96972,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96780,"byte_end":96855,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96860,"byte_end":96889,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96894,"byte_end":96897,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":96902,"byte_end":96953,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98151,"byte_end":98169,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97207,"byte_end":97282,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97287,"byte_end":97310,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97315,"byte_end":97318,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97323,"byte_end":97395,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97400,"byte_end":97473,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97478,"byte_end":97492,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97497,"byte_end":97500,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97505,"byte_end":97575,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97580,"byte_end":97598,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97603,"byte_end":97606,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97611,"byte_end":97625,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97630,"byte_end":97633,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97638,"byte_end":97645,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97650,"byte_end":97691,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97696,"byte_end":97734,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97739,"byte_end":97785,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97790,"byte_end":97793,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97798,"byte_end":97858,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97863,"byte_end":97942,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97947,"byte_end":97950,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":97955,"byte_end":98012,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98017,"byte_end":98069,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98074,"byte_end":98117,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98122,"byte_end":98131,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98136,"byte_end":98143,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99260,"byte_end":99274,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98429,"byte_end":98500,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98505,"byte_end":98542,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98547,"byte_end":98596,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98601,"byte_end":98604,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98609,"byte_end":98678,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98683,"byte_end":98756,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98761,"byte_end":98831,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98836,"byte_end":98854,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98859,"byte_end":98862,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98867,"byte_end":98935,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98940,"byte_end":98943,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98948,"byte_end":98962,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98967,"byte_end":98970,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98975,"byte_end":98982,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":98987,"byte_end":99025,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99030,"byte_end":99033,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99038,"byte_end":99079,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99084,"byte_end":99136,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99141,"byte_end":99188,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99193,"byte_end":99226,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99231,"byte_end":99240,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99245,"byte_end":99252,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100529,"byte_end":100540,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99828,"byte_end":99881,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99886,"byte_end":99922,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99927,"byte_end":99930,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99935,"byte_end":99984,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":99989,"byte_end":100056,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100061,"byte_end":100074,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100079,"byte_end":100082,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100087,"byte_end":100101,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100106,"byte_end":100109,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100114,"byte_end":100121,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100126,"byte_end":100185,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100190,"byte_end":100193,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100198,"byte_end":100217,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100222,"byte_end":100240,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100245,"byte_end":100317,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100322,"byte_end":100354,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100359,"byte_end":100366,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100371,"byte_end":100447,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100452,"byte_end":100455,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100460,"byte_end":100509,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100514,"byte_end":100521,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100799,"byte_end":100813,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100696,"byte_end":100769,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":100774,"byte_end":100791,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6602},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":108982,"byte_end":108986,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6604}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":108848,"byte_end":108885,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":108903,"byte_end":108970,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109528,"byte_end":109532,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109091,"byte_end":109159,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109160,"byte_end":109163,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109164,"byte_end":109227,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109228,"byte_end":109231,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109232,"byte_end":109246,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109247,"byte_end":109250,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109251,"byte_end":109258,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109259,"byte_end":109300,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109301,"byte_end":109325,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109326,"byte_end":109329,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109330,"byte_end":109362,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109363,"byte_end":109390,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109391,"byte_end":109394,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109395,"byte_end":109432,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109433,"byte_end":109457,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109458,"byte_end":109465,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109466,"byte_end":109502,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109503,"byte_end":109512,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109513,"byte_end":109520,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110359,"byte_end":110366,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6610}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110220,"byte_end":110262,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110280,"byte_end":110347,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110885,"byte_end":110892,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110507,"byte_end":110587,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110588,"byte_end":110601,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110602,"byte_end":110605,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110606,"byte_end":110668,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110669,"byte_end":110672,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110673,"byte_end":110687,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110688,"byte_end":110691,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110692,"byte_end":110705,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110706,"byte_end":110747,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110748,"byte_end":110772,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110773,"byte_end":110776,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110777,"byte_end":110812,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110813,"byte_end":110839,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110840,"byte_end":110859,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110860,"byte_end":110869,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110870,"byte_end":110877,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111664,"byte_end":111670,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6614},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111629,"byte_end":111659,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6619},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111737,"byte_end":111741,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6614},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111694,"byte_end":111732,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6622},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111903,"byte_end":111907,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6614},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111760,"byte_end":111826,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111831,"byte_end":111898,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111600,"byte_end":111609,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6622}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111478,"byte_end":111515,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111516,"byte_end":111519,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111520,"byte_end":111573,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112428,"byte_end":112438,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111967,"byte_end":112004,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112005,"byte_end":112008,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112009,"byte_end":112023,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112024,"byte_end":112027,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112028,"byte_end":112035,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112036,"byte_end":112077,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112078,"byte_end":112102,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112103,"byte_end":112128,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112129,"byte_end":112132,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112133,"byte_end":112182,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112183,"byte_end":112204,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112205,"byte_end":112257,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112258,"byte_end":112293,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112294,"byte_end":112349,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112350,"byte_end":112402,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112403,"byte_end":112412,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112413,"byte_end":112420,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112879,"byte_end":112889,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112581,"byte_end":112666,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112671,"byte_end":112742,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112747,"byte_end":112820,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112825,"byte_end":112853,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112858,"byte_end":112867,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113237,"byte_end":113248,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113117,"byte_end":113183,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113188,"byte_end":113211,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113216,"byte_end":113225,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114873,"byte_end":114879,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6627},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114838,"byte_end":114868,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114946,"byte_end":114950,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6627},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114903,"byte_end":114941,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115158,"byte_end":115162,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6627},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114965,"byte_end":115034,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115039,"byte_end":115109,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115114,"byte_end":115153,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114803,"byte_end":114815,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":6629},{"krate":0,"index":6632},{"krate":0,"index":6635}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114663,"byte_end":114714,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114715,"byte_end":114718,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":114719,"byte_end":114776,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115276,"byte_end":115290,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115228,"byte_end":115268,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115777,"byte_end":115787,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115468,"byte_end":115553,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115558,"byte_end":115629,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115634,"byte_end":115718,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115723,"byte_end":115751,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115756,"byte_end":115765,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116137,"byte_end":116148,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116014,"byte_end":116083,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116088,"byte_end":116111,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116116,"byte_end":116125,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118359,"byte_end":118371,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6647}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119386,"byte_end":119392,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119266,"byte_end":119306,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119307,"byte_end":119374,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119979,"byte_end":119986,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119443,"byte_end":119514,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119515,"byte_end":119518,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119519,"byte_end":119585,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119586,"byte_end":119589,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119590,"byte_end":119604,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119605,"byte_end":119608,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119609,"byte_end":119616,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119617,"byte_end":119658,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119659,"byte_end":119692,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119693,"byte_end":119732,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119733,"byte_end":119736,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119737,"byte_end":119794,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119795,"byte_end":119838,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119839,"byte_end":119844,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119845,"byte_end":119848,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119849,"byte_end":119890,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119891,"byte_end":119953,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119954,"byte_end":119963,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119964,"byte_end":119971,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6679},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120756,"byte_end":120761,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120605,"byte_end":120652,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120677,"byte_end":120744,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120884,"byte_end":120894,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120801,"byte_end":120858,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120863,"byte_end":120872,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121560,"byte_end":121565,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121314,"byte_end":121374,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121375,"byte_end":121378,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121379,"byte_end":121393,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121394,"byte_end":121397,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121398,"byte_end":121405,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121406,"byte_end":121447,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121448,"byte_end":121472,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121473,"byte_end":121476,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121477,"byte_end":121506,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121507,"byte_end":121534,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121535,"byte_end":121544,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121545,"byte_end":121552,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121900,"byte_end":121902,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121634,"byte_end":121701,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121702,"byte_end":121705,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121706,"byte_end":121720,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121721,"byte_end":121724,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121725,"byte_end":121732,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121733,"byte_end":121774,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121775,"byte_end":121799,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121800,"byte_end":121803,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121804,"byte_end":121842,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121843,"byte_end":121874,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121875,"byte_end":121884,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121885,"byte_end":121892,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122233,"byte_end":122236,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121966,"byte_end":122032,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122033,"byte_end":122036,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122037,"byte_end":122051,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122052,"byte_end":122055,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122056,"byte_end":122063,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122064,"byte_end":122105,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122106,"byte_end":122130,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122131,"byte_end":122134,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122135,"byte_end":122174,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122175,"byte_end":122207,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122208,"byte_end":122217,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":122218,"byte_end":122225,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6781},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124522,"byte_end":124526,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6784},{"krate":0,"index":6785}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124592,"byte_end":124597,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6832}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124669,"byte_end":124674,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124752,"byte_end":124757,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125372,"byte_end":125376,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124795,"byte_end":124866,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124867,"byte_end":124870,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124871,"byte_end":124942,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":124943,"byte_end":125018,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125019,"byte_end":125022,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125023,"byte_end":125092,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125093,"byte_end":125119,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125120,"byte_end":125123,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125124,"byte_end":125138,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125139,"byte_end":125142,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125143,"byte_end":125150,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125151,"byte_end":125192,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125193,"byte_end":125217,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125218,"byte_end":125221,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125222,"byte_end":125246,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125247,"byte_end":125271,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125272,"byte_end":125306,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125307,"byte_end":125310,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125311,"byte_end":125346,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125347,"byte_end":125356,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125357,"byte_end":125364,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125922,"byte_end":125927,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125583,"byte_end":125635,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125636,"byte_end":125639,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125640,"byte_end":125654,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125655,"byte_end":125658,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125659,"byte_end":125666,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125667,"byte_end":125708,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125709,"byte_end":125733,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125734,"byte_end":125737,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125738,"byte_end":125762,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125763,"byte_end":125787,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125788,"byte_end":125812,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125813,"byte_end":125852,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125853,"byte_end":125856,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125857,"byte_end":125896,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125897,"byte_end":125906,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":125907,"byte_end":125914,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126589,"byte_end":126594,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126219,"byte_end":126271,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126272,"byte_end":126275,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126276,"byte_end":126290,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126291,"byte_end":126294,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126295,"byte_end":126302,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126303,"byte_end":126344,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126345,"byte_end":126369,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126370,"byte_end":126373,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126374,"byte_end":126398,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126399,"byte_end":126423,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126424,"byte_end":126448,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126449,"byte_end":126473,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126474,"byte_end":126516,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126517,"byte_end":126520,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126521,"byte_end":126563,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126564,"byte_end":126573,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126574,"byte_end":126581,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127359,"byte_end":127364,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":126958,"byte_end":127010,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127011,"byte_end":127014,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127015,"byte_end":127029,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127030,"byte_end":127033,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127034,"byte_end":127041,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127042,"byte_end":127083,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127084,"byte_end":127108,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127109,"byte_end":127112,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127113,"byte_end":127137,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127138,"byte_end":127162,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127163,"byte_end":127187,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127188,"byte_end":127212,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127213,"byte_end":127237,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127238,"byte_end":127283,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127284,"byte_end":127287,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127288,"byte_end":127333,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127334,"byte_end":127343,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join.rs","byte_start":127344,"byte_end":127351,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128631,"byte_end":128638,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":830}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128510,"byte_end":128551,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128552,"byte_end":128619,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130252,"byte_end":130260,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128945,"byte_end":129025,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129026,"byte_end":129036,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129037,"byte_end":129040,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129041,"byte_end":129120,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129121,"byte_end":129201,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129202,"byte_end":129220,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129221,"byte_end":129224,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129225,"byte_end":129302,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129303,"byte_end":129360,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129361,"byte_end":129364,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129365,"byte_end":129379,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129380,"byte_end":129383,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129384,"byte_end":129459,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129460,"byte_end":129508,"line_start":54,"line_end":54,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129509,"byte_end":129586,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129587,"byte_end":129657,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129658,"byte_end":129661,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129662,"byte_end":129731,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129732,"byte_end":129735,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129736,"byte_end":129804,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129805,"byte_end":129808,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129809,"byte_end":129886,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129887,"byte_end":129968,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129969,"byte_end":129972,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129973,"byte_end":129987,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129988,"byte_end":129991,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":129992,"byte_end":129999,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130000,"byte_end":130041,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130042,"byte_end":130076,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130077,"byte_end":130080,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130081,"byte_end":130118,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130119,"byte_end":130122,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130123,"byte_end":130170,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130171,"byte_end":130174,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130175,"byte_end":130226,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130227,"byte_end":130236,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130237,"byte_end":130244,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7033},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131619,"byte_end":131625,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":7036}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131481,"byte_end":131522,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131523,"byte_end":131590,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133889,"byte_end":133895,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131716,"byte_end":131786,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131787,"byte_end":131790,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131791,"byte_end":131869,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131870,"byte_end":131946,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131947,"byte_end":132019,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132020,"byte_end":132023,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132024,"byte_end":132096,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132097,"byte_end":132125,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132126,"byte_end":132129,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132130,"byte_end":132197,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132198,"byte_end":132262,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132263,"byte_end":132313,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132314,"byte_end":132317,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132318,"byte_end":132332,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132333,"byte_end":132336,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132337,"byte_end":132357,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132358,"byte_end":132361,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132362,"byte_end":132369,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132370,"byte_end":132411,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132412,"byte_end":132430,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132431,"byte_end":132447,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132448,"byte_end":132471,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132472,"byte_end":132493,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132494,"byte_end":132500,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132501,"byte_end":132504,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132505,"byte_end":132596,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132597,"byte_end":132622,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132623,"byte_end":132682,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132683,"byte_end":132692,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132693,"byte_end":132699,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132700,"byte_end":132725,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132726,"byte_end":132756,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132757,"byte_end":132763,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132764,"byte_end":132767,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132768,"byte_end":132814,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132815,"byte_end":132837,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132838,"byte_end":132860,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132861,"byte_end":132864,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132865,"byte_end":132927,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":132928,"byte_end":133012,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133013,"byte_end":133086,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133087,"byte_end":133171,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133172,"byte_end":133245,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133246,"byte_end":133252,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133253,"byte_end":133256,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133257,"byte_end":133281,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133282,"byte_end":133291,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133292,"byte_end":133299,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133300,"byte_end":133303,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133304,"byte_end":133330,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133331,"byte_end":133334,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133335,"byte_end":133342,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133343,"byte_end":133402,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133403,"byte_end":133406,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133407,"byte_end":133460,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133461,"byte_end":133464,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133465,"byte_end":133540,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133541,"byte_end":133573,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133574,"byte_end":133606,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133607,"byte_end":133612,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133613,"byte_end":133657,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133658,"byte_end":133684,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133685,"byte_end":133762,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133763,"byte_end":133842,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133843,"byte_end":133856,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133857,"byte_end":133867,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133868,"byte_end":133873,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":133874,"byte_end":133881,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7041},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135352,"byte_end":135361,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":7043}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135212,"byte_end":135255,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135273,"byte_end":135340,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136141,"byte_end":136151,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135439,"byte_end":135505,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135506,"byte_end":135509,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135510,"byte_end":135590,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135591,"byte_end":135669,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135670,"byte_end":135738,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135739,"byte_end":135742,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135743,"byte_end":135823,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135824,"byte_end":135898,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135899,"byte_end":135902,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135903,"byte_end":135980,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135981,"byte_end":136038,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136039,"byte_end":136042,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136043,"byte_end":136055,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136056,"byte_end":136059,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136060,"byte_end":136133,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136532,"byte_end":136542,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136457,"byte_end":136520,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140303,"byte_end":140310,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7121}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140380,"byte_end":140388,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":7166},{"krate":0,"index":7167},{"krate":0,"index":7168}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140464,"byte_end":140472,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140554,"byte_end":140562,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":7294},{"krate":0,"index":7295},{"krate":0,"index":7296},{"krate":0,"index":7297},{"krate":0,"index":7298}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141835,"byte_end":141843,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140600,"byte_end":140673,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140674,"byte_end":140706,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140707,"byte_end":140710,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140711,"byte_end":140782,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140783,"byte_end":140859,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140860,"byte_end":140932,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140933,"byte_end":140949,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140950,"byte_end":140953,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":140954,"byte_end":141023,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141024,"byte_end":141050,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141051,"byte_end":141054,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141055,"byte_end":141069,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141070,"byte_end":141073,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141074,"byte_end":141150,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141151,"byte_end":141187,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141188,"byte_end":141191,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141192,"byte_end":141199,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141200,"byte_end":141241,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141242,"byte_end":141266,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141267,"byte_end":141270,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141271,"byte_end":141316,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141317,"byte_end":141362,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141363,"byte_end":141401,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141402,"byte_end":141405,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141406,"byte_end":141445,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141446,"byte_end":141455,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141456,"byte_end":141463,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141464,"byte_end":141467,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141468,"byte_end":141538,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141539,"byte_end":141554,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141555,"byte_end":141558,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141559,"byte_end":141566,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141567,"byte_end":141608,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141609,"byte_end":141633,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141634,"byte_end":141637,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141638,"byte_end":141683,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141684,"byte_end":141730,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141731,"byte_end":141769,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141770,"byte_end":141773,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141774,"byte_end":141809,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141810,"byte_end":141819,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":141820,"byte_end":141827,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142499,"byte_end":142508,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142081,"byte_end":142141,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142142,"byte_end":142145,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142146,"byte_end":142160,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142161,"byte_end":142164,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142165,"byte_end":142172,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142173,"byte_end":142214,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142215,"byte_end":142239,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142240,"byte_end":142243,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142244,"byte_end":142289,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142290,"byte_end":142335,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142336,"byte_end":142381,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142382,"byte_end":142425,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142426,"byte_end":142429,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142430,"byte_end":142473,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142474,"byte_end":142483,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142484,"byte_end":142491,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143336,"byte_end":143345,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142866,"byte_end":142926,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142927,"byte_end":142930,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142931,"byte_end":142945,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142946,"byte_end":142949,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142950,"byte_end":142957,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":142958,"byte_end":142999,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143000,"byte_end":143024,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143025,"byte_end":143028,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143029,"byte_end":143074,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143075,"byte_end":143120,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143121,"byte_end":143166,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143167,"byte_end":143212,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143213,"byte_end":143259,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143260,"byte_end":143263,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143264,"byte_end":143310,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143311,"byte_end":143320,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143321,"byte_end":143328,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144317,"byte_end":144326,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143795,"byte_end":143855,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143856,"byte_end":143859,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143860,"byte_end":143874,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143875,"byte_end":143878,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143879,"byte_end":143886,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143887,"byte_end":143928,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143929,"byte_end":143953,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143954,"byte_end":143957,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":143958,"byte_end":144003,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144004,"byte_end":144049,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144050,"byte_end":144095,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144096,"byte_end":144141,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144142,"byte_end":144187,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144188,"byte_end":144237,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144238,"byte_end":144241,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144242,"byte_end":144291,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144292,"byte_end":144301,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join.rs","byte_start":144302,"byte_end":144309,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":145818,"byte_end":145828,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":980}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":145693,"byte_end":145738,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":145739,"byte_end":145806,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147421,"byte_end":147433,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146172,"byte_end":146251,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146252,"byte_end":146282,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146283,"byte_end":146286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146287,"byte_end":146366,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146367,"byte_end":146447,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146448,"byte_end":146466,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146467,"byte_end":146470,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146471,"byte_end":146549,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146550,"byte_end":146630,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146631,"byte_end":146705,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146706,"byte_end":146729,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146730,"byte_end":146733,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146734,"byte_end":146811,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146812,"byte_end":146869,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146870,"byte_end":146873,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146874,"byte_end":146888,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146889,"byte_end":146892,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146893,"byte_end":146900,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146901,"byte_end":146942,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146943,"byte_end":146989,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146990,"byte_end":146993,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":146994,"byte_end":147017,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147018,"byte_end":147052,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147053,"byte_end":147087,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147088,"byte_end":147122,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147123,"byte_end":147129,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147130,"byte_end":147133,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147134,"byte_end":147197,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147198,"byte_end":147201,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147202,"byte_end":147225,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147226,"byte_end":147260,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147261,"byte_end":147296,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147297,"byte_end":147331,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147332,"byte_end":147338,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147339,"byte_end":147342,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147343,"byte_end":147395,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147396,"byte_end":147405,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147406,"byte_end":147413,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149331,"byte_end":149340,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7372}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149189,"byte_end":149234,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149235,"byte_end":149302,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150925,"byte_end":150935,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149434,"byte_end":149504,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149505,"byte_end":149508,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149509,"byte_end":149587,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149588,"byte_end":149664,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149665,"byte_end":149737,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149738,"byte_end":149741,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149742,"byte_end":149814,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149815,"byte_end":149843,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149844,"byte_end":149847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149848,"byte_end":149915,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149916,"byte_end":149987,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149988,"byte_end":150038,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150039,"byte_end":150042,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150043,"byte_end":150057,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150058,"byte_end":150061,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150062,"byte_end":150069,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150070,"byte_end":150154,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150155,"byte_end":150158,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150159,"byte_end":150216,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150217,"byte_end":150220,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150221,"byte_end":150303,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150304,"byte_end":150361,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150362,"byte_end":150419,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150420,"byte_end":150446,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150447,"byte_end":150452,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150453,"byte_end":150548,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150549,"byte_end":150572,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150573,"byte_end":150653,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150654,"byte_end":150735,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150736,"byte_end":150806,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150807,"byte_end":150878,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150879,"byte_end":150892,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150893,"byte_end":150903,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150904,"byte_end":150909,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":150910,"byte_end":150917,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152566,"byte_end":152574,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":7379}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152427,"byte_end":152469,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152487,"byte_end":152554,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153296,"byte_end":153305,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152651,"byte_end":152745,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152746,"byte_end":152749,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152750,"byte_end":152839,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152840,"byte_end":152924,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152925,"byte_end":153006,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153007,"byte_end":153052,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153053,"byte_end":153056,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153057,"byte_end":153135,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153136,"byte_end":153193,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153194,"byte_end":153197,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153198,"byte_end":153210,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153211,"byte_end":153214,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153215,"byte_end":153288,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7386},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156048,"byte_end":156052,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7383},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156015,"byte_end":156043,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156108,"byte_end":156113,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7383},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156074,"byte_end":156103,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155996,"byte_end":156002,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":7386},{"krate":0,"index":7389}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155473,"byte_end":155579,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155580,"byte_end":155583,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155584,"byte_end":155665,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155666,"byte_end":155669,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155670,"byte_end":155681,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155682,"byte_end":155714,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155715,"byte_end":155718,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155719,"byte_end":155760,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155761,"byte_end":155781,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155782,"byte_end":155785,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155786,"byte_end":155809,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155810,"byte_end":155849,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155850,"byte_end":155862,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155863,"byte_end":155903,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155904,"byte_end":155910,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155911,"byte_end":155914,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155915,"byte_end":155945,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155946,"byte_end":155954,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":155955,"byte_end":155962,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156667,"byte_end":156679,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156519,"byte_end":156577,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156582,"byte_end":156585,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156590,"byte_end":156655,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157059,"byte_end":157072,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156910,"byte_end":156968,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156973,"byte_end":156976,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156981,"byte_end":157047,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157360,"byte_end":157370,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157287,"byte_end":157348,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":7407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510603,"byte_end":10510612,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510233,"byte_end":10510320,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510321,"byte_end":10510324,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510325,"byte_end":10510401,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510402,"byte_end":10510455,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510456,"byte_end":10510459,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510460,"byte_end":10510537,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\abortable.rs","byte_start":10510538,"byte_end":10510595,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":15240},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":11028},{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":11375},{"krate":0,"index":11376},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11470},{"krate":0,"index":11471},{"krate":0,"index":11479},{"krate":0,"index":11480},{"krate":0,"index":11481},{"krate":0,"index":11482},{"krate":0,"index":11483},{"krate":0,"index":16130},{"krate":0,"index":11484},{"krate":0,"index":3233}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163817,"byte_end":163842,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163843,"byte_end":163846,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163847,"byte_end":163872,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163873,"byte_end":163876,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163877,"byte_end":163950,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163951,"byte_end":163976,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":163977,"byte_end":164056,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164057,"byte_end":164094,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164095,"byte_end":164168,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":164169,"byte_end":164199,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":218358,"byte_end":218363,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7425},{"krate":0,"index":7426}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":220488,"byte_end":220495,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7474},{"krate":0,"index":7475}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":221929,"byte_end":221934,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":7526},{"krate":0,"index":7527},{"krate":0,"index":7528}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":223768,"byte_end":223774,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7583}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":225401,"byte_end":225406,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":7622},{"krate":0,"index":7623}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227053,"byte_end":227062,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7662},{"krate":0,"index":7663}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7703},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":228694,"byte_end":228700,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7772},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232094,"byte_end":232103,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7776},{"krate":0,"index":7777},{"krate":0,"index":7778}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235109,"byte_end":235116,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7847},{"krate":0,"index":7848}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":169088,"byte_end":169095,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7898}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":236933,"byte_end":236937,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7962},{"krate":0,"index":7963},{"krate":0,"index":7964},{"krate":0,"index":7965}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8035},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":239486,"byte_end":239493,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":8039},{"krate":0,"index":8040},{"krate":0,"index":8041}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":169589,"byte_end":169596,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":8094}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8149},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":241729,"byte_end":241736,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243693,"byte_end":243697,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8213},{"krate":0,"index":8214}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244149,"byte_end":244156,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243880,"byte_end":243942,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243947,"byte_end":243950,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243955,"byte_end":244023,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244028,"byte_end":244094,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244099,"byte_end":244137,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245515,"byte_end":245527,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":8256}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245345,"byte_end":245418,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245436,"byte_end":245503,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246090,"byte_end":246097,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245698,"byte_end":245771,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245776,"byte_end":245793,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245798,"byte_end":245801,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245806,"byte_end":245887,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245892,"byte_end":245974,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245979,"byte_end":246058,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246063,"byte_end":246078,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246708,"byte_end":246715,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246162,"byte_end":246229,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246234,"byte_end":246265,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246270,"byte_end":246273,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246278,"byte_end":246351,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246356,"byte_end":246411,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246416,"byte_end":246419,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246424,"byte_end":246505,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246510,"byte_end":246592,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246597,"byte_end":246676,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246681,"byte_end":246696,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247341,"byte_end":247352,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246788,"byte_end":246862,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246867,"byte_end":246898,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246903,"byte_end":246906,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246911,"byte_end":246984,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":246989,"byte_end":247044,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247049,"byte_end":247052,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247057,"byte_end":247138,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247143,"byte_end":247225,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247230,"byte_end":247309,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247314,"byte_end":247329,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247985,"byte_end":247995,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247465,"byte_end":247527,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247532,"byte_end":247535,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247540,"byte_end":247612,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247617,"byte_end":247688,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247693,"byte_end":247696,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247701,"byte_end":247782,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247787,"byte_end":247869,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247874,"byte_end":247953,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":247958,"byte_end":247973,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":170215,"byte_end":170222,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8266}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8338},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249019,"byte_end":249022,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8341},{"krate":0,"index":8342}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":170583,"byte_end":170590,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8399}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250682,"byte_end":250686,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8487}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250526,"byte_end":250585,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250603,"byte_end":250670,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8492},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251694,"byte_end":251708,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8495}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251510,"byte_end":251585,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251586,"byte_end":251597,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251615,"byte_end":251682,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253299,"byte_end":253307,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8507},{"krate":0,"index":8508}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253747,"byte_end":253751,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253592,"byte_end":253665,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253670,"byte_end":253735,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254076,"byte_end":254085,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253838,"byte_end":253900,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253905,"byte_end":253908,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253913,"byte_end":253986,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253991,"byte_end":254064,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256049,"byte_end":256056,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254521,"byte_end":254594,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254599,"byte_end":254633,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254638,"byte_end":254641,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254646,"byte_end":254721,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254726,"byte_end":254766,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254771,"byte_end":254774,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254779,"byte_end":254793,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254798,"byte_end":254801,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254806,"byte_end":254846,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254851,"byte_end":254854,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254859,"byte_end":254866,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254871,"byte_end":254912,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254917,"byte_end":254960,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254965,"byte_end":254990,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":254995,"byte_end":254998,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255003,"byte_end":255050,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255055,"byte_end":255076,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255081,"byte_end":255134,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255139,"byte_end":255207,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255212,"byte_end":255285,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255290,"byte_end":255355,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255360,"byte_end":255444,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255449,"byte_end":255494,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255499,"byte_end":255508,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255513,"byte_end":255520,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255525,"byte_end":255528,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255533,"byte_end":255569,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255574,"byte_end":255577,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255582,"byte_end":255589,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255594,"byte_end":255635,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255640,"byte_end":255683,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255688,"byte_end":255713,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255718,"byte_end":255721,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255726,"byte_end":255774,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255779,"byte_end":255800,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255805,"byte_end":255844,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255849,"byte_end":255914,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255919,"byte_end":255960,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":255965,"byte_end":256011,"line_start":98,"line_end":98,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256016,"byte_end":256025,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256030,"byte_end":256037,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257080,"byte_end":257090,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256222,"byte_end":256295,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256300,"byte_end":256324,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256329,"byte_end":256332,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256337,"byte_end":256350,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256355,"byte_end":256358,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256363,"byte_end":256403,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256408,"byte_end":256411,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256416,"byte_end":256423,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256428,"byte_end":256469,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256474,"byte_end":256517,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256522,"byte_end":256547,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256552,"byte_end":256555,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256560,"byte_end":256607,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256612,"byte_end":256633,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256638,"byte_end":256691,"line_start":122,"line_end":122,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256696,"byte_end":256758,"line_start":123,"line_end":123,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256763,"byte_end":256836,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256841,"byte_end":256900,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256905,"byte_end":256992,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":256997,"byte_end":257042,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257047,"byte_end":257056,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257061,"byte_end":257068,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258608,"byte_end":258612,"line_start":184,"line_end":184,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8551}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8589},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":259668,"byte_end":259674,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":8593}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":261538,"byte_end":261546,"line_start":285,"line_end":285,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":8642}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263163,"byte_end":263167,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8694},{"krate":0,"index":8695}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8735},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":264930,"byte_end":264939,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8739},{"krate":0,"index":8740},{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8743}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":268443,"byte_end":268447,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8815},{"krate":0,"index":8816}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":270483,"byte_end":270492,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861},{"krate":0,"index":8862},{"krate":0,"index":8863},{"krate":0,"index":8864}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":273972,"byte_end":273981,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8932},{"krate":0,"index":8933},{"krate":0,"index":8934},{"krate":0,"index":8935}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275265,"byte_end":275276,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":274965,"byte_end":275019,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275024,"byte_end":275118,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275123,"byte_end":275186,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275191,"byte_end":275253,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276560,"byte_end":276571,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275413,"byte_end":275478,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275483,"byte_end":275540,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275545,"byte_end":275548,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275553,"byte_end":275618,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275623,"byte_end":275683,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275688,"byte_end":275691,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275696,"byte_end":275764,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275769,"byte_end":275812,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275817,"byte_end":275820,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275825,"byte_end":275839,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275844,"byte_end":275847,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275852,"byte_end":275859,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275864,"byte_end":275905,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275910,"byte_end":275934,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275939,"byte_end":275982,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":275987,"byte_end":276015,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276020,"byte_end":276023,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276028,"byte_end":276066,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276071,"byte_end":276074,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276079,"byte_end":276097,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276102,"byte_end":276144,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276149,"byte_end":276164,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276169,"byte_end":276188,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276193,"byte_end":276218,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276223,"byte_end":276239,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276244,"byte_end":276277,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276282,"byte_end":276291,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276296,"byte_end":276303,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276308,"byte_end":276311,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276316,"byte_end":276365,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276370,"byte_end":276424,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276429,"byte_end":276432,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276437,"byte_end":276484,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276489,"byte_end":276522,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276527,"byte_end":276536,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276541,"byte_end":276548,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276747,"byte_end":276757,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276650,"byte_end":276711,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276716,"byte_end":276735,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8990},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":278689,"byte_end":278693,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9062},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281233,"byte_end":281236,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":9065},{"krate":0,"index":9066},{"krate":0,"index":9067},{"krate":0,"index":9068}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281754,"byte_end":281761,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281646,"byte_end":281720,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281725,"byte_end":281742,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282117,"byte_end":282124,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281855,"byte_end":281923,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281928,"byte_end":281959,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281964,"byte_end":281967,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281972,"byte_end":282045,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282050,"byte_end":282105,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282499,"byte_end":282510,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282230,"byte_end":282305,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282310,"byte_end":282341,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282346,"byte_end":282349,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282354,"byte_end":282427,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282432,"byte_end":282487,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282916,"byte_end":282926,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282680,"byte_end":282743,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282748,"byte_end":282751,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282756,"byte_end":282828,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":282833,"byte_end":282904,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":9117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":285755,"byte_end":285761,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":9119},{"krate":0,"index":9120},{"krate":0,"index":9121}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":288864,"byte_end":288875,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":9171},{"krate":0,"index":9172},{"krate":0,"index":9173}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":292421,"byte_end":292425,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10511343,"byte_end":10511358,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13579},{"krate":0,"index":13580},{"krate":0,"index":13581}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10514669,"byte_end":10514677,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13538},{"krate":0,"index":13539},{"krate":0,"index":13540}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13475},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10517672,"byte_end":10517689,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13479},{"krate":0,"index":13480},{"krate":0,"index":13481},{"krate":0,"index":13482}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521134,"byte_end":10521145,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10520971,"byte_end":10521008,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521026,"byte_end":10521074,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":9407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521472,"byte_end":10521479,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521235,"byte_end":10521303,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521308,"byte_end":10521382,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521387,"byte_end":10521460,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":9484},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522154,"byte_end":10522163,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":9487},{"krate":0,"index":9488}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521995,"byte_end":10522030,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522048,"byte_end":10522094,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":9422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522566,"byte_end":10522573,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522329,"byte_end":10522397,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522402,"byte_end":10522476,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522481,"byte_end":10522554,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":9440},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525027,"byte_end":10525039,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10524828,"byte_end":10524906,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10524907,"byte_end":10524967,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":9444},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525049,"byte_end":10525071,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":9440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9445},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525073,"byte_end":10525091,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":9440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":295773,"byte_end":295784,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9500},{"krate":0,"index":9501}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173889,"byte_end":173898,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2299}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173778,"byte_end":173852,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173853,"byte_end":173878,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174808,"byte_end":174812,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173913,"byte_end":173979,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173984,"byte_end":173987,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173992,"byte_end":174060,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174065,"byte_end":174140,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174145,"byte_end":174220,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174225,"byte_end":174279,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174284,"byte_end":174359,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174364,"byte_end":174374,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174379,"byte_end":174382,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174387,"byte_end":174401,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174406,"byte_end":174409,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174414,"byte_end":174421,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174426,"byte_end":174467,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174472,"byte_end":174515,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174520,"byte_end":174523,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174528,"byte_end":174569,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174574,"byte_end":174577,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174582,"byte_end":174627,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174632,"byte_end":174677,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174682,"byte_end":174727,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174732,"byte_end":174774,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174779,"byte_end":174788,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174793,"byte_end":174800,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176051,"byte_end":176062,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":174954,"byte_end":175026,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175031,"byte_end":175092,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175097,"byte_end":175100,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175105,"byte_end":175180,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175185,"byte_end":175239,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175244,"byte_end":175247,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175252,"byte_end":175325,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175330,"byte_end":175392,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175397,"byte_end":175472,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175477,"byte_end":175531,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175536,"byte_end":175611,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175616,"byte_end":175626,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175631,"byte_end":175634,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175639,"byte_end":175653,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175658,"byte_end":175661,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175666,"byte_end":175673,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175678,"byte_end":175719,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175724,"byte_end":175767,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175772,"byte_end":175775,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175780,"byte_end":175817,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175822,"byte_end":175825,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175830,"byte_end":175882,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175887,"byte_end":175917,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175922,"byte_end":175925,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175930,"byte_end":175982,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":175987,"byte_end":176017,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176022,"byte_end":176031,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176036,"byte_end":176043,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177063,"byte_end":177066,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176227,"byte_end":176302,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176307,"byte_end":176330,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176335,"byte_end":176338,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176343,"byte_end":176415,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176420,"byte_end":176484,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176489,"byte_end":176526,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176531,"byte_end":176534,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176539,"byte_end":176615,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176620,"byte_end":176691,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176696,"byte_end":176717,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176722,"byte_end":176725,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176730,"byte_end":176744,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176749,"byte_end":176752,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176757,"byte_end":176764,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176769,"byte_end":176810,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176815,"byte_end":176858,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176863,"byte_end":176866,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176871,"byte_end":176908,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176913,"byte_end":176952,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176957,"byte_end":176960,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":176965,"byte_end":177029,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177034,"byte_end":177043,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177048,"byte_end":177055,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178626,"byte_end":178635,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177233,"byte_end":177304,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177309,"byte_end":177328,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177333,"byte_end":177336,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177341,"byte_end":177406,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177411,"byte_end":177480,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177485,"byte_end":177496,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177501,"byte_end":177504,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177509,"byte_end":177584,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177589,"byte_end":177671,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177676,"byte_end":177694,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177699,"byte_end":177702,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177707,"byte_end":177730,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177735,"byte_end":177738,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177743,"byte_end":177818,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177823,"byte_end":177910,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177915,"byte_end":177971,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177976,"byte_end":177979,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":177984,"byte_end":177996,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178001,"byte_end":178004,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178009,"byte_end":178078,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178083,"byte_end":178108,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178113,"byte_end":178116,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178121,"byte_end":178135,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178140,"byte_end":178143,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178148,"byte_end":178155,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178160,"byte_end":178201,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178206,"byte_end":178249,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178254,"byte_end":178257,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178262,"byte_end":178313,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178318,"byte_end":178321,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178326,"byte_end":178366,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178371,"byte_end":178374,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178379,"byte_end":178431,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178436,"byte_end":178488,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178493,"byte_end":178545,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178550,"byte_end":178592,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178597,"byte_end":178606,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178611,"byte_end":178618,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179864,"byte_end":179870,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178779,"byte_end":178851,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178856,"byte_end":178883,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178888,"byte_end":178891,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178896,"byte_end":178971,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":178976,"byte_end":179047,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179052,"byte_end":179124,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179129,"byte_end":179203,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179208,"byte_end":179266,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179271,"byte_end":179274,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179279,"byte_end":179355,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179360,"byte_end":179434,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179439,"byte_end":179460,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179465,"byte_end":179468,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179473,"byte_end":179487,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179492,"byte_end":179495,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179500,"byte_end":179507,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179512,"byte_end":179553,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179558,"byte_end":179582,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179587,"byte_end":179630,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179635,"byte_end":179638,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179643,"byte_end":179681,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179686,"byte_end":179747,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179752,"byte_end":179755,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179760,"byte_end":179830,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179835,"byte_end":179844,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":179849,"byte_end":179856,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181195,"byte_end":181205,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180098,"byte_end":180173,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180178,"byte_end":180254,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180259,"byte_end":180262,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180267,"byte_end":180342,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180347,"byte_end":180422,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180427,"byte_end":180503,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180508,"byte_end":180573,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180578,"byte_end":180581,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180586,"byte_end":180662,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180667,"byte_end":180741,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180746,"byte_end":180771,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180776,"byte_end":180779,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180784,"byte_end":180798,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180803,"byte_end":180810,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180815,"byte_end":180856,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180861,"byte_end":180904,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180909,"byte_end":180912,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180917,"byte_end":180955,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":180960,"byte_end":181010,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181015,"byte_end":181066,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181071,"byte_end":181078,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181083,"byte_end":181086,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181091,"byte_end":181161,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181166,"byte_end":181175,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181180,"byte_end":181187,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182234,"byte_end":182238,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181437,"byte_end":181510,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181515,"byte_end":181543,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181548,"byte_end":181551,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181556,"byte_end":181630,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181635,"byte_end":181702,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181707,"byte_end":181752,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181757,"byte_end":181760,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181765,"byte_end":181841,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181846,"byte_end":181872,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181877,"byte_end":181880,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181885,"byte_end":181899,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181904,"byte_end":181907,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181912,"byte_end":181919,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181924,"byte_end":181965,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":181970,"byte_end":182013,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182018,"byte_end":182021,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182026,"byte_end":182063,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182068,"byte_end":182123,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182128,"byte_end":182131,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182136,"byte_end":182200,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182205,"byte_end":182214,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182219,"byte_end":182226,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183172,"byte_end":183179,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182447,"byte_end":182501,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182506,"byte_end":182561,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182566,"byte_end":182569,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182574,"byte_end":182642,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182647,"byte_end":182650,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182655,"byte_end":182669,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182674,"byte_end":182677,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182682,"byte_end":182689,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182694,"byte_end":182735,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182740,"byte_end":182771,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182776,"byte_end":182811,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182816,"byte_end":182836,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182841,"byte_end":182844,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182849,"byte_end":182886,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182891,"byte_end":182894,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182899,"byte_end":182926,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182931,"byte_end":182955,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":182960,"byte_end":183002,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183007,"byte_end":183016,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183021,"byte_end":183028,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183033,"byte_end":183036,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183041,"byte_end":183089,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183094,"byte_end":183138,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183143,"byte_end":183152,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183157,"byte_end":183164,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184298,"byte_end":184303,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183337,"byte_end":183388,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183393,"byte_end":183428,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183433,"byte_end":183436,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183441,"byte_end":183495,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183500,"byte_end":183557,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183562,"byte_end":183598,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183603,"byte_end":183606,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183611,"byte_end":183679,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183684,"byte_end":183687,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183692,"byte_end":183706,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183711,"byte_end":183714,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183719,"byte_end":183726,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183731,"byte_end":183772,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183777,"byte_end":183808,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183813,"byte_end":183848,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183853,"byte_end":183873,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183878,"byte_end":183881,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183886,"byte_end":183923,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183928,"byte_end":183931,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183936,"byte_end":183963,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":183968,"byte_end":184011,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184016,"byte_end":184059,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184064,"byte_end":184107,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184112,"byte_end":184119,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184124,"byte_end":184127,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184132,"byte_end":184186,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184191,"byte_end":184225,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184230,"byte_end":184264,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184269,"byte_end":184278,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184283,"byte_end":184290,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185599,"byte_end":185605,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184564,"byte_end":184626,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184631,"byte_end":184695,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184700,"byte_end":184703,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184708,"byte_end":184772,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184777,"byte_end":184842,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184847,"byte_end":184893,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184898,"byte_end":184901,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184906,"byte_end":184955,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":184960,"byte_end":185000,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185005,"byte_end":185008,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185013,"byte_end":185027,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185032,"byte_end":185035,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185040,"byte_end":185047,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185052,"byte_end":185093,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185098,"byte_end":185129,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185134,"byte_end":185169,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185174,"byte_end":185194,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185199,"byte_end":185202,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185207,"byte_end":185244,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185249,"byte_end":185252,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185257,"byte_end":185284,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185289,"byte_end":185320,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185325,"byte_end":185351,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185356,"byte_end":185422,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185427,"byte_end":185436,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185441,"byte_end":185448,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185453,"byte_end":185456,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185461,"byte_end":185496,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185501,"byte_end":185504,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185509,"byte_end":185565,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185570,"byte_end":185579,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185584,"byte_end":185591,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186669,"byte_end":186674,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185835,"byte_end":185866,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185871,"byte_end":185874,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185879,"byte_end":185946,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":185951,"byte_end":186023,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186028,"byte_end":186085,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186090,"byte_end":186093,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186098,"byte_end":186112,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186117,"byte_end":186120,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186125,"byte_end":186132,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186137,"byte_end":186178,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186183,"byte_end":186226,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186231,"byte_end":186253,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186258,"byte_end":186305,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186310,"byte_end":186313,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186318,"byte_end":186359,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186364,"byte_end":186405,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186410,"byte_end":186451,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186456,"byte_end":186497,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186502,"byte_end":186543,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186548,"byte_end":186589,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186594,"byte_end":186635,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186640,"byte_end":186649,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186654,"byte_end":186661,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187624,"byte_end":187628,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186809,"byte_end":186876,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186881,"byte_end":186933,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186938,"byte_end":186941,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":186946,"byte_end":187016,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187021,"byte_end":187097,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187102,"byte_end":187178,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187183,"byte_end":187253,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187258,"byte_end":187284,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187289,"byte_end":187292,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187297,"byte_end":187311,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187316,"byte_end":187319,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187324,"byte_end":187331,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187336,"byte_end":187377,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187382,"byte_end":187425,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187430,"byte_end":187433,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187438,"byte_end":187481,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187486,"byte_end":187555,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187560,"byte_end":187590,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187595,"byte_end":187604,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187609,"byte_end":187616,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188822,"byte_end":188829,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187863,"byte_end":187928,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187933,"byte_end":187936,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187941,"byte_end":187955,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187960,"byte_end":187963,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187968,"byte_end":187975,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":187980,"byte_end":188021,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188026,"byte_end":188057,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188062,"byte_end":188097,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188102,"byte_end":188122,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188127,"byte_end":188130,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188135,"byte_end":188174,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188179,"byte_end":188218,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188223,"byte_end":188262,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188267,"byte_end":188270,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188275,"byte_end":188302,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188307,"byte_end":188346,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188351,"byte_end":188390,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188395,"byte_end":188402,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188407,"byte_end":188434,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188439,"byte_end":188478,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188483,"byte_end":188522,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188527,"byte_end":188534,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188539,"byte_end":188566,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188571,"byte_end":188612,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188617,"byte_end":188658,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188663,"byte_end":188670,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188675,"byte_end":188678,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188683,"byte_end":188742,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188747,"byte_end":188788,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188793,"byte_end":188802,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":188807,"byte_end":188814,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190091,"byte_end":190099,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189006,"byte_end":189078,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189083,"byte_end":189086,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189091,"byte_end":189168,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189173,"byte_end":189248,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189253,"byte_end":189329,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189334,"byte_end":189337,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189342,"byte_end":189424,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189429,"byte_end":189512,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189517,"byte_end":189520,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189525,"byte_end":189601,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189606,"byte_end":189682,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189687,"byte_end":189708,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189713,"byte_end":189716,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189721,"byte_end":189735,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189740,"byte_end":189743,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189748,"byte_end":189755,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189760,"byte_end":189801,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189806,"byte_end":189849,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189854,"byte_end":189857,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189862,"byte_end":189899,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189904,"byte_end":189971,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189976,"byte_end":189979,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":189984,"byte_end":190057,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190062,"byte_end":190071,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190076,"byte_end":190083,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191111,"byte_end":191115,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190302,"byte_end":190373,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190378,"byte_end":190408,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190413,"byte_end":190416,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190421,"byte_end":190496,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190501,"byte_end":190572,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190577,"byte_end":190617,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190622,"byte_end":190625,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190630,"byte_end":190644,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190649,"byte_end":190652,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190657,"byte_end":190664,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190669,"byte_end":190710,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190715,"byte_end":190739,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190744,"byte_end":190787,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190792,"byte_end":190795,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190800,"byte_end":190838,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190843,"byte_end":190846,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190851,"byte_end":190895,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190900,"byte_end":190920,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190925,"byte_end":190988,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":190993,"byte_end":191000,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191005,"byte_end":191008,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191013,"byte_end":191077,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191082,"byte_end":191091,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191096,"byte_end":191103,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192162,"byte_end":192172,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191384,"byte_end":191458,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191463,"byte_end":191486,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191491,"byte_end":191494,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191499,"byte_end":191572,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191577,"byte_end":191649,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191654,"byte_end":191731,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191736,"byte_end":191747,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191752,"byte_end":191755,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191760,"byte_end":191774,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191779,"byte_end":191782,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191787,"byte_end":191794,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191799,"byte_end":191840,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191845,"byte_end":191869,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191874,"byte_end":191917,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191922,"byte_end":191925,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191930,"byte_end":191968,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191973,"byte_end":191976,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":191981,"byte_end":192044,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192049,"byte_end":192052,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192057,"byte_end":192128,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192133,"byte_end":192142,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192147,"byte_end":192154,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193161,"byte_end":193171,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192406,"byte_end":192482,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192487,"byte_end":192510,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192515,"byte_end":192518,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192523,"byte_end":192598,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192603,"byte_end":192675,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192680,"byte_end":192747,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192752,"byte_end":192755,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192760,"byte_end":192774,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192779,"byte_end":192782,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192787,"byte_end":192794,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192799,"byte_end":192840,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192845,"byte_end":192869,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192874,"byte_end":192917,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192922,"byte_end":192925,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192930,"byte_end":192968,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192973,"byte_end":192976,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":192981,"byte_end":193044,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193049,"byte_end":193052,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193057,"byte_end":193127,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193132,"byte_end":193141,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193146,"byte_end":193153,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194687,"byte_end":194697,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193405,"byte_end":193475,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193480,"byte_end":193483,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193488,"byte_end":193559,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193564,"byte_end":193636,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193641,"byte_end":193711,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193716,"byte_end":193719,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193724,"byte_end":193795,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193800,"byte_end":193886,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193891,"byte_end":193958,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":193963,"byte_end":194027,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194032,"byte_end":194035,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194040,"byte_end":194054,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194059,"byte_end":194062,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194067,"byte_end":194074,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194079,"byte_end":194120,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194125,"byte_end":194149,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194154,"byte_end":194197,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194202,"byte_end":194230,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194235,"byte_end":194238,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194243,"byte_end":194281,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194286,"byte_end":194289,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194294,"byte_end":194312,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194317,"byte_end":194359,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194364,"byte_end":194379,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194384,"byte_end":194403,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194408,"byte_end":194433,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194438,"byte_end":194454,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194459,"byte_end":194486,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194491,"byte_end":194500,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194505,"byte_end":194512,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194517,"byte_end":194520,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194525,"byte_end":194570,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194575,"byte_end":194578,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194583,"byte_end":194653,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194658,"byte_end":194667,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194672,"byte_end":194679,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195936,"byte_end":195944,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194878,"byte_end":194949,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":194954,"byte_end":194997,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195002,"byte_end":195005,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195010,"byte_end":195085,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195090,"byte_end":195160,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195165,"byte_end":195203,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195208,"byte_end":195211,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195216,"byte_end":195291,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195296,"byte_end":195339,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195344,"byte_end":195347,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195352,"byte_end":195425,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195430,"byte_end":195473,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195478,"byte_end":195481,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195486,"byte_end":195500,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195505,"byte_end":195508,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195513,"byte_end":195520,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195525,"byte_end":195566,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195571,"byte_end":195595,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195600,"byte_end":195643,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195648,"byte_end":195651,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195656,"byte_end":195674,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195679,"byte_end":195682,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195687,"byte_end":195692,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195697,"byte_end":195758,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195763,"byte_end":195785,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195790,"byte_end":195819,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195824,"byte_end":195835,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195840,"byte_end":195858,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195863,"byte_end":195868,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195873,"byte_end":195876,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195881,"byte_end":195902,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195907,"byte_end":195916,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":195921,"byte_end":195928,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198106,"byte_end":198125,"line_start":924,"line_end":924,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196163,"byte_end":196234,"line_start":877,"line_end":877,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196239,"byte_end":196313,"line_start":878,"line_end":878,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196318,"byte_end":196332,"line_start":879,"line_end":879,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196337,"byte_end":196340,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196345,"byte_end":196408,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196413,"byte_end":196484,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196489,"byte_end":196541,"line_start":883,"line_end":883,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196546,"byte_end":196549,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196554,"byte_end":196629,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196634,"byte_end":196704,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196709,"byte_end":196773,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196778,"byte_end":196781,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196786,"byte_end":196857,"line_start":889,"line_end":889,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196862,"byte_end":196932,"line_start":890,"line_end":890,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":196937,"byte_end":196998,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197003,"byte_end":197070,"line_start":892,"line_end":892,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197075,"byte_end":197144,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197149,"byte_end":197221,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197226,"byte_end":197229,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197234,"byte_end":197309,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197314,"byte_end":197371,"line_start":897,"line_end":897,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197376,"byte_end":197379,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197384,"byte_end":197398,"line_start":899,"line_end":899,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197403,"byte_end":197406,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197411,"byte_end":197418,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197423,"byte_end":197464,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197469,"byte_end":197503,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197508,"byte_end":197551,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197556,"byte_end":197559,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197564,"byte_end":197604,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197609,"byte_end":197649,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197654,"byte_end":197694,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197699,"byte_end":197702,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197707,"byte_end":197775,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197780,"byte_end":197802,"line_start":911,"line_end":911,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197807,"byte_end":197832,"line_start":912,"line_end":912,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197837,"byte_end":197867,"line_start":913,"line_end":913,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197872,"byte_end":197881,"line_start":914,"line_end":914,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197886,"byte_end":197892,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197897,"byte_end":197923,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197928,"byte_end":197954,"line_start":917,"line_end":917,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197959,"byte_end":197985,"line_start":918,"line_end":918,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":197990,"byte_end":198004,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198009,"byte_end":198017,"line_start":920,"line_end":920,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198022,"byte_end":198029,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198034,"byte_end":198068,"line_start":922,"line_end":922,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198073,"byte_end":198098,"line_start":923,"line_end":923,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198950,"byte_end":198954,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198442,"byte_end":198513,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198518,"byte_end":198521,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198526,"byte_end":198599,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198604,"byte_end":198639,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198644,"byte_end":198647,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198652,"byte_end":198666,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198671,"byte_end":198674,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198679,"byte_end":198686,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198691,"byte_end":198732,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198737,"byte_end":198780,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198785,"byte_end":198788,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198793,"byte_end":198839,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198844,"byte_end":198847,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198852,"byte_end":198916,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198921,"byte_end":198930,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":198935,"byte_end":198942,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199619,"byte_end":199623,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199092,"byte_end":199164,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199169,"byte_end":199172,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199177,"byte_end":199250,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199255,"byte_end":199301,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199306,"byte_end":199309,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199314,"byte_end":199328,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199333,"byte_end":199336,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199341,"byte_end":199348,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199353,"byte_end":199394,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199399,"byte_end":199442,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199447,"byte_end":199450,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199455,"byte_end":199501,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199506,"byte_end":199509,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199514,"byte_end":199585,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199590,"byte_end":199599,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199604,"byte_end":199611,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201244,"byte_end":201248,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199761,"byte_end":199832,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199837,"byte_end":199910,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199915,"byte_end":199953,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199958,"byte_end":199961,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":199966,"byte_end":200020,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200025,"byte_end":200097,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200102,"byte_end":200178,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200183,"byte_end":200251,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200256,"byte_end":200332,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200337,"byte_end":200359,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200364,"byte_end":200367,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200372,"byte_end":200439,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200444,"byte_end":200512,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200517,"byte_end":200530,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200535,"byte_end":200538,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200543,"byte_end":200557,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200562,"byte_end":200565,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200570,"byte_end":200577,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200582,"byte_end":200625,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200630,"byte_end":200673,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200678,"byte_end":200706,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200711,"byte_end":200714,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200719,"byte_end":200737,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200742,"byte_end":200780,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200785,"byte_end":200800,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200805,"byte_end":200822,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200827,"byte_end":200869,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200874,"byte_end":200909,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200914,"byte_end":200958,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200963,"byte_end":200972,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200977,"byte_end":200991,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":200996,"byte_end":200999,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201004,"byte_end":201047,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201052,"byte_end":201089,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201094,"byte_end":201131,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201136,"byte_end":201170,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201175,"byte_end":201209,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201214,"byte_end":201224,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201229,"byte_end":201236,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202177,"byte_end":202183,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201373,"byte_end":201420,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201425,"byte_end":201428,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201433,"byte_end":201507,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201512,"byte_end":201549,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201554,"byte_end":201557,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201562,"byte_end":201576,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201581,"byte_end":201584,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201589,"byte_end":201596,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201601,"byte_end":201642,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201647,"byte_end":201690,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201695,"byte_end":201698,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201703,"byte_end":201743,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201748,"byte_end":201751,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201756,"byte_end":201785,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201790,"byte_end":201818,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201823,"byte_end":201880,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201885,"byte_end":201912,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201917,"byte_end":201940,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201945,"byte_end":201948,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201953,"byte_end":201988,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":201993,"byte_end":202021,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202026,"byte_end":202083,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202088,"byte_end":202115,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202120,"byte_end":202143,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202148,"byte_end":202157,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202162,"byte_end":202169,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203942,"byte_end":203954,"line_start":1100,"line_end":1100,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202234,"byte_end":202288,"line_start":1059,"line_end":1059,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202293,"byte_end":202296,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202301,"byte_end":202376,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202381,"byte_end":202384,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202389,"byte_end":202464,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202469,"byte_end":202543,"line_start":1064,"line_end":1064,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202548,"byte_end":202622,"line_start":1065,"line_end":1065,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202627,"byte_end":202676,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202681,"byte_end":202684,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202689,"byte_end":202764,"line_start":1068,"line_end":1068,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202769,"byte_end":202839,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202844,"byte_end":202911,"line_start":1070,"line_end":1070,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202916,"byte_end":202988,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":202993,"byte_end":203062,"line_start":1072,"line_end":1072,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203067,"byte_end":203082,"line_start":1073,"line_end":1073,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203087,"byte_end":203090,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203095,"byte_end":203159,"line_start":1075,"line_end":1075,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203164,"byte_end":203221,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203226,"byte_end":203229,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203234,"byte_end":203248,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203253,"byte_end":203256,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203261,"byte_end":203268,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203273,"byte_end":203314,"line_start":1081,"line_end":1081,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203319,"byte_end":203362,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203367,"byte_end":203370,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203375,"byte_end":203437,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203442,"byte_end":203472,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203477,"byte_end":203531,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203536,"byte_end":203566,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203571,"byte_end":203620,"line_start":1088,"line_end":1088,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203625,"byte_end":203628,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203633,"byte_end":203695,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203700,"byte_end":203722,"line_start":1091,"line_end":1091,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203727,"byte_end":203747,"line_start":1092,"line_end":1092,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203752,"byte_end":203794,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203799,"byte_end":203804,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203809,"byte_end":203842,"line_start":1095,"line_end":1095,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203847,"byte_end":203880,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203885,"byte_end":203894,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203899,"byte_end":203906,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":203911,"byte_end":203934,"line_start":1099,"line_end":1099,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204330,"byte_end":204335,"line_start":1112,"line_end":1112,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204101,"byte_end":204142,"line_start":1107,"line_end":1107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204147,"byte_end":204150,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204155,"byte_end":204230,"line_start":1109,"line_end":1109,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204235,"byte_end":204292,"line_start":1110,"line_end":1110,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204297,"byte_end":204322,"line_start":1111,"line_end":1111,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204791,"byte_end":204802,"line_start":1126,"line_end":1126,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204490,"byte_end":204531,"line_start":1119,"line_end":1119,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204536,"byte_end":204539,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204544,"byte_end":204603,"line_start":1121,"line_end":1121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204608,"byte_end":204611,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204616,"byte_end":204691,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204696,"byte_end":204753,"line_start":1124,"line_end":1124,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204758,"byte_end":204783,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205695,"byte_end":205703,"line_start":1147,"line_end":1147,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":204955,"byte_end":205018,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205023,"byte_end":205026,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205031,"byte_end":205106,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205111,"byte_end":205187,"line_start":1136,"line_end":1136,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205192,"byte_end":205265,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205270,"byte_end":205343,"line_start":1138,"line_end":1138,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205348,"byte_end":205390,"line_start":1139,"line_end":1139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205395,"byte_end":205398,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205403,"byte_end":205468,"line_start":1141,"line_end":1141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205473,"byte_end":205476,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205481,"byte_end":205556,"line_start":1143,"line_end":1143,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205561,"byte_end":205618,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205623,"byte_end":205657,"line_start":1145,"line_end":1145,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205662,"byte_end":205687,"line_start":1146,"line_end":1146,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207383,"byte_end":207399,"line_start":1192,"line_end":1192,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205897,"byte_end":205972,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205977,"byte_end":205980,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":205985,"byte_end":206060,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206065,"byte_end":206139,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206144,"byte_end":206216,"line_start":1159,"line_end":1159,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206221,"byte_end":206295,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206300,"byte_end":206329,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206334,"byte_end":206337,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206342,"byte_end":206407,"line_start":1163,"line_end":1163,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206412,"byte_end":206415,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206420,"byte_end":206495,"line_start":1165,"line_end":1165,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206500,"byte_end":206557,"line_start":1166,"line_end":1166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206562,"byte_end":206565,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206570,"byte_end":206584,"line_start":1168,"line_end":1168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206589,"byte_end":206592,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206597,"byte_end":206604,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206609,"byte_end":206650,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206655,"byte_end":206689,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206694,"byte_end":206737,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206742,"byte_end":206745,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206750,"byte_end":206800,"line_start":1175,"line_end":1175,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206805,"byte_end":206855,"line_start":1176,"line_end":1176,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206860,"byte_end":206863,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206868,"byte_end":206935,"line_start":1178,"line_end":1178,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":206940,"byte_end":207002,"line_start":1179,"line_end":1179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207007,"byte_end":207010,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207015,"byte_end":207040,"line_start":1181,"line_end":1181,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207045,"byte_end":207099,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207104,"byte_end":207107,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207112,"byte_end":207137,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207142,"byte_end":207196,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207201,"byte_end":207204,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207209,"byte_end":207253,"line_start":1187,"line_end":1187,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207258,"byte_end":207294,"line_start":1188,"line_end":1188,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207299,"byte_end":207306,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207311,"byte_end":207345,"line_start":1190,"line_end":1190,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207350,"byte_end":207375,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208295,"byte_end":208298,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207607,"byte_end":207655,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207660,"byte_end":207663,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207668,"byte_end":207741,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207746,"byte_end":207818,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207823,"byte_end":207836,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207841,"byte_end":207844,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207849,"byte_end":207863,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207868,"byte_end":207871,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207876,"byte_end":207883,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207888,"byte_end":207929,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207934,"byte_end":207977,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207982,"byte_end":207985,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":207990,"byte_end":208028,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208033,"byte_end":208072,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208077,"byte_end":208080,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208085,"byte_end":208119,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208124,"byte_end":208165,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208170,"byte_end":208198,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208203,"byte_end":208253,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208258,"byte_end":208267,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208272,"byte_end":208279,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208284,"byte_end":208287,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209206,"byte_end":209211,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208479,"byte_end":208516,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208521,"byte_end":208524,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208529,"byte_end":208600,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208605,"byte_end":208681,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208686,"byte_end":208689,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208694,"byte_end":208701,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208706,"byte_end":208747,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208752,"byte_end":208795,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208800,"byte_end":208803,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208808,"byte_end":208865,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208870,"byte_end":208926,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208931,"byte_end":208934,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208939,"byte_end":208979,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208984,"byte_end":208987,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":208992,"byte_end":209040,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209045,"byte_end":209073,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209078,"byte_end":209093,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209098,"byte_end":209117,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209122,"byte_end":209140,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209145,"byte_end":209160,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209165,"byte_end":209172,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209177,"byte_end":209186,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209191,"byte_end":209198,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209549,"byte_end":209557,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209403,"byte_end":209458,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209463,"byte_end":209466,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209471,"byte_end":209541,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210592,"byte_end":210598,"line_start":1290,"line_end":1290,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209690,"byte_end":209757,"line_start":1271,"line_end":1271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209762,"byte_end":209765,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209770,"byte_end":209844,"line_start":1273,"line_end":1273,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209849,"byte_end":209921,"line_start":1274,"line_end":1274,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209926,"byte_end":209978,"line_start":1275,"line_end":1275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209983,"byte_end":209986,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":209991,"byte_end":210064,"line_start":1277,"line_end":1277,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210069,"byte_end":210143,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210148,"byte_end":210223,"line_start":1279,"line_end":1279,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210228,"byte_end":210300,"line_start":1280,"line_end":1280,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210305,"byte_end":210317,"line_start":1281,"line_end":1281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210322,"byte_end":210325,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210330,"byte_end":210405,"line_start":1283,"line_end":1283,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210410,"byte_end":210467,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210472,"byte_end":210475,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210480,"byte_end":210492,"line_start":1286,"line_end":1286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210497,"byte_end":210500,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210505,"byte_end":210554,"line_start":1288,"line_end":1288,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210559,"byte_end":210584,"line_start":1289,"line_end":1289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211695,"byte_end":211707,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210759,"byte_end":210832,"line_start":1297,"line_end":1297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210837,"byte_end":210840,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210845,"byte_end":210918,"line_start":1299,"line_end":1299,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210923,"byte_end":210993,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":210998,"byte_end":211073,"line_start":1301,"line_end":1301,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211078,"byte_end":211155,"line_start":1302,"line_end":1302,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211160,"byte_end":211188,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211193,"byte_end":211196,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211201,"byte_end":211274,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211279,"byte_end":211354,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211359,"byte_end":211420,"line_start":1307,"line_end":1307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211425,"byte_end":211428,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211433,"byte_end":211508,"line_start":1309,"line_end":1309,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211513,"byte_end":211570,"line_start":1310,"line_end":1310,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211575,"byte_end":211578,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211583,"byte_end":211595,"line_start":1312,"line_end":1312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211600,"byte_end":211603,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211608,"byte_end":211657,"line_start":1314,"line_end":1314,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211662,"byte_end":211687,"line_start":1315,"line_end":1315,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212745,"byte_end":212752,"line_start":1336,"line_end":1336,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211878,"byte_end":211953,"line_start":1323,"line_end":1323,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":211958,"byte_end":212017,"line_start":1324,"line_end":1324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212022,"byte_end":212025,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212030,"byte_end":212103,"line_start":1326,"line_end":1326,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212108,"byte_end":212179,"line_start":1327,"line_end":1327,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212184,"byte_end":212257,"line_start":1328,"line_end":1328,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212262,"byte_end":212336,"line_start":1329,"line_end":1329,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212341,"byte_end":212411,"line_start":1330,"line_end":1330,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212416,"byte_end":212489,"line_start":1331,"line_end":1331,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212494,"byte_end":212570,"line_start":1332,"line_end":1332,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212575,"byte_end":212656,"line_start":1333,"line_end":1333,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":212661,"byte_end":212685,"line_start":1334,"line_end":1334,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213887,"byte_end":213892,"line_start":1360,"line_end":1360,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213310,"byte_end":213382,"line_start":1347,"line_end":1347,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213387,"byte_end":213399,"line_start":1348,"line_end":1348,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213404,"byte_end":213407,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213412,"byte_end":213485,"line_start":1350,"line_end":1350,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213490,"byte_end":213552,"line_start":1351,"line_end":1351,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213557,"byte_end":213579,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213584,"byte_end":213587,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213592,"byte_end":213667,"line_start":1354,"line_end":1354,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213672,"byte_end":213729,"line_start":1355,"line_end":1355,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213734,"byte_end":213758,"line_start":1356,"line_end":1356,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213815,"byte_end":213849,"line_start":1358,"line_end":1358,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":213854,"byte_end":213879,"line_start":1359,"line_end":1359,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214504,"byte_end":214511,"line_start":1376,"line_end":1376,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214201,"byte_end":214274,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214279,"byte_end":214282,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214287,"byte_end":214356,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214361,"byte_end":214430,"line_start":1374,"line_end":1374,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214435,"byte_end":214496,"line_start":1375,"line_end":1375,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214967,"byte_end":214978,"line_start":1389,"line_end":1389,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214688,"byte_end":214763,"line_start":1384,"line_end":1384,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214768,"byte_end":214789,"line_start":1385,"line_end":1385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214794,"byte_end":214797,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214802,"byte_end":214882,"line_start":1387,"line_end":1387,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":214887,"byte_end":214959,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215431,"byte_end":215443,"line_start":1402,"line_end":1402,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215152,"byte_end":215228,"line_start":1397,"line_end":1397,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215233,"byte_end":215254,"line_start":1398,"line_end":1398,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215259,"byte_end":215262,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215267,"byte_end":215346,"line_start":1400,"line_end":1400,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215351,"byte_end":215423,"line_start":1401,"line_end":1401,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215719,"byte_end":215734,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215618,"byte_end":215689,"line_start":1410,"line_end":1410,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215694,"byte_end":215711,"line_start":1411,"line_end":1411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217835,"byte_end":217851,"line_start":1467,"line_end":1467,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215881,"byte_end":215956,"line_start":1419,"line_end":1419,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215961,"byte_end":215971,"line_start":1420,"line_end":1420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215976,"byte_end":215979,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":215984,"byte_end":216057,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216062,"byte_end":216130,"line_start":1423,"line_end":1423,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216135,"byte_end":216183,"line_start":1424,"line_end":1424,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216188,"byte_end":216263,"line_start":1425,"line_end":1425,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216268,"byte_end":216344,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216349,"byte_end":216375,"line_start":1427,"line_end":1427,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216380,"byte_end":216383,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216388,"byte_end":216461,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216466,"byte_end":216536,"line_start":1430,"line_end":1430,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216541,"byte_end":216581,"line_start":1431,"line_end":1431,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216586,"byte_end":216589,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216594,"byte_end":216648,"line_start":1433,"line_end":1433,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216653,"byte_end":216737,"line_start":1434,"line_end":1434,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216742,"byte_end":216745,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216750,"byte_end":216764,"line_start":1436,"line_end":1436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216769,"byte_end":216772,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216777,"byte_end":216784,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216789,"byte_end":216830,"line_start":1439,"line_end":1439,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216835,"byte_end":216869,"line_start":1440,"line_end":1440,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216874,"byte_end":216929,"line_start":1441,"line_end":1441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216934,"byte_end":216937,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216942,"byte_end":216977,"line_start":1443,"line_end":1443,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":216982,"byte_end":217032,"line_start":1444,"line_end":1444,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217037,"byte_end":217059,"line_start":1445,"line_end":1445,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217064,"byte_end":217074,"line_start":1446,"line_end":1446,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217079,"byte_end":217096,"line_start":1447,"line_end":1447,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217101,"byte_end":217127,"line_start":1448,"line_end":1448,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217132,"byte_end":217187,"line_start":1449,"line_end":1449,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217192,"byte_end":217221,"line_start":1450,"line_end":1450,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217226,"byte_end":217289,"line_start":1451,"line_end":1451,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217294,"byte_end":217340,"line_start":1452,"line_end":1452,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217345,"byte_end":217359,"line_start":1453,"line_end":1453,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217364,"byte_end":217433,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217438,"byte_end":217463,"line_start":1455,"line_end":1455,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217468,"byte_end":217521,"line_start":1456,"line_end":1456,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217526,"byte_end":217555,"line_start":1457,"line_end":1457,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217560,"byte_end":217573,"line_start":1458,"line_end":1458,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217578,"byte_end":217648,"line_start":1459,"line_end":1459,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217653,"byte_end":217712,"line_start":1460,"line_end":1460,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217717,"byte_end":217747,"line_start":1461,"line_end":1461,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217752,"byte_end":217761,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217766,"byte_end":217771,"line_start":1463,"line_end":1463,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217776,"byte_end":217801,"line_start":1464,"line_end":1464,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217806,"byte_end":217815,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":217820,"byte_end":217827,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":333685,"byte_end":333692,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9541},{"krate":0,"index":9542},{"krate":0,"index":9543}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":297894,"byte_end":297901,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9608}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9683},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":298149,"byte_end":298158,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":9686}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9761},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":298459,"byte_end":298469,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9764}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336434,"byte_end":336444,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9843}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":298895,"byte_end":298900,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9886}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":299177,"byte_end":299183,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9964}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10036},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":337792,"byte_end":337798,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":10040},{"krate":0,"index":10041},{"krate":0,"index":10042}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10101},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340634,"byte_end":340641,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":10104}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340467,"byte_end":340537,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340555,"byte_end":340622,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10109},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":341726,"byte_end":341736,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":10113},{"krate":0,"index":10114},{"krate":0,"index":10115}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":343622,"byte_end":343631,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":10170},{"krate":0,"index":10171},{"krate":0,"index":10172},{"krate":0,"index":10173}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":346766,"byte_end":346778,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":10239},{"krate":0,"index":10240},{"krate":0,"index":10241}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10305},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":349783,"byte_end":349793,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":10307},{"krate":0,"index":10308}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":351971,"byte_end":351981,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":10358},{"krate":0,"index":10359}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10402},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_concat.rs","byte_start":353330,"byte_end":353339,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":10404},{"krate":0,"index":10405}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":354753,"byte_end":354760,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":10442},{"krate":0,"index":10443},{"krate":0,"index":10444},{"krate":0,"index":10445}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359208,"byte_end":359218,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357351,"byte_end":357427,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357428,"byte_end":357431,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357432,"byte_end":357508,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357509,"byte_end":357579,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357580,"byte_end":357639,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357640,"byte_end":357643,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357644,"byte_end":357722,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357723,"byte_end":357800,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357801,"byte_end":357865,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357866,"byte_end":357869,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357870,"byte_end":357942,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":357943,"byte_end":358021,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358022,"byte_end":358051,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358052,"byte_end":358055,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358056,"byte_end":358133,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358134,"byte_end":358198,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358199,"byte_end":358251,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358252,"byte_end":358255,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358256,"byte_end":358333,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358334,"byte_end":358406,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358407,"byte_end":358476,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358477,"byte_end":358555,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358556,"byte_end":358559,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358560,"byte_end":358573,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358574,"byte_end":358577,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358578,"byte_end":358585,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358586,"byte_end":358619,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358620,"byte_end":358643,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358644,"byte_end":358685,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358686,"byte_end":358732,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358733,"byte_end":358736,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358737,"byte_end":358796,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358797,"byte_end":358819,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358820,"byte_end":358854,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358855,"byte_end":358864,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358865,"byte_end":358868,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358869,"byte_end":358892,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358893,"byte_end":358932,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358933,"byte_end":358969,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":358970,"byte_end":359013,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359014,"byte_end":359030,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359031,"byte_end":359051,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359052,"byte_end":359061,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359062,"byte_end":359069,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359070,"byte_end":359073,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359074,"byte_end":359139,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359140,"byte_end":359182,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359183,"byte_end":359192,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359193,"byte_end":359200,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359581,"byte_end":359590,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":10510},{"krate":0,"index":10511},{"krate":0,"index":10512}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10563},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":361498,"byte_end":361510,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":10567},{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10570},{"krate":0,"index":10571}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10636},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":365054,"byte_end":365066,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":10640},{"krate":0,"index":10641},{"krate":0,"index":10642},{"krate":0,"index":10643},{"krate":0,"index":10644}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13436},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10526155,"byte_end":10526173,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13438},{"krate":0,"index":13439},{"krate":0,"index":13440}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10528713,"byte_end":10528724,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":13394},{"krate":0,"index":13395},{"krate":0,"index":13396}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13326},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10531256,"byte_end":10531276,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13330},{"krate":0,"index":13331},{"krate":0,"index":13332},{"krate":0,"index":13333}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":368750,"byte_end":368763,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":10830},{"krate":0,"index":10831}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":368542,"byte_end":368626,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":368644,"byte_end":368692,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302069,"byte_end":302081,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302007,"byte_end":302058,"line_start":144,"line_end":144,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302623,"byte_end":302631,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302099,"byte_end":302173,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302178,"byte_end":302204,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302209,"byte_end":302212,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302217,"byte_end":302231,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302236,"byte_end":302239,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302244,"byte_end":302251,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302256,"byte_end":302297,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302302,"byte_end":302348,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302353,"byte_end":302356,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302361,"byte_end":302381,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302386,"byte_end":302431,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302436,"byte_end":302467,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302472,"byte_end":302475,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302480,"byte_end":302534,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302539,"byte_end":302590,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302595,"byte_end":302603,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302608,"byte_end":302615,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303327,"byte_end":303333,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302807,"byte_end":302880,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302885,"byte_end":302916,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302921,"byte_end":302924,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302929,"byte_end":302943,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302948,"byte_end":302951,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302956,"byte_end":302963,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302968,"byte_end":303009,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303014,"byte_end":303060,"line_start":178,"line_end":178,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303065,"byte_end":303068,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303073,"byte_end":303093,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303098,"byte_end":303139,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303144,"byte_end":303175,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303180,"byte_end":303183,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303188,"byte_end":303241,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303246,"byte_end":303294,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303299,"byte_end":303307,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303312,"byte_end":303319,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304042,"byte_end":304049,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303523,"byte_end":303594,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303599,"byte_end":303630,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303635,"byte_end":303638,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303643,"byte_end":303657,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303662,"byte_end":303665,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303670,"byte_end":303677,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303682,"byte_end":303723,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303728,"byte_end":303774,"line_start":203,"line_end":203,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303779,"byte_end":303782,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303787,"byte_end":303807,"line_start":205,"line_end":205,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303812,"byte_end":303853,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303858,"byte_end":303890,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303895,"byte_end":303898,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303903,"byte_end":303956,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":303961,"byte_end":304009,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304014,"byte_end":304022,"line_start":211,"line_end":211,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304027,"byte_end":304034,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305654,"byte_end":305662,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304241,"byte_end":304317,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304322,"byte_end":304362,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304367,"byte_end":304370,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304375,"byte_end":304451,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304456,"byte_end":304532,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304537,"byte_end":304610,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304615,"byte_end":304657,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304662,"byte_end":304665,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304670,"byte_end":304743,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304748,"byte_end":304779,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304784,"byte_end":304787,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304792,"byte_end":304866,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304871,"byte_end":304945,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304950,"byte_end":304966,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304971,"byte_end":304974,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":304979,"byte_end":305050,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305055,"byte_end":305081,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305086,"byte_end":305089,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305094,"byte_end":305166,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305171,"byte_end":305220,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305225,"byte_end":305228,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305233,"byte_end":305247,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305252,"byte_end":305255,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305260,"byte_end":305267,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305272,"byte_end":305303,"line_start":245,"line_end":245,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305308,"byte_end":305332,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305337,"byte_end":305375,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305380,"byte_end":305383,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305388,"byte_end":305444,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305449,"byte_end":305452,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305457,"byte_end":305492,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305497,"byte_end":305536,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305541,"byte_end":305565,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305570,"byte_end":305586,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305591,"byte_end":305607,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305612,"byte_end":305622,"line_start":256,"line_end":256,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305627,"byte_end":305634,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305639,"byte_end":305646,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306814,"byte_end":306821,"line_start":285,"line_end":285,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305915,"byte_end":305980,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":305985,"byte_end":306034,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306039,"byte_end":306042,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306047,"byte_end":306126,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306131,"byte_end":306205,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306210,"byte_end":306286,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306291,"byte_end":306336,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306341,"byte_end":306344,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306349,"byte_end":306424,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306429,"byte_end":306469,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306474,"byte_end":306477,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306482,"byte_end":306591,"line_start":279,"line_end":279,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306596,"byte_end":306670,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306675,"byte_end":306691,"line_start":281,"line_end":281,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306696,"byte_end":306699,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306704,"byte_end":306775,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":306780,"byte_end":306806,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307373,"byte_end":307383,"line_start":300,"line_end":300,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307070,"byte_end":307144,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307149,"byte_end":307159,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307164,"byte_end":307167,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307172,"byte_end":307242,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307247,"byte_end":307323,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307328,"byte_end":307365,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307872,"byte_end":307883,"line_start":313,"line_end":313,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307581,"byte_end":307660,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307665,"byte_end":307668,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307673,"byte_end":307743,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307748,"byte_end":307822,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":307827,"byte_end":307864,"line_start":312,"line_end":312,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308804,"byte_end":308815,"line_start":342,"line_end":342,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308086,"byte_end":308139,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308144,"byte_end":308188,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308193,"byte_end":308196,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308201,"byte_end":308250,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308255,"byte_end":308328,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308333,"byte_end":308353,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308358,"byte_end":308361,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308366,"byte_end":308380,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308385,"byte_end":308388,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308393,"byte_end":308400,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308405,"byte_end":308464,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308469,"byte_end":308472,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308477,"byte_end":308496,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308501,"byte_end":308519,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308524,"byte_end":308596,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308601,"byte_end":308631,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308636,"byte_end":308643,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308648,"byte_end":308722,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308727,"byte_end":308730,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308735,"byte_end":308784,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308789,"byte_end":308796,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309710,"byte_end":309718,"line_start":369,"line_end":369,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":308971,"byte_end":309045,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309050,"byte_end":309124,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309129,"byte_end":309141,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309146,"byte_end":309149,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309154,"byte_end":309221,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309226,"byte_end":309298,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309303,"byte_end":309342,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309347,"byte_end":309350,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309355,"byte_end":309369,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309374,"byte_end":309377,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309382,"byte_end":309389,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309394,"byte_end":309435,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309440,"byte_end":309486,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309491,"byte_end":309494,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309499,"byte_end":309556,"line_start":363,"line_end":363,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309561,"byte_end":309564,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309569,"byte_end":309623,"line_start":365,"line_end":365,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309628,"byte_end":309677,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309682,"byte_end":309690,"line_start":367,"line_end":367,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309695,"byte_end":309702,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311070,"byte_end":311082,"line_start":409,"line_end":409,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309885,"byte_end":309954,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":309959,"byte_end":310015,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310020,"byte_end":310023,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310028,"byte_end":310103,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310108,"byte_end":310178,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310183,"byte_end":310221,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310226,"byte_end":310229,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310234,"byte_end":310312,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310317,"byte_end":310377,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310382,"byte_end":310439,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310444,"byte_end":310511,"line_start":386,"line_end":386,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310516,"byte_end":310546,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310551,"byte_end":310554,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310559,"byte_end":310573,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310578,"byte_end":310581,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310586,"byte_end":310593,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310598,"byte_end":310639,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310644,"byte_end":310668,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310673,"byte_end":310719,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310724,"byte_end":310727,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310732,"byte_end":310753,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310758,"byte_end":310761,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310766,"byte_end":310771,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310776,"byte_end":310837,"line_start":399,"line_end":399,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310842,"byte_end":310864,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310869,"byte_end":310933,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310938,"byte_end":310949,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310954,"byte_end":310993,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":310998,"byte_end":311003,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311008,"byte_end":311011,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311016,"byte_end":311037,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311042,"byte_end":311050,"line_start":407,"line_end":407,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311055,"byte_end":311062,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312095,"byte_end":312109,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311346,"byte_end":311420,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311425,"byte_end":311448,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311453,"byte_end":311456,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311461,"byte_end":311492,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311497,"byte_end":311574,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311579,"byte_end":311608,"line_start":423,"line_end":423,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311613,"byte_end":311616,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311621,"byte_end":311635,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311640,"byte_end":311643,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311648,"byte_end":311655,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311660,"byte_end":311701,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311706,"byte_end":311730,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311735,"byte_end":311781,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311786,"byte_end":311789,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311794,"byte_end":311863,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311868,"byte_end":311938,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311943,"byte_end":311946,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":311951,"byte_end":312018,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312023,"byte_end":312062,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312067,"byte_end":312075,"line_start":437,"line_end":437,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312080,"byte_end":312087,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313142,"byte_end":313156,"line_start":469,"line_end":469,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312386,"byte_end":312460,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312465,"byte_end":312488,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312493,"byte_end":312496,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312501,"byte_end":312532,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312537,"byte_end":312614,"line_start":452,"line_end":452,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312619,"byte_end":312648,"line_start":453,"line_end":453,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312653,"byte_end":312656,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312661,"byte_end":312675,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312680,"byte_end":312683,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312688,"byte_end":312695,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312700,"byte_end":312741,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312746,"byte_end":312770,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312775,"byte_end":312821,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312826,"byte_end":312829,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312834,"byte_end":312910,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312915,"byte_end":312985,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312990,"byte_end":312993,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":312998,"byte_end":313065,"line_start":465,"line_end":465,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313070,"byte_end":313109,"line_start":466,"line_end":466,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313114,"byte_end":313122,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313127,"byte_end":313134,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315071,"byte_end":315094,"line_start":521,"line_end":521,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313433,"byte_end":313515,"line_start":478,"line_end":478,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313520,"byte_end":313594,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313599,"byte_end":313649,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313654,"byte_end":313657,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313662,"byte_end":313684,"line_start":482,"line_end":482,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313689,"byte_end":313775,"line_start":483,"line_end":483,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313780,"byte_end":313865,"line_start":484,"line_end":484,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313870,"byte_end":313898,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313903,"byte_end":313906,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313911,"byte_end":313986,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":313991,"byte_end":314048,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314053,"byte_end":314056,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314061,"byte_end":314075,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314080,"byte_end":314083,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314088,"byte_end":314095,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314100,"byte_end":314141,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314146,"byte_end":314180,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314185,"byte_end":314242,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314247,"byte_end":314250,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314255,"byte_end":314295,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314300,"byte_end":314340,"line_start":498,"line_end":498,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314345,"byte_end":314386,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314391,"byte_end":314394,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314399,"byte_end":314450,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314455,"byte_end":314508,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314513,"byte_end":314535,"line_start":503,"line_end":503,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314540,"byte_end":314565,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314570,"byte_end":314632,"line_start":505,"line_end":505,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314637,"byte_end":314652,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314657,"byte_end":314666,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314671,"byte_end":314677,"line_start":508,"line_end":508,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314682,"byte_end":314685,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314690,"byte_end":314716,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314721,"byte_end":314788,"line_start":511,"line_end":511,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314793,"byte_end":314807,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314812,"byte_end":314815,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314820,"byte_end":314881,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314886,"byte_end":314914,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314919,"byte_end":314969,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314974,"byte_end":314982,"line_start":517,"line_end":517,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314987,"byte_end":314994,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":314999,"byte_end":315033,"line_start":519,"line_end":519,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315038,"byte_end":315063,"line_start":520,"line_end":520,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316543,"byte_end":316554,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315504,"byte_end":315556,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315561,"byte_end":315628,"line_start":539,"line_end":539,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315633,"byte_end":315636,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315641,"byte_end":315715,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315720,"byte_end":315801,"line_start":542,"line_end":542,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315806,"byte_end":315876,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315881,"byte_end":315884,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315889,"byte_end":315957,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315962,"byte_end":315965,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315970,"byte_end":315984,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315989,"byte_end":315992,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":315997,"byte_end":316004,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316009,"byte_end":316050,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316055,"byte_end":316086,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316091,"byte_end":316129,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316134,"byte_end":316154,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316159,"byte_end":316162,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316167,"byte_end":316204,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316209,"byte_end":316212,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316217,"byte_end":316244,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316249,"byte_end":316273,"line_start":558,"line_end":558,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316278,"byte_end":316324,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316329,"byte_end":316338,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316343,"byte_end":316386,"line_start":561,"line_end":561,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316391,"byte_end":316398,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316403,"byte_end":316406,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316411,"byte_end":316474,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316479,"byte_end":316510,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316515,"byte_end":316523,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316528,"byte_end":316535,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318025,"byte_end":318035,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316737,"byte_end":316810,"line_start":575,"line_end":575,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316815,"byte_end":316849,"line_start":576,"line_end":576,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316854,"byte_end":316857,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316862,"byte_end":316937,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":316942,"byte_end":317017,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317022,"byte_end":317095,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317100,"byte_end":317171,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317176,"byte_end":317226,"line_start":582,"line_end":582,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317231,"byte_end":317234,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317239,"byte_end":317310,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317315,"byte_end":317318,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317323,"byte_end":317399,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317404,"byte_end":317474,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317479,"byte_end":317504,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317509,"byte_end":317512,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317517,"byte_end":317531,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317536,"byte_end":317543,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317548,"byte_end":317589,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317594,"byte_end":317618,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317623,"byte_end":317680,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317685,"byte_end":317688,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317693,"byte_end":317773,"line_start":596,"line_end":596,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317778,"byte_end":317821,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317826,"byte_end":317859,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317864,"byte_end":317871,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317876,"byte_end":317879,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317884,"byte_end":317932,"line_start":601,"line_end":601,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317937,"byte_end":317992,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":317997,"byte_end":318005,"line_start":603,"line_end":603,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318010,"byte_end":318017,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319662,"byte_end":319676,"line_start":646,"line_end":646,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318286,"byte_end":318348,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318353,"byte_end":318421,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318426,"byte_end":318460,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318465,"byte_end":318468,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318473,"byte_end":318548,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318553,"byte_end":318628,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318633,"byte_end":318709,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318714,"byte_end":318779,"line_start":621,"line_end":621,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318784,"byte_end":318787,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318792,"byte_end":318863,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318868,"byte_end":318871,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318876,"byte_end":318952,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":318957,"byte_end":319031,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319036,"byte_end":319061,"line_start":627,"line_end":627,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319066,"byte_end":319069,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319074,"byte_end":319088,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319093,"byte_end":319100,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319105,"byte_end":319146,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319151,"byte_end":319208,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319213,"byte_end":319238,"line_start":633,"line_end":633,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319243,"byte_end":319246,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319251,"byte_end":319321,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319326,"byte_end":319381,"line_start":636,"line_end":636,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319386,"byte_end":319448,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319453,"byte_end":319468,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319473,"byte_end":319480,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319485,"byte_end":319488,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319493,"byte_end":319514,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319519,"byte_end":319568,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319573,"byte_end":319629,"line_start":643,"line_end":643,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319634,"byte_end":319642,"line_start":644,"line_end":644,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319647,"byte_end":319654,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321368,"byte_end":321379,"line_start":693,"line_end":693,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":319953,"byte_end":320018,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320023,"byte_end":320026,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320031,"byte_end":320104,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320109,"byte_end":320182,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320187,"byte_end":320260,"line_start":659,"line_end":659,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320265,"byte_end":320335,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320340,"byte_end":320343,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320348,"byte_end":320362,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320367,"byte_end":320370,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320375,"byte_end":320382,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320387,"byte_end":320428,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320433,"byte_end":320464,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320469,"byte_end":320520,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320525,"byte_end":320545,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320550,"byte_end":320553,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320558,"byte_end":320597,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320602,"byte_end":320641,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320646,"byte_end":320685,"line_start":672,"line_end":672,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320690,"byte_end":320693,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320698,"byte_end":320725,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320730,"byte_end":320773,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320778,"byte_end":320785,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320790,"byte_end":320817,"line_start":677,"line_end":677,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320822,"byte_end":320865,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320870,"byte_end":320914,"line_start":679,"line_end":679,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320919,"byte_end":320926,"line_start":680,"line_end":680,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320931,"byte_end":320958,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":320963,"byte_end":321008,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321013,"byte_end":321058,"line_start":683,"line_end":683,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321063,"byte_end":321107,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321112,"byte_end":321119,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321124,"byte_end":321127,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321132,"byte_end":321171,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321176,"byte_end":321225,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321230,"byte_end":321279,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321284,"byte_end":321334,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321339,"byte_end":321348,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321353,"byte_end":321360,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322971,"byte_end":322979,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321684,"byte_end":321754,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321759,"byte_end":321819,"line_start":705,"line_end":705,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321824,"byte_end":321827,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321832,"byte_end":321902,"line_start":707,"line_end":707,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321907,"byte_end":321983,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":321988,"byte_end":322064,"line_start":709,"line_end":709,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322069,"byte_end":322139,"line_start":710,"line_end":710,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322144,"byte_end":322170,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322175,"byte_end":322178,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322183,"byte_end":322263,"line_start":713,"line_end":713,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322268,"byte_end":322337,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322342,"byte_end":322363,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322368,"byte_end":322371,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322376,"byte_end":322390,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322395,"byte_end":322398,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322403,"byte_end":322410,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322415,"byte_end":322456,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322461,"byte_end":322507,"line_start":721,"line_end":721,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322512,"byte_end":322515,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322520,"byte_end":322589,"line_start":723,"line_end":723,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322594,"byte_end":322671,"line_start":724,"line_end":724,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322676,"byte_end":322709,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322714,"byte_end":322717,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322722,"byte_end":322808,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322813,"byte_end":322899,"line_start":728,"line_end":728,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322904,"byte_end":322938,"line_start":729,"line_end":729,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322943,"byte_end":322951,"line_start":730,"line_end":730,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":322956,"byte_end":322963,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324505,"byte_end":324515,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323259,"byte_end":323321,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323326,"byte_end":323401,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323406,"byte_end":323409,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323414,"byte_end":323485,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323490,"byte_end":323566,"line_start":745,"line_end":745,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323571,"byte_end":323610,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323615,"byte_end":323618,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323623,"byte_end":323709,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323714,"byte_end":323717,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323722,"byte_end":323806,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323811,"byte_end":323867,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323872,"byte_end":323875,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323880,"byte_end":323894,"line_start":753,"line_end":753,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323899,"byte_end":323902,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323907,"byte_end":323914,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323919,"byte_end":323960,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":323965,"byte_end":323996,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324001,"byte_end":324039,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324044,"byte_end":324064,"line_start":759,"line_end":759,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324069,"byte_end":324072,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324077,"byte_end":324138,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324143,"byte_end":324146,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324151,"byte_end":324178,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324183,"byte_end":324214,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324219,"byte_end":324245,"line_start":765,"line_end":765,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324250,"byte_end":324320,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324325,"byte_end":324334,"line_start":767,"line_end":767,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324339,"byte_end":324346,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324351,"byte_end":324354,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324359,"byte_end":324398,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324403,"byte_end":324406,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324411,"byte_end":324471,"line_start":772,"line_end":772,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324476,"byte_end":324485,"line_start":773,"line_end":773,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324490,"byte_end":324497,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327237,"byte_end":327257,"line_start":842,"line_end":842,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324769,"byte_end":324847,"line_start":783,"line_end":783,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324852,"byte_end":324855,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324860,"byte_end":324965,"line_start":785,"line_end":785,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":324970,"byte_end":325013,"line_start":786,"line_end":786,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325018,"byte_end":325021,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325026,"byte_end":325094,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325099,"byte_end":325172,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325177,"byte_end":325233,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325238,"byte_end":325241,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325246,"byte_end":325321,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325326,"byte_end":325399,"line_start":793,"line_end":793,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325404,"byte_end":325469,"line_start":794,"line_end":794,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325474,"byte_end":325477,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325482,"byte_end":325557,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325562,"byte_end":325619,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325624,"byte_end":325627,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325632,"byte_end":325646,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325651,"byte_end":325654,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325659,"byte_end":325711,"line_start":801,"line_end":801,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325716,"byte_end":325723,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325728,"byte_end":325769,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325774,"byte_end":325808,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325813,"byte_end":325870,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325875,"byte_end":325878,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325883,"byte_end":325933,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325938,"byte_end":325988,"line_start":808,"line_end":808,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":325993,"byte_end":325996,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326001,"byte_end":326076,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326081,"byte_end":326084,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326089,"byte_end":326155,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326160,"byte_end":326163,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326168,"byte_end":326193,"line_start":814,"line_end":814,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326198,"byte_end":326252,"line_start":815,"line_end":815,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326257,"byte_end":326260,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326265,"byte_end":326290,"line_start":817,"line_end":817,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326295,"byte_end":326349,"line_start":818,"line_end":818,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326354,"byte_end":326357,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326362,"byte_end":326406,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326411,"byte_end":326447,"line_start":821,"line_end":821,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326452,"byte_end":326459,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326464,"byte_end":326467,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326472,"byte_end":326532,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326537,"byte_end":326544,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326549,"byte_end":326590,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326595,"byte_end":326626,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326631,"byte_end":326682,"line_start":828,"line_end":828,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326687,"byte_end":326690,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326695,"byte_end":326749,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326754,"byte_end":326820,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326825,"byte_end":326828,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326833,"byte_end":326882,"line_start":833,"line_end":833,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326887,"byte_end":326941,"line_start":834,"line_end":834,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326946,"byte_end":326949,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":326954,"byte_end":327007,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327012,"byte_end":327084,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327089,"byte_end":327148,"line_start":838,"line_end":838,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327153,"byte_end":327160,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327165,"byte_end":327199,"line_start":840,"line_end":840,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327204,"byte_end":327229,"line_start":841,"line_end":841,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330238,"byte_end":330250,"line_start":918,"line_end":918,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327534,"byte_end":327600,"line_start":852,"line_end":852,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327605,"byte_end":327608,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327613,"byte_end":327718,"line_start":854,"line_end":854,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327723,"byte_end":327766,"line_start":855,"line_end":855,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327771,"byte_end":327774,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327779,"byte_end":327847,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327852,"byte_end":327928,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327933,"byte_end":327963,"line_start":859,"line_end":859,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327968,"byte_end":327971,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":327976,"byte_end":328051,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328056,"byte_end":328129,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328134,"byte_end":328199,"line_start":863,"line_end":863,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328204,"byte_end":328207,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328212,"byte_end":328287,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328292,"byte_end":328349,"line_start":866,"line_end":866,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328354,"byte_end":328357,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328362,"byte_end":328376,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328381,"byte_end":328384,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328389,"byte_end":328439,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328444,"byte_end":328451,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328456,"byte_end":328497,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328502,"byte_end":328536,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328541,"byte_end":328571,"line_start":874,"line_end":874,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328576,"byte_end":328633,"line_start":875,"line_end":875,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328638,"byte_end":328641,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328646,"byte_end":328696,"line_start":877,"line_end":877,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328701,"byte_end":328751,"line_start":878,"line_end":878,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328756,"byte_end":328759,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328764,"byte_end":328803,"line_start":880,"line_end":880,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328808,"byte_end":328887,"line_start":881,"line_end":881,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328892,"byte_end":328895,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328900,"byte_end":328962,"line_start":883,"line_end":883,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328967,"byte_end":328970,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":328975,"byte_end":329038,"line_start":885,"line_end":885,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329043,"byte_end":329046,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329051,"byte_end":329080,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329085,"byte_end":329148,"line_start":888,"line_end":888,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329153,"byte_end":329183,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329188,"byte_end":329202,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329207,"byte_end":329210,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329215,"byte_end":329240,"line_start":892,"line_end":892,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329245,"byte_end":329299,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329304,"byte_end":329358,"line_start":894,"line_end":894,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329363,"byte_end":329366,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329371,"byte_end":329415,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329420,"byte_end":329456,"line_start":897,"line_end":897,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329461,"byte_end":329468,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329473,"byte_end":329476,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329481,"byte_end":329541,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329546,"byte_end":329553,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329558,"byte_end":329599,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329604,"byte_end":329635,"line_start":903,"line_end":903,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329640,"byte_end":329691,"line_start":904,"line_end":904,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329696,"byte_end":329699,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329704,"byte_end":329758,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329763,"byte_end":329821,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329826,"byte_end":329829,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329834,"byte_end":329883,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329888,"byte_end":329942,"line_start":910,"line_end":910,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329947,"byte_end":329950,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":329955,"byte_end":330008,"line_start":912,"line_end":912,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330013,"byte_end":330085,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330090,"byte_end":330149,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330154,"byte_end":330161,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330166,"byte_end":330200,"line_start":916,"line_end":916,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330205,"byte_end":330230,"line_start":917,"line_end":917,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330705,"byte_end":330724,"line_start":932,"line_end":932,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330597,"byte_end":330675,"line_start":930,"line_end":930,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":330680,"byte_end":330697,"line_start":931,"line_end":931,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":333018,"byte_end":333033,"line_start":998,"line_end":998,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":331796,"byte_end":331878,"line_start":970,"line_end":970,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":331883,"byte_end":331886,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":331891,"byte_end":332006,"line_start":972,"line_end":972,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332011,"byte_end":332102,"line_start":973,"line_end":973,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332107,"byte_end":332197,"line_start":974,"line_end":974,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332202,"byte_end":332287,"line_start":975,"line_end":975,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332292,"byte_end":332295,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332300,"byte_end":332364,"line_start":977,"line_end":977,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332369,"byte_end":332426,"line_start":978,"line_end":978,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332431,"byte_end":332434,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332439,"byte_end":332453,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332458,"byte_end":332461,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332466,"byte_end":332473,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332478,"byte_end":332519,"line_start":983,"line_end":983,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332524,"byte_end":332570,"line_start":984,"line_end":984,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332575,"byte_end":332609,"line_start":985,"line_end":985,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332614,"byte_end":332617,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332622,"byte_end":332683,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332688,"byte_end":332734,"line_start":988,"line_end":988,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332739,"byte_end":332768,"line_start":989,"line_end":989,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332773,"byte_end":332776,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332781,"byte_end":332837,"line_start":991,"line_end":991,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332842,"byte_end":332880,"line_start":992,"line_end":992,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332885,"byte_end":332893,"line_start":993,"line_end":993,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332898,"byte_end":332905,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332910,"byte_end":332932,"line_start":995,"line_end":995,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":332987,"byte_end":333010,"line_start":997,"line_end":997,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":10847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373624,"byte_end":373628,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10849}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373502,"byte_end":373539,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373564,"byte_end":373612,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2982},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374146,"byte_end":374150,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373680,"byte_end":373744,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373745,"byte_end":373773,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373774,"byte_end":373777,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373778,"byte_end":373851,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373852,"byte_end":373907,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373908,"byte_end":373911,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373912,"byte_end":373919,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373920,"byte_end":373961,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373962,"byte_end":374005,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374006,"byte_end":374009,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374010,"byte_end":374054,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374055,"byte_end":374120,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374121,"byte_end":374130,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374131,"byte_end":374138,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374841,"byte_end":374847,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10858}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374717,"byte_end":374756,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374781,"byte_end":374829,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375371,"byte_end":375377,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374869,"byte_end":374929,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374930,"byte_end":374933,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":374934,"byte_end":375001,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375002,"byte_end":375074,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375075,"byte_end":375132,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375133,"byte_end":375136,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375137,"byte_end":375144,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375145,"byte_end":375186,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375187,"byte_end":375230,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375231,"byte_end":375234,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375235,"byte_end":375270,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375271,"byte_end":375345,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375346,"byte_end":375355,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375356,"byte_end":375363,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10865},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376368,"byte_end":376378,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":10867}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376066,"byte_end":376126,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376127,"byte_end":376179,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376180,"byte_end":376183,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376184,"byte_end":376247,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376248,"byte_end":376283,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376308,"byte_end":376356,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378666,"byte_end":378677,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376894,"byte_end":376965,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376966,"byte_end":377033,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377034,"byte_end":377037,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377038,"byte_end":377110,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377111,"byte_end":377114,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377115,"byte_end":377189,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377190,"byte_end":377242,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377243,"byte_end":377246,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377247,"byte_end":377319,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377320,"byte_end":377393,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377394,"byte_end":377431,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377432,"byte_end":377435,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377436,"byte_end":377450,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377451,"byte_end":377454,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377455,"byte_end":377471,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377472,"byte_end":377475,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377476,"byte_end":377483,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377484,"byte_end":377525,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377526,"byte_end":377569,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377570,"byte_end":377573,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377574,"byte_end":377642,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377643,"byte_end":377721,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377722,"byte_end":377753,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377754,"byte_end":377775,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377776,"byte_end":377779,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377780,"byte_end":377814,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377815,"byte_end":377870,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377871,"byte_end":377874,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377875,"byte_end":377928,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377929,"byte_end":377982,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":377983,"byte_end":378036,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378037,"byte_end":378046,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378047,"byte_end":378054,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378055,"byte_end":378058,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378059,"byte_end":378095,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378096,"byte_end":378099,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378100,"byte_end":378111,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378112,"byte_end":378153,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378154,"byte_end":378197,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378198,"byte_end":378201,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378202,"byte_end":378251,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378252,"byte_end":378273,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378274,"byte_end":378351,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378352,"byte_end":378385,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378386,"byte_end":378389,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378390,"byte_end":378433,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378434,"byte_end":378477,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378478,"byte_end":378521,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378522,"byte_end":378565,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378566,"byte_end":378569,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378570,"byte_end":378599,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378600,"byte_end":378640,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378641,"byte_end":378650,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":378651,"byte_end":378658,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10874},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379068,"byte_end":379073,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10876}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":378952,"byte_end":378990,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379008,"byte_end":379056,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379242,"byte_end":379247,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379112,"byte_end":379160,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379161,"byte_end":379164,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379165,"byte_end":379234,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380332,"byte_end":380336,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380025,"byte_end":380066,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380067,"byte_end":380070,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380071,"byte_end":380078,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380079,"byte_end":380120,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380121,"byte_end":380164,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380165,"byte_end":380168,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380169,"byte_end":380213,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380214,"byte_end":380269,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380270,"byte_end":380306,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380307,"byte_end":380316,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380317,"byte_end":380324,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380598,"byte_end":380602,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10887}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10916},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381778,"byte_end":381785,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10918}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381658,"byte_end":381700,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381718,"byte_end":381766,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381961,"byte_end":381968,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381829,"byte_end":381883,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381884,"byte_end":381887,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":381888,"byte_end":381953,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382811,"byte_end":382817,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3138}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382710,"byte_end":382750,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382751,"byte_end":382799,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383505,"byte_end":383512,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383017,"byte_end":383090,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383091,"byte_end":383094,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383095,"byte_end":383154,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383155,"byte_end":383158,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383159,"byte_end":383173,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383174,"byte_end":383177,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383178,"byte_end":383185,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383186,"byte_end":383219,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383220,"byte_end":383248,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383249,"byte_end":383252,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383253,"byte_end":383282,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383283,"byte_end":383286,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383287,"byte_end":383351,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383352,"byte_end":383405,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383406,"byte_end":383427,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383428,"byte_end":383481,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383482,"byte_end":383489,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383490,"byte_end":383497,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384232,"byte_end":384238,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10932},{"krate":0,"index":10933},{"krate":0,"index":10934}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384842,"byte_end":384848,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384366,"byte_end":384434,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384435,"byte_end":384511,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384512,"byte_end":384560,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384561,"byte_end":384564,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384565,"byte_end":384639,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384640,"byte_end":384709,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384710,"byte_end":384737,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384738,"byte_end":384741,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384742,"byte_end":384813,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":384814,"byte_end":384834,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385253,"byte_end":385260,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385145,"byte_end":385219,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385224,"byte_end":385241,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385616,"byte_end":385623,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385354,"byte_end":385422,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385427,"byte_end":385458,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385463,"byte_end":385466,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385471,"byte_end":385544,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385549,"byte_end":385604,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385998,"byte_end":386009,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385729,"byte_end":385804,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385809,"byte_end":385840,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385845,"byte_end":385848,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385853,"byte_end":385926,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385931,"byte_end":385986,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386415,"byte_end":386425,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386179,"byte_end":386242,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386247,"byte_end":386250,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386255,"byte_end":386327,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386332,"byte_end":386403,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389642,"byte_end":389648,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388200,"byte_end":388270,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388271,"byte_end":388274,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388275,"byte_end":388344,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388345,"byte_end":388426,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388427,"byte_end":388458,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388459,"byte_end":388462,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388463,"byte_end":388542,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388543,"byte_end":388622,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388623,"byte_end":388677,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388678,"byte_end":388681,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388682,"byte_end":388762,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388763,"byte_end":388833,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388834,"byte_end":388856,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388857,"byte_end":388860,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388861,"byte_end":388938,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":388939,"byte_end":389011,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389012,"byte_end":389089,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389090,"byte_end":389150,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389151,"byte_end":389154,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389155,"byte_end":389168,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389169,"byte_end":389172,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389173,"byte_end":389180,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389181,"byte_end":389222,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389223,"byte_end":389266,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389267,"byte_end":389270,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389271,"byte_end":389326,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389327,"byte_end":389350,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389351,"byte_end":389390,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389391,"byte_end":389428,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389429,"byte_end":389468,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389469,"byte_end":389485,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389486,"byte_end":389502,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389503,"byte_end":389512,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389513,"byte_end":389520,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389521,"byte_end":389524,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389525,"byte_end":389577,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389578,"byte_end":389616,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389617,"byte_end":389626,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389627,"byte_end":389634,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10975},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":389995,"byte_end":390001,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10979},{"krate":0,"index":10980}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11066},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538586,"byte_end":10538600,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":11068},{"krate":0,"index":11069},{"krate":0,"index":11070},{"krate":0,"index":11071}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536520,"byte_end":10536554,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536555,"byte_end":10536558,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536559,"byte_end":10536638,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536639,"byte_end":10536710,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536711,"byte_end":10536787,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536788,"byte_end":10536836,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536837,"byte_end":10536840,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536841,"byte_end":10536920,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536921,"byte_end":10536996,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536997,"byte_end":10537075,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537076,"byte_end":10537156,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537157,"byte_end":10537186,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537187,"byte_end":10537190,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537191,"byte_end":10537269,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537270,"byte_end":10537344,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537345,"byte_end":10537420,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537421,"byte_end":10537496,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537497,"byte_end":10537572,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537573,"byte_end":10537631,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537632,"byte_end":10537635,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537636,"byte_end":10537709,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537710,"byte_end":10537788,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537789,"byte_end":10537847,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537848,"byte_end":10537921,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537922,"byte_end":10537990,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10537991,"byte_end":10538067,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538068,"byte_end":10538136,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538137,"byte_end":10538190,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538191,"byte_end":10538194,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538195,"byte_end":10538261,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538262,"byte_end":10538341,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538342,"byte_end":10538389,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538390,"byte_end":10538393,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538394,"byte_end":10538467,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538468,"byte_end":10538525,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538526,"byte_end":10538574,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11076},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539108,"byte_end":10539111,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538888,"byte_end":10538932,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538937,"byte_end":10538940,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538945,"byte_end":10539020,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539025,"byte_end":10539096,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":11077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539608,"byte_end":10539611,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539335,"byte_end":10539392,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539397,"byte_end":10539400,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539405,"byte_end":10539468,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539473,"byte_end":10539537,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539542,"byte_end":10539596,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11078},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539769,"byte_end":10539777,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539706,"byte_end":10539757,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11079},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540201,"byte_end":10540205,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539882,"byte_end":10539915,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539920,"byte_end":10539923,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10539928,"byte_end":10540004,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540009,"byte_end":10540083,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540088,"byte_end":10540161,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540166,"byte_end":10540189,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":11104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","parent":null,"children":[{"krate":0,"index":11105},{"krate":0,"index":11106},{"krate":0,"index":11107},{"krate":0,"index":11108},{"krate":0,"index":11109},{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112},{"krate":0,"index":15962},{"krate":0,"index":11113},{"krate":0,"index":11114},{"krate":0,"index":15966},{"krate":0,"index":11115},{"krate":0,"index":11116},{"krate":0,"index":11117},{"krate":0,"index":11118},{"krate":0,"index":11119},{"krate":0,"index":15974},{"krate":0,"index":11120},{"krate":0,"index":15976},{"krate":0,"index":11121},{"krate":0,"index":15978},{"krate":0,"index":11122},{"krate":0,"index":15980},{"krate":0,"index":11123},{"krate":0,"index":15982},{"krate":0,"index":11124},{"krate":0,"index":11125},{"krate":0,"index":11126},{"krate":0,"index":11127},{"krate":0,"index":11128},{"krate":0,"index":11129},{"krate":0,"index":11130},{"krate":0,"index":11131},{"krate":0,"index":11132},{"krate":0,"index":11133},{"krate":0,"index":11134},{"krate":0,"index":11135},{"krate":0,"index":11136},{"krate":0,"index":11137},{"krate":0,"index":11138},{"krate":0,"index":11139},{"krate":0,"index":11140},{"krate":0,"index":11146},{"krate":0,"index":11203},{"krate":0,"index":11204},{"krate":0,"index":11205},{"krate":0,"index":16020},{"krate":0,"index":11206},{"krate":0,"index":16022},{"krate":0,"index":11207},{"krate":0,"index":11208},{"krate":0,"index":11209},{"krate":0,"index":11249},{"krate":0,"index":11250},{"krate":0,"index":11287},{"krate":0,"index":11288},{"krate":0,"index":11289},{"krate":0,"index":11290},{"krate":0,"index":11295},{"krate":0,"index":11297},{"krate":0,"index":11299},{"krate":0,"index":11301},{"krate":0,"index":11303},{"krate":0,"index":11305},{"krate":0,"index":11308},{"krate":0,"index":11323},{"krate":0,"index":11336},{"krate":0,"index":11339},{"krate":0,"index":11343},{"krate":0,"index":11346},{"krate":0,"index":11352},{"krate":0,"index":11358},{"krate":0,"index":11363},{"krate":0,"index":11368},{"krate":0,"index":11371}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166594,"byte_end":166619,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10542570,"byte_end":10542602,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10542603,"byte_end":10542606,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10542607,"byte_end":10542682,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10542683,"byte_end":10542740,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10569946,"byte_end":10569956,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":11488},{"krate":0,"index":11489},{"krate":0,"index":11490}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10569858,"byte_end":10569917,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570193,"byte_end":10570200,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570105,"byte_end":10570164,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":11504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570341,"byte_end":10570351,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":11507},{"krate":0,"index":11508},{"krate":0,"index":11509},{"krate":0,"index":11510}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570251,"byte_end":10570312,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":11515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570639,"byte_end":10570643,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570545,"byte_end":10570610,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570780,"byte_end":10570788,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":11526},{"krate":0,"index":11527}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570694,"byte_end":10570751,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544607,"byte_end":10544623,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":11292},{"krate":0,"index":11293},{"krate":0,"index":11294}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543512,"byte_end":10543565,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543566,"byte_end":10543569,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543570,"byte_end":10543638,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543639,"byte_end":10543712,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543713,"byte_end":10543789,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543790,"byte_end":10543834,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543835,"byte_end":10543838,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543839,"byte_end":10543917,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543918,"byte_end":10543976,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10543977,"byte_end":10544041,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544042,"byte_end":10544095,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544096,"byte_end":10544175,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544176,"byte_end":10544205,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544206,"byte_end":10544209,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544210,"byte_end":10544280,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544281,"byte_end":10544358,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544359,"byte_end":10544410,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544411,"byte_end":10544414,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544415,"byte_end":10544488,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544489,"byte_end":10544546,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544547,"byte_end":10544595,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11310},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10547240,"byte_end":10547243,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10546969,"byte_end":10547018,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10547023,"byte_end":10547026,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10547031,"byte_end":10547098,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10547103,"byte_end":10547177,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10547182,"byte_end":10547228,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":11311},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548238,"byte_end":10548241,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548100,"byte_end":10548155,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548160,"byte_end":10548163,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548168,"byte_end":10548226,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":11312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548405,"byte_end":10548413,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548343,"byte_end":10548393,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11313},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548996,"byte_end":10549000,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548626,"byte_end":10548657,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548662,"byte_end":10548665,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548670,"byte_end":10548740,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548745,"byte_end":10548831,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548836,"byte_end":10548912,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10548917,"byte_end":10548984,"line_start":160,"line_end":160,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":11314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550275,"byte_end":10550279,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550193,"byte_end":10550263,"line_start":188,"line_end":188,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":11315},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550477,"byte_end":10550489,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550395,"byte_end":10550465,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":11316},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550818,"byte_end":10550826,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550737,"byte_end":10550806,"line_start":204,"line_end":204,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":11317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10551033,"byte_end":10551045,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10550952,"byte_end":10551021,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":11341},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566182,"byte_end":10566187,"line_start":558,"line_end":558,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566129,"byte_end":10566170,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":11376},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","parent":null,"children":[{"krate":0,"index":11377},{"krate":0,"index":11378},{"krate":0,"index":11379},{"krate":0,"index":16084},{"krate":0,"index":11380},{"krate":0,"index":11381},{"krate":0,"index":11382},{"krate":0,"index":11383},{"krate":0,"index":11384},{"krate":0,"index":11385},{"krate":0,"index":11386},{"krate":0,"index":11387},{"krate":0,"index":11388},{"krate":0,"index":11389},{"krate":0,"index":11390},{"krate":0,"index":11391},{"krate":0,"index":11392},{"krate":0,"index":11393},{"krate":0,"index":11394},{"krate":0,"index":11395},{"krate":0,"index":13253},{"krate":0,"index":13256},{"krate":0,"index":11396},{"krate":0,"index":11399},{"krate":0,"index":11408},{"krate":0,"index":11411},{"krate":0,"index":11415},{"krate":0,"index":11418},{"krate":0,"index":11420},{"krate":0,"index":11424},{"krate":0,"index":11428},{"krate":0,"index":11433},{"krate":0,"index":11439},{"krate":0,"index":13244},{"krate":0,"index":13249},{"krate":0,"index":13235},{"krate":0,"index":13240},{"krate":0,"index":13228},{"krate":0,"index":13232},{"krate":0,"index":11445},{"krate":0,"index":11451},{"krate":0,"index":11453},{"krate":0,"index":11459},{"krate":0,"index":11461},{"krate":0,"index":11466}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":1738,"byte_end":1772,"line_start":52,"line_end":52,"column_start":9,"column_end":43}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166760,"byte_end":166785,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of streams","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10583133,"byte_end":10583164,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":13253},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584204,"byte_end":10584213,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":13255}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":11401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584695,"byte_end":10584698,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584495,"byte_end":10584534,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584539,"byte_end":10584542,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584547,"byte_end":10584617,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584622,"byte_end":10584683,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":11402},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584908,"byte_end":10584911,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584770,"byte_end":10584825,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584830,"byte_end":10584833,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584838,"byte_end":10584896,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":11403},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585027,"byte_end":10585035,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584966,"byte_end":10585015,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":11404},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585397,"byte_end":10585401,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585094,"byte_end":10585125,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585130,"byte_end":10585133,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585138,"byte_end":10585210,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585215,"byte_end":10585289,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585294,"byte_end":10585362,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585367,"byte_end":10585385,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":11405},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585567,"byte_end":10585571,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585485,"byte_end":10585555,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":11406},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585721,"byte_end":10585729,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585640,"byte_end":10585709,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":11407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585865,"byte_end":10585870,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585812,"byte_end":10585853,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":11418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587577,"byte_end":10587587,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10586956,"byte_end":10587030,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587031,"byte_end":10587034,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587035,"byte_end":10587114,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587115,"byte_end":10587166,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587167,"byte_end":10587241,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587242,"byte_end":10587301,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587302,"byte_end":10587305,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587306,"byte_end":10587378,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587379,"byte_end":10587429,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587430,"byte_end":10587433,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587434,"byte_end":10587511,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587512,"byte_end":10587569,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":13244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588894,"byte_end":10588898,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588804,"byte_end":10588865,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":13235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589051,"byte_end":10589058,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588963,"byte_end":10589022,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":13228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589212,"byte_end":10589220,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589126,"byte_end":10589183,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":11477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10591235,"byte_end":10591244,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10590865,"byte_end":10590952,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10590953,"byte_end":10590956,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10590957,"byte_end":10591033,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10591034,"byte_end":10591087,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10591088,"byte_end":10591091,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10591092,"byte_end":10591169,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\abortable.rs","byte_start":10591170,"byte_end":10591227,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3736}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11432,"byte_end":11456,"line_start":309,"line_end":309,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391540,"byte_end":391563,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391564,"byte_end":391567,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391568,"byte_end":391593,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391594,"byte_end":391597,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391598,"byte_end":391670,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391671,"byte_end":391750,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":391751,"byte_end":391763,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":11531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403044,"byte_end":403049,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":11535},{"krate":0,"index":11536}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":402888,"byte_end":402947,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":402965,"byte_end":403032,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404040,"byte_end":404045,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":11544}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":403928,"byte_end":403964,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":403982,"byte_end":404028,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404444,"byte_end":404449,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404082,"byte_end":404145,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404146,"byte_end":404149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404150,"byte_end":404195,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404196,"byte_end":404199,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404200,"byte_end":404214,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404215,"byte_end":404218,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404219,"byte_end":404226,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404227,"byte_end":404268,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404269,"byte_end":404308,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404309,"byte_end":404312,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404313,"byte_end":404347,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404348,"byte_end":404373,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404374,"byte_end":404428,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404429,"byte_end":404436,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":405639,"byte_end":405645,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":11551},{"krate":0,"index":11552}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":405925,"byte_end":405932,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":405867,"byte_end":405913,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406063,"byte_end":406070,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406004,"byte_end":406051,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406228,"byte_end":406239,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406162,"byte_end":406216,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406611,"byte_end":406621,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406377,"byte_end":406438,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406443,"byte_end":406446,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406451,"byte_end":406520,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406525,"byte_end":406599,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":11593},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":408867,"byte_end":408871,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":11597},{"krate":0,"index":11598}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":408713,"byte_end":408770,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":408788,"byte_end":408855,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11604},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410202,"byte_end":410207,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":11608},{"krate":0,"index":11609}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410046,"byte_end":410105,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410123,"byte_end":410190,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":411444,"byte_end":411455,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":11628}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11686},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":412755,"byte_end":412765,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":11689},{"krate":0,"index":11690}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414662,"byte_end":414666,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":11742}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414508,"byte_end":414565,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414583,"byte_end":414650,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416095,"byte_end":416102,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":415859,"byte_end":415924,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":415925,"byte_end":415965,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416016,"byte_end":416083,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419053,"byte_end":419059,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":11761},{"krate":0,"index":11762}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419659,"byte_end":419665,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419150,"byte_end":419219,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419220,"byte_end":419223,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419224,"byte_end":419238,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419239,"byte_end":419242,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419243,"byte_end":419250,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419251,"byte_end":419292,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419293,"byte_end":419332,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419333,"byte_end":419336,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419337,"byte_end":419389,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419390,"byte_end":419410,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419411,"byte_end":419432,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419433,"byte_end":419464,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419465,"byte_end":419512,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419513,"byte_end":419522,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419523,"byte_end":419530,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419531,"byte_end":419561,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419562,"byte_end":419588,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419589,"byte_end":419643,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419644,"byte_end":419651,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11806},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":421643,"byte_end":421647,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":11812},{"krate":0,"index":11813},{"krate":0,"index":11814},{"krate":0,"index":11815}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11889},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":425190,"byte_end":425201,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":11895},{"krate":0,"index":11896},{"krate":0,"index":11897},{"krate":0,"index":11898},{"krate":0,"index":11899}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11983},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":428936,"byte_end":428942,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":11986},{"krate":0,"index":11987},{"krate":0,"index":11988}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392857,"byte_end":392864,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3709},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392748,"byte_end":392820,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392821,"byte_end":392846,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393456,"byte_end":393460,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392889,"byte_end":392936,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392941,"byte_end":392944,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392949,"byte_end":393020,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393025,"byte_end":393076,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393081,"byte_end":393084,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393089,"byte_end":393164,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393169,"byte_end":393245,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393250,"byte_end":393319,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393324,"byte_end":393327,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393332,"byte_end":393404,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393409,"byte_end":393448,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394816,"byte_end":394829,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393722,"byte_end":393769,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393774,"byte_end":393777,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393782,"byte_end":393853,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393858,"byte_end":393909,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393914,"byte_end":393917,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393922,"byte_end":393993,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":393998,"byte_end":394074,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394079,"byte_end":394110,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394115,"byte_end":394118,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394123,"byte_end":394195,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394200,"byte_end":394244,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394249,"byte_end":394252,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394257,"byte_end":394271,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394276,"byte_end":394279,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394284,"byte_end":394291,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394296,"byte_end":394337,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394342,"byte_end":394373,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394378,"byte_end":394409,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394414,"byte_end":394457,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394462,"byte_end":394465,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394470,"byte_end":394506,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394511,"byte_end":394514,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394519,"byte_end":394558,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394563,"byte_end":394600,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394605,"byte_end":394612,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394617,"byte_end":394620,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394625,"byte_end":394655,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394660,"byte_end":394673,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394678,"byte_end":394726,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394731,"byte_end":394782,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394787,"byte_end":394796,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":394801,"byte_end":394808,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395569,"byte_end":395581,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395515,"byte_end":395561,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395949,"byte_end":395962,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395768,"byte_end":395843,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395848,"byte_end":395851,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":395856,"byte_end":395941,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396797,"byte_end":396803,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396148,"byte_end":396197,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396202,"byte_end":396205,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396210,"byte_end":396276,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396281,"byte_end":396357,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396362,"byte_end":396437,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396442,"byte_end":396480,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396485,"byte_end":396488,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396493,"byte_end":396565,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396570,"byte_end":396609,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396614,"byte_end":396617,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396622,"byte_end":396697,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396702,"byte_end":396759,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396764,"byte_end":396789,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396997,"byte_end":397002,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":396970,"byte_end":396989,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397336,"byte_end":397342,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397157,"byte_end":397192,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397197,"byte_end":397200,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397205,"byte_end":397287,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397292,"byte_end":397328,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397769,"byte_end":397774,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397568,"byte_end":397617,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397622,"byte_end":397625,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397630,"byte_end":397711,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397716,"byte_end":397761,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398256,"byte_end":398260,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":397929,"byte_end":398002,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398007,"byte_end":398045,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398050,"byte_end":398053,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398058,"byte_end":398132,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398137,"byte_end":398198,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398203,"byte_end":398248,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398737,"byte_end":398741,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398431,"byte_end":398497,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398502,"byte_end":398518,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398523,"byte_end":398526,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398531,"byte_end":398594,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398599,"byte_end":398664,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398669,"byte_end":398729,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399648,"byte_end":399656,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St: ?Sized>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin, Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398912,"byte_end":398987,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":398992,"byte_end":399030,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399035,"byte_end":399038,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399043,"byte_end":399116,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399121,"byte_end":399197,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399202,"byte_end":399276,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399281,"byte_end":399359,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399364,"byte_end":399447,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399452,"byte_end":399455,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399460,"byte_end":399518,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399523,"byte_end":399598,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":399603,"byte_end":399640,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400454,"byte_end":400463,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400181,"byte_end":400252,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400257,"byte_end":400278,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400283,"byte_end":400286,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400291,"byte_end":400369,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400374,"byte_end":400446,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400931,"byte_end":400941,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400654,"byte_end":400730,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400735,"byte_end":400756,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400761,"byte_end":400764,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400769,"byte_end":400846,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":400851,"byte_end":400923,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401586,"byte_end":401602,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401488,"byte_end":401558,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401563,"byte_end":401578,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401853,"byte_end":401869,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401755,"byte_end":401825,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":401830,"byte_end":401845,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402106,"byte_end":402122,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402008,"byte_end":402078,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402083,"byte_end":402098,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402373,"byte_end":402389,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402275,"byte_end":402345,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":402350,"byte_end":402365,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":12033},{"krate":0,"index":12034},{"krate":0,"index":12035},{"krate":0,"index":12036},{"krate":0,"index":12037},{"krate":0,"index":12038},{"krate":0,"index":3759},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431708,"byte_end":431741,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431742,"byte_end":431745,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431746,"byte_end":431771,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431772,"byte_end":431775,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431776,"byte_end":431824,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431825,"byte_end":431878,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431879,"byte_end":431927,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431928,"byte_end":431975,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431976,"byte_end":431979,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":431980,"byte_end":432054,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\mod.rs","byte_start":432055,"byte_end":432127,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":3773},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433316,"byte_end":433324,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3774}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433273,"byte_end":433305,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434321,"byte_end":434326,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433338,"byte_end":433403,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433408,"byte_end":433423,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433428,"byte_end":433431,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433436,"byte_end":433506,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433511,"byte_end":433530,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433535,"byte_end":433538,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433543,"byte_end":433612,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433617,"byte_end":433690,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433695,"byte_end":433734,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433739,"byte_end":433742,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433747,"byte_end":433813,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433818,"byte_end":433884,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433889,"byte_end":433960,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433965,"byte_end":434021,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434026,"byte_end":434029,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434034,"byte_end":434041,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434046,"byte_end":434084,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434089,"byte_end":434121,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434126,"byte_end":434129,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434134,"byte_end":434180,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434185,"byte_end":434188,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434193,"byte_end":434230,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434235,"byte_end":434271,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434276,"byte_end":434283,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":434288,"byte_end":434313,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436080,"byte_end":436093,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3777}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436032,"byte_end":436069,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":437136,"byte_end":437147,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":3776},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436112,"byte_end":436177,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436182,"byte_end":436197,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436202,"byte_end":436205,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436210,"byte_end":436280,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436285,"byte_end":436304,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436309,"byte_end":436312,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436317,"byte_end":436386,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436391,"byte_end":436464,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436469,"byte_end":436508,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436513,"byte_end":436516,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436521,"byte_end":436587,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436592,"byte_end":436658,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436663,"byte_end":436734,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436739,"byte_end":436795,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436800,"byte_end":436803,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436808,"byte_end":436815,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436820,"byte_end":436857,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436862,"byte_end":436899,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436904,"byte_end":436907,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436912,"byte_end":436948,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436953,"byte_end":436990,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436995,"byte_end":436998,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":437003,"byte_end":437040,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":437045,"byte_end":437086,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":437091,"byte_end":437098,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":437103,"byte_end":437128,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":3782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","parent":null,"children":[{"krate":0,"index":3783}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438552,"byte_end":438594,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438595,"byte_end":438598,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438599,"byte_end":438665,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":439302,"byte_end":439307,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438667,"byte_end":438702,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438703,"byte_end":438706,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438707,"byte_end":438782,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438783,"byte_end":438820,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438821,"byte_end":438824,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438825,"byte_end":438889,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438890,"byte_end":438893,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438894,"byte_end":438965,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":438966,"byte_end":439017,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":439018,"byte_end":439110,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":439111,"byte_end":439114,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":439115,"byte_end":439186,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\never.rs","byte_start":439187,"byte_end":439292,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":16976},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4568},{"krate":0,"index":4569},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4646},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4658}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11723,"byte_end":11745,"line_start":324,"line_end":324,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11792,"byte_end":11815,"line_start":326,"line_end":326,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439338,"byte_end":439359,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439360,"byte_end":439363,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439364,"byte_end":439437,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439438,"byte_end":439517,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439518,"byte_end":439591,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439592,"byte_end":439667,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439668,"byte_end":439747,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439748,"byte_end":439823,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439824,"byte_end":439852,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439853,"byte_end":439856,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439857,"byte_end":439936,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":439937,"byte_end":440015,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440016,"byte_end":440092,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440093,"byte_end":440135,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440136,"byte_end":440139,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440140,"byte_end":440204,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":440205,"byte_end":440262,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12039},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467658,"byte_end":467668,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467009,"byte_end":467074,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467075,"byte_end":467124,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467125,"byte_end":467196,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467197,"byte_end":467200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467201,"byte_end":467277,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467278,"byte_end":467349,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467350,"byte_end":467418,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467419,"byte_end":467487,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467488,"byte_end":467563,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467564,"byte_end":467578,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468233,"byte_end":468236,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468163,"byte_end":468221,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468345,"byte_end":468352,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468282,"byte_end":468333,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468466,"byte_end":468473,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468395,"byte_end":468454,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468594,"byte_end":468604,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468528,"byte_end":468582,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":12076},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":473755,"byte_end":473764,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12078},{"krate":0,"index":12079},{"krate":0,"index":12080},{"krate":0,"index":12081}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474059,"byte_end":474062,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":473917,"byte_end":474009,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474014,"byte_end":474047,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474224,"byte_end":474237,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474147,"byte_end":474212,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474743,"byte_end":474749,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474583,"byte_end":474639,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474644,"byte_end":474647,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":474652,"byte_end":474731,"line_start":62,"line_end":62,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":481778,"byte_end":481787,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12131},{"krate":0,"index":12132},{"krate":0,"index":12133}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":482062,"byte_end":482065,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":481920,"byte_end":482012,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":482017,"byte_end":482050,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":482227,"byte_end":482240,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":482150,"byte_end":482215,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":483352,"byte_end":483358,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":483284,"byte_end":483340,"line_start":82,"line_end":82,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486238,"byte_end":486243,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12181},{"krate":0,"index":12182},{"krate":0,"index":12183}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486609,"byte_end":486616,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486535,"byte_end":486597,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486948,"byte_end":486955,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486685,"byte_end":486755,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486760,"byte_end":486763,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486768,"byte_end":486841,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486846,"byte_end":486919,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486924,"byte_end":486936,"line_start":41,"line_end":41,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487314,"byte_end":487325,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487044,"byte_end":487121,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487126,"byte_end":487129,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487134,"byte_end":487207,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487212,"byte_end":487285,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487290,"byte_end":487302,"line_start":50,"line_end":50,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487528,"byte_end":487538,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487460,"byte_end":487516,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12227},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490352,"byte_end":490357,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":12230}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490190,"byte_end":490255,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490273,"byte_end":490340,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491910,"byte_end":491914,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491061,"byte_end":491136,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491137,"byte_end":491140,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491141,"byte_end":491224,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491225,"byte_end":491305,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491306,"byte_end":491378,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491379,"byte_end":491392,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491393,"byte_end":491396,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491397,"byte_end":491444,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491445,"byte_end":491448,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491449,"byte_end":491463,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491464,"byte_end":491467,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491468,"byte_end":491475,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491476,"byte_end":491517,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491518,"byte_end":491569,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491570,"byte_end":491573,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491574,"byte_end":491617,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491618,"byte_end":491665,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491666,"byte_end":491669,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491670,"byte_end":491723,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491724,"byte_end":491750,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491751,"byte_end":491754,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491755,"byte_end":491780,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491781,"byte_end":491834,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491835,"byte_end":491894,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":491895,"byte_end":491902,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":492259,"byte_end":492263,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":12248}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493663,"byte_end":493671,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":492807,"byte_end":492882,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":492883,"byte_end":492886,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":492887,"byte_end":492973,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":492974,"byte_end":493054,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493055,"byte_end":493127,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493128,"byte_end":493141,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493142,"byte_end":493145,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493146,"byte_end":493193,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493194,"byte_end":493197,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493198,"byte_end":493212,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493213,"byte_end":493216,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493217,"byte_end":493224,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493225,"byte_end":493266,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493267,"byte_end":493318,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493319,"byte_end":493322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493323,"byte_end":493366,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493367,"byte_end":493414,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493415,"byte_end":493418,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493419,"byte_end":493476,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493477,"byte_end":493503,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493504,"byte_end":493507,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493508,"byte_end":493533,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493534,"byte_end":493587,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493588,"byte_end":493647,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":493648,"byte_end":493655,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":494004,"byte_end":494011,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":12302},{"krate":0,"index":12303},{"krate":0,"index":12304}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495933,"byte_end":495939,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":12353}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495166,"byte_end":495229,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495230,"byte_end":495263,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495264,"byte_end":495267,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495268,"byte_end":495336,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495337,"byte_end":495419,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495420,"byte_end":495499,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495500,"byte_end":495525,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495526,"byte_end":495529,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495530,"byte_end":495596,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495597,"byte_end":495664,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495665,"byte_end":495698,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495699,"byte_end":495702,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495703,"byte_end":495742,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495743,"byte_end":495782,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495783,"byte_end":495824,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495825,"byte_end":495888,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496519,"byte_end":496522,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495998,"byte_end":496073,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496078,"byte_end":496081,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496086,"byte_end":496160,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496165,"byte_end":496233,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496238,"byte_end":496276,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496281,"byte_end":496284,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496289,"byte_end":496303,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496308,"byte_end":496311,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496316,"byte_end":496323,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496328,"byte_end":496356,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496361,"byte_end":496364,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496369,"byte_end":496408,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496413,"byte_end":496461,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496466,"byte_end":496495,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496500,"byte_end":496507,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496946,"byte_end":496956,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496601,"byte_end":496658,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496663,"byte_end":496666,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496671,"byte_end":496685,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496690,"byte_end":496693,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496698,"byte_end":496705,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496710,"byte_end":496738,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496743,"byte_end":496746,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496751,"byte_end":496790,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496795,"byte_end":496843,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496848,"byte_end":496877,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496882,"byte_end":496885,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496890,"byte_end":496922,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":496927,"byte_end":496934,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497364,"byte_end":497371,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497013,"byte_end":497073,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497078,"byte_end":497081,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497086,"byte_end":497100,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497105,"byte_end":497108,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497113,"byte_end":497120,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497125,"byte_end":497153,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497158,"byte_end":497161,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497166,"byte_end":497205,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497210,"byte_end":497258,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497263,"byte_end":497292,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497297,"byte_end":497300,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497305,"byte_end":497340,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497345,"byte_end":497352,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497943,"byte_end":497950,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497427,"byte_end":497495,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497500,"byte_end":497503,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497508,"byte_end":497581,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497586,"byte_end":497648,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497653,"byte_end":497656,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497661,"byte_end":497675,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497680,"byte_end":497683,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497688,"byte_end":497695,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497700,"byte_end":497728,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497733,"byte_end":497736,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497741,"byte_end":497784,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497789,"byte_end":497837,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497842,"byte_end":497871,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497876,"byte_end":497879,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497884,"byte_end":497919,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":497924,"byte_end":497931,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498608,"byte_end":498616,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498014,"byte_end":498062,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498067,"byte_end":498070,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498075,"byte_end":498089,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498094,"byte_end":498097,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498102,"byte_end":498109,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498114,"byte_end":498155,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498160,"byte_end":498214,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498219,"byte_end":498222,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498227,"byte_end":498279,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498284,"byte_end":498287,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498292,"byte_end":498327,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498332,"byte_end":498335,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498340,"byte_end":498383,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498388,"byte_end":498423,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498428,"byte_end":498431,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498436,"byte_end":498480,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498485,"byte_end":498520,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498525,"byte_end":498584,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498589,"byte_end":498596,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499084,"byte_end":499096,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498674,"byte_end":498711,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498716,"byte_end":498719,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498724,"byte_end":498738,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498743,"byte_end":498746,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498751,"byte_end":498758,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498763,"byte_end":498791,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498796,"byte_end":498799,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498804,"byte_end":498856,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498861,"byte_end":498864,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498869,"byte_end":498904,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498909,"byte_end":498912,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498917,"byte_end":498942,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498947,"byte_end":498982,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498987,"byte_end":498990,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":498995,"byte_end":499020,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499025,"byte_end":499060,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499065,"byte_end":499072,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":501932,"byte_end":501937,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4112}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":501831,"byte_end":501871,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":501872,"byte_end":501920,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502497,"byte_end":502502,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":501958,"byte_end":502005,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502006,"byte_end":502009,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502010,"byte_end":502082,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502083,"byte_end":502086,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502087,"byte_end":502101,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502102,"byte_end":502105,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502106,"byte_end":502171,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502172,"byte_end":502175,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502176,"byte_end":502183,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502184,"byte_end":502225,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502226,"byte_end":502268,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502269,"byte_end":502272,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502273,"byte_end":502308,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502309,"byte_end":502342,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502343,"byte_end":502389,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502390,"byte_end":502421,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502422,"byte_end":502481,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502482,"byte_end":502489,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503570,"byte_end":503577,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":12382}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503400,"byte_end":503473,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503491,"byte_end":503558,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505349,"byte_end":505354,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":12390}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505187,"byte_end":505252,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505270,"byte_end":505337,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12409},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\into_sink.rs","byte_start":506337,"byte_end":506345,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":12412},{"krate":0,"index":12413}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12456},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\lines.rs","byte_start":508995,"byte_end":509000,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12458},{"krate":0,"index":12459},{"krate":0,"index":12460},{"krate":0,"index":12461}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510200,"byte_end":510204,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":12502},{"krate":0,"index":12503}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510041,"byte_end":510103,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510121,"byte_end":510188,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511096,"byte_end":511108,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":12511},{"krate":0,"index":12512}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":510919,"byte_end":510999,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511017,"byte_end":511084,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12517},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512074,"byte_end":512083,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":12520},{"krate":0,"index":12521}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":511903,"byte_end":511977,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":511995,"byte_end":512062,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513423,"byte_end":513431,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":12529},{"krate":0,"index":12530},{"krate":0,"index":12531},{"krate":0,"index":12532}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513251,"byte_end":513326,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513344,"byte_end":513411,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515239,"byte_end":515248,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":12540},{"krate":0,"index":12541},{"krate":0,"index":12542}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515066,"byte_end":515142,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515160,"byte_end":515227,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12547},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518254,"byte_end":518266,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":12550},{"krate":0,"index":12551},{"krate":0,"index":12552},{"krate":0,"index":12553}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518075,"byte_end":518157,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518175,"byte_end":518242,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520104,"byte_end":520113,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":12561},{"krate":0,"index":12562},{"krate":0,"index":12563},{"krate":0,"index":12564}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":519930,"byte_end":520007,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520025,"byte_end":520092,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521892,"byte_end":521898,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4386}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521790,"byte_end":521831,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521832,"byte_end":521880,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522455,"byte_end":522461,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521918,"byte_end":521987,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521988,"byte_end":521991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":521992,"byte_end":522072,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522073,"byte_end":522092,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522093,"byte_end":522096,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522097,"byte_end":522111,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522112,"byte_end":522115,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522116,"byte_end":522123,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522124,"byte_end":522165,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522166,"byte_end":522208,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522209,"byte_end":522212,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522213,"byte_end":522241,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522242,"byte_end":522281,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522282,"byte_end":522332,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522333,"byte_end":522379,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522380,"byte_end":522439,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522440,"byte_end":522447,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12569},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523733,"byte_end":523737,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":12572},{"krate":0,"index":12573}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523570,"byte_end":523636,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523654,"byte_end":523721,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524507,"byte_end":524511,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":4428}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524407,"byte_end":524446,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524447,"byte_end":524495,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525119,"byte_end":525123,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524532,"byte_end":524609,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524610,"byte_end":524613,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524614,"byte_end":524709,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524710,"byte_end":524767,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524768,"byte_end":524771,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524772,"byte_end":524786,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524787,"byte_end":524790,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524791,"byte_end":524802,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524803,"byte_end":524844,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524845,"byte_end":524888,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524889,"byte_end":524892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524893,"byte_end":524930,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524931,"byte_end":524963,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":524964,"byte_end":525013,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525014,"byte_end":525043,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525044,"byte_end":525103,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525104,"byte_end":525111,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12578},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526310,"byte_end":526318,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":12580}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526213,"byte_end":526281,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":12584},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526447,"byte_end":526456,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":12586}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526350,"byte_end":526418,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527189,"byte_end":527196,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526943,"byte_end":527020,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527025,"byte_end":527096,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527101,"byte_end":527177,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527698,"byte_end":527705,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527452,"byte_end":527529,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527534,"byte_end":527605,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527610,"byte_end":527686,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529293,"byte_end":529305,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529137,"byte_end":529212,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529213,"byte_end":529281,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":4488},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529309,"byte_end":529324,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":4485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529326,"byte_end":529342,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":4485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530251,"byte_end":530255,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12597},{"krate":0,"index":12598}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531200,"byte_end":531205,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530447,"byte_end":530500,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530505,"byte_end":530551,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530556,"byte_end":530559,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530564,"byte_end":530574,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530579,"byte_end":530582,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530587,"byte_end":530664,"line_start":31,"line_end":31,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530669,"byte_end":530738,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530743,"byte_end":530746,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530751,"byte_end":530765,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530770,"byte_end":530773,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530778,"byte_end":530785,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530790,"byte_end":530831,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530836,"byte_end":530880,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530885,"byte_end":530888,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530893,"byte_end":530940,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530945,"byte_end":530973,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530978,"byte_end":530981,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530986,"byte_end":531020,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531025,"byte_end":531067,"line_start":44,"line_end":44,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531072,"byte_end":531075,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531080,"byte_end":531112,"line_start":46,"line_end":46,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531117,"byte_end":531176,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531181,"byte_end":531188,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532116,"byte_end":532125,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531252,"byte_end":531323,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531328,"byte_end":531402,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531407,"byte_end":531482,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531487,"byte_end":531511,"line_start":56,"line_end":56,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531516,"byte_end":531519,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531524,"byte_end":531538,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531543,"byte_end":531546,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531551,"byte_end":531558,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531563,"byte_end":531604,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531609,"byte_end":531653,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531658,"byte_end":531661,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531666,"byte_end":531713,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531718,"byte_end":531746,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531751,"byte_end":531754,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531759,"byte_end":531793,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531798,"byte_end":531840,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531845,"byte_end":531848,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531853,"byte_end":531874,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531879,"byte_end":531911,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531916,"byte_end":531919,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531924,"byte_end":531947,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531952,"byte_end":531994,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":531999,"byte_end":532020,"line_start":75,"line_end":75,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532025,"byte_end":532028,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532033,"byte_end":532092,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532097,"byte_end":532104,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534680,"byte_end":534686,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":12636},{"krate":0,"index":12637}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":533725,"byte_end":533772,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":533773,"byte_end":533776,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":533777,"byte_end":533853,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":533854,"byte_end":533932,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":533933,"byte_end":534009,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534010,"byte_end":534085,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534086,"byte_end":534159,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534160,"byte_end":534191,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534192,"byte_end":534195,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534196,"byte_end":534267,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534268,"byte_end":534347,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534348,"byte_end":534375,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534376,"byte_end":534379,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534380,"byte_end":534454,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534455,"byte_end":534529,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534530,"byte_end":534609,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534610,"byte_end":534651,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534995,"byte_end":534998,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534771,"byte_end":534842,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534847,"byte_end":534857,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534862,"byte_end":534865,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534870,"byte_end":534944,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534949,"byte_end":534983,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535177,"byte_end":535184,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535080,"byte_end":535147,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535152,"byte_end":535165,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535329,"byte_end":535336,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535231,"byte_end":535299,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535304,"byte_end":535317,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535467,"byte_end":535477,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535395,"byte_end":535455,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535618,"byte_end":535623,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535521,"byte_end":535593,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535598,"byte_end":535606,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535770,"byte_end":535773,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535678,"byte_end":535745,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535750,"byte_end":535758,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536219,"byte_end":536222,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535826,"byte_end":535886,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535891,"byte_end":535894,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535899,"byte_end":535911,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535916,"byte_end":535919,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":535924,"byte_end":535997,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536002,"byte_end":536079,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536084,"byte_end":536087,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536092,"byte_end":536149,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536154,"byte_end":536207,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537409,"byte_end":537414,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":12644},{"krate":0,"index":12645}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537247,"byte_end":537312,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537330,"byte_end":537397,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12650},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538305,"byte_end":538318,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":12653},{"krate":0,"index":12654}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538125,"byte_end":538208,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538226,"byte_end":538293,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12659},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539277,"byte_end":539285,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":12662},{"krate":0,"index":12663}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539107,"byte_end":539180,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539198,"byte_end":539265,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":4611},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443289,"byte_end":443301,"line_start":152,"line_end":152,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4616},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":4625}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443207,"byte_end":443278,"line_start":151,"line_end":151,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444154,"byte_end":444159,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443319,"byte_end":443384,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443389,"byte_end":443392,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443397,"byte_end":443477,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443482,"byte_end":443554,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443559,"byte_end":443580,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443585,"byte_end":443588,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443593,"byte_end":443607,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443612,"byte_end":443615,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443620,"byte_end":443627,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443632,"byte_end":443673,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443678,"byte_end":443722,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443727,"byte_end":443730,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443735,"byte_end":443779,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443784,"byte_end":443828,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443833,"byte_end":443836,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443841,"byte_end":443885,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443890,"byte_end":443922,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443927,"byte_end":443930,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443935,"byte_end":443968,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443973,"byte_end":444016,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444021,"byte_end":444070,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444075,"byte_end":444134,"line_start":174,"line_end":174,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444139,"byte_end":444146,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445212,"byte_end":445216,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444310,"byte_end":444384,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444389,"byte_end":444425,"line_start":185,"line_end":185,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444430,"byte_end":444433,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444438,"byte_end":444516,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444521,"byte_end":444548,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444553,"byte_end":444556,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444561,"byte_end":444575,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444580,"byte_end":444583,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444588,"byte_end":444595,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444600,"byte_end":444641,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444646,"byte_end":444690,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444695,"byte_end":444698,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444703,"byte_end":444750,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444755,"byte_end":444785,"line_start":197,"line_end":197,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444790,"byte_end":444793,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444798,"byte_end":444850,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444855,"byte_end":444858,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444863,"byte_end":444934,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":444939,"byte_end":445003,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445008,"byte_end":445053,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445058,"byte_end":445083,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445088,"byte_end":445128,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445133,"byte_end":445192,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445197,"byte_end":445204,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445622,"byte_end":445635,"line_start":220,"line_end":220,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445384,"byte_end":445468,"line_start":215,"line_end":215,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445473,"byte_end":445491,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445496,"byte_end":445499,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445504,"byte_end":445582,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445587,"byte_end":445614,"line_start":219,"line_end":219,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447046,"byte_end":447056,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445833,"byte_end":445905,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445910,"byte_end":445968,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445973,"byte_end":445976,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":445981,"byte_end":446055,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446060,"byte_end":446063,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446068,"byte_end":446145,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446150,"byte_end":446172,"line_start":233,"line_end":233,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446177,"byte_end":446180,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446185,"byte_end":446199,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446204,"byte_end":446207,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446212,"byte_end":446219,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446224,"byte_end":446265,"line_start":238,"line_end":238,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446270,"byte_end":446314,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446319,"byte_end":446322,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446327,"byte_end":446374,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446379,"byte_end":446409,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446414,"byte_end":446417,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446422,"byte_end":446464,"line_start":244,"line_end":244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446469,"byte_end":446472,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446477,"byte_end":446514,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446519,"byte_end":446578,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446583,"byte_end":446590,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446595,"byte_end":446598,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446603,"byte_end":446643,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446648,"byte_end":446651,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446656,"byte_end":446663,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446668,"byte_end":446709,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446714,"byte_end":446764,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446769,"byte_end":446772,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446777,"byte_end":446824,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446829,"byte_end":446859,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446864,"byte_end":446867,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446872,"byte_end":446926,"line_start":259,"line_end":259,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446931,"byte_end":446934,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":446939,"byte_end":447012,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447017,"byte_end":447026,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447031,"byte_end":447038,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447861,"byte_end":447872,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447231,"byte_end":447304,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447309,"byte_end":447312,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447317,"byte_end":447375,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447380,"byte_end":447383,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447388,"byte_end":447402,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447407,"byte_end":447410,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447415,"byte_end":447422,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447427,"byte_end":447468,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447473,"byte_end":447517,"line_start":279,"line_end":279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447522,"byte_end":447525,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447530,"byte_end":447577,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447582,"byte_end":447625,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447630,"byte_end":447633,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447638,"byte_end":447693,"line_start":284,"line_end":284,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447698,"byte_end":447701,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447706,"byte_end":447731,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447736,"byte_end":447777,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447782,"byte_end":447841,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":447846,"byte_end":447853,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4622},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448693,"byte_end":448707,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448053,"byte_end":448126,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448131,"byte_end":448134,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448139,"byte_end":448197,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448202,"byte_end":448205,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448210,"byte_end":448224,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448229,"byte_end":448232,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448237,"byte_end":448244,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448249,"byte_end":448290,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448295,"byte_end":448339,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448344,"byte_end":448347,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448352,"byte_end":448399,"line_start":307,"line_end":307,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448404,"byte_end":448450,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448455,"byte_end":448458,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448463,"byte_end":448521,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448526,"byte_end":448529,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448534,"byte_end":448559,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448564,"byte_end":448609,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448614,"byte_end":448673,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448678,"byte_end":448685,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450050,"byte_end":450055,"line_start":352,"line_end":352,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448893,"byte_end":448964,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448969,"byte_end":448972,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":448977,"byte_end":449047,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449052,"byte_end":449077,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449082,"byte_end":449085,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449090,"byte_end":449104,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449109,"byte_end":449112,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449117,"byte_end":449124,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449129,"byte_end":449170,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449175,"byte_end":449225,"line_start":332,"line_end":332,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449230,"byte_end":449233,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449238,"byte_end":449308,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449313,"byte_end":449383,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449388,"byte_end":449439,"line_start":336,"line_end":336,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449444,"byte_end":449447,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449452,"byte_end":449495,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449500,"byte_end":449563,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449568,"byte_end":449615,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449620,"byte_end":449623,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449628,"byte_end":449633,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449638,"byte_end":449709,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449714,"byte_end":449766,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449771,"byte_end":449823,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449828,"byte_end":449833,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449838,"byte_end":449841,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449846,"byte_end":449908,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449913,"byte_end":449966,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":449971,"byte_end":450030,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450035,"byte_end":450042,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450836,"byte_end":450840,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450243,"byte_end":450313,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450318,"byte_end":450349,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450354,"byte_end":450357,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450362,"byte_end":450376,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450381,"byte_end":450384,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450389,"byte_end":450396,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450401,"byte_end":450442,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450447,"byte_end":450491,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450496,"byte_end":450499,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450504,"byte_end":450551,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450556,"byte_end":450584,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450589,"byte_end":450592,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450597,"byte_end":450631,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450636,"byte_end":450678,"line_start":373,"line_end":373,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450683,"byte_end":450686,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450691,"byte_end":450712,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450717,"byte_end":450752,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450757,"byte_end":450816,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":450821,"byte_end":450828,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4628},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451649,"byte_end":451662,"line_start":405,"line_end":405,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4637}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451566,"byte_end":451638,"line_start":404,"line_end":404,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452403,"byte_end":452408,"line_start":428,"line_end":428,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451681,"byte_end":451746,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451751,"byte_end":451754,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451759,"byte_end":451773,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451778,"byte_end":451781,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451786,"byte_end":451793,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451798,"byte_end":451839,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451844,"byte_end":451893,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451898,"byte_end":451935,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451940,"byte_end":451943,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451948,"byte_end":451982,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451987,"byte_end":451990,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451995,"byte_end":452000,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452005,"byte_end":452051,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452056,"byte_end":452123,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452128,"byte_end":452171,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452176,"byte_end":452219,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452224,"byte_end":452256,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452261,"byte_end":452266,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452271,"byte_end":452274,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452279,"byte_end":452319,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452324,"byte_end":452383,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452388,"byte_end":452395,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452617,"byte_end":452622,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452544,"byte_end":452609,"line_start":435,"line_end":435,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4631},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452964,"byte_end":452969,"line_start":447,"line_end":447,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452758,"byte_end":452829,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452834,"byte_end":452837,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452842,"byte_end":452924,"line_start":445,"line_end":445,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":452929,"byte_end":452956,"line_start":446,"line_end":446,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453379,"byte_end":453393,"line_start":459,"line_end":459,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453135,"byte_end":453221,"line_start":454,"line_end":454,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453226,"byte_end":453244,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453249,"byte_end":453252,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453257,"byte_end":453339,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453344,"byte_end":453371,"line_start":458,"line_end":458,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454239,"byte_end":454248,"line_start":486,"line_end":486,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453586,"byte_end":453618,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453623,"byte_end":453626,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453631,"byte_end":453712,"line_start":468,"line_end":468,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453717,"byte_end":453739,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453744,"byte_end":453747,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453752,"byte_end":453830,"line_start":471,"line_end":471,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453835,"byte_end":453838,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453843,"byte_end":453857,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453862,"byte_end":453865,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453870,"byte_end":453877,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453882,"byte_end":453923,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453928,"byte_end":453973,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453978,"byte_end":453981,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":453986,"byte_end":454033,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454038,"byte_end":454041,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454046,"byte_end":454089,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454094,"byte_end":454097,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454102,"byte_end":454155,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454160,"byte_end":454219,"line_start":484,"line_end":484,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":454224,"byte_end":454231,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457792,"byte_end":457801,"line_start":588,"line_end":588,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"pub fn into_sink<Item: AsRef<[u8]>>(Self) -> IntoSink<Self, Item> where\nSelf: Sized","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":456833,"byte_end":456922,"line_start":560,"line_end":560,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":456927,"byte_end":456930,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":456935,"byte_end":457007,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457012,"byte_end":457043,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457048,"byte_end":457051,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457056,"byte_end":457130,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457135,"byte_end":457147,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457152,"byte_end":457155,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457160,"byte_end":457174,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457179,"byte_end":457182,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457187,"byte_end":457194,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457199,"byte_end":457240,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457245,"byte_end":457280,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457285,"byte_end":457328,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457333,"byte_end":457336,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457341,"byte_end":457407,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457412,"byte_end":457415,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457420,"byte_end":457448,"line_start":577,"line_end":577,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457453,"byte_end":457456,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457461,"byte_end":457514,"line_start":579,"line_end":579,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457519,"byte_end":457522,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457527,"byte_end":457574,"line_start":581,"line_end":581,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457579,"byte_end":457625,"line_start":582,"line_end":582,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457630,"byte_end":457640,"line_start":583,"line_end":583,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457645,"byte_end":457691,"line_start":584,"line_end":584,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457696,"byte_end":457703,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":457708,"byte_end":457732,"line_start":586,"line_end":586,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458104,"byte_end":458116,"line_start":599,"line_end":599,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458022,"byte_end":458093,"line_start":598,"line_end":598,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458386,"byte_end":458390,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":4641},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458134,"byte_end":458203,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458208,"byte_end":458261,"line_start":601,"line_end":601,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458266,"byte_end":458269,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458274,"byte_end":458351,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458356,"byte_end":458378,"line_start":604,"line_end":604,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458728,"byte_end":458743,"line_start":616,"line_end":616,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":4641},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458545,"byte_end":458618,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458623,"byte_end":458647,"line_start":613,"line_end":613,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458652,"byte_end":458655,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458660,"byte_end":458720,"line_start":615,"line_end":615,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":4646},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458995,"byte_end":459010,"line_start":627,"line_end":627,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4653}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458910,"byte_end":458984,"line_start":626,"line_end":626,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4647},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459964,"byte_end":459972,"line_start":651,"line_end":651,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459031,"byte_end":459120,"line_start":628,"line_end":628,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459125,"byte_end":459157,"line_start":629,"line_end":629,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459162,"byte_end":459165,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459170,"byte_end":459263,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459268,"byte_end":459271,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459276,"byte_end":459287,"line_start":633,"line_end":633,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459292,"byte_end":459333,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459338,"byte_end":459417,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459422,"byte_end":459425,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459430,"byte_end":459518,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459523,"byte_end":459526,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459531,"byte_end":459587,"line_start":639,"line_end":639,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459592,"byte_end":459620,"line_start":640,"line_end":640,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459625,"byte_end":459628,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459633,"byte_end":459683,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459688,"byte_end":459716,"line_start":643,"line_end":643,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459721,"byte_end":459724,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459729,"byte_end":459785,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459790,"byte_end":459818,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459823,"byte_end":459826,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459831,"byte_end":459880,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459885,"byte_end":459944,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459949,"byte_end":459956,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460773,"byte_end":460786,"line_start":675,"line_end":675,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460115,"byte_end":460193,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460198,"byte_end":460201,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460206,"byte_end":460217,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460222,"byte_end":460263,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460268,"byte_end":460347,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460352,"byte_end":460355,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460360,"byte_end":460429,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460434,"byte_end":460437,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460442,"byte_end":460498,"line_start":666,"line_end":666,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460503,"byte_end":460531,"line_start":667,"line_end":667,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460536,"byte_end":460539,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460544,"byte_end":460594,"line_start":669,"line_end":669,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460599,"byte_end":460627,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460632,"byte_end":460635,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460640,"byte_end":460689,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460694,"byte_end":460753,"line_start":673,"line_end":673,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460758,"byte_end":460765,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4649},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462477,"byte_end":462487,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460894,"byte_end":460969,"line_start":682,"line_end":682,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":460974,"byte_end":461041,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461046,"byte_end":461143,"line_start":684,"line_end":684,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461148,"byte_end":461151,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461156,"byte_end":461226,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461231,"byte_end":461305,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461310,"byte_end":461365,"line_start":688,"line_end":688,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461370,"byte_end":461373,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461378,"byte_end":461456,"line_start":690,"line_end":690,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461461,"byte_end":461488,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461493,"byte_end":461496,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461501,"byte_end":461578,"line_start":693,"line_end":693,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461583,"byte_end":461605,"line_start":694,"line_end":694,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461610,"byte_end":461613,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461618,"byte_end":461632,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461637,"byte_end":461640,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461645,"byte_end":461652,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461657,"byte_end":461698,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461703,"byte_end":461750,"line_start":700,"line_end":700,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461755,"byte_end":461758,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461763,"byte_end":461812,"line_start":702,"line_end":702,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461817,"byte_end":461842,"line_start":703,"line_end":703,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461847,"byte_end":461850,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461855,"byte_end":461878,"line_start":705,"line_end":705,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461883,"byte_end":461944,"line_start":706,"line_end":706,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461949,"byte_end":461978,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":461983,"byte_end":462014,"line_start":708,"line_end":708,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462019,"byte_end":462035,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462040,"byte_end":462043,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462048,"byte_end":462071,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462076,"byte_end":462137,"line_start":712,"line_end":712,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462142,"byte_end":462171,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462176,"byte_end":462206,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462211,"byte_end":462227,"line_start":715,"line_end":715,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462232,"byte_end":462235,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462240,"byte_end":462263,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462268,"byte_end":462329,"line_start":718,"line_end":718,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462334,"byte_end":462363,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462368,"byte_end":462393,"line_start":720,"line_end":720,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462398,"byte_end":462457,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462462,"byte_end":462469,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464666,"byte_end":464675,"line_start":781,"line_end":781,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462684,"byte_end":462759,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462764,"byte_end":462835,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462840,"byte_end":462935,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462940,"byte_end":462943,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":462948,"byte_end":463018,"line_start":734,"line_end":734,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463023,"byte_end":463098,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463103,"byte_end":463173,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463178,"byte_end":463188,"line_start":737,"line_end":737,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463193,"byte_end":463196,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463201,"byte_end":463279,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463284,"byte_end":463311,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463316,"byte_end":463319,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463324,"byte_end":463401,"line_start":742,"line_end":742,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463406,"byte_end":463428,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463433,"byte_end":463436,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463441,"byte_end":463453,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463458,"byte_end":463461,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463466,"byte_end":463539,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463544,"byte_end":463617,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463622,"byte_end":463696,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463701,"byte_end":463757,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463762,"byte_end":463765,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463770,"byte_end":463817,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463822,"byte_end":463825,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463830,"byte_end":463844,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463849,"byte_end":463852,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463857,"byte_end":463864,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463869,"byte_end":463910,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463915,"byte_end":463962,"line_start":758,"line_end":758,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463967,"byte_end":463970,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":463975,"byte_end":464021,"line_start":760,"line_end":760,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464026,"byte_end":464058,"line_start":761,"line_end":761,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464063,"byte_end":464066,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464071,"byte_end":464094,"line_start":763,"line_end":763,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464099,"byte_end":464153,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464158,"byte_end":464187,"line_start":765,"line_end":765,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464192,"byte_end":464221,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464226,"byte_end":464242,"line_start":767,"line_end":767,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464247,"byte_end":464250,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464255,"byte_end":464278,"line_start":769,"line_end":769,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464283,"byte_end":464337,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464342,"byte_end":464371,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464376,"byte_end":464403,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464408,"byte_end":464424,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464429,"byte_end":464432,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464437,"byte_end":464460,"line_start":775,"line_end":775,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464465,"byte_end":464519,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464524,"byte_end":464553,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464558,"byte_end":464582,"line_start":778,"line_end":778,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464587,"byte_end":464646,"line_start":779,"line_end":779,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464651,"byte_end":464658,"line_start":780,"line_end":780,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466199,"byte_end":466204,"line_start":820,"line_end":820,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464853,"byte_end":464904,"line_start":788,"line_end":788,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":464909,"byte_end":464996,"line_start":789,"line_end":789,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465001,"byte_end":465004,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465009,"byte_end":465075,"line_start":791,"line_end":791,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465080,"byte_end":465162,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465167,"byte_end":465227,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465232,"byte_end":465235,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465240,"byte_end":465275,"line_start":795,"line_end":795,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465280,"byte_end":465302,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465307,"byte_end":465310,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465315,"byte_end":465327,"line_start":798,"line_end":798,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465332,"byte_end":465335,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465340,"byte_end":465431,"line_start":800,"line_end":800,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465436,"byte_end":465439,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465444,"byte_end":465506,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465511,"byte_end":465514,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465519,"byte_end":465533,"line_start":804,"line_end":804,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465538,"byte_end":465541,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465546,"byte_end":465553,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465558,"byte_end":465599,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465604,"byte_end":465651,"line_start":808,"line_end":808,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465656,"byte_end":465691,"line_start":809,"line_end":809,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465696,"byte_end":465699,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465704,"byte_end":465759,"line_start":811,"line_end":811,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465764,"byte_end":465767,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465772,"byte_end":465834,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465839,"byte_end":465910,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465915,"byte_end":465986,"line_start":815,"line_end":815,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":465991,"byte_end":466062,"line_start":816,"line_end":816,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466067,"byte_end":466115,"line_start":817,"line_end":817,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466120,"byte_end":466179,"line_start":818,"line_end":818,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466184,"byte_end":466191,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","parent":null,"children":[{"krate":0,"index":12668},{"krate":0,"index":12818},{"krate":0,"index":12819},{"krate":0,"index":12820},{"krate":0,"index":12821},{"krate":0,"index":12822},{"krate":0,"index":12823},{"krate":0,"index":12881}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":12031,"byte_end":12056,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540201,"byte_end":540248,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540249,"byte_end":540252,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540253,"byte_end":540328,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mod.rs","byte_start":540329,"byte_end":540386,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592125,"byte_end":10592130,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":12692},{"krate":0,"index":12693},{"krate":0,"index":12694}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591798,"byte_end":10591824,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591825,"byte_end":10591828,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591829,"byte_end":10591843,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591844,"byte_end":10591847,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591848,"byte_end":10591927,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10591928,"byte_end":10592010,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592011,"byte_end":10592095,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592096,"byte_end":10592113,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":12717},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593442,"byte_end":10593445,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593392,"byte_end":10593430,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":12718},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593872,"byte_end":10593882,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593626,"byte_end":10593681,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593686,"byte_end":10593689,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593694,"byte_end":10593708,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593713,"byte_end":10593716,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593721,"byte_end":10593728,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593733,"byte_end":10593762,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593767,"byte_end":10593770,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593775,"byte_end":10593805,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593810,"byte_end":10593848,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593853,"byte_end":10593860,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12721},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594096,"byte_end":10594104,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593968,"byte_end":10594012,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594017,"byte_end":10594020,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594025,"byte_end":10594084,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":12722},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594525,"byte_end":10594529,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594360,"byte_end":10594396,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594401,"byte_end":10594404,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594409,"byte_end":10594482,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594487,"byte_end":10594513,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":12723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595157,"byte_end":10595164,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594647,"byte_end":10594702,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594707,"byte_end":10594710,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594715,"byte_end":10594790,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594795,"byte_end":10594869,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594874,"byte_end":10594877,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594882,"byte_end":10594896,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594901,"byte_end":10594904,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594909,"byte_end":10594916,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594921,"byte_end":10594962,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10594967,"byte_end":10594996,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595001,"byte_end":10595004,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595009,"byte_end":10595043,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595048,"byte_end":10595074,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595079,"byte_end":10595119,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595124,"byte_end":10595133,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10595138,"byte_end":10595145,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12727},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10596886,"byte_end":10596901,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":12730},{"krate":0,"index":12731}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10596793,"byte_end":10596874,"line_start":179,"line_end":179,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":12746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599436,"byte_end":10599446,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":12749}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599272,"byte_end":10599336,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599337,"byte_end":10599410,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599411,"byte_end":10599424,"line_start":255,"line_end":255,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12753},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600015,"byte_end":10600018,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599536,"byte_end":10599596,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599601,"byte_end":10599604,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599609,"byte_end":10599622,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599627,"byte_end":10599630,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599635,"byte_end":10599642,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599647,"byte_end":10599688,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599693,"byte_end":10599736,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599741,"byte_end":10599744,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599749,"byte_end":10599802,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599807,"byte_end":10599812,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599817,"byte_end":10599906,"line_start":271,"line_end":271,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599911,"byte_end":10599953,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599958,"byte_end":10599963,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599968,"byte_end":10599977,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599982,"byte_end":10599989,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599994,"byte_end":10600003,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":12769},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601310,"byte_end":10601326,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":12773},{"krate":0,"index":12774},{"krate":0,"index":12775}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601126,"byte_end":10601214,"line_start":315,"line_end":315,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601215,"byte_end":10601298,"line_start":316,"line_end":316,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":12780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602092,"byte_end":10602095,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601503,"byte_end":10601563,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601568,"byte_end":10601571,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601576,"byte_end":10601589,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601594,"byte_end":10601597,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601602,"byte_end":10601609,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601614,"byte_end":10601655,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601660,"byte_end":10601721,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601726,"byte_end":10601729,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601734,"byte_end":10601787,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601792,"byte_end":10601797,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601802,"byte_end":10601891,"line_start":334,"line_end":334,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601896,"byte_end":10601986,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601991,"byte_end":10602030,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602035,"byte_end":10602040,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602045,"byte_end":10602054,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602059,"byte_end":10602066,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602071,"byte_end":10602080,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":13190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615149,"byte_end":10615158,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":13192},{"krate":0,"index":13193}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":10397890,"byte_end":10397899,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":12919},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616568,"byte_end":10616571,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615264,"byte_end":10615346,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615351,"byte_end":10615419,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615424,"byte_end":10615427,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615432,"byte_end":10615504,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615509,"byte_end":10615592,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615597,"byte_end":10615622,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615627,"byte_end":10615630,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615635,"byte_end":10615650,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615655,"byte_end":10615658,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615663,"byte_end":10615686,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615691,"byte_end":10615694,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615699,"byte_end":10615706,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615711,"byte_end":10615752,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615757,"byte_end":10615816,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615821,"byte_end":10615824,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615829,"byte_end":10615898,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615903,"byte_end":10615968,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615973,"byte_end":10615998,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616003,"byte_end":10616046,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616051,"byte_end":10616060,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616065,"byte_end":10616072,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616077,"byte_end":10616080,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616085,"byte_end":10616108,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616113,"byte_end":10616116,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616121,"byte_end":10616128,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616133,"byte_end":10616174,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616179,"byte_end":10616231,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616236,"byte_end":10616281,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616286,"byte_end":10616289,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616294,"byte_end":10616363,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616368,"byte_end":10616453,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616458,"byte_end":10616483,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616488,"byte_end":10616530,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616535,"byte_end":10616544,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616549,"byte_end":10616556,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":12920},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617076,"byte_end":10617086,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616666,"byte_end":10616730,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616735,"byte_end":10616803,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616808,"byte_end":10616858,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616863,"byte_end":10616917,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10616922,"byte_end":10617014,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617019,"byte_end":10617064,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":12943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617354,"byte_end":10617371,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":12944}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617164,"byte_end":10617214,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617215,"byte_end":10617291,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617292,"byte_end":10617325,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":12947},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617477,"byte_end":10617488,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":12948}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617405,"byte_end":10617441,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":12922},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617759,"byte_end":10617767,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617545,"byte_end":10617619,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617624,"byte_end":10617664,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617669,"byte_end":10617672,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617677,"byte_end":10617747,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":12958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618289,"byte_end":10618296,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618180,"byte_end":10618232,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":12942},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620430,"byte_end":10620435,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620063,"byte_end":10620131,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620136,"byte_end":10620139,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620144,"byte_end":10620211,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620216,"byte_end":10620284,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620289,"byte_end":10620363,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620368,"byte_end":10620418,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541136,"byte_end":541143,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4677},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541158,"byte_end":541164,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541173,"byte_end":541182,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541375,"byte_end":541381,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541406,"byte_end":541414,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":542720,"byte_end":542724,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12989},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543080,"byte_end":543087,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13010},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543821,"byte_end":543834,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13026},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544176,"byte_end":544185,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13041},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545140,"byte_end":545147,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545858,"byte_end":545866,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546586,"byte_end":546597,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13083},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547482,"byte_end":547494,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13095},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548642,"byte_end":548656,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549421,"byte_end":549427,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":60914,"byte_end":60921,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69056,"byte_end":69066,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69267,"byte_end":69273,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69316,"byte_end":69322,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69580,"byte_end":69585,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69739,"byte_end":69749,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69981,"byte_end":69986,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70083,"byte_end":70088,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70332,"byte_end":70338,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70762,"byte_end":70768,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72834,"byte_end":72839,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":74535,"byte_end":74541,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":74693,"byte_end":74699,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":76288,"byte_end":76293,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78000,"byte_end":78006,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78165,"byte_end":78171,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78599,"byte_end":78607,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78966,"byte_end":78976,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101402,"byte_end":101412,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101563,"byte_end":101573,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101696,"byte_end":101706,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102415,"byte_end":102425,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102555,"byte_end":102565,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102808,"byte_end":102818,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":103771,"byte_end":103781,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":104024,"byte_end":104034,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":105071,"byte_end":105081,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107358,"byte_end":107371,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107501,"byte_end":107514,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107757,"byte_end":107770,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83948,"byte_end":83951,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109079,"byte_end":109083,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109679,"byte_end":109683,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109827,"byte_end":109831,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110434,"byte_end":110441,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111002,"byte_end":111009,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111154,"byte_end":111161,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111187,"byte_end":111194,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111948,"byte_end":111957,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112560,"byte_end":112569,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113667,"byte_end":113676,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113877,"byte_end":113886,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115206,"byte_end":115218,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115444,"byte_end":115456,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116569,"byte_end":116581,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116785,"byte_end":116797,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118454,"byte_end":118466,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118780,"byte_end":118792,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118979,"byte_end":118991,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119429,"byte_end":119435,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":120129,"byte_end":120135,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":120277,"byte_end":120283,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120786,"byte_end":120791,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120970,"byte_end":120975,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121007,"byte_end":121012,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121109,"byte_end":121114,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128728,"byte_end":128735,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130526,"byte_end":130533,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":131196,"byte_end":131203,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131699,"byte_end":131705,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":134141,"byte_end":134147,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":134851,"byte_end":134857,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135420,"byte_end":135429,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136436,"byte_end":136445,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136628,"byte_end":136637,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":137307,"byte_end":137316,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":145924,"byte_end":145934,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147764,"byte_end":147774,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":148922,"byte_end":148932,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149414,"byte_end":149423,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":151262,"byte_end":151271,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152633,"byte_end":152641,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153719,"byte_end":153727,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":155158,"byte_end":155166,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156145,"byte_end":156151,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156490,"byte_end":156496,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156881,"byte_end":156887,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157268,"byte_end":157274,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157515,"byte_end":157521,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157860,"byte_end":157866,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158142,"byte_end":158148,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158683,"byte_end":158689,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158996,"byte_end":159002,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":160435,"byte_end":160441,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":161496,"byte_end":161502,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":162809,"byte_end":162815,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":163245,"byte_end":163251,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":218555,"byte_end":218560,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":218786,"byte_end":218791,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":219000,"byte_end":219005,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":220601,"byte_end":220608,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":220873,"byte_end":220880,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":221058,"byte_end":221065,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222091,"byte_end":222096,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222490,"byte_end":222495,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222745,"byte_end":222750,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":223875,"byte_end":223881,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":224101,"byte_end":224107,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":224815,"byte_end":224821,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":225484,"byte_end":225489,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":225645,"byte_end":225650,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":226399,"byte_end":226404,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227152,"byte_end":227161,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227347,"byte_end":227356,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227474,"byte_end":227483,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":228136,"byte_end":228145,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":228924,"byte_end":228930,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":229403,"byte_end":229409,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":7764},{"krate":0,"index":7765},{"krate":0,"index":7766},{"krate":0,"index":7767}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":229732,"byte_end":229738,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":230075,"byte_end":230081,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":231460,"byte_end":231466,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232253,"byte_end":232262,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232559,"byte_end":232568,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232835,"byte_end":232844,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":233111,"byte_end":233120,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":234538,"byte_end":234547,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7835},{"krate":0,"index":7836}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235222,"byte_end":235229,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":7886},{"krate":0,"index":7887},{"krate":0,"index":7888},{"krate":0,"index":7889}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235398,"byte_end":235405,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235597,"byte_end":235604,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":236426,"byte_end":236433,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":7890},{"krate":0,"index":7891},{"krate":0,"index":7892},{"krate":0,"index":7893}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237118,"byte_end":237122,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237478,"byte_end":237482,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237743,"byte_end":237747,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237982,"byte_end":237986,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":239657,"byte_end":239664,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":239864,"byte_end":239871,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":240073,"byte_end":240080,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":241885,"byte_end":241892,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242185,"byte_end":242192,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242423,"byte_end":242430,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242669,"byte_end":242676,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243777,"byte_end":243781,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":8246},{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244278,"byte_end":244282,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244380,"byte_end":244384,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":245070,"byte_end":245074,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8253}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245586,"byte_end":245598,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":248088,"byte_end":248100,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":248220,"byte_end":248232,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249117,"byte_end":249120,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249309,"byte_end":249312,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249481,"byte_end":249484,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249652,"byte_end":249655,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":250197,"byte_end":250200,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389},{"krate":0,"index":8390}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250767,"byte_end":250771,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250822,"byte_end":250826,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250977,"byte_end":250981,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":251120,"byte_end":251124,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251775,"byte_end":251789,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251940,"byte_end":251954,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":252098,"byte_end":252112,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253423,"byte_end":253431,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":8540},{"krate":0,"index":8541},{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257397,"byte_end":257405,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257547,"byte_end":257555,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258340,"byte_end":258348,"line_start":172,"line_end":172,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258714,"byte_end":258718,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258963,"byte_end":258967,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":259078,"byte_end":259082,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":259787,"byte_end":259793,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":260145,"byte_end":260151,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":260420,"byte_end":260426,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":261687,"byte_end":261695,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262015,"byte_end":262023,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262207,"byte_end":262215,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262586,"byte_end":262596,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263261,"byte_end":263265,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":8727},{"krate":0,"index":8728},{"krate":0,"index":8729},{"krate":0,"index":8730}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263456,"byte_end":263460,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263578,"byte_end":263582,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":264393,"byte_end":264397,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":8731},{"krate":0,"index":8732},{"krate":0,"index":8733},{"krate":0,"index":8734}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265179,"byte_end":265188,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265640,"byte_end":265649,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265975,"byte_end":265984,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":266232,"byte_end":266241,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":267855,"byte_end":267864,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":268541,"byte_end":268545,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":8848},{"krate":0,"index":8849},{"krate":0,"index":8850},{"krate":0,"index":8851}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":268718,"byte_end":268722,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":269694,"byte_end":269698,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":269946,"byte_end":269950,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":8852},{"krate":0,"index":8853},{"krate":0,"index":8854},{"krate":0,"index":8855}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":270721,"byte_end":270730,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":271178,"byte_end":271187,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":271506,"byte_end":271515,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":273034,"byte_end":273043,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":273399,"byte_end":273408,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":8925},{"krate":0,"index":8926},{"krate":0,"index":8927},{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":274427,"byte_end":274436,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":274724,"byte_end":274733,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":8982},{"krate":0,"index":8983},{"krate":0,"index":8984},{"krate":0,"index":8985},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276850,"byte_end":276859,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":277891,"byte_end":277900,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":278137,"byte_end":278146,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":278842,"byte_end":278846,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279097,"byte_end":279101,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":9047},{"krate":0,"index":9048},{"krate":0,"index":9049},{"krate":0,"index":9050}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279347,"byte_end":279351,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279577,"byte_end":279581,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":280760,"byte_end":280764,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":9051},{"krate":0,"index":9052},{"krate":0,"index":9053},{"krate":0,"index":9054}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281463,"byte_end":281466,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":283052,"byte_end":283055,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":283250,"byte_end":283253,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":285948,"byte_end":285954,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":286462,"byte_end":286468,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":288084,"byte_end":288090,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":288313,"byte_end":288319,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":289062,"byte_end":289073,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":289425,"byte_end":289436,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":291605,"byte_end":291616,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":291839,"byte_end":291850,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":292614,"byte_end":292618,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293104,"byte_end":293108,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293272,"byte_end":293276,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":9281},{"krate":0,"index":9282},{"krate":0,"index":9283},{"krate":0,"index":9284}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293638,"byte_end":293642,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":294869,"byte_end":294873,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":295243,"byte_end":295247,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":9285},{"krate":0,"index":9286},{"krate":0,"index":9287},{"krate":0,"index":9288}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10511548,"byte_end":10511563,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9307}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10511895,"byte_end":10511910,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9310},{"krate":0,"index":9461},{"krate":0,"index":9462},{"krate":0,"index":9463},{"krate":0,"index":9464}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10512297,"byte_end":10512312,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9313},{"krate":0,"index":9314},{"krate":0,"index":9315}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10513766,"byte_end":10513781,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9318}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10514065,"byte_end":10514080,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9322},{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9468}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10514891,"byte_end":10514899,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9341}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10515246,"byte_end":10515254,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9344},{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9471},{"krate":0,"index":9472}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10515534,"byte_end":10515542,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9347},{"krate":0,"index":9348},{"krate":0,"index":9349}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10517060,"byte_end":10517068,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9353},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475},{"krate":0,"index":9476}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10517879,"byte_end":10517896,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9374}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518242,"byte_end":10518259,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9379}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518692,"byte_end":10518709,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9384}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518939,"byte_end":10518956,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":9389},{"krate":0,"index":9390}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521180,"byte_end":10521191,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521214,"byte_end":10521225,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9407}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521658,"byte_end":10521669,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9411},{"krate":0,"index":9412}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522247,"byte_end":10522256,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522304,"byte_end":10522313,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9422}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522777,"byte_end":10522786,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9427},{"krate":0,"index":9428}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10523508,"byte_end":10523517,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9432},{"krate":0,"index":9433},{"krate":0,"index":9434},{"krate":0,"index":9435},{"krate":0,"index":9436}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525124,"byte_end":10525136,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9449}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525312,"byte_end":10525324,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9453}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525573,"byte_end":10525585,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":295894,"byte_end":295905,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":9533},{"krate":0,"index":9534},{"krate":0,"index":9535},{"krate":0,"index":9536}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":296097,"byte_end":296108,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":296960,"byte_end":296971,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173756,"byte_end":173757,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":333841,"byte_end":333848,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":334141,"byte_end":334148,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2393},{"krate":0,"index":9594},{"krate":0,"index":9595},{"krate":0,"index":9596},{"krate":0,"index":9597}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":334429,"byte_end":334436,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":335579,"byte_end":335586,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":335932,"byte_end":335939,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":9598},{"krate":0,"index":9599},{"krate":0,"index":9600},{"krate":0,"index":9601}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336504,"byte_end":336514,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":9872},{"krate":0,"index":9873},{"krate":0,"index":9874},{"krate":0,"index":9875}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336707,"byte_end":336717,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336838,"byte_end":336848,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":337272,"byte_end":337282,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":9876},{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":337947,"byte_end":337953,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":338245,"byte_end":338251,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":10093},{"krate":0,"index":10094},{"krate":0,"index":10095},{"krate":0,"index":10096}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":338529,"byte_end":338535,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":339812,"byte_end":339818,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":340161,"byte_end":340167,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10099},{"krate":0,"index":10100}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340722,"byte_end":340729,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340783,"byte_end":340790,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340953,"byte_end":340960,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":341102,"byte_end":341109,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":341885,"byte_end":341895,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342191,"byte_end":342201,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342446,"byte_end":342456,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2535},{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":343855,"byte_end":343864,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344260,"byte_end":344269,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229},{"krate":0,"index":10230}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344512,"byte_end":344521,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344778,"byte_end":344787,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":346176,"byte_end":346185,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":10231},{"krate":0,"index":10232},{"krate":0,"index":10233},{"krate":0,"index":10234}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":346928,"byte_end":346940,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347240,"byte_end":347252,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":10292},{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10295}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347449,"byte_end":347461,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347739,"byte_end":347751,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":349251,"byte_end":349263,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2625},{"krate":0,"index":10296},{"krate":0,"index":10297},{"krate":0,"index":10298},{"krate":0,"index":10299}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":349935,"byte_end":349945,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":10340},{"krate":0,"index":10341},{"krate":0,"index":10342},{"krate":0,"index":10343}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350210,"byte_end":350220,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350466,"byte_end":350476,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":351395,"byte_end":351405,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":10344},{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10347}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352085,"byte_end":352095,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352235,"byte_end":352245,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2675}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352433,"byte_end":352443,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_concat.rs","byte_start":353441,"byte_end":353450,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_concat.rs","byte_start":353669,"byte_end":353678,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":354941,"byte_end":354948,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355307,"byte_end":355314,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355594,"byte_end":355601,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355855,"byte_end":355862,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359725,"byte_end":359734,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359996,"byte_end":360005,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":361751,"byte_end":361763,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362219,"byte_end":362231,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":10628},{"krate":0,"index":10629},{"krate":0,"index":10630},{"krate":0,"index":10631}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362571,"byte_end":362583,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":364082,"byte_end":364094,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":364461,"byte_end":364473,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":10632},{"krate":0,"index":10633},{"krate":0,"index":10634},{"krate":0,"index":10635}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":365322,"byte_end":365334,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":365786,"byte_end":365798,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2836},{"krate":0,"index":10701},{"krate":0,"index":10702},{"krate":0,"index":10703},{"krate":0,"index":10704}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366136,"byte_end":366148,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":367755,"byte_end":367767,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":368154,"byte_end":368166,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10707},{"krate":0,"index":10708}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10526368,"byte_end":10526386,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10730},{"krate":0,"index":10812},{"krate":0,"index":10813},{"krate":0,"index":10814},{"krate":0,"index":10815}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10526725,"byte_end":10526743,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10733},{"krate":0,"index":10734}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10528020,"byte_end":10528038,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10739},{"krate":0,"index":10816},{"krate":0,"index":10817},{"krate":0,"index":10818},{"krate":0,"index":10819}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10528949,"byte_end":10528960,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":10762},{"krate":0,"index":10820},{"krate":0,"index":10821},{"krate":0,"index":10822},{"krate":0,"index":10823}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10529297,"byte_end":10529308,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10765},{"krate":0,"index":10766}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10530585,"byte_end":10530596,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10771},{"krate":0,"index":10824},{"krate":0,"index":10825},{"krate":0,"index":10826},{"krate":0,"index":10827}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10531466,"byte_end":10531486,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10793}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10531851,"byte_end":10531871,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10798}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10532110,"byte_end":10532130,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10803}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10532578,"byte_end":10532598,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10808},{"krate":0,"index":10809}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":368911,"byte_end":368924,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369140,"byte_end":369153,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369365,"byte_end":369378,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370999,"byte_end":371012,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":371619,"byte_end":371632,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302001,"byte_end":302002,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373668,"byte_end":373672,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374294,"byte_end":374298,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375489,"byte_end":375495,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375522,"byte_end":375528,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375836,"byte_end":375842,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376439,"byte_end":376449,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376493,"byte_end":376503,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376817,"byte_end":376827,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379347,"byte_end":379352,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379384,"byte_end":379389,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379474,"byte_end":379479,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379728,"byte_end":379733,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380672,"byte_end":380676,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380805,"byte_end":380809,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":381414,"byte_end":381418,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382077,"byte_end":382084,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382116,"byte_end":382123,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382208,"byte_end":382215,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382460,"byte_end":382467,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382854,"byte_end":382860,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382891,"byte_end":382897,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383662,"byte_end":383668,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385122,"byte_end":385128,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386551,"byte_end":386557,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386770,"byte_end":386776,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390120,"byte_end":390126,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390366,"byte_end":390372,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390652,"byte_end":390658,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535740,"byte_end":10535752,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11052}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535857,"byte_end":10535869,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535900,"byte_end":10535912,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11057}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536035,"byte_end":10536047,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11060}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536228,"byte_end":10536240,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11063},{"krate":0,"index":11064}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538822,"byte_end":10538836,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538862,"byte_end":10538876,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11076},{"krate":0,"index":11077},{"krate":0,"index":11078},{"krate":0,"index":11079}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540442,"byte_end":10540456,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":11082}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540549,"byte_end":10540563,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":11085},{"krate":0,"index":11086},{"krate":0,"index":11087}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10541725,"byte_end":10541739,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":11090}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10541905,"byte_end":10541919,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11093}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10542199,"byte_end":10542213,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":11098}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10542383,"byte_end":10542397,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":11101}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\abort.rs","byte_start":10569538,"byte_end":10569549,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11145}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570908,"byte_end":10570916,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":11156}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10571990,"byte_end":10571998,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572035,"byte_end":10572045,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11162},{"krate":0,"index":11163},{"krate":0,"index":11164}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572897,"byte_end":10572907,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572955,"byte_end":10572962,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":11170},{"krate":0,"index":11171},{"krate":0,"index":11172}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10573225,"byte_end":10573232,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10573273,"byte_end":10573283,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11178},{"krate":0,"index":11179},{"krate":0,"index":11180}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574152,"byte_end":10574162,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574210,"byte_end":10574214,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11186},{"krate":0,"index":11187},{"krate":0,"index":11188}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574473,"byte_end":10574477,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574646,"byte_end":10574656,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574701,"byte_end":10574711,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574757,"byte_end":10574767,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574812,"byte_end":10574822,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574876,"byte_end":10574884,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574933,"byte_end":10574941,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576426,"byte_end":10576430,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576465,"byte_end":10576469,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576501,"byte_end":10576505,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11241}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10577582,"byte_end":10577586,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11244},{"krate":0,"index":11245}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10578586,"byte_end":10578590,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":11248}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":10580040,"byte_end":10580055,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11280},{"krate":0,"index":11281},{"krate":0,"index":11282},{"krate":0,"index":11283}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":10582711,"byte_end":10582726,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11286}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544784,"byte_end":10544800,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544841,"byte_end":10544857,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544886,"byte_end":10544902,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544927,"byte_end":10544943,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":11302}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10545128,"byte_end":10545144,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11304}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10546851,"byte_end":10546867,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":11307}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10546941,"byte_end":10546957,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11310},{"krate":0,"index":11311},{"krate":0,"index":11312},{"krate":0,"index":11313},{"krate":0,"index":11314},{"krate":0,"index":11315},{"krate":0,"index":11316},{"krate":0,"index":11317},{"krate":0,"index":11318},{"krate":0,"index":11319},{"krate":0,"index":11320},{"krate":0,"index":11321},{"krate":0,"index":11322}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10558488,"byte_end":10558504,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11325},{"krate":0,"index":11326},{"krate":0,"index":11335}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10563688,"byte_end":10563692,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11334}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10565947,"byte_end":10565963,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11338}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566101,"byte_end":10566117,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":11341},{"krate":0,"index":11342}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566688,"byte_end":10566704,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11345}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10568354,"byte_end":10568370,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":11362}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10568840,"byte_end":10568856,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":11365}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10569132,"byte_end":10569148,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11370}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10569270,"byte_end":10569286,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":11373}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584321,"byte_end":10584330,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11398}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584475,"byte_end":10584484,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11401},{"krate":0,"index":11402},{"krate":0,"index":11403},{"krate":0,"index":11404},{"krate":0,"index":11405},{"krate":0,"index":11406},{"krate":0,"index":11407}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585957,"byte_end":10585966,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11410}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10586065,"byte_end":10586074,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":11413},{"krate":0,"index":11414}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10586858,"byte_end":10586867,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11417}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587885,"byte_end":10587894,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":11422}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588039,"byte_end":10588048,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":11426}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588231,"byte_end":10588240,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":11430},{"krate":0,"index":11431},{"krate":0,"index":11432}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589323,"byte_end":10589327,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11448},{"krate":0,"index":11449},{"krate":0,"index":11450}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589760,"byte_end":10589764,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589819,"byte_end":10589826,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11458}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590263,"byte_end":10590270,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590321,"byte_end":10590329,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11463},{"krate":0,"index":11464},{"krate":0,"index":11465}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590757,"byte_end":10590765,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403177,"byte_end":403182,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403376,"byte_end":403381,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403557,"byte_end":403562,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404552,"byte_end":404557,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404585,"byte_end":404590,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":405751,"byte_end":405757,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406725,"byte_end":406731,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406943,"byte_end":406949,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409028,"byte_end":409032,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409099,"byte_end":409103,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409467,"byte_end":409471,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410373,"byte_end":410378,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410729,"byte_end":410734,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410910,"byte_end":410915,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":411575,"byte_end":411586,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":11669},{"krate":0,"index":11670},{"krate":0,"index":11671},{"krate":0,"index":11672}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":411843,"byte_end":411854,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":11673},{"krate":0,"index":11674},{"krate":0,"index":11675},{"krate":0,"index":11676}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":412058,"byte_end":412069,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":11677},{"krate":0,"index":11678}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":412231,"byte_end":412242,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":412851,"byte_end":412861,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":11732},{"krate":0,"index":11733},{"krate":0,"index":11734},{"krate":0,"index":11735},{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":413164,"byte_end":413174,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":414130,"byte_end":414140,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":11736},{"krate":0,"index":11737}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":414246,"byte_end":414256,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414807,"byte_end":414811,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414878,"byte_end":414882,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3462}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":415070,"byte_end":415074,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416280,"byte_end":416287,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416726,"byte_end":416733,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416845,"byte_end":416852,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3505},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":417628,"byte_end":417635,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419934,"byte_end":419940,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":421857,"byte_end":421861,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422124,"byte_end":422128,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422465,"byte_end":422469,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422840,"byte_end":422844,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":11883},{"krate":0,"index":11884}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":423028,"byte_end":423032,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11885},{"krate":0,"index":11886},{"krate":0,"index":11887},{"krate":0,"index":11888},{"krate":0,"index":3595}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":423707,"byte_end":423711,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":425430,"byte_end":425441,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":425814,"byte_end":425825,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":11970},{"krate":0,"index":11971},{"krate":0,"index":11972},{"krate":0,"index":11973},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427112,"byte_end":427123,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":11974},{"krate":0,"index":11975}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427346,"byte_end":427357,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427606,"byte_end":427617,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":429161,"byte_end":429167,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":12029},{"krate":0,"index":12030},{"krate":0,"index":12031},{"krate":0,"index":12032},{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":429895,"byte_end":429901,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":430231,"byte_end":430237,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":430411,"byte_end":430417,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392722,"byte_end":392723,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433188,"byte_end":433190,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433245,"byte_end":433247,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467695,"byte_end":467705,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468143,"byte_end":468153,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468664,"byte_end":468674,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":469219,"byte_end":469229,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":470021,"byte_end":470031,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":470756,"byte_end":470766,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471397,"byte_end":471407,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3856}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471551,"byte_end":471561,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471823,"byte_end":471833,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3862},{"krate":0,"index":3863}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":472049,"byte_end":472059,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":473898,"byte_end":473907,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":12121},{"krate":0,"index":12122},{"krate":0,"index":12123},{"krate":0,"index":12124},{"krate":0,"index":3894},{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":475052,"byte_end":475061,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3898},{"krate":0,"index":3899}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":476673,"byte_end":476682,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477512,"byte_end":477521,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12125},{"krate":0,"index":12126},{"krate":0,"index":12127},{"krate":0,"index":12128}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477599,"byte_end":477608,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477924,"byte_end":477933,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":481901,"byte_end":481910,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":12170},{"krate":0,"index":12171},{"krate":0,"index":12172},{"krate":0,"index":12173},{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":483439,"byte_end":483448,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":484871,"byte_end":484880,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":12174},{"krate":0,"index":12175}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":484961,"byte_end":484970,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":12176},{"krate":0,"index":12177}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":485051,"byte_end":485060,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":485419,"byte_end":485428,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3955}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486365,"byte_end":486370,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487626,"byte_end":487631,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487961,"byte_end":487966,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":489319,"byte_end":489324,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490435,"byte_end":490440,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490493,"byte_end":490498,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490640,"byte_end":490645,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4010},{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":492415,"byte_end":492419,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4034},{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":494142,"byte_end":494149,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4057},{"krate":0,"index":4058}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495982,"byte_end":495988,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499188,"byte_end":499194,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499481,"byte_end":499487,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4089},{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":500119,"byte_end":500125,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4093},{"krate":0,"index":4094}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501329,"byte_end":501335,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12363},{"krate":0,"index":12364},{"krate":0,"index":12365},{"krate":0,"index":12366}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501410,"byte_end":501416,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12367},{"krate":0,"index":12368},{"krate":0,"index":12369},{"krate":0,"index":12370}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501494,"byte_end":501500,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12371},{"krate":0,"index":12372},{"krate":0,"index":12373},{"krate":0,"index":12374}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501573,"byte_end":501579,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":12375},{"krate":0,"index":12376},{"krate":0,"index":12377},{"krate":0,"index":12378}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502562,"byte_end":502567,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502915,"byte_end":502920,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4117},{"krate":0,"index":4118}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":503152,"byte_end":503157,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4120}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503655,"byte_end":503662,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503717,"byte_end":503724,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503855,"byte_end":503862,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4141},{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505432,"byte_end":505437,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505490,"byte_end":505495,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505608,"byte_end":505613,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\into_sink.rs","byte_start":506635,"byte_end":506643,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4176},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\into_sink.rs","byte_start":507576,"byte_end":507584,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\lines.rs","byte_start":509137,"byte_end":509142,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\lines.rs","byte_start":509305,"byte_end":509310,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4204},{"krate":0,"index":4205}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510305,"byte_end":510309,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510361,"byte_end":510365,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510530,"byte_end":510534,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4223},{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511222,"byte_end":511234,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511286,"byte_end":511298,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4241}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511477,"byte_end":511489,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4244},{"krate":0,"index":4245}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512184,"byte_end":512193,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512245,"byte_end":512254,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512419,"byte_end":512428,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4266}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513571,"byte_end":513579,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513634,"byte_end":513642,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":514611,"byte_end":514619,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515374,"byte_end":515383,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515435,"byte_end":515444,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515689,"byte_end":515694,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4315}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":517529,"byte_end":517538,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4320},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518411,"byte_end":518423,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518475,"byte_end":518487,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":519416,"byte_end":519428,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520248,"byte_end":520257,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520312,"byte_end":520321,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":521293,"byte_end":521302,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4371},{"krate":0,"index":4372}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522526,"byte_end":522532,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4389},{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":523312,"byte_end":523318,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4392}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523832,"byte_end":523836,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523888,"byte_end":523892,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4411}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":524049,"byte_end":524053,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4414},{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525182,"byte_end":525186,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4434},{"krate":0,"index":4435}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525904,"byte_end":525908,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4437}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526925,"byte_end":526933,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527433,"byte_end":527442,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527834,"byte_end":527842,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":528345,"byte_end":528354,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4483}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529369,"byte_end":529381,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529545,"byte_end":529557,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529791,"byte_end":529803,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530342,"byte_end":530346,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":12630},{"krate":0,"index":12631},{"krate":0,"index":12632},{"krate":0,"index":12633}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532263,"byte_end":532267,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532908,"byte_end":532912,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4525},{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534755,"byte_end":534761,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536831,"byte_end":536837,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536984,"byte_end":536990,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537511,"byte_end":537516,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537569,"byte_end":537574,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537736,"byte_end":537741,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4566},{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538425,"byte_end":538438,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538491,"byte_end":538504,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4584}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538677,"byte_end":538690,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539382,"byte_end":539390,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539443,"byte_end":539451,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539613,"byte_end":539621,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451560,"byte_end":451561,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458016,"byte_end":458017,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458904,"byte_end":458905,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466384,"byte_end":466385,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592265,"byte_end":10592270,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12697}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592603,"byte_end":10592608,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":12700}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592701,"byte_end":10592706,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12703}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592839,"byte_end":10592845,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":12711},{"krate":0,"index":12712}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593377,"byte_end":10593382,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":12717},{"krate":0,"index":12718}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593953,"byte_end":10593958,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":12721},{"krate":0,"index":12722},{"krate":0,"index":12723},{"krate":0,"index":12724},{"krate":0,"index":12725}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597073,"byte_end":10597088,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":12734}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597519,"byte_end":10597534,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":12737}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597651,"byte_end":10597666,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":12741},{"krate":0,"index":12742}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10598895,"byte_end":10598910,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":12745}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599512,"byte_end":10599522,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12753}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600534,"byte_end":10600544,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":12758}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600750,"byte_end":10600760,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12761}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600858,"byte_end":10600868,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12764},{"krate":0,"index":12765}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601009,"byte_end":10601019,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":12768}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601470,"byte_end":10601486,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":12780}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602616,"byte_end":10602632,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":12786}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602897,"byte_end":10602913,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":12790}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603025,"byte_end":10603041,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":12794},{"krate":0,"index":12795}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603184,"byte_end":10603200,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":12799}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603477,"byte_end":10603482,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603528,"byte_end":10603533,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603700,"byte_end":10603715,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603819,"byte_end":10603834,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604038,"byte_end":10604048,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604098,"byte_end":10604108,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604176,"byte_end":10604192,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604263,"byte_end":10604279,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606283,"byte_end":10606288,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606325,"byte_end":10606330,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606346,"byte_end":10606352,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12847},{"krate":0,"index":12848}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10611972,"byte_end":10611977,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":12851}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612099,"byte_end":10612104,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12854}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612432,"byte_end":10612444,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":12862}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612608,"byte_end":10612620,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":12865}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612841,"byte_end":10612853,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613235,"byte_end":10613246,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":12870},{"krate":0,"index":12871}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613409,"byte_end":10613420,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":12874}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613558,"byte_end":10613569,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":12877}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613921,"byte_end":10613932,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":12880}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615245,"byte_end":10615254,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":12919},{"krate":0,"index":12920}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617527,"byte_end":10617538,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":12922}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618321,"byte_end":10618328,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":12924}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618511,"byte_end":10618518,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618531,"byte_end":10618540,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":12928}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10619529,"byte_end":10619538,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":12933},{"krate":0,"index":12934}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10619777,"byte_end":10619786,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":12938},{"krate":0,"index":12939}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620045,"byte_end":10620056,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":12942}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541246,"byte_end":541247,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541482,"byte_end":541483,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541753,"byte_end":541754,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":542770,"byte_end":542774,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4708}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":542868,"byte_end":542872,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543131,"byte_end":543138,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":4719}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543361,"byte_end":543368,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543559,"byte_end":543566,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543871,"byte_end":543884,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4735},{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544301,"byte_end":544310,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4741},{"krate":0,"index":4742}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544594,"byte_end":544603,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544865,"byte_end":544874,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4752}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545196,"byte_end":545203,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4760}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545422,"byte_end":545429,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4766}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545607,"byte_end":545614,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4772}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545915,"byte_end":545923,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546146,"byte_end":546154,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4787}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546336,"byte_end":546344,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546654,"byte_end":546665,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546925,"byte_end":546936,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4809}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547173,"byte_end":547184,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547551,"byte_end":547563,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4823},{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547824,"byte_end":547836,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548074,"byte_end":548086,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4836}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548705,"byte_end":548719,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4849},{"krate":0,"index":4850}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548942,"byte_end":548956,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549157,"byte_end":549171,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549477,"byte_end":549483,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549576,"byte_end":549582,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4876},{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\unfold_state.rs","byte_start":550187,"byte_end":550198,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11238,"byte_end":11244,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":101}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11339,"byte_end":11345,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1154}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166632,"byte_end":166649,"line_start":101,"line_end":101,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":11104}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\mod.rs","byte_start":166798,"byte_end":166808,"line_start":107,"line_end":107,"column_start":13,"column_end":23},"ref_id":{"krate":0,"index":11376}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11513,"byte_end":11517,"line_start":311,"line_end":311,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3241}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11606,"byte_end":11610,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3743}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11621,"byte_end":11626,"line_start":318,"line_end":318,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3782}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":11824,"byte_end":11826,"line_start":327,"line_end":327,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3784}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lib.rs","byte_start":12065,"byte_end":12069,"line_start":337,"line_end":337,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4669}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\poll.rs","byte_start":14590,"byte_end":14598,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\async_await\\pending.rs","byte_start":15766,"byte_end":15777,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58672,"byte_end":58679,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":58809,"byte_end":58816,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4898},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":59041,"byte_end":59048,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4898},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":59822,"byte_end":59829,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4898},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":60054,"byte_end":60061,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4898},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\flatten.rs","byte_start":60914,"byte_end":60921,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4898},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63075,"byte_end":63079,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":63186,"byte_end":63190,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":64919,"byte_end":64923,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4946},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\fuse.rs","byte_start":65036,"byte_end":65040,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4946},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66018,"byte_end":66021,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66190,"byte_end":66193,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4981},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\map.rs","byte_start":66455,"byte_end":66458,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4981},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\catch_unwind.rs","byte_start":67664,"byte_end":67675,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\catch_unwind.rs","byte_start":67818,"byte_end":67829,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5542},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69056,"byte_end":69066,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69267,"byte_end":69273,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69316,"byte_end":69322,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69580,"byte_end":69585,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69739,"byte_end":69749,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":69981,"byte_end":69986,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70083,"byte_end":70088,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70332,"byte_end":70338,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":70762,"byte_end":70768,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":72834,"byte_end":72839,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":74535,"byte_end":74541,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":272},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":74693,"byte_end":74699,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":76288,"byte_end":76293,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78000,"byte_end":78006,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78165,"byte_end":78171,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78599,"byte_end":78607,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":280},"to":{"krate":16,"index":263}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\shared.rs","byte_start":78966,"byte_end":78976,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41823,"byte_end":41824,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":364},"to":{"krate":0,"index":365}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\future\\mod.rs","byte_start":41955,"byte_end":41961,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":9585},"to":{"krate":0,"index":365}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101402,"byte_end":101412,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101563,"byte_end":101573,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5578},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\into_future.rs","byte_start":101696,"byte_end":101706,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5578},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102415,"byte_end":102425,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102555,"byte_end":102565,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5613},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":102808,"byte_end":102818,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5613},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":103771,"byte_end":103781,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5613},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":104024,"byte_end":104034,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5613},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten.rs","byte_start":105071,"byte_end":105081,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5613},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107358,"byte_end":107371,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107501,"byte_end":107514,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5660},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\try_flatten_err.rs","byte_start":107757,"byte_end":107770,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":83948,"byte_end":83951,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":526}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_future\\mod.rs","byte_start":84034,"byte_end":84043,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":13,"index":32},"to":{"krate":0,"index":526}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109079,"byte_end":109083,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109679,"byte_end":109683,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6602},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\lazy.rs","byte_start":109827,"byte_end":109831,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6602},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":110434,"byte_end":110441,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6608},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111002,"byte_end":111009,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6608},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111154,"byte_end":111161,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6608},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\pending.rs","byte_start":111187,"byte_end":111194,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6608},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":111948,"byte_end":111957,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6614},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":112560,"byte_end":112569,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113667,"byte_end":113676,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6614},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\maybe_done.rs","byte_start":113877,"byte_end":113886,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6614},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115206,"byte_end":115218,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":115444,"byte_end":115456,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116569,"byte_end":116581,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6627},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_maybe_done.rs","byte_start":116785,"byte_end":116797,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6627},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118454,"byte_end":118466,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6645},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118780,"byte_end":118792,"line_start":45,"line_end":45,"column_start":38,"column_end":50},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6645},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\option.rs","byte_start":118979,"byte_end":118991,"line_start":54,"line_end":54,"column_start":29,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6645},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":119429,"byte_end":119435,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":120129,"byte_end":120135,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\poll_fn.rs","byte_start":120277,"byte_end":120283,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120786,"byte_end":120791,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":120970,"byte_end":120975,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6679},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121007,"byte_end":121012,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6679},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\ready.rs","byte_start":121109,"byte_end":121114,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6679},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":128728,"byte_end":128735,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":130526,"byte_end":130533,"line_start":87,"line_end":87,"column_start":20,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\join_all.rs","byte_start":131196,"byte_end":131203,"line_start":112,"line_end":112,"column_start":37,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":131699,"byte_end":131705,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7033},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":134141,"byte_end":134147,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7033},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select.rs","byte_start":134851,"byte_end":134857,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7033},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":135420,"byte_end":135429,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7041},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136436,"byte_end":136445,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":136628,"byte_end":136637,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7041},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_all.rs","byte_start":137307,"byte_end":137316,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7041},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":145924,"byte_end":145934,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":978},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":147764,"byte_end":147774,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":978},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_join_all.rs","byte_start":148922,"byte_end":148932,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":978},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":149414,"byte_end":149423,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7369},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\try_select.rs","byte_start":151262,"byte_end":151271,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7369},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":152633,"byte_end":152641,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7377},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":153719,"byte_end":153727,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7377},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\select_ok.rs","byte_start":155158,"byte_end":155166,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7377},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156145,"byte_end":156151,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156490,"byte_end":156496,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":156881,"byte_end":156887,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157268,"byte_end":157274,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157515,"byte_end":157521,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7383},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":157860,"byte_end":157866,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7383},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158142,"byte_end":158148,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7383},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158683,"byte_end":158689,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7383},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":158996,"byte_end":159002,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7383},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":160435,"byte_end":160441,"line_start":193,"line_end":193,"column_start":30,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7383},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":161496,"byte_end":161502,"line_start":229,"line_end":229,"column_start":31,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7383},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":162809,"byte_end":162815,"line_start":271,"line_end":271,"column_start":30,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7383},"to":{"krate":20,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\future\\either.rs","byte_start":163245,"byte_end":163251,"line_start":288,"line_end":288,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7383},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":218555,"byte_end":218560,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":218786,"byte_end":218791,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7422},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chain.rs","byte_start":219000,"byte_end":219005,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7422},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":220601,"byte_end":220608,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":220873,"byte_end":220880,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7471},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\collect.rs","byte_start":221058,"byte_end":221065,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7471},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222091,"byte_end":222096,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222490,"byte_end":222495,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7522},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\unzip.rs","byte_start":222745,"byte_end":222750,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7522},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":223875,"byte_end":223881,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":224101,"byte_end":224107,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7580},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\concat.rs","byte_start":224815,"byte_end":224821,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7580},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":225484,"byte_end":225489,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":225645,"byte_end":225650,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7620},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\cycle.rs","byte_start":226399,"byte_end":226404,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7620},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227152,"byte_end":227161,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227347,"byte_end":227356,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7660},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":227474,"byte_end":227483,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7660},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\enumerate.rs","byte_start":228136,"byte_end":228145,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7660},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":228924,"byte_end":228930,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7703},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":229403,"byte_end":229409,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":229732,"byte_end":229738,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":7703},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":230075,"byte_end":230081,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7703},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter.rs","byte_start":231460,"byte_end":231466,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7703},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232253,"byte_end":232262,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":7772},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232559,"byte_end":232568,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":7772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":232835,"byte_end":232844,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":7772},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":233111,"byte_end":233120,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7772},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\filter_map.rs","byte_start":234538,"byte_end":234547,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7772},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235222,"byte_end":235229,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235398,"byte_end":235405,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7844},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":235597,"byte_end":235604,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7844},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\flatten.rs","byte_start":236426,"byte_end":236433,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7844},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237118,"byte_end":237122,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7957},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237478,"byte_end":237482,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237743,"byte_end":237747,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7957},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fold.rs","byte_start":237982,"byte_end":237986,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7957},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":239657,"byte_end":239664,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":239864,"byte_end":239871,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8035},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\forward.rs","byte_start":240073,"byte_end":240080,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":241885,"byte_end":241892,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8149},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242185,"byte_end":242192,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242423,"byte_end":242430,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8149},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each.rs","byte_start":242669,"byte_end":242676,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8149},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":243777,"byte_end":243781,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244278,"byte_end":244282,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8211},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":244380,"byte_end":244384,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8211},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\fuse.rs","byte_start":245070,"byte_end":245074,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8211},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":245586,"byte_end":245598,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":248088,"byte_end":248100,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8254},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\into_future.rs","byte_start":248220,"byte_end":248232,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8254},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249117,"byte_end":249120,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8338},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249309,"byte_end":249312,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249481,"byte_end":249484,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8338},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":249652,"byte_end":249655,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8338},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\map.rs","byte_start":250197,"byte_end":250200,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8338},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250767,"byte_end":250771,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8484},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250822,"byte_end":250826,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":250977,"byte_end":250981,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8484},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\next.rs","byte_start":251120,"byte_end":251124,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8484},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251775,"byte_end":251789,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":251940,"byte_end":251954,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8492},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\select_next_some.rs","byte_start":252098,"byte_end":252112,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8492},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":253423,"byte_end":253431,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257397,"byte_end":257405,"line_start":141,"line_end":141,"column_start":34,"column_end":42},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8505},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":257547,"byte_end":257555,"line_start":147,"line_end":147,"column_start":28,"column_end":36},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8505},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258340,"byte_end":258348,"line_start":172,"line_end":172,"column_start":30,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8505},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258714,"byte_end":258718,"line_start":189,"line_end":189,"column_start":25,"column_end":29},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8548},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":258963,"byte_end":258967,"line_start":199,"line_end":199,"column_start":34,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8548},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":259078,"byte_end":259082,"line_start":205,"line_end":205,"column_start":25,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8548},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":259787,"byte_end":259793,"line_start":231,"line_end":231,"column_start":28,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8589},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":260145,"byte_end":260151,"line_start":242,"line_end":242,"column_start":29,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8589},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":260420,"byte_end":260426,"line_start":253,"line_end":253,"column_start":24,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8589},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":261687,"byte_end":261695,"line_start":291,"line_end":291,"column_start":28,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8638},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262015,"byte_end":262023,"line_start":304,"line_end":304,"column_start":29,"column_end":37},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8638},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262207,"byte_end":262215,"line_start":315,"line_end":315,"column_start":24,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8638},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\peek.rs","byte_start":262586,"byte_end":262596,"line_start":333,"line_end":333,"column_start":34,"column_end":44},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1795},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263261,"byte_end":263265,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263456,"byte_end":263460,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8692},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":263578,"byte_end":263582,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":8692},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip.rs","byte_start":264393,"byte_end":264397,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8692},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265179,"byte_end":265188,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8735},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265640,"byte_end":265649,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":8735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":265975,"byte_end":265984,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":8735},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":266232,"byte_end":266241,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":8735},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\skip_while.rs","byte_start":267855,"byte_end":267864,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8735},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":268541,"byte_end":268545,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":268718,"byte_end":268722,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8813},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":269694,"byte_end":269698,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8813},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take.rs","byte_start":269946,"byte_end":269950,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8813},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":270721,"byte_end":270730,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":8856},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":271178,"byte_end":271187,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":8856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":271506,"byte_end":271515,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":8856},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":273034,"byte_end":273043,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":8856},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_while.rs","byte_start":273399,"byte_end":273408,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":8856},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":274427,"byte_end":274436,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":8929},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":274724,"byte_end":274733,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":8929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":276850,"byte_end":276859,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":8929},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":277891,"byte_end":277900,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":8929},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\take_until.rs","byte_start":278137,"byte_end":278146,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":8929},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":278842,"byte_end":278846,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":8990},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279097,"byte_end":279101,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":8990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279347,"byte_end":279351,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":8990},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":279577,"byte_end":279581,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":8990},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\then.rs","byte_start":280760,"byte_end":280764,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":8990},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":281463,"byte_end":281466,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":283052,"byte_end":283055,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9062},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\zip.rs","byte_start":283250,"byte_end":283253,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9062},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":285948,"byte_end":285954,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":286462,"byte_end":286468,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9117},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":288084,"byte_end":288090,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9117},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\chunks.rs","byte_start":288313,"byte_end":288319,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9117},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":289062,"byte_end":289073,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":289425,"byte_end":289436,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9169},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":291605,"byte_end":291616,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9169},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\ready_chunks.rs","byte_start":291839,"byte_end":291850,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9169},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":292614,"byte_end":292618,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9216},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293104,"byte_end":293108,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293272,"byte_end":293276,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":293638,"byte_end":293642,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9216},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":294869,"byte_end":294873,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9216},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\scan.rs","byte_start":295243,"byte_end":295247,"line_start":121,"line_end":121,"column_start":38,"column_end":42},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9216},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10511548,"byte_end":10511563,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":13577},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10511895,"byte_end":10511910,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":13577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10512297,"byte_end":10512312,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":13577},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10513766,"byte_end":10513781,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":13577},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffer_unordered.rs","byte_start":10514065,"byte_end":10514080,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":13577},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10514891,"byte_end":10514899,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":13536},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10515246,"byte_end":10515254,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":13536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10515534,"byte_end":10515542,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":13536},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\buffered.rs","byte_start":10517060,"byte_end":10517068,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":13536},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10517879,"byte_end":10517896,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":13475},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518242,"byte_end":10518259,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518692,"byte_end":10518709,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13475},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":10518939,"byte_end":10518956,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13475},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521180,"byte_end":10521191,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":9477},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521214,"byte_end":10521225,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10521658,"byte_end":10521669,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9477},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522247,"byte_end":10522256,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":9484},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522304,"byte_end":10522313,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10522777,"byte_end":10522786,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":9484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10523508,"byte_end":10523517,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":9484},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525124,"byte_end":10525136,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9440},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525312,"byte_end":10525324,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9440},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\split.rs","byte_start":10525573,"byte_end":10525585,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9440},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":295894,"byte_end":295905,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":296097,"byte_end":296108,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":9498},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\catch_unwind.rs","byte_start":296960,"byte_end":296971,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":9498},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173756,"byte_end":173757,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2215},"to":{"krate":0,"index":2216}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\stream\\mod.rs","byte_start":173900,"byte_end":173906,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":13,"index":68},"to":{"krate":0,"index":2216}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":333841,"byte_end":333848,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":9537},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":334141,"byte_end":334148,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":9537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":334429,"byte_end":334436,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":9537},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":335579,"byte_end":335586,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9537},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\and_then.rs","byte_start":335932,"byte_end":335939,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9537},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336504,"byte_end":336514,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336707,"byte_end":336717,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":9841},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":336838,"byte_end":336848,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":9841},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_stream.rs","byte_start":337272,"byte_end":337282,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":9841},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":337947,"byte_end":337953,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":10036},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":338245,"byte_end":338251,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":10036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":338529,"byte_end":338535,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":10036},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":339812,"byte_end":339818,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":10036},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\or_else.rs","byte_start":340161,"byte_end":340167,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":10036},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340722,"byte_end":340729,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":10101},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340783,"byte_end":340790,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":10101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":340953,"byte_end":340960,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":10101},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_next.rs","byte_start":341102,"byte_end":341109,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":10101},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":341885,"byte_end":341895,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":10109},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342191,"byte_end":342201,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":10109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each.rs","byte_start":342446,"byte_end":342456,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":10109},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":343855,"byte_end":343864,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":10166},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344260,"byte_end":344269,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":10166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344512,"byte_end":344521,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":10166},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":344778,"byte_end":344787,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":10166},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter.rs","byte_start":346176,"byte_end":346185,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":10166},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":346928,"byte_end":346940,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":10235},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347240,"byte_end":347252,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":10235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347449,"byte_end":347461,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":10235},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":347739,"byte_end":347751,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":10235},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":349251,"byte_end":349263,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":10235},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":349935,"byte_end":349945,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":10305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350210,"byte_end":350220,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":10305},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":350466,"byte_end":350476,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":10305},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_flatten.rs","byte_start":351395,"byte_end":351405,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10305},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352085,"byte_end":352095,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352235,"byte_end":352245,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10355},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_collect.rs","byte_start":352433,"byte_end":352443,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10355},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_concat.rs","byte_start":353441,"byte_end":353450,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_concat.rs","byte_start":353669,"byte_end":353678,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10402},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":354941,"byte_end":354948,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10437},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355307,"byte_end":355314,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355594,"byte_end":355601,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10437},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_fold.rs","byte_start":355855,"byte_end":355862,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10437},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359725,"byte_end":359734,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10506},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_unfold.rs","byte_start":359996,"byte_end":360005,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10506},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":361751,"byte_end":361763,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10563},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362219,"byte_end":362231,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":10563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":362571,"byte_end":362583,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":10563},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":364082,"byte_end":364094,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":10563},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":364461,"byte_end":364473,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":10563},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":365322,"byte_end":365334,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":10636},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":365786,"byte_end":365798,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":10636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":366136,"byte_end":366148,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":10636},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":367755,"byte_end":367767,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":10636},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_take_while.rs","byte_start":368154,"byte_end":368166,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":10636},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10526368,"byte_end":10526386,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":13436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10526725,"byte_end":10526743,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":13436},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":10528020,"byte_end":10528038,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":13436},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10528949,"byte_end":10528960,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":13392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10529297,"byte_end":10529308,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":13392},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_buffered.rs","byte_start":10530585,"byte_end":10530596,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":13392},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10531466,"byte_end":10531486,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":13326},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10531851,"byte_end":10531871,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":13326},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10532110,"byte_end":10532130,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":13326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":10532578,"byte_end":10532598,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":13326},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":368911,"byte_end":368924,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":10828},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369140,"byte_end":369153,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":10828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":369365,"byte_end":369378,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":10828},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":370999,"byte_end":371012,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":10828},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\into_async_read.rs","byte_start":371619,"byte_end":371632,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":10828},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302001,"byte_end":302002,"line_start":142,"line_end":142,"column_start":46,"column_end":47},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":2893}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\try_stream\\mod.rs","byte_start":302083,"byte_end":302092,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":13,"index":97},"to":{"krate":0,"index":2893}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":373668,"byte_end":373672,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":10847},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\iter.rs","byte_start":374294,"byte_end":374298,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":10847},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375489,"byte_end":375495,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":10856},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375522,"byte_end":375528,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":10856},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat.rs","byte_start":375836,"byte_end":375842,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":10856},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376439,"byte_end":376449,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":10865},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376493,"byte_end":376503,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":10865},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\repeat_with.rs","byte_start":376817,"byte_end":376827,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":10865},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379347,"byte_end":379352,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":10874},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379384,"byte_end":379389,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":10874},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379474,"byte_end":379479,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":10874},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\empty.rs","byte_start":379728,"byte_end":379733,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":10874},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380672,"byte_end":380676,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":10885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":380805,"byte_end":380809,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":10885},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\once.rs","byte_start":381414,"byte_end":381418,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":10885},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382077,"byte_end":382084,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":10916},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382116,"byte_end":382123,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":10916},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382208,"byte_end":382215,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":10916},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\pending.rs","byte_start":382460,"byte_end":382467,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":10916},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382854,"byte_end":382860,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3136},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":382891,"byte_end":382897,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3136},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\poll_fn.rs","byte_start":383662,"byte_end":383668,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3136},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":385122,"byte_end":385128,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":10929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386551,"byte_end":386557,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":10929},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select.rs","byte_start":386770,"byte_end":386776,"line_start":88,"line_end":88,"column_start":27,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":10929},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390120,"byte_end":390126,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":10975},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390366,"byte_end":390372,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":10975},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\unfold.rs","byte_start":390652,"byte_end":390658,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":10975},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535740,"byte_end":10535752,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":13291},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535857,"byte_end":10535869,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":13291},"to":{"krate":2,"index":1803}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10535900,"byte_end":10535912,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":13291},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536035,"byte_end":10536047,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":13291},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10536228,"byte_end":10536240,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":13291},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538822,"byte_end":10538836,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":11066},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10538862,"byte_end":10538876,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":11066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540442,"byte_end":10540456,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":11066},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10540549,"byte_end":10540563,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":11066},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10541725,"byte_end":10541739,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":11066},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10541905,"byte_end":10541919,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":11066},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10542199,"byte_end":10542213,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":11066},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_ordered.rs","byte_start":10542383,"byte_end":10542397,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":11066},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\abort.rs","byte_start":10569538,"byte_end":10569549,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":11142},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10570908,"byte_end":10570916,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10571990,"byte_end":10571998,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572035,"byte_end":10572045,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":11485},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572897,"byte_end":10572907,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":11485},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10572955,"byte_end":10572962,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":11495},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10573225,"byte_end":10573232,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":11495},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10573273,"byte_end":10573283,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":11504},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574152,"byte_end":10574162,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":11504},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574210,"byte_end":10574214,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":11515},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574473,"byte_end":10574477,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":11515},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574646,"byte_end":10574656,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":11504},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574701,"byte_end":10574711,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":11504},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574757,"byte_end":10574767,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":11485},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574812,"byte_end":10574822,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":11485},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574876,"byte_end":10574884,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\iter.rs","byte_start":10574933,"byte_end":10574941,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":11524},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576426,"byte_end":10576430,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":11226},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576465,"byte_end":10576469,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":11226},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10576501,"byte_end":10576505,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":11226},"to":{"krate":16,"index":263}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10577582,"byte_end":10577586,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":11226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\task.rs","byte_start":10578586,"byte_end":10578590,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":11226},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":10580040,"byte_end":10580055,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":11272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":10582711,"byte_end":10582726,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":11272},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544784,"byte_end":10544800,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544841,"byte_end":10544857,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544886,"byte_end":10544902,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10544927,"byte_end":10544943,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":11290},"to":{"krate":16,"index":10}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10545128,"byte_end":10545144,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":11290},"to":{"krate":16,"index":13}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10546851,"byte_end":10546867,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10546941,"byte_end":10546957,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":11290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10558488,"byte_end":10558504,"line_start":382,"line_end":382,"column_start":30,"column_end":46},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":11290},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10563688,"byte_end":10563692,"line_start":493,"line_end":493,"column_start":32,"column_end":36},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":11327},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10565947,"byte_end":10565963,"line_start":550,"line_end":550,"column_start":21,"column_end":37},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566101,"byte_end":10566117,"line_start":556,"line_end":556,"column_start":11,"column_end":27},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":11290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10566688,"byte_end":10566704,"line_start":576,"line_end":576,"column_start":20,"column_end":36},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10568354,"byte_end":10568370,"line_start":617,"line_end":617,"column_start":35,"column_end":51},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10568840,"byte_end":10568856,"line_start":631,"line_end":631,"column_start":33,"column_end":49},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10569132,"byte_end":10569148,"line_start":644,"line_end":644,"column_start":35,"column_end":51},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":11290},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\futures_unordered\\mod.rs","byte_start":10569270,"byte_end":10569286,"line_start":650,"line_end":650,"column_start":27,"column_end":43},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":11290},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584321,"byte_end":10584330,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10584475,"byte_end":10584484,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":13253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10585957,"byte_end":10585966,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10586065,"byte_end":10586074,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":13253},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10586858,"byte_end":10586867,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":13253},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10587885,"byte_end":10587894,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588039,"byte_end":10588048,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10588231,"byte_end":10588240,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":13253},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589323,"byte_end":10589327,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":13244},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589760,"byte_end":10589764,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":13244},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10589819,"byte_end":10589826,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":13235},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590263,"byte_end":10590270,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":13235},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590321,"byte_end":10590329,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":13228},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\stream\\select_all.rs","byte_start":10590757,"byte_end":10590765,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":13228},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403177,"byte_end":403182,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":11531},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403376,"byte_end":403381,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":11531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\close.rs","byte_start":403557,"byte_end":403562,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":11531},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404552,"byte_end":404557,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":11542},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\drain.rs","byte_start":404585,"byte_end":404590,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":11542},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":405751,"byte_end":405757,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":11548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406725,"byte_end":406731,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":11548},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\fanout.rs","byte_start":406943,"byte_end":406949,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":11548},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409028,"byte_end":409032,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":11593},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409099,"byte_end":409103,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":11593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\feed.rs","byte_start":409467,"byte_end":409471,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":11593},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410373,"byte_end":410378,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":11604},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410729,"byte_end":410734,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":11604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\flush.rs","byte_start":410910,"byte_end":410915,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":11604},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":411575,"byte_end":411586,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":11624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":411843,"byte_end":411854,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":11624},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":412058,"byte_end":412069,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":11624},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\err_into.rs","byte_start":412231,"byte_end":412242,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":11624},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":412851,"byte_end":412861,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":11686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":413164,"byte_end":413174,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":11686},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":414130,"byte_end":414140,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":11686},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\map_err.rs","byte_start":414246,"byte_end":414256,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":11686},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414807,"byte_end":414811,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":11738},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":414878,"byte_end":414882,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":11738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send.rs","byte_start":415070,"byte_end":415074,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":11738},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416280,"byte_end":416287,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3485},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416726,"byte_end":416733,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3485},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":416845,"byte_end":416852,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\send_all.rs","byte_start":417628,"byte_end":417635,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3485},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\unfold.rs","byte_start":419934,"byte_end":419940,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":11757},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":421857,"byte_end":421861,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":11806},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422124,"byte_end":422128,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":11806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422465,"byte_end":422469,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":11806},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":422840,"byte_end":422844,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":11806},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":423028,"byte_end":423032,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":11806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with.rs","byte_start":423707,"byte_end":423711,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":11806},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":425430,"byte_end":425441,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":11889},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":425814,"byte_end":425825,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":11889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427112,"byte_end":427123,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":11889},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427346,"byte_end":427357,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":11889},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\with_flat_map.rs","byte_start":427606,"byte_end":427617,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":11889},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":429161,"byte_end":429167,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":11983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":429895,"byte_end":429901,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":11983},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":430231,"byte_end":430237,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":11983},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\buffer.rs","byte_start":430411,"byte_end":430417,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":11983},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392722,"byte_end":392723,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":3702}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\sink\\mod.rs","byte_start":392872,"byte_end":392876,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":17,"index":9},"to":{"krate":0,"index":3702}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433188,"byte_end":433190,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3770},"to":{"krate":0,"index":3773}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433245,"byte_end":433247,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3772},"to":{"krate":0,"index":3776}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":433326,"byte_end":433331,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":16,"index":10},"to":{"krate":0,"index":3773}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\task\\spawn.rs","byte_start":436095,"byte_end":436105,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":13},"to":{"krate":0,"index":3776}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":467695,"byte_end":467705,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":12039},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468143,"byte_end":468153,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":12039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":468664,"byte_end":468674,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":12039},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":469219,"byte_end":469229,"line_start":84,"line_end":84,"column_start":24,"column_end":34},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":12039},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":470021,"byte_end":470031,"line_start":114,"line_end":114,"column_start":22,"column_end":32},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":12039},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":470756,"byte_end":470766,"line_start":139,"line_end":139,"column_start":23,"column_end":33},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":12039},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471397,"byte_end":471407,"line_start":165,"line_end":165,"column_start":22,"column_end":32},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":12039},"to":{"krate":1,"index":3269}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471551,"byte_end":471561,"line_start":174,"line_end":174,"column_start":23,"column_end":33},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":12039},"to":{"krate":20,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":471823,"byte_end":471833,"line_start":187,"line_end":187,"column_start":25,"column_end":35},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":12039},"to":{"krate":1,"index":3275}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\allow_std.rs","byte_start":472049,"byte_end":472059,"line_start":199,"line_end":199,"column_start":26,"column_end":36},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":12039},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":473898,"byte_end":473907,"line_start":41,"line_end":41,"column_start":20,"column_end":29},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":12076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":475052,"byte_end":475061,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":12076},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":476673,"byte_end":476682,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":12076},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477512,"byte_end":477521,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":12076},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477599,"byte_end":477608,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":12076},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_reader.rs","byte_start":477924,"byte_end":477933,"line_start":154,"line_end":154,"column_start":46,"column_end":55},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":12076},"to":{"krate":20,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":481901,"byte_end":481910,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":12129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":483439,"byte_end":483448,"line_start":88,"line_end":88,"column_start":36,"column_end":45},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":12129},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":484871,"byte_end":484880,"line_start":131,"line_end":131,"column_start":34,"column_end":43},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":12129},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":484961,"byte_end":484970,"line_start":135,"line_end":135,"column_start":40,"column_end":49},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":12129},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":485051,"byte_end":485060,"line_start":139,"line_end":139,"column_start":36,"column_end":45},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":12129},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\buf_writer.rs","byte_start":485419,"byte_end":485428,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":12129},"to":{"krate":20,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":486365,"byte_end":486370,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":12178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487626,"byte_end":487631,"line_start":62,"line_end":62,"column_start":27,"column_end":32},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":12178},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":487961,"byte_end":487966,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":12178},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\chain.rs","byte_start":489319,"byte_end":489324,"line_start":126,"line_end":126,"column_start":29,"column_end":34},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":12178},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490435,"byte_end":490440,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":12227},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490493,"byte_end":490498,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":12227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\close.rs","byte_start":490640,"byte_end":490645,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":12227},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy.rs","byte_start":492415,"byte_end":492419,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":12244},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\copy_buf.rs","byte_start":494142,"byte_end":494149,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":12298},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":495982,"byte_end":495988,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":12351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499188,"byte_end":499194,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":25}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":499481,"byte_end":499487,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":500119,"byte_end":500125,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501329,"byte_end":501335,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501410,"byte_end":501416,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501494,"byte_end":501500,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\cursor.rs","byte_start":501573,"byte_end":501579,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":12351},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502562,"byte_end":502567,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":4111},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":502915,"byte_end":502920,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":4111},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\empty.rs","byte_start":503152,"byte_end":503157,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":4111},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503655,"byte_end":503662,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":12379},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503717,"byte_end":503724,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":12379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\fill_buf.rs","byte_start":503855,"byte_end":503862,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":12379},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505432,"byte_end":505437,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":12387},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505490,"byte_end":505495,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":12387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\flush.rs","byte_start":505608,"byte_end":505613,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":12387},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\into_sink.rs","byte_start":506635,"byte_end":506643,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":12409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\into_sink.rs","byte_start":507576,"byte_end":507584,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":12409},"to":{"krate":17,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\lines.rs","byte_start":509137,"byte_end":509142,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":12456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\lines.rs","byte_start":509305,"byte_end":509310,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":12456},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510305,"byte_end":510309,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":12499},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510361,"byte_end":510365,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":12499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read.rs","byte_start":510530,"byte_end":510534,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":12499},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511222,"byte_end":511234,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":12508},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511286,"byte_end":511298,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":12508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_vectored.rs","byte_start":511477,"byte_end":511489,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":12508},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512184,"byte_end":512193,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":12517},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512245,"byte_end":512254,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":12517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_exact.rs","byte_start":512419,"byte_end":512428,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":12517},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513571,"byte_end":513579,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":12526},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":513634,"byte_end":513642,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":12526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_line.rs","byte_start":514611,"byte_end":514619,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":12526},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515374,"byte_end":515383,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":12537},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515435,"byte_end":515444,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":12537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":515689,"byte_end":515694,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":4310},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_end.rs","byte_start":517529,"byte_end":517538,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":12537},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518411,"byte_end":518423,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":12547},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":518475,"byte_end":518487,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":12547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_to_string.rs","byte_start":519416,"byte_end":519428,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":12547},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520248,"byte_end":520257,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":12558},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":520312,"byte_end":520321,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":12558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\read_until.rs","byte_start":521293,"byte_end":521302,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":12558},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":522526,"byte_end":522532,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":4385},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\repeat.rs","byte_start":523312,"byte_end":523318,"line_start":70,"line_end":70,"column_start":21,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523832,"byte_end":523836,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":12569},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":523888,"byte_end":523892,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":12569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\seek.rs","byte_start":524049,"byte_end":524053,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":12569},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525182,"byte_end":525186,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":4427},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\sink.rs","byte_start":525904,"byte_end":525908,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":4427},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":526925,"byte_end":526933,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":12578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527433,"byte_end":527442,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":12584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":527834,"byte_end":527842,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":12578},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":528345,"byte_end":528354,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":12584},"to":{"krate":20,"index":20}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529369,"byte_end":529381,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":4485},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529545,"byte_end":529557,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":4485},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\split.rs","byte_start":529791,"byte_end":529803,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":4485},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":530342,"byte_end":530346,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":12595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532263,"byte_end":532267,"line_start":86,"line_end":86,"column_start":34,"column_end":38},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":12595},"to":{"krate":20,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\take.rs","byte_start":532908,"byte_end":532912,"line_start":110,"line_end":110,"column_start":40,"column_end":44},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":12595},"to":{"krate":20,"index":27}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":534755,"byte_end":534761,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":12634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536831,"byte_end":536837,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":12634},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\window.rs","byte_start":536984,"byte_end":536990,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":12634},"to":{"krate":2,"index":1991}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537511,"byte_end":537516,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":12641},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537569,"byte_end":537574,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":12641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write.rs","byte_start":537736,"byte_end":537741,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":12641},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538425,"byte_end":538438,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":12650},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538491,"byte_end":538504,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":12650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_vectored.rs","byte_start":538677,"byte_end":538690,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":12650},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539382,"byte_end":539390,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":12659},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539443,"byte_end":539451,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":12659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\write_all.rs","byte_start":539613,"byte_end":539621,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":12659},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":443303,"byte_end":443312,"line_start":152,"line_end":152,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":17},"to":{"krate":0,"index":4611}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451560,"byte_end":451561,"line_start":402,"line_end":402,"column_start":46,"column_end":47},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":4627},"to":{"krate":0,"index":4611}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":451664,"byte_end":451674,"line_start":405,"line_end":405,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":20},"to":{"krate":0,"index":4628}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458016,"byte_end":458017,"line_start":596,"line_end":596,"column_start":48,"column_end":49},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":4640},"to":{"krate":0,"index":4628}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458118,"byte_end":458127,"line_start":599,"line_end":599,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":25},"to":{"krate":0,"index":4641}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":458904,"byte_end":458905,"line_start":624,"line_end":624,"column_start":46,"column_end":47},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":4645},"to":{"krate":0,"index":4641}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":459012,"byte_end":459024,"line_start":627,"line_end":627,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":20,"index":27},"to":{"krate":0,"index":4646}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\io\\mod.rs","byte_start":466384,"byte_end":466385,"line_start":828,"line_end":828,"column_start":52,"column_end":53},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":4655},"to":{"krate":0,"index":4646}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592265,"byte_end":10592270,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":12690},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592603,"byte_end":10592608,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":12690},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592701,"byte_end":10592706,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":12690},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10592839,"byte_end":10592845,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":12704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593377,"byte_end":10593382,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":12690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10593953,"byte_end":10593958,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":12690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597073,"byte_end":10597088,"line_start":186,"line_end":186,"column_start":32,"column_end":47},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597519,"byte_end":10597534,"line_start":199,"line_end":199,"column_start":33,"column_end":48},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":12727},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10597651,"byte_end":10597666,"line_start":205,"line_end":205,"column_start":32,"column_end":47},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10598895,"byte_end":10598910,"line_start":241,"line_end":241,"column_start":26,"column_end":41},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10599512,"byte_end":10599522,"line_start":260,"line_end":260,"column_start":21,"column_end":31},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":12746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600534,"byte_end":10600544,"line_start":290,"line_end":290,"column_start":45,"column_end":55},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600750,"byte_end":10600760,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10600858,"byte_end":10600868,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601009,"byte_end":10601019,"line_start":309,"line_end":309,"column_start":30,"column_end":40},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10601470,"byte_end":10601486,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":12769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602616,"byte_end":10602632,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10602897,"byte_end":10602913,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603025,"byte_end":10603041,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603184,"byte_end":10603200,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603477,"byte_end":10603482,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":12690},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603528,"byte_end":10603533,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":12690},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603700,"byte_end":10603715,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10603819,"byte_end":10603834,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604038,"byte_end":10604048,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604098,"byte_end":10604108,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":12746},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604176,"byte_end":10604192,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\mutex.rs","byte_start":10604263,"byte_end":10604279,"line_start":398,"line_end":398,"column_start":58,"column_end":74},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":12769},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606283,"byte_end":10606288,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":12888},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606325,"byte_end":10606330,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":12888},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10606346,"byte_end":10606352,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":12882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10611972,"byte_end":10611977,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":12888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612099,"byte_end":10612104,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":12888},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612432,"byte_end":10612444,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":12855},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612608,"byte_end":10612620,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":12855},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10612841,"byte_end":10612853,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":12855},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613235,"byte_end":10613246,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":12895},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613409,"byte_end":10613420,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":12895},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613558,"byte_end":10613569,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":12895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\lock\\bilock.rs","byte_start":10613921,"byte_end":10613932,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":12895},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10615245,"byte_end":10615254,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":13190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10617527,"byte_end":10617538,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":12947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618321,"byte_end":10618328,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":12958},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618511,"byte_end":10618518,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":12958},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10618531,"byte_end":10618540,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":13190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10619529,"byte_end":10619538,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":13190},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10619777,"byte_end":10619786,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":13190},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\abortable.rs","byte_start":10620045,"byte_end":10620056,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":12947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541246,"byte_end":541247,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":4680},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541386,"byte_end":541393,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4675},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541482,"byte_end":541483,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":4689},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541669,"byte_end":541675,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4685},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":541753,"byte_end":541754,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":4697},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":542770,"byte_end":542774,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":4702},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":542868,"byte_end":542872,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":4702},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543131,"byte_end":543138,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":12989},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543361,"byte_end":543368,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":12989},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543559,"byte_end":543566,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":12989},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":543871,"byte_end":543884,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":13010},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544301,"byte_end":544310,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":13026},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544594,"byte_end":544603,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":13026},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":544865,"byte_end":544874,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":13026},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545196,"byte_end":545203,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":13041},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545422,"byte_end":545429,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":13041},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545607,"byte_end":545614,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":13041},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":545915,"byte_end":545923,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":13056},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546146,"byte_end":546154,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":13056},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546336,"byte_end":546344,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":13056},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546654,"byte_end":546665,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":13071},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":546925,"byte_end":546936,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":13071},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547173,"byte_end":547184,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":13071},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547551,"byte_end":547563,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":13083},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":547824,"byte_end":547836,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":13083},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548074,"byte_end":548086,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":13083},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548705,"byte_end":548719,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":13095},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":548942,"byte_end":548956,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":13095},"to":{"krate":0,"index":4685}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549157,"byte_end":549171,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":13095},"to":{"krate":0,"index":4693}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549477,"byte_end":549483,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":4866},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\fns.rs","byte_start":549576,"byte_end":549582,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":4866},"to":{"krate":0,"index":4675}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.15\\src\\unfold_state.rs","byte_start":550187,"byte_end":550198,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":13132},"to":{"krate":4294967295,"index":4294967295}}]}