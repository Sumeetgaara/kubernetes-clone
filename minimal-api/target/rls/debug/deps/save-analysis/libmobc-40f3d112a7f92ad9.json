{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","mobc","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"tokio\"","--cfg","feature=\"unstable\"","-C","metadata=40f3d112a7f92ad9","-C","extra-filename=-40f3d112a7f92ad9","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","async_trait=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\async_trait-478ba8dcee91ea12.dll","--extern","futures_channel=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_channel-7f53fa371c8a9999.rmeta","--extern","futures_core=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_core-fea1f369c965b980.rmeta","--extern","futures_timer=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_timer-385fccad7c63125a.rmeta","--extern","futures_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_util-c80da42cdb000663.rmeta","--extern","log=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\liblog-ed5c7f46bce7543e.rmeta","--extern","tokio=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio-6c62e3f9383d26d1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libmobc-40f3d112a7f92ad9.rmeta"},"prelude":{"crate_id":{"name":"mobc","disambiguator":[9585111890654920345,10574928040881057924]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":13,"id":{"name":"tokio","disambiguator":[15777653144183176769,4693441693860258843]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":14,"id":{"name":"parking_lot","disambiguator":[1224731206818607947,8274570389156333617]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":15,"id":{"name":"instant","disambiguator":[10972160104268623451,38161244861932589]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":16,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":17,"id":{"name":"lock_api","disambiguator":[15484776610555560225,15771875980741458219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":18,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":19,"id":{"name":"parking_lot_core","disambiguator":[12147149162451523530,17445122813354820842]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":20,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":21,"id":{"name":"winapi","disambiguator":[17139452019433532343,10675329208674910202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":22,"id":{"name":"mio","disambiguator":[7585860473837607364,4113253111412003378]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":23,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":24,"id":{"name":"ntapi","disambiguator":[8332894067688972475,3623011014639684307]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":25,"id":{"name":"miow","disambiguator":[10688051237561102895,17093109702316105309]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":26,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":27,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":28,"id":{"name":"once_cell","disambiguator":[15770301717060747651,17430418598302640687]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":29,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","num":30,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":31,"id":{"name":"futures_util","disambiguator":[15412685905520555047,12957580911016733995]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":32,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":33,"id":{"name":"pin_utils","disambiguator":[16300649773639005160,2183150147065103287]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":34,"id":{"name":"futures_macro","disambiguator":[7720451070280873958,8835195757274450142]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":35,"id":{"name":"futures_task","disambiguator":[7711611736422884463,430324380527108256]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":36,"id":{"name":"futures_sink","disambiguator":[515912780452359249,12260783340991913177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":37,"id":{"name":"slab","disambiguator":[6325241530448311626,10372903147419273267]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":38,"id":{"name":"futures_io","disambiguator":[342809477498788530,10410540121957329431]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","num":39,"id":{"name":"futures_timer","disambiguator":[1386875187004862027,1632950995899253767]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":40,"id":{"name":"async_trait","disambiguator":[4490671840251934393,4339927374632084438]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","num":41,"id":{"name":"futures_channel","disambiguator":[14144339312188949107,7010994245933509502]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":24499,"line_start":1,"line_end":816,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32390,"byte_end":32405,"line_start":4,"line_end":4,"column_start":19,"column_end":34},"alias_span":null,"name":"DefaultExecutor","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32390,"byte_end":32405,"line_start":4,"line_end":4,"column_start":19,"column_end":34},"alias_span":null,"name":"DefaultExecutor","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32407,"byte_end":32414,"line_start":4,"line_end":4,"column_start":36,"column_end":43},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32416,"byte_end":32428,"line_start":4,"line_end":4,"column_start":45,"column_end":57},"alias_span":null,"name":"TaskExecutor","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32416,"byte_end":32428,"line_start":4,"line_end":4,"column_start":45,"column_end":57},"alias_span":null,"name":"TaskExecutor","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":40,"index":197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2132,"byte_end":2143,"line_start":81,"line_end":81,"column_start":22,"column_end":33},"alias_span":null,"name":"async_trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2161,"byte_end":2168,"line_start":82,"line_end":82,"column_start":17,"column_end":24},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2504,"byte_end":2509,"line_start":91,"line_end":91,"column_start":16,"column_end":21},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2725,"byte_end":2734,"line_start":100,"line_end":100,"column_start":16,"column_end":25},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2736,"byte_end":2744,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":24499,"line_start":1,"line_end":816,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":64},{"krate":0,"index":94},{"krate":0,"index":100},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":353},{"krate":0,"index":188},{"krate":0,"index":193},{"krate":0,"index":202},{"krate":0,"index":215},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":248},{"krate":0,"index":365},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":329}],"decl_id":null,"docs":" A generic connection pool with async/await support.","sig":null,"attributes":[{"value":"/ A generic connection pool with async/await support.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":56,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Opening a new database connection every time one is needed is both","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":60,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ inefficient and can lead to resource exhaustion under high traffic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":131,"byte_end":201,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ conditions. A connection pool maintains a set of open connections to a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":202,"byte_end":276,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ database, handing them out for repeated use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":277,"byte_end":325,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":326,"byte_end":329,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ mobc is agnostic to the connection type it is managing. Implementors of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":330,"byte_end":409,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ `Manager` trait provide the database-specific logic to create and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":410,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ check the health of connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":480,"byte_end":516,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":517,"byte_end":520,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":521,"byte_end":534,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":535,"byte_end":538,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Using an imaginary \"foodb\" database.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":539,"byte_end":579,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":580,"byte_end":583,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":584,"byte_end":595,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/use mobc::{Manager, Pool, async_trait};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":596,"byte_end":638,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":639,"byte_end":642,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/#[derive(Debug)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":643,"byte_end":662,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/struct FooError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":663,"byte_end":682,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":683,"byte_end":686,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/struct FooConnection;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":687,"byte_end":711,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":712,"byte_end":715,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/impl FooConnection {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":716,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/    async fn query(&self) -> String {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":740,"byte_end":780,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/        \"nori\".to_string()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":781,"byte_end":810,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":811,"byte_end":819,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":820,"byte_end":824,"line_start":28,"line_end":28,"column_start":1,"column_end":5}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":825,"byte_end":828,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/struct FooManager;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":829,"byte_end":850,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":851,"byte_end":854,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/#[async_trait]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":855,"byte_end":872,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/impl Manager for FooManager {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":873,"byte_end":905,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/    type Connection = FooConnection;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":906,"byte_end":945,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/    type Error = FooError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":946,"byte_end":975,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":976,"byte_end":979,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/    async fn connect(&self) -> Result<Self::Connection, Self::Error> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":980,"byte_end":1053,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/        Ok(FooConnection)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1054,"byte_end":1082,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1083,"byte_end":1091,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1092,"byte_end":1095,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/    async fn check(&self, conn: Self::Connection) -> Result<Self::Connection, Self::Error> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1096,"byte_end":1191,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/        Ok(conn)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1192,"byte_end":1211,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1212,"byte_end":1220,"line_start":43,"line_end":43,"column_start":1,"column_end":9}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1221,"byte_end":1225,"line_start":44,"line_end":44,"column_start":1,"column_end":5}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1226,"byte_end":1229,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/#[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1230,"byte_end":1247,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1248,"byte_end":1268,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/    let pool = Pool::builder().max_open(15).build(FooManager);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1269,"byte_end":1334,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/    let num: usize = 10000;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1335,"byte_end":1365,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/    let (tx, mut rx) = tokio::sync::mpsc::channel::<()>(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1366,"byte_end":1429,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1430,"byte_end":1433,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/    for _ in 0..num {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1434,"byte_end":1458,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"/        let pool = pool.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1459,"byte_end":1494,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/        let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1495,"byte_end":1530,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/        tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1531,"byte_end":1567,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/            let conn = pool.get().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1568,"byte_end":1620,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/            let name = conn.query().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1621,"byte_end":1666,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/            assert_eq!(name, \"nori\".to_string());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1667,"byte_end":1719,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/            tx.send(()).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1720,"byte_end":1762,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/        });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1763,"byte_end":1777,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1778,"byte_end":1786,"line_start":61,"line_end":61,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1787,"byte_end":1790,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/    for _ in 0..num {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1791,"byte_end":1815,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/        rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1816,"byte_end":1852,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1853,"byte_end":1861,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1862,"byte_end":1866,"line_start":66,"line_end":66,"column_start":1,"column_end":5}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1867,"byte_end":1870,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1871,"byte_end":1878,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1929,"byte_end":1951,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"256\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1952,"byte_end":1979,"line_start":72,"line_end":72,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26113,"byte_end":26120,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"Builder","qualname":"::config::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" A builder for a connection pool.\n","sig":null,"attributes":[{"value":"/ A builder for a connection pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26065,"byte_end":26101,"line_start":57,"line_end":57,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27093,"byte_end":27096,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<M>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Builder`.","sig":null,"attributes":[{"value":"/ Constructs a new `Builder`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26980,"byte_end":27011,"line_start":89,"line_end":89,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27016,"byte_end":27019,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Parameters are initialized with their default values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27024,"byte_end":27081,"line_start":91,"line_end":91,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27285,"byte_end":27293,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"max_open","qualname":"<Builder<M>>::max_open","value":"pub fn max_open(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of connections managed by the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum number of connections managed by the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27147,"byte_end":27210,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27215,"byte_end":27218,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ - 0 means unlimited.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27223,"byte_end":27247,"line_start":98,"line_end":98,"column_start":5,"column_end":29}},{"value":"/ - Defaults to 10.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27252,"byte_end":27273,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27636,"byte_end":27644,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"max_idle","qualname":"<Builder<M>>::max_idle","value":"pub fn max_idle(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection count maintained by the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection count maintained by the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27387,"byte_end":27453,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27458,"byte_end":27461,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The pool will maintain at most this many idle connections","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27466,"byte_end":27527,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/ at all times, while respecting the value of `max_open`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27532,"byte_end":27591,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27596,"byte_end":27599,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ - Defaults to 2.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27604,"byte_end":27624,"line_start":110,"line_end":110,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27925,"byte_end":27942,"line_start":120,"line_end":120,"column_start":12,"column_end":29},"name":"test_on_check_out","qualname":"<Builder<M>>::test_on_check_out","value":"pub fn test_on_check_out(Self, bool) -> Builder<M>","parent":null,"children":[],"decl_id":null,"docs":" If true, the health of a connection will be verified via a call to\n `Manager::check` before it is checked out of the pool.","sig":null,"attributes":[{"value":"/ If true, the health of a connection will be verified via a call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27744,"byte_end":27814,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/ `Manager::check` before it is checked out of the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27819,"byte_end":27877,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27882,"byte_end":27885,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ - Defaults to true.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":27890,"byte_end":27913,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28361,"byte_end":28373,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"max_lifetime","qualname":"<Builder<M>>::max_lifetime","value":"pub fn max_lifetime(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum lifetime of connections in the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum lifetime of connections in the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28055,"byte_end":28112,"line_start":125,"line_end":125,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28117,"byte_end":28120,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Expired connections may be closed lazily before reuse.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28125,"byte_end":28183,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28188,"byte_end":28191,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ - `None` means reuse forever.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28196,"byte_end":28229,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ - Defaults to `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28234,"byte_end":28259,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28264,"byte_end":28267,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28272,"byte_end":28284,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28289,"byte_end":28292,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_lifetime` is the zero `Duration`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28297,"byte_end":28349,"line_start":134,"line_end":134,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29009,"byte_end":29026,"line_start":156,"line_end":156,"column_start":12,"column_end":29},"name":"max_idle_lifetime","qualname":"<Builder<M>>::max_idle_lifetime","value":"pub fn max_idle_lifetime(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum lifetime of connection to be idle in the pool,\n resetting the timer when connection is used.","sig":null,"attributes":[{"value":"/ Sets the maximum lifetime of connection to be idle in the pool,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28635,"byte_end":28702,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/ resetting the timer when connection is used.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28707,"byte_end":28755,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28760,"byte_end":28763,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Expired connections may be closed lazily before reuse.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28768,"byte_end":28826,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28831,"byte_end":28834,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ - `None` means reuse forever.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28839,"byte_end":28872,"line_start":150,"line_end":150,"column_start":5,"column_end":38}},{"value":"/ - Defaults to `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28877,"byte_end":28902,"line_start":151,"line_end":151,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28907,"byte_end":28910,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28915,"byte_end":28927,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28932,"byte_end":28935,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_idle_lifetime` is the zero `Duration`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":28940,"byte_end":28997,"line_start":155,"line_end":155,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29669,"byte_end":29680,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"get_timeout","qualname":"<Builder<M>>::get_timeout","value":"pub fn get_timeout(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the get timeout used by the pool.","sig":null,"attributes":[{"value":"/ Sets the get timeout used by the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29313,"byte_end":29355,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29360,"byte_end":29363,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Calls to `Pool::get` will wait this long for a connection to become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29368,"byte_end":29439,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ available before returning an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29444,"byte_end":29484,"line_start":169,"line_end":169,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29489,"byte_end":29492,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ - `None` means never timeout.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29497,"byte_end":29530,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ - Defaults to 30 seconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29535,"byte_end":29564,"line_start":172,"line_end":172,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29569,"byte_end":29572,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29577,"byte_end":29589,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29594,"byte_end":29597,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Panics if `connection_timeout` is the zero duration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29602,"byte_end":29657,"line_start":176,"line_end":176,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30552,"byte_end":30573,"line_start":202,"line_end":202,"column_start":12,"column_end":33},"name":"health_check_interval","qualname":"<Builder<M>>::health_check_interval","value":"pub fn health_check_interval(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the interval how often a connection will be checked when returning\n an existing connection from the pool. If set to `None`, a connection is\n checked every time when returning from the pool. Must be used together\n with [`test_on_check_out`] set to `true`, otherwise does nothing.","sig":null,"attributes":[{"value":"/ Sets the interval how often a connection will be checked when returning","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":29938,"byte_end":30013,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ an existing connection from the pool. If set to `None`, a connection is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30018,"byte_end":30093,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/ checked every time when returning from the pool. Must be used together","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30098,"byte_end":30172,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ with [`test_on_check_out`] set to `true`, otherwise does nothing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30177,"byte_end":30246,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30251,"byte_end":30254,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ - `None` means a connection is checked every time when returning from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30259,"byte_end":30336,"line_start":193,"line_end":193,"column_start":5,"column_end":82}},{"value":"/   pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30341,"byte_end":30352,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ - Defaults to `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30357,"byte_end":30382,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30387,"byte_end":30390,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30395,"byte_end":30407,"line_start":197,"line_end":197,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30412,"byte_end":30415,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Panics if `connection_timeout` is the zero duration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30420,"byte_end":30475,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30480,"byte_end":30483,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`test_on_check_out`]: #method.test_on_check_out","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30488,"byte_end":30540,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30952,"byte_end":30962,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"clean_rate","qualname":"<Builder<M>>::clean_rate","value":"pub fn clean_rate(Self, Duration) -> Builder<M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":30921,"byte_end":30940,"line_start":215,"line_end":215,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31427,"byte_end":31432,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder<M>>::build","value":"pub fn build(Self, M) -> Pool<M>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the builder, returning a new, initialized pool.","sig":null,"attributes":[{"value":"/ Consumes the builder, returning a new, initialized pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31265,"byte_end":31325,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31330,"byte_end":31333,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31338,"byte_end":31350,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31355,"byte_end":31358,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_idle` is greater than `max_size`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":31363,"byte_end":31415,"line_start":233,"line_end":233,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":396},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":400},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73}],"decl_id":null,"docs":" A batteries included runtime for applications using mobc.\n Mobc does not implement runtime, it simply exports runtime.\n","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":1993,"byte_end":2021,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ A batteries included runtime for applications using mobc.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32245,"byte_end":32306,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/ Mobc does not implement runtime, it simply exports runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32307,"byte_end":32370,"line_start":2,"line_end":2,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32722,"byte_end":32730,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Executor","qualname":"::runtime::Executor","value":"Executor: Send + Sync + 'static + Clone","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":" A value that executes futures.\n see [tokio::Executor](https://docs.rs/tokio/0.2.0-alpha.6/tokio/executor/trait.Executor.html)\n","sig":null,"attributes":[{"value":"/ A value that executes futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32579,"byte_end":32613,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ see [tokio::Executor](https://docs.rs/tokio/0.2.0-alpha.6/tokio/executor/trait.Executor.html)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32614,"byte_end":32711,"line_start":13,"line_end":13,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33035,"byte_end":33040,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"spawn","qualname":"::runtime::Executor::spawn","value":"pub fn spawn(&mut Self, Pin<Box<Future<Output = ()> + Send>>)","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" Spawns a future object to run on this executor.","sig":null,"attributes":[{"value":"/ Spawns a future object to run on this executor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32768,"byte_end":32819,"line_start":15,"line_end":15,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32824,"byte_end":32827,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ `future` is passed to the executor, which will begin running it. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32832,"byte_end":32904,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ future may run on the current thread or another thread at the discretion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32909,"byte_end":32985,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ of the `Executor` implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32990,"byte_end":33027,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33250,"byte_end":33257,"line_start":28,"line_end":28,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Wrapper of the Tokio Runtime\n","sig":null,"attributes":[{"value":"/ Wrapper of the Tokio Runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33202,"byte_end":33234,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33403,"byte_end":33406,"line_start":35,"line_end":35,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Runtime\n","sig":null,"attributes":[{"value":"/ Creates a new Runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33362,"byte_end":33387,"line_start":34,"line_end":34,"column_start":9,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33625,"byte_end":33631,"line_start":43,"line_end":43,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &TaskExecutor","parent":null,"children":[],"decl_id":null,"docs":" Returns a spawner\n","sig":null,"attributes":[{"value":"/ Returns a spawner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33588,"byte_end":33609,"line_start":42,"line_end":42,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33818,"byte_end":33826,"line_start":49,"line_end":49,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F, T>(&mut Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.\n","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33703,"byte_end":33767,"line_start":47,"line_end":47,"column_start":9,"column_end":73}},{"value":"/ runtime's entry point.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33776,"byte_end":33802,"line_start":48,"line_end":48,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34033,"byte_end":34038,"line_start":57,"line_end":57,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F, T>(&Self, F) where F: Future<Output = T> + Send + 'static,\nT: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.\n","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33975,"byte_end":34017,"line_start":56,"line_end":56,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34299,"byte_end":34311,"line_start":68,"line_end":68,"column_start":16,"column_end":28},"name":"TaskExecutor","qualname":"::runtime::runtime::TaskExecutor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple handler for spawning task\n","sig":null,"attributes":[{"value":"/ Simple handler for spawning task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34226,"byte_end":34262,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34404,"byte_end":34409,"line_start":72,"line_end":72,"column_start":16,"column_end":21},"name":"spawn","qualname":"<TaskExecutor>::spawn","value":"pub fn spawn<F>(&Self, F) where F: Future + Send + 'static, F::Output: Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.\n","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34346,"byte_end":34388,"line_start":71,"line_end":71,"column_start":9,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34660,"byte_end":34675,"line_start":83,"line_end":83,"column_start":16,"column_end":31},"name":"DefaultExecutor","qualname":"::runtime::runtime::DefaultExecutor","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default executor of tokio.\n","sig":null,"attributes":[{"value":"/ The default executor of tokio.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34610,"byte_end":34644,"line_start":82,"line_end":82,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34763,"byte_end":34770,"line_start":87,"line_end":87,"column_start":16,"column_end":23},"name":"current","qualname":"<DefaultExecutor>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The default executor of tokio.\n","sig":null,"attributes":[{"value":"/ The default executor of tokio.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34713,"byte_end":34747,"line_start":86,"line_end":86,"column_start":9,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","byte_start":36341,"byte_end":36346,"line_start":4,"line_end":4,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn::spawn","value":"pub fn spawn<T>(T) where T: Future + Send + 'static, T::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task.\n","sig":null,"attributes":[{"value":"/ Spawns a new asynchronous task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\spawn.rs","byte_start":36298,"byte_end":36333,"line_start":3,"line_end":3,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37377,"byte_end":37385,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Interval","qualname":"::time::time::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37494,"byte_end":37498,"line_start":28,"line_end":28,"column_start":22,"column_end":26},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37808,"byte_end":37816,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"interval","qualname":"::time::time::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new Interval that yields with interval of duration.\n","sig":null,"attributes":[{"value":"/ Creates new Interval that yields with interval of duration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37733,"byte_end":37796,"line_start":37,"line_end":37,"column_start":5,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":38032,"byte_end":38041,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"delay_for","qualname":"::time::time::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Wait until duration has elapsed.\n","sig":null,"attributes":[{"value":"/ Wait until duration has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37984,"byte_end":38020,"line_start":45,"line_end":45,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2902,"byte_end":2907,"line_start":107,"line_end":107,"column_start":5,"column_end":10},"name":"Inner","qualname":"::Error::Inner","value":"Error::Inner(E)","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Manager Errors\n","sig":null,"attributes":[{"value":"/ Manager Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2879,"byte_end":2897,"line_start":106,"line_end":106,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2932,"byte_end":2939,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::Error::Timeout","value":"Error::Timeout","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Timeout\n","sig":null,"attributes":[{"value":"/ Timeout","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2916,"byte_end":2927,"line_start":108,"line_end":108,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2961,"byte_end":2968,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"BadConn","qualname":"::Error::BadConn","value":"Error::BadConn","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" BadConn\n","sig":null,"attributes":[{"value":"/ BadConn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2945,"byte_end":2956,"line_start":110,"line_end":110,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2864,"byte_end":2869,"line_start":105,"line_end":105,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error<E> {\n\n    /// Manager Errors\n    Inner(E),\n\n    /// Timeout\n    Timeout,\n\n    /// BadConn\n    BadConn,\n}","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" The error type returned by methods in this crate.\n","sig":null,"attributes":[{"value":"/ The error type returned by methods in this crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2801,"byte_end":2854,"line_start":104,"line_end":104,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4174,"byte_end":4181,"line_start":161,"line_end":161,"column_start":11,"column_end":18},"name":"Manager","qualname":"::Manager","value":"Manager: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364}],"decl_id":null,"docs":" A trait which provides connection-specific functionality.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4269,"byte_end":4279,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"Connection","qualname":"::Manager::Connection","value":"type Connection: Send + 'static;","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" The connection type this manager deals with.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4356,"byte_end":4361,"line_start":165,"line_end":165,"column_start":10,"column_end":15},"name":"Error","qualname":"::Manager::Error","value":"type Error: Send + Sync + 'static;","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" The error type returned by `Connection`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4434,"byte_end":4444,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"spawn_task","qualname":"::Manager::spawn_task","value":"pub fn spawn_task<T>(&Self, T) where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4637,"byte_end":4644,"line_start":177,"line_end":177,"column_start":14,"column_end":21},"name":"connect","qualname":"::Manager::connect","value":"pub fn connect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Self::Connection, Self::Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Attempts to create a new connection.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4087,"byte_end":4101,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4087,"byte_end":4101,"line_start":159,"line_end":159,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4902,"byte_end":4907,"line_start":183,"line_end":183,"column_start":14,"column_end":19},"name":"check","qualname":"::Manager::check","value":"pub fn check<'life0, 'async_trait>(&'life0 Self, Self::Connection)\n->\n    ::core::pin::Pin<Box<::core::future::Future<Output =\n                         Result<Self::Connection, Self::Error>> +\n                         ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Determines if the connection is still connected to the database when check-out.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4087,"byte_end":4101,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4087,"byte_end":4101,"line_start":159,"line_end":159,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":5075,"byte_end":5083,"line_start":187,"line_end":187,"column_start":8,"column_end":16},"name":"validate","qualname":"::Manager::validate","value":"pub fn validate(&Self, &mut Self::Connection) -> bool","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" *Quickly* determines a connection is still valid when check-in.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":5058,"byte_end":5067,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7128,"byte_end":7132,"line_start":264,"line_end":264,"column_start":12,"column_end":16},"name":"Pool","qualname":"::Pool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generic connection pool.\n","sig":null,"attributes":[{"value":"/ A generic connection pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7086,"byte_end":7116,"line_start":263,"line_end":263,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7391,"byte_end":7396,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State { max_open, connections, in_use, idle, wait_count, wait_duration, max_idle_closed, max_lifetime_closed }","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Information about the state of a `Pool`.\n","sig":null,"attributes":[{"value":"/ Information about the state of a `Pool`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7335,"byte_end":7379,"line_start":273,"line_end":273,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7466,"byte_end":7474,"line_start":276,"line_end":276,"column_start":9,"column_end":17},"name":"max_open","qualname":"::State::max_open","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Maximum number of open connections to the database\n","sig":null,"attributes":[{"value":"/ Maximum number of open connections to the database","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7403,"byte_end":7457,"line_start":275,"line_end":275,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7577,"byte_end":7588,"line_start":280,"line_end":280,"column_start":9,"column_end":20},"name":"connections","qualname":"::State::connections","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The number of established connections both in use and idle.\n","sig":null,"attributes":[{"value":"/ The number of established connections both in use and idle.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7505,"byte_end":7568,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7655,"byte_end":7661,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"in_use","qualname":"::State::in_use","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The number of connections currently in use.\n","sig":null,"attributes":[{"value":"/ The number of connections currently in use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7599,"byte_end":7646,"line_start":281,"line_end":281,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7716,"byte_end":7720,"line_start":284,"line_end":284,"column_start":9,"column_end":13},"name":"idle","qualname":"::State::idle","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The number of idle connections.\n","sig":null,"attributes":[{"value":"/ The number of idle connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7672,"byte_end":7707,"line_start":283,"line_end":283,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7804,"byte_end":7814,"line_start":288,"line_end":288,"column_start":9,"column_end":19},"name":"wait_count","qualname":"::State::wait_count","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The total number of connections waited for.\n","sig":null,"attributes":[{"value":"/ The total number of connections waited for.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7748,"byte_end":7795,"line_start":287,"line_end":287,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7890,"byte_end":7903,"line_start":290,"line_end":290,"column_start":9,"column_end":22},"name":"wait_duration","qualname":"::State::wait_duration","value":"std::time::Duration","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The total time blocked waiting for a new connection.\n","sig":null,"attributes":[{"value":"/ The total time blocked waiting for a new connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7825,"byte_end":7881,"line_start":289,"line_end":289,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7989,"byte_end":8004,"line_start":292,"line_end":292,"column_start":9,"column_end":24},"name":"max_idle_closed","qualname":"::State::max_idle_closed","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The total number of connections closed due to `max_idle`.\n","sig":null,"attributes":[{"value":"/ The total number of connections closed due to `max_idle`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7919,"byte_end":7980,"line_start":291,"line_end":291,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8089,"byte_end":8108,"line_start":294,"line_end":294,"column_start":9,"column_end":28},"name":"max_lifetime_closed","qualname":"::State::max_lifetime_closed","value":"u64","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" The total number of connections closed due to `max_lifetime`.\n","sig":null,"attributes":[{"value":"/ The total number of connections closed due to `max_lifetime`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8015,"byte_end":8080,"line_start":293,"line_end":293,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8988,"byte_end":8991,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool<M>>::new","value":"pub fn new(M) -> Pool<M>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection pool with a default configuration.\n","sig":null,"attributes":[{"value":"/ Creates a new connection pool with a default configuration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8913,"byte_end":8976,"line_start":325,"line_end":325,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9130,"byte_end":9137,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"builder","qualname":"<Pool<M>>::builder","value":"pub fn builder() -> Builder<M>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder type to configure a new pool.\n","sig":null,"attributes":[{"value":"/ Returns a builder type to configure a new pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9067,"byte_end":9118,"line_start":330,"line_end":330,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9322,"byte_end":9340,"line_start":338,"line_end":338,"column_start":18,"column_end":36},"name":"set_max_open_conns","qualname":"<Pool<M>>::set_max_open_conns","value":"pub async fn set_max_open_conns<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of connections managed by the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum number of connections managed by the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9190,"byte_end":9253,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9258,"byte_end":9261,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ 0 means unlimited, defaults to 10.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9266,"byte_end":9304,"line_start":337,"line_end":337,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9857,"byte_end":9875,"line_start":353,"line_end":353,"column_start":18,"column_end":36},"name":"set_max_idle_conns","qualname":"<Pool<M>>::set_max_idle_conns","value":"pub async fn set_max_idle_conns<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection count maintained by the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection count maintained by the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9604,"byte_end":9670,"line_start":347,"line_end":347,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9675,"byte_end":9678,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The pool will maintain at most this many idle connections","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9683,"byte_end":9744,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ at all times, while respecting the value of `max_open`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9749,"byte_end":9808,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9813,"byte_end":9816,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Defaults to 2.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":9821,"byte_end":9839,"line_start":352,"line_end":352,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10822,"byte_end":10843,"line_start":382,"line_end":382,"column_start":18,"column_end":39},"name":"set_conn_max_lifetime","qualname":"<Pool<M>>::set_conn_max_lifetime","value":"pub async fn set_conn_max_lifetime<'_>(&'_ Self, Option<Duration>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum lifetime of connections in the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum lifetime of connections in the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10519,"byte_end":10576,"line_start":372,"line_end":372,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10581,"byte_end":10584,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Expired connections may be closed lazily before reuse.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10589,"byte_end":10647,"line_start":374,"line_end":374,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10652,"byte_end":10655,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ None meas reuse forever.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10660,"byte_end":10688,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/ Defaults to None.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10693,"byte_end":10714,"line_start":377,"line_end":377,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10719,"byte_end":10722,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10727,"byte_end":10739,"line_start":379,"line_end":379,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10744,"byte_end":10747,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_lifetime` is the zero `Duration`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":10752,"byte_end":10804,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13443,"byte_end":13446,"line_start":451,"line_end":451,"column_start":18,"column_end":21},"name":"get","qualname":"<Pool<M>>::get","value":"pub async fn get<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a single connection by either opening a new connection\n or returning an existing connection from the connection pool. Conn will\n block until either a connection is returned or timeout.\n","sig":null,"attributes":[{"value":"/ Returns a single connection by either opening a new connection","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13215,"byte_end":13281,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/ or returning an existing connection from the connection pool. Conn will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13286,"byte_end":13361,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ block until either a connection is returned or timeout.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13366,"byte_end":13425,"line_start":450,"line_end":450,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13872,"byte_end":13883,"line_start":462,"line_end":462,"column_start":18,"column_end":29},"name":"get_timeout","qualname":"<Pool<M>>::get_timeout","value":"pub async fn get_timeout<'_>(&'_ Self, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a connection from the pool, waiting for at most `timeout`","sig":null,"attributes":[{"value":"/ Retrieves a connection from the pool, waiting for at most `timeout`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13682,"byte_end":13753,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13758,"byte_end":13761,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ The given timeout will be used instead of the configured connection","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13766,"byte_end":13837,"line_start":460,"line_end":460,"column_start":5,"column_end":76}},{"value":"/ timeout.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":13842,"byte_end":13854,"line_start":461,"line_end":461,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":17954,"byte_end":17959,"line_start":580,"line_end":580,"column_start":18,"column_end":23},"name":"state","qualname":"<Pool<M>>::state","value":"pub async fn state<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns information about the current state of the pool.\n","sig":null,"attributes":[{"value":"/ Returns information about the current state of the pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":17876,"byte_end":17936,"line_start":579,"line_end":579,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23390,"byte_end":23400,"line_start":777,"line_end":777,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" A smart pointer wrapping a connection.\n","sig":null,"attributes":[{"value":"/ A smart pointer wrapping a connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23336,"byte_end":23378,"line_start":776,"line_end":776,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23599,"byte_end":23611,"line_start":784,"line_end":784,"column_start":12,"column_end":24},"name":"is_brand_new","qualname":"<Connection<M>>::is_brand_new","value":"pub fn is_brand_new(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is the connection is newly established.\n","sig":null,"attributes":[{"value":"/ Returns true is the connection is newly established.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23531,"byte_end":23587,"line_start":783,"line_end":783,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23738,"byte_end":23748,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Connection<M>>::into_inner","value":"pub fn into_inner(Self) -> M::Connection","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the raw database connection.\n","sig":null,"attributes":[{"value":"/ Unwraps the raw database connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23686,"byte_end":23726,"line_start":788,"line_end":788,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":25053,"byte_end":25059,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26460,"byte_end":26467,"line_start":71,"line_end":71,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26963,"byte_end":26970,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33344,"byte_end":33351,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34323,"byte_end":34335,"line_start":70,"line_end":70,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34687,"byte_end":34702,"line_start":85,"line_end":85,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34842,"byte_end":34857,"line_start":92,"line_end":92,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37462,"byte_end":37470,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2993,"byte_end":2998,"line_start":114,"line_end":114,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3094,"byte_end":3099,"line_start":120,"line_end":120,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3453,"byte_end":3458,"line_start":133,"line_end":133,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3814,"byte_end":3819,"line_start":146,"line_end":146,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":5504,"byte_end":5508,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":6987,"byte_end":7000,"line_start":257,"line_end":257,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7257,"byte_end":7261,"line_start":267,"line_end":267,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8138,"byte_end":8143,"line_start":297,"line_end":297,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8801,"byte_end":8805,"line_start":318,"line_end":318,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8899,"byte_end":8903,"line_start":324,"line_end":324,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23511,"byte_end":23521,"line_start":782,"line_end":782,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23869,"byte_end":23879,"line_start":794,"line_end":794,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":24180,"byte_end":24190,"line_start":805,"line_end":805,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":24366,"byte_end":24376,"line_start":812,"line_end":812,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2080,"byte_end":2087,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":64}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":25053,"byte_end":25059,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26460,"byte_end":26467,"line_start":71,"line_end":71,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\config.rs","byte_start":26963,"byte_end":26970,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32732,"byte_end":32736,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32739,"byte_end":32743,"line_start":14,"line_end":14,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":32756,"byte_end":32761,"line_start":14,"line_end":14,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":33344,"byte_end":33351,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34323,"byte_end":34335,"line_start":70,"line_end":70,"column_start":10,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34687,"byte_end":34702,"line_start":85,"line_end":85,"column_start":10,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\runtime.rs","byte_start":34842,"byte_end":34857,"line_start":92,"line_end":92,"column_start":23,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":336},"to":{"krate":0,"index":71}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\time.rs","byte_start":37462,"byte_end":37470,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":2993,"byte_end":2998,"line_start":114,"line_end":114,"column_start":21,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3094,"byte_end":3099,"line_start":120,"line_end":120,"column_start":26,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3453,"byte_end":3458,"line_start":133,"line_end":133,"column_start":24,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":3814,"byte_end":3819,"line_start":146,"line_end":146,"column_start":26,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":167},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4183,"byte_end":4187,"line_start":161,"line_end":161,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":353}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":4190,"byte_end":4194,"line_start":161,"line_end":161,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":353}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":5504,"byte_end":5508,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":6987,"byte_end":7000,"line_start":257,"line_end":257,"column_start":21,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":7257,"byte_end":7261,"line_start":267,"line_end":267,"column_start":28,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8138,"byte_end":8143,"line_start":297,"line_end":297,"column_start":21,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8801,"byte_end":8805,"line_start":318,"line_end":318,"column_start":27,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":8899,"byte_end":8903,"line_start":324,"line_end":324,"column_start":18,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23511,"byte_end":23521,"line_start":782,"line_end":782,"column_start":18,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":23869,"byte_end":23879,"line_start":794,"line_end":794,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":24180,"byte_end":24190,"line_start":805,"line_end":805,"column_start":28,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\mobc-0.7.2\\src\\lib.rs","byte_start":24366,"byte_end":24376,"line_start":812,"line_end":812,"column_start":31,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":2294}}]}