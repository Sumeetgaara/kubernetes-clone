{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"winapi\"","-C","metadata=6c62e3f9383d26d1","-C","extra-filename=-6c62e3f9383d26d1","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libbytes-73309e1d71596ccc.rmeta","--extern","memchr=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libmemchr-71668c703494fa8e.rmeta","--extern","mio=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libmio-da6aa54a7b4a1a2a.rmeta","--extern","num_cpus=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libnum_cpus-d7d3f591551266a8.rmeta","--extern","once_cell=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libonce_cell-9fd1be56278cc064.rmeta","--extern","parking_lot=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libparking_lot-4f9656384b59fba3.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","winapi=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libwinapi-cb001e6c283bc704.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio-6c62e3f9383d26d1.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[15777653144183176769,4693441693860258843]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":13,"id":{"name":"parking_lot","disambiguator":[1224731206818607947,8274570389156333617]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":14,"id":{"name":"instant","disambiguator":[10972160104268623451,38161244861932589]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":15,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":16,"id":{"name":"lock_api","disambiguator":[15484776610555560225,15771875980741458219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":17,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":18,"id":{"name":"parking_lot_core","disambiguator":[12147149162451523530,17445122813354820842]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","num":19,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","num":20,"id":{"name":"winapi","disambiguator":[17139452019433532343,10675329208674910202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","num":21,"id":{"name":"mio","disambiguator":[7585860473837607364,4113253111412003378]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","num":22,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","num":23,"id":{"name":"ntapi","disambiguator":[8332894067688972475,3623011014639684307]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","num":24,"id":{"name":"miow","disambiguator":[10688051237561102895,17093109702316105309]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\seek.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","num":26,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","num":27,"id":{"name":"once_cell","disambiguator":[15770301717060747651,17430418598302640687]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_until.rs","num":28,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\mod.rs","num":29,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\support.rs","byte_start":32039,"byte_end":32045,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":34793},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\support.rs","byte_start":32065,"byte_end":32068,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":37298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\support.rs","byte_start":32089,"byte_end":32093,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40948,"byte_end":40960,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41005,"byte_end":41014,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41059,"byte_end":41068,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41115,"byte_end":41125,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41166,"byte_end":41173,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41343,"byte_end":41348,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7139},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41350,"byte_end":41359,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41361,"byte_end":41367,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41369,"byte_end":41377,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41471,"byte_end":41479,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":41481,"byte_end":41486,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42080,"byte_end":42085,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42087,"byte_end":42095,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42097,"byte_end":42106,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42188,"byte_end":42192,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42194,"byte_end":42212,"line_start":249,"line_end":249,"column_start":15,"column_end":33},"alias_span":null,"name":"copy_bidirectional","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42214,"byte_end":42222,"line_start":249,"line_end":249,"column_start":35,"column_end":43},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42224,"byte_end":42230,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42232,"byte_end":42237,"line_start":249,"line_end":249,"column_start":53,"column_end":58},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42239,"byte_end":42245,"line_start":249,"line_end":249,"column_start":60,"column_end":66},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42247,"byte_end":42251,"line_start":249,"line_end":249,"column_start":68,"column_end":72},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42253,"byte_end":42268,"line_start":249,"line_end":249,"column_start":74,"column_end":89},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42270,"byte_end":42282,"line_start":249,"line_end":249,"column_start":91,"column_end":103},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42284,"byte_end":42296,"line_start":249,"line_end":249,"column_start":105,"column_end":117},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42298,"byte_end":42311,"line_start":249,"line_end":249,"column_start":119,"column_end":132},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11044},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42321,"byte_end":42330,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11013},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42332,"byte_end":42341,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10963},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42343,"byte_end":42352,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42354,"byte_end":42366,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42368,"byte_end":42373,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10822},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42375,"byte_end":42380,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42382,"byte_end":42388,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42390,"byte_end":42394,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":9459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42396,"byte_end":42401,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":9419},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":42403,"byte_end":42407,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80259,"byte_end":80272,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80332,"byte_end":80343,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348244,"byte_end":10348252,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2769}},{"kind":"Use","ref_id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348254,"byte_end":10348263,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2769}},{"kind":"Use","ref_id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348306,"byte_end":10348319,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2769}},{"kind":"Use","ref_id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348321,"byte_end":10348335,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2769}},{"kind":"Use","ref_id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348337,"byte_end":10348349,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2769}},{"kind":"Use","ref_id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348337,"byte_end":10348349,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2939}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80390,"byte_end":80401,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80428,"byte_end":80437,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80464,"byte_end":80473,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80506,"byte_end":80515,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493958,"byte_end":10493965,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3331}},{"kind":"Use","ref_id":{"krate":0,"index":4422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10494090,"byte_end":10494100,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":3331}},{"kind":"Use","ref_id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10494102,"byte_end":10494108,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":3331}},{"kind":"Use","ref_id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711353,"byte_end":10711359,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":4904}},{"kind":"Use","ref_id":{"krate":0,"index":6717},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770155,"byte_end":10770162,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770164,"byte_end":10770181,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":5393},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814470,"byte_end":10814477,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814479,"byte_end":10814490,"line_start":76,"line_end":76,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814492,"byte_end":10814498,"line_start":76,"line_end":76,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814500,"byte_end":10814508,"line_start":76,"line_end":76,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5380},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814510,"byte_end":10814516,"line_start":76,"line_end":76,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814594,"byte_end":10814611,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814613,"byte_end":10814630,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814632,"byte_end":10814647,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5293}},{"kind":"Use","ref_id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770263,"byte_end":10770268,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770270,"byte_end":10770280,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770282,"byte_end":10770294,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770282,"byte_end":10770294,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5875}},{"kind":"Use","ref_id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770296,"byte_end":10770311,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770313,"byte_end":10770329,"line_start":439,"line_end":439,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770380,"byte_end":10770386,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770477,"byte_end":10770489,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770491,"byte_end":10770506,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770553,"byte_end":10770562,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6919},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770564,"byte_end":10770579,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770581,"byte_end":10770601,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770641,"byte_end":10770647,"line_start":453,"line_end":453,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770687,"byte_end":10770707,"line_start":454,"line_end":454,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770748,"byte_end":10770769,"line_start":455,"line_end":455,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770817,"byte_end":10770844,"line_start":456,"line_end":456,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770878,"byte_end":10770893,"line_start":457,"line_end":457,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770928,"byte_end":10770944,"line_start":458,"line_end":458,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770986,"byte_end":10771008,"line_start":459,"line_end":459,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10771113,"byte_end":10771121,"line_start":465,"line_end":465,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10771123,"byte_end":10771131,"line_start":465,"line_end":465,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":5116}},{"kind":"Use","ref_id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138931,"byte_end":138940,"line_start":279,"line_end":279,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138942,"byte_end":138952,"line_start":279,"line_end":279,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138996,"byte_end":139010,"line_start":282,"line_end":282,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139047,"byte_end":139052,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139108,"byte_end":139122,"line_start":288,"line_end":288,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139173,"byte_end":139182,"line_start":292,"line_end":292,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139220,"byte_end":139231,"line_start":295,"line_end":295,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139233,"byte_end":139241,"line_start":295,"line_end":295,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139289,"byte_end":139297,"line_start":298,"line_end":298,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139351,"byte_end":139364,"line_start":301,"line_end":301,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":8125},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":139366,"byte_end":139379,"line_start":301,"line_end":301,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":7195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14845,"byte_end":14850,"line_start":397,"line_end":397,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7414},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150134,"byte_end":11150139,"line_start":95,"line_end":95,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7413},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150141,"byte_end":11150152,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":8097},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150154,"byte_end":11150159,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150215,"byte_end":11150222,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150258,"byte_end":11150266,"line_start":103,"line_end":103,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7574},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150268,"byte_end":11150279,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150281,"byte_end":11150289,"line_start":103,"line_end":103,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7599},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150339,"byte_end":11150346,"line_start":107,"line_end":107,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":7601},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150348,"byte_end":11150358,"line_start":107,"line_end":107,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150360,"byte_end":11150367,"line_start":107,"line_end":107,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7233}},{"kind":"Use","ref_id":{"krate":2,"index":37168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150480,"byte_end":11150488,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7233}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":80},{"krate":0,"index":105},{"krate":0,"index":282},{"krate":0,"index":350},{"krate":0,"index":535},{"krate":0,"index":627},{"krate":0,"index":3331},{"krate":0,"index":628},{"krate":0,"index":4904},{"krate":0,"index":5116},{"krate":0,"index":650},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":651},{"krate":0,"index":729}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":428,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":512,"byte_end":515,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":516,"byte_end":596,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":597,"byte_end":669,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":670,"byte_end":706,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":707,"byte_end":710,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":711,"byte_end":778,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":779,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":860,"byte_end":883,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":884,"byte_end":971,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":972,"byte_end":1045,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1046,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1125,"byte_end":1205,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1206,"byte_end":1256,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1257,"byte_end":1260,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1261,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1318,"byte_end":1321,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1322,"byte_end":1354,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1355,"byte_end":1378,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1379,"byte_end":1402,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1403,"byte_end":1429,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1430,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1452,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1472,"byte_end":1501,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1502,"byte_end":1529,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1530,"byte_end":1549,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1550,"byte_end":1579,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1580,"byte_end":1626,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1627,"byte_end":1630,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1631,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1653,"byte_end":1656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1657,"byte_end":1736,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1737,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1811,"byte_end":1890,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1891,"byte_end":1906,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1907,"byte_end":1910,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1911,"byte_end":1983,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":1984,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2022,"byte_end":2025,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2026,"byte_end":2037,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2038,"byte_end":2088,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2089,"byte_end":2096,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2097,"byte_end":2100,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2101,"byte_end":2131,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2132,"byte_end":2135,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2136,"byte_end":2217,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2218,"byte_end":2303,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2304,"byte_end":2388,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2389,"byte_end":2419,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2420,"byte_end":2423,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2424,"byte_end":2440,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2441,"byte_end":2444,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2445,"byte_end":2511,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2512,"byte_end":2515,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2516,"byte_end":2527,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2528,"byte_end":2578,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2579,"byte_end":2586,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2587,"byte_end":2590,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2591,"byte_end":2618,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2619,"byte_end":2622,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2623,"byte_end":2703,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2704,"byte_end":2786,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2787,"byte_end":2868,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2869,"byte_end":2904,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2905,"byte_end":2908,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2909,"byte_end":2925,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2926,"byte_end":2929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":2930,"byte_end":3012,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3013,"byte_end":3063,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3064,"byte_end":3067,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3068,"byte_end":3079,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3080,"byte_end":3135,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3136,"byte_end":3143,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3144,"byte_end":3147,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3148,"byte_end":3173,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3174,"byte_end":3177,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3178,"byte_end":3254,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3255,"byte_end":3338,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3339,"byte_end":3382,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3383,"byte_end":3386,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3387,"byte_end":3466,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3467,"byte_end":3550,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3551,"byte_end":3629,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3630,"byte_end":3649,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3650,"byte_end":3653,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3654,"byte_end":3727,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3728,"byte_end":3743,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3744,"byte_end":3747,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3748,"byte_end":3791,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3792,"byte_end":3824,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3825,"byte_end":3860,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3861,"byte_end":3904,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3905,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3959,"byte_end":3962,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":3963,"byte_end":4041,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4042,"byte_end":4098,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4099,"byte_end":4102,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4103,"byte_end":4176,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4177,"byte_end":4197,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4198,"byte_end":4273,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4274,"byte_end":4286,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4287,"byte_end":4367,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4368,"byte_end":4398,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4399,"byte_end":4402,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4403,"byte_end":4479,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4480,"byte_end":4492,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4493,"byte_end":4496,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4497,"byte_end":4529,"line_start":126,"line_end":126,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4530,"byte_end":4563,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4564,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4602,"byte_end":4639,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4640,"byte_end":4671,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4672,"byte_end":4705,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4706,"byte_end":4709,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4710,"byte_end":4781,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4782,"byte_end":4862,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4863,"byte_end":4951,"line_start":135,"line_end":135,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4952,"byte_end":4976,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4977,"byte_end":4980,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":4981,"byte_end":5056,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5057,"byte_end":5060,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5061,"byte_end":5093,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5094,"byte_end":5127,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5128,"byte_end":5167,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5168,"byte_end":5205,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5206,"byte_end":5209,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5210,"byte_end":5288,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5289,"byte_end":5373,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5374,"byte_end":5458,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5459,"byte_end":5552,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5553,"byte_end":5644,"line_start":149,"line_end":149,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5645,"byte_end":5684,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5685,"byte_end":5688,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5689,"byte_end":5767,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5768,"byte_end":5841,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5842,"byte_end":5914,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5915,"byte_end":5993,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":5994,"byte_end":6064,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6065,"byte_end":6068,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6069,"byte_end":6095,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6096,"byte_end":6134,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6135,"byte_end":6175,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6176,"byte_end":6216,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6217,"byte_end":6261,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6262,"byte_end":6322,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6323,"byte_end":6378,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6379,"byte_end":6382,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6383,"byte_end":6423,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6424,"byte_end":6427,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6428,"byte_end":6507,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6508,"byte_end":6585,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6586,"byte_end":6666,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6667,"byte_end":6741,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6742,"byte_end":6821,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6822,"byte_end":6899,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6900,"byte_end":6973,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":6974,"byte_end":7050,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7051,"byte_end":7132,"line_start":176,"line_end":176,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7133,"byte_end":7203,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7204,"byte_end":7278,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7279,"byte_end":7355,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7356,"byte_end":7433,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7434,"byte_end":7437,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7438,"byte_end":7515,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7516,"byte_end":7519,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7520,"byte_end":7560,"line_start":184,"line_end":184,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7561,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7615,"byte_end":7686,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7687,"byte_end":7690,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7691,"byte_end":7698,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7699,"byte_end":7717,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7718,"byte_end":7739,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7740,"byte_end":7784,"line_start":191,"line_end":191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7785,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7789,"byte_end":7849,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7850,"byte_end":7902,"line_start":194,"line_end":194,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7903,"byte_end":7938,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7939,"byte_end":7950,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7951,"byte_end":7954,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":7955,"byte_end":8010,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8011,"byte_end":8086,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8087,"byte_end":8104,"line_start":200,"line_end":200,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8105,"byte_end":8142,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8143,"byte_end":8148,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8149,"byte_end":8156,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8157,"byte_end":8160,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8161,"byte_end":8239,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8240,"byte_end":8316,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8317,"byte_end":8393,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8394,"byte_end":8418,"line_start":208,"line_end":208,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8419,"byte_end":8422,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8423,"byte_end":8457,"line_start":210,"line_end":210,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8458,"byte_end":8495,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8496,"byte_end":8499,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8500,"byte_end":8522,"line_start":213,"line_end":213,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8523,"byte_end":8526,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8527,"byte_end":8606,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8607,"byte_end":8654,"line_start":216,"line_end":216,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8655,"byte_end":8658,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8659,"byte_end":8738,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8739,"byte_end":8819,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8820,"byte_end":8900,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8901,"byte_end":8972,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":8973,"byte_end":9004,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9005,"byte_end":9008,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9009,"byte_end":9089,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9090,"byte_end":9150,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9151,"byte_end":9154,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9155,"byte_end":9234,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9235,"byte_end":9304,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9305,"byte_end":9382,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9383,"byte_end":9439,"line_start":230,"line_end":230,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9440,"byte_end":9520,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9521,"byte_end":9566,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9567,"byte_end":9646,"line_start":233,"line_end":233,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9647,"byte_end":9681,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9682,"byte_end":9685,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9686,"byte_end":9714,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9715,"byte_end":9754,"line_start":237,"line_end":237,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9755,"byte_end":9796,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9797,"byte_end":9842,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9843,"byte_end":9867,"line_start":240,"line_end":240,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9868,"byte_end":9898,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9899,"byte_end":9925,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9926,"byte_end":9958,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9959,"byte_end":9986,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":9987,"byte_end":10015,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10016,"byte_end":10040,"line_start":246,"line_end":246,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10041,"byte_end":10077,"line_start":247,"line_end":247,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10078,"byte_end":10116,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10117,"byte_end":10120,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10121,"byte_end":10135,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10136,"byte_end":10139,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10140,"byte_end":10169,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10170,"byte_end":10173,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10174,"byte_end":10187,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10188,"byte_end":10220,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10221,"byte_end":10270,"line_start":256,"line_end":256,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10271,"byte_end":10274,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10275,"byte_end":10293,"line_start":258,"line_end":258,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10294,"byte_end":10357,"line_start":259,"line_end":259,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10358,"byte_end":10424,"line_start":260,"line_end":260,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10425,"byte_end":10428,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10429,"byte_end":10443,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10444,"byte_end":10503,"line_start":263,"line_end":263,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10504,"byte_end":10507,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10508,"byte_end":10545,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10546,"byte_end":10586,"line_start":266,"line_end":266,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10587,"byte_end":10590,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10591,"byte_end":10671,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10672,"byte_end":10694,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10695,"byte_end":10758,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10759,"byte_end":10799,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10800,"byte_end":10850,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10851,"byte_end":10886,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10887,"byte_end":10922,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":10923,"byte_end":11006,"line_start":275,"line_end":275,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11007,"byte_end":11042,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11043,"byte_end":11068,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11069,"byte_end":11091,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11092,"byte_end":11095,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11096,"byte_end":11138,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11139,"byte_end":11211,"line_start":281,"line_end":281,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11212,"byte_end":11290,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11291,"byte_end":11322,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11323,"byte_end":11344,"line_start":284,"line_end":284,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11345,"byte_end":11362,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11363,"byte_end":11378,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11379,"byte_end":11388,"line_start":287,"line_end":287,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11389,"byte_end":11394,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11395,"byte_end":11402,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11403,"byte_end":11406,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11407,"byte_end":11427,"line_start":291,"line_end":291,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11428,"byte_end":11431,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11432,"byte_end":11513,"line_start":293,"line_end":293,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11514,"byte_end":11592,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11593,"byte_end":11673,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11674,"byte_end":11751,"line_start":296,"line_end":296,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11752,"byte_end":11835,"line_start":297,"line_end":297,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11836,"byte_end":11913,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":11914,"byte_end":12001,"line_start":299,"line_end":299,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12002,"byte_end":12083,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12084,"byte_end":12093,"line_start":301,"line_end":301,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12094,"byte_end":12097,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12098,"byte_end":12182,"line_start":303,"line_end":303,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12183,"byte_end":12256,"line_start":304,"line_end":304,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12257,"byte_end":12297,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12298,"byte_end":12384,"line_start":306,"line_end":306,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12385,"byte_end":12436,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12437,"byte_end":12497,"line_start":308,"line_end":308,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12498,"byte_end":12588,"line_start":309,"line_end":309,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12589,"byte_end":12645,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12646,"byte_end":12723,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12724,"byte_end":12757,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12758,"byte_end":12806,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12807,"byte_end":12876,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12877,"byte_end":12923,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12924,"byte_end":12974,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":12975,"byte_end":13013,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13014,"byte_end":13092,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13093,"byte_end":13096,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13097,"byte_end":13179,"line_start":320,"line_end":320,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13180,"byte_end":13202,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13203,"byte_end":13206,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13207,"byte_end":13232,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13233,"byte_end":13236,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13237,"byte_end":13305,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13306,"byte_end":13369,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13370,"byte_end":13387,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13388,"byte_end":13391,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13392,"byte_end":13471,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13472,"byte_end":13549,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13550,"byte_end":13583,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13584,"byte_end":13587,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13588,"byte_end":13613,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13614,"byte_end":13617,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13618,"byte_end":13703,"line_start":335,"line_end":335,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13704,"byte_end":13788,"line_start":336,"line_end":336,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13789,"byte_end":13873,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13874,"byte_end":13913,"line_start":338,"line_end":338,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13914,"byte_end":13917,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13918,"byte_end":13958,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13959,"byte_end":13962,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":13963,"byte_end":14060,"line_start":342,"line_end":342,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14249,"byte_end":14261,"line_start":348,"line_end":348,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\mod.rs","byte_start":17555,"byte_end":17575,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089627,"byte_end":10089632,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089398,"byte_end":10089439,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089440,"byte_end":10089443,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089444,"byte_end":10089521,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089590,"byte_end":10089615,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":780},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1003},{"krate":0,"index":1029},{"krate":0,"index":1190},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33400,"byte_end":33477,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33478,"byte_end":33481,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33482,"byte_end":33553,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33554,"byte_end":33634,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33635,"byte_end":33709,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33710,"byte_end":33713,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33714,"byte_end":33744,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33745,"byte_end":33748,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33749,"byte_end":33829,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33830,"byte_end":33907,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33908,"byte_end":33985,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":33986,"byte_end":34066,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34067,"byte_end":34145,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34146,"byte_end":34211,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34212,"byte_end":34215,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34216,"byte_end":34288,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34289,"byte_end":34356,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34357,"byte_end":34436,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34437,"byte_end":34511,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34512,"byte_end":34586,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34587,"byte_end":34604,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34605,"byte_end":34608,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34609,"byte_end":34673,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34674,"byte_end":34749,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34750,"byte_end":34825,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34826,"byte_end":34903,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34904,"byte_end":34907,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34908,"byte_end":34984,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":34985,"byte_end":35060,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35061,"byte_end":35141,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35142,"byte_end":35213,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35214,"byte_end":35283,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35284,"byte_end":35287,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35288,"byte_end":35360,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35361,"byte_end":35441,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35442,"byte_end":35495,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35496,"byte_end":35499,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35500,"byte_end":35513,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35514,"byte_end":35554,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35555,"byte_end":35579,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35580,"byte_end":35583,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35584,"byte_end":35602,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35603,"byte_end":35642,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35643,"byte_end":35692,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35693,"byte_end":35726,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35727,"byte_end":35730,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35731,"byte_end":35761,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35762,"byte_end":35805,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35806,"byte_end":35809,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35810,"byte_end":35860,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35861,"byte_end":35875,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35876,"byte_end":35881,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35882,"byte_end":35889,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35890,"byte_end":35893,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35894,"byte_end":35923,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35924,"byte_end":35964,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":35965,"byte_end":36001,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36002,"byte_end":36043,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36044,"byte_end":36047,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36048,"byte_end":36083,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36084,"byte_end":36087,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36088,"byte_end":36169,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36170,"byte_end":36244,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36245,"byte_end":36323,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36324,"byte_end":36368,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36369,"byte_end":36372,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36373,"byte_end":36443,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36444,"byte_end":36522,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36523,"byte_end":36601,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36602,"byte_end":36679,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36680,"byte_end":36683,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36684,"byte_end":36759,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36760,"byte_end":36798,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36799,"byte_end":36802,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36803,"byte_end":36816,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36817,"byte_end":36871,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36872,"byte_end":36896,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36897,"byte_end":36900,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36901,"byte_end":36919,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36920,"byte_end":36959,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":36960,"byte_end":37005,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37006,"byte_end":37049,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37050,"byte_end":37089,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37090,"byte_end":37093,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37094,"byte_end":37128,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37129,"byte_end":37174,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37175,"byte_end":37178,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37179,"byte_end":37210,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37211,"byte_end":37225,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37226,"byte_end":37231,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37232,"byte_end":37239,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37240,"byte_end":37243,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37244,"byte_end":37325,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37326,"byte_end":37404,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37405,"byte_end":37467,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37468,"byte_end":37471,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37472,"byte_end":37485,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37486,"byte_end":37538,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37539,"byte_end":37563,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37564,"byte_end":37567,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37568,"byte_end":37586,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37587,"byte_end":37626,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37627,"byte_end":37674,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37675,"byte_end":37684,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37685,"byte_end":37732,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37733,"byte_end":37736,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37737,"byte_end":37779,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37780,"byte_end":37821,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37822,"byte_end":37825,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37826,"byte_end":37886,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37887,"byte_end":37921,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37922,"byte_end":37925,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":37926,"byte_end":38016,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38017,"byte_end":38020,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38021,"byte_end":38035,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38036,"byte_end":38041,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38042,"byte_end":38049,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38050,"byte_end":38053,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38054,"byte_end":38099,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38100,"byte_end":38142,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38143,"byte_end":38188,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38189,"byte_end":38228,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38229,"byte_end":38268,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38269,"byte_end":38272,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38273,"byte_end":38317,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38318,"byte_end":38321,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38322,"byte_end":38404,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38405,"byte_end":38484,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38485,"byte_end":38559,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38560,"byte_end":38633,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38634,"byte_end":38694,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38695,"byte_end":38698,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38699,"byte_end":38740,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38741,"byte_end":38744,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38745,"byte_end":38813,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38814,"byte_end":38883,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38884,"byte_end":38950,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":38951,"byte_end":39014,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39015,"byte_end":39082,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39083,"byte_end":39152,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39153,"byte_end":39223,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39224,"byte_end":39302,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39303,"byte_end":39328,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39329,"byte_end":39332,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39333,"byte_end":39409,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39410,"byte_end":39413,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39414,"byte_end":39445,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39446,"byte_end":39449,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39450,"byte_end":39530,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39531,"byte_end":39607,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39608,"byte_end":39655,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39656,"byte_end":39659,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39660,"byte_end":39733,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39734,"byte_end":39810,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39811,"byte_end":39887,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39888,"byte_end":39891,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39892,"byte_end":39913,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39914,"byte_end":39937,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39938,"byte_end":39960,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39961,"byte_end":39964,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39965,"byte_end":39987,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39988,"byte_end":39991,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":39992,"byte_end":40068,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40069,"byte_end":40116,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40117,"byte_end":40120,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40121,"byte_end":40155,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40156,"byte_end":40192,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40193,"byte_end":40233,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40234,"byte_end":40276,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40277,"byte_end":40350,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40351,"byte_end":40434,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40435,"byte_end":40518,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40519,"byte_end":40546,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40547,"byte_end":40580,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40581,"byte_end":40608,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40609,"byte_end":40636,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40637,"byte_end":40668,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40669,"byte_end":40739,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40740,"byte_end":40816,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\mod.rs","byte_start":40817,"byte_end":40846,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43544,"byte_end":43556,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":42867,"byte_end":42898,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":42899,"byte_end":42902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":42903,"byte_end":42975,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":42976,"byte_end":43054,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43055,"byte_end":43141,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43142,"byte_end":43219,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43220,"byte_end":43231,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43232,"byte_end":43235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43236,"byte_end":43304,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43305,"byte_end":43329,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43330,"byte_end":43333,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43334,"byte_end":43376,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43377,"byte_end":43427,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43428,"byte_end":43481,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43482,"byte_end":43533,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44654,"byte_end":44667,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43574,"byte_end":43659,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43664,"byte_end":43705,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43710,"byte_end":43713,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43718,"byte_end":43765,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43770,"byte_end":43773,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43778,"byte_end":43837,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43842,"byte_end":43900,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43905,"byte_end":43986,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43991,"byte_end":44017,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44022,"byte_end":44025,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44030,"byte_end":44101,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44106,"byte_end":44168,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44173,"byte_end":44244,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44249,"byte_end":44330,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44335,"byte_end":44411,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44416,"byte_end":44467,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44472,"byte_end":44475,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44480,"byte_end":44551,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44556,"byte_end":44559,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44564,"byte_end":44603,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44608,"byte_end":44646,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45570,"byte_end":45577,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44745,"byte_end":44819,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44824,"byte_end":44891,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44896,"byte_end":44899,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44904,"byte_end":44975,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":44980,"byte_end":45049,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45054,"byte_end":45128,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45133,"byte_end":45210,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45215,"byte_end":45285,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45290,"byte_end":45343,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45348,"byte_end":45351,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45356,"byte_end":45428,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45433,"byte_end":45455,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45460,"byte_end":45463,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45468,"byte_end":45507,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":45512,"byte_end":45562,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48891,"byte_end":48900,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47204,"byte_end":47234,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47235,"byte_end":47238,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47239,"byte_end":47318,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47319,"byte_end":47393,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47394,"byte_end":47473,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47474,"byte_end":47551,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47552,"byte_end":47563,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47564,"byte_end":47567,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47568,"byte_end":47645,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47646,"byte_end":47664,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47665,"byte_end":47668,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47669,"byte_end":47749,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47750,"byte_end":47823,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47824,"byte_end":47903,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47904,"byte_end":47948,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47949,"byte_end":47952,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":47953,"byte_end":48018,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48019,"byte_end":48099,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48100,"byte_end":48179,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48180,"byte_end":48253,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48254,"byte_end":48327,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48328,"byte_end":48349,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48350,"byte_end":48353,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48354,"byte_end":48438,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48439,"byte_end":48463,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48464,"byte_end":48467,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48468,"byte_end":48541,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48542,"byte_end":48621,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48622,"byte_end":48625,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48626,"byte_end":48691,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48692,"byte_end":48713,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48714,"byte_end":48717,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48718,"byte_end":48757,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48758,"byte_end":48794,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48795,"byte_end":48834,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48835,"byte_end":48880,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49417,"byte_end":49426,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48907,"byte_end":48960,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48965,"byte_end":48968,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":48973,"byte_end":49041,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49046,"byte_end":49121,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49126,"byte_end":49179,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49184,"byte_end":49187,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49192,"byte_end":49267,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49272,"byte_end":49341,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49346,"byte_end":49409,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52022,"byte_end":52031,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51540,"byte_end":51570,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51571,"byte_end":51574,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51575,"byte_end":51649,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51650,"byte_end":51720,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51721,"byte_end":51790,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51791,"byte_end":51794,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51795,"byte_end":51860,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51861,"byte_end":51882,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51883,"byte_end":51886,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51887,"byte_end":51923,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51924,"byte_end":51965,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":51966,"byte_end":52011,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52673,"byte_end":52683,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52038,"byte_end":52095,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52100,"byte_end":52103,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52108,"byte_end":52181,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52186,"byte_end":52212,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52217,"byte_end":52220,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52225,"byte_end":52300,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52305,"byte_end":52361,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52366,"byte_end":52369,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52374,"byte_end":52386,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52391,"byte_end":52394,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52399,"byte_end":52469,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52474,"byte_end":52548,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52553,"byte_end":52627,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52632,"byte_end":52665,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53206,"byte_end":53219,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52750,"byte_end":52793,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52798,"byte_end":52801,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52806,"byte_end":52855,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52860,"byte_end":52930,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":52935,"byte_end":53007,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53012,"byte_end":53083,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53088,"byte_end":53104,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53109,"byte_end":53112,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53117,"byte_end":53129,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53134,"byte_end":53137,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53142,"byte_end":53198,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56510,"byte_end":56520,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54647,"byte_end":54679,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54680,"byte_end":54683,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54684,"byte_end":54766,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54767,"byte_end":54842,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54843,"byte_end":54910,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54911,"byte_end":54914,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54915,"byte_end":54995,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":54996,"byte_end":55014,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55015,"byte_end":55018,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55019,"byte_end":55090,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55091,"byte_end":55105,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55106,"byte_end":55109,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55110,"byte_end":55178,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55179,"byte_end":55259,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55260,"byte_end":55339,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55340,"byte_end":55413,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55414,"byte_end":55487,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55488,"byte_end":55509,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55510,"byte_end":55513,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55514,"byte_end":55598,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55599,"byte_end":55623,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55624,"byte_end":55627,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55628,"byte_end":55710,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55711,"byte_end":55794,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55795,"byte_end":55798,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55799,"byte_end":55883,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55884,"byte_end":55968,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":55969,"byte_end":56047,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56048,"byte_end":56127,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56128,"byte_end":56189,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56190,"byte_end":56193,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56194,"byte_end":56260,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56261,"byte_end":56283,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56284,"byte_end":56287,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56288,"byte_end":56326,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56327,"byte_end":56371,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56372,"byte_end":56411,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56412,"byte_end":56451,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56452,"byte_end":56499,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56904,"byte_end":56914,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56527,"byte_end":56581,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56586,"byte_end":56589,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56594,"byte_end":56655,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56660,"byte_end":56663,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56668,"byte_end":56730,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56735,"byte_end":56793,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56798,"byte_end":56865,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":56870,"byte_end":56896,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57455,"byte_end":57465,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57042,"byte_end":57113,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57118,"byte_end":57140,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57145,"byte_end":57148,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57153,"byte_end":57199,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57204,"byte_end":57207,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57212,"byte_end":57276,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57281,"byte_end":57339,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57344,"byte_end":57412,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57417,"byte_end":57447,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60751,"byte_end":60764,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57547,"byte_end":57621,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57626,"byte_end":57674,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57679,"byte_end":57682,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57687,"byte_end":57758,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57763,"byte_end":57839,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57844,"byte_end":57920,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":57925,"byte_end":58000,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58005,"byte_end":58076,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58081,"byte_end":58157,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58162,"byte_end":58190,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58195,"byte_end":58198,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58203,"byte_end":58264,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58269,"byte_end":58340,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58345,"byte_end":58417,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58422,"byte_end":58497,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58502,"byte_end":58575,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58580,"byte_end":58655,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58660,"byte_end":58732,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58737,"byte_end":58748,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58753,"byte_end":58756,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58761,"byte_end":58835,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58840,"byte_end":58912,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58917,"byte_end":58986,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":58991,"byte_end":59059,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59064,"byte_end":59125,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59130,"byte_end":59133,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59138,"byte_end":59156,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59161,"byte_end":59164,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59169,"byte_end":59239,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59244,"byte_end":59247,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59252,"byte_end":59315,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59320,"byte_end":59389,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59394,"byte_end":59469,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59474,"byte_end":59547,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59552,"byte_end":59603,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59608,"byte_end":59611,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59616,"byte_end":59686,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59691,"byte_end":59766,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59771,"byte_end":59843,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59848,"byte_end":59918,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":59923,"byte_end":59998,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60003,"byte_end":60006,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60011,"byte_end":60092,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60097,"byte_end":60172,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60177,"byte_end":60244,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60249,"byte_end":60252,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60257,"byte_end":60269,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60274,"byte_end":60277,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60282,"byte_end":60353,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60358,"byte_end":60424,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60429,"byte_end":60503,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60508,"byte_end":60572,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60577,"byte_end":60616,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60621,"byte_end":60624,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60629,"byte_end":60641,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60646,"byte_end":60649,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60654,"byte_end":60729,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60734,"byte_end":60743,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61877,"byte_end":61896,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60846,"byte_end":60917,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60922,"byte_end":60925,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":60930,"byte_end":60997,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61002,"byte_end":61072,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61077,"byte_end":61147,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61152,"byte_end":61155,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61160,"byte_end":61242,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61247,"byte_end":61299,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61304,"byte_end":61307,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61312,"byte_end":61373,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61378,"byte_end":61381,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61386,"byte_end":61448,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61453,"byte_end":61511,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61516,"byte_end":61583,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61588,"byte_end":61614,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61619,"byte_end":61622,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61627,"byte_end":61637,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61642,"byte_end":61645,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61650,"byte_end":61722,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61727,"byte_end":61797,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61802,"byte_end":61814,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61819,"byte_end":61822,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":61827,"byte_end":61869,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62664,"byte_end":62681,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62194,"byte_end":62264,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62269,"byte_end":62288,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62293,"byte_end":62296,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62301,"byte_end":62370,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62375,"byte_end":62450,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62455,"byte_end":62523,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62528,"byte_end":62531,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62536,"byte_end":62583,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62588,"byte_end":62591,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":62596,"byte_end":62656,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69921,"byte_end":69928,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":68973,"byte_end":69053,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69054,"byte_end":69057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69058,"byte_end":69132,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69133,"byte_end":69208,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69209,"byte_end":69287,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69288,"byte_end":69364,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69365,"byte_end":69442,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69443,"byte_end":69446,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69447,"byte_end":69511,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69512,"byte_end":69515,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69516,"byte_end":69531,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69532,"byte_end":69573,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69574,"byte_end":69615,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69616,"byte_end":69657,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69658,"byte_end":69665,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69666,"byte_end":69669,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69670,"byte_end":69748,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69749,"byte_end":69827,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":69828,"byte_end":69909,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70130,"byte_end":70133,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70044,"byte_end":70104,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70109,"byte_end":70118,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70579,"byte_end":70585,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70398,"byte_end":70460,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70465,"byte_end":70468,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70473,"byte_end":70553,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70558,"byte_end":70567,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70813,"byte_end":70821,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70742,"byte_end":70787,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70792,"byte_end":70801,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70967,"byte_end":70973,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70874,"byte_end":70941,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70946,"byte_end":70955,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71427,"byte_end":71437,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71333,"byte_end":71401,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71406,"byte_end":71415,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71915,"byte_end":71919,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71817,"byte_end":71889,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":71894,"byte_end":71903,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72325,"byte_end":72336,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72177,"byte_end":72249,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72254,"byte_end":72257,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72262,"byte_end":72299,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72304,"byte_end":72313,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72848,"byte_end":72863,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72699,"byte_end":72772,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72777,"byte_end":72780,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72785,"byte_end":72822,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":72827,"byte_end":72836,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74086,"byte_end":74095,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73246,"byte_end":73339,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73344,"byte_end":73360,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73365,"byte_end":73368,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73373,"byte_end":73461,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73466,"byte_end":73557,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73562,"byte_end":73565,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73570,"byte_end":73665,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73670,"byte_end":73754,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73759,"byte_end":73835,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73840,"byte_end":73843,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73848,"byte_end":73860,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73865,"byte_end":73868,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73873,"byte_end":73969,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":73974,"byte_end":74053,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74058,"byte_end":74067,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74541,"byte_end":74553,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74163,"byte_end":74269,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74274,"byte_end":74290,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74295,"byte_end":74298,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74303,"byte_end":74315,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74320,"byte_end":74323,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74328,"byte_end":74424,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74429,"byte_end":74508,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74513,"byte_end":74522,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74915,"byte_end":74934,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74641,"byte_end":74742,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74747,"byte_end":74750,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74755,"byte_end":74866,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74871,"byte_end":74889,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":74894,"byte_end":74903,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75272,"byte_end":75294,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75026,"byte_end":75131,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75136,"byte_end":75158,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75163,"byte_end":75166,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75171,"byte_end":75183,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75188,"byte_end":75191,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75196,"byte_end":75246,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":75251,"byte_end":75260,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76139,"byte_end":76148,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76027,"byte_end":76113,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76118,"byte_end":76127,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76415,"byte_end":76420,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76216,"byte_end":76276,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76281,"byte_end":76284,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76289,"byte_end":76389,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76394,"byte_end":76403,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76749,"byte_end":76756,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76470,"byte_end":76527,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76532,"byte_end":76535,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76540,"byte_end":76591,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76596,"byte_end":76599,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76604,"byte_end":76616,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76621,"byte_end":76624,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76629,"byte_end":76723,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76728,"byte_end":76737,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77366,"byte_end":77376,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76893,"byte_end":76946,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76951,"byte_end":76954,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":76959,"byte_end":77010,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77015,"byte_end":77018,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77023,"byte_end":77128,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77133,"byte_end":77209,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77214,"byte_end":77217,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77222,"byte_end":77234,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77239,"byte_end":77242,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77247,"byte_end":77340,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77345,"byte_end":77354,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77980,"byte_end":77991,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77560,"byte_end":77636,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77641,"byte_end":77644,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77649,"byte_end":77758,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77763,"byte_end":77814,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77819,"byte_end":77822,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77827,"byte_end":77839,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77844,"byte_end":77847,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77852,"byte_end":77947,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":77952,"byte_end":77961,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78371,"byte_end":78380,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78143,"byte_end":78249,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78254,"byte_end":78257,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78262,"byte_end":78274,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78279,"byte_end":78282,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78287,"byte_end":78345,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":78350,"byte_end":78359,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100739,"byte_end":10100747,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100495,"byte_end":10100523,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100524,"byte_end":10100527,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100528,"byte_end":10100607,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100608,"byte_end":10100642,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100899,"byte_end":10100907,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100785,"byte_end":10100821,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100826,"byte_end":10100829,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100834,"byte_end":10100884,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101074,"byte_end":10101082,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100960,"byte_end":10100995,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101000,"byte_end":10101003,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101008,"byte_end":10101059,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101518,"byte_end":10101529,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101135,"byte_end":10101192,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101197,"byte_end":10101200,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101205,"byte_end":10101219,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101224,"byte_end":10101227,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101232,"byte_end":10101239,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101244,"byte_end":10101272,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101277,"byte_end":10101280,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101285,"byte_end":10101331,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101336,"byte_end":10101383,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101388,"byte_end":10101391,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101396,"byte_end":10101451,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101456,"byte_end":10101488,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101493,"byte_end":10101500,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101969,"byte_end":10101980,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101586,"byte_end":10101643,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101648,"byte_end":10101651,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101656,"byte_end":10101670,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101675,"byte_end":10101678,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101683,"byte_end":10101690,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101695,"byte_end":10101723,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101728,"byte_end":10101731,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101736,"byte_end":10101783,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101788,"byte_end":10101834,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101839,"byte_end":10101842,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101847,"byte_end":10101902,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101907,"byte_end":10101939,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10101944,"byte_end":10101951,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102398,"byte_end":10102401,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102037,"byte_end":10102075,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102080,"byte_end":10102083,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102088,"byte_end":10102135,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102140,"byte_end":10102143,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102148,"byte_end":10102162,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102167,"byte_end":10102170,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102175,"byte_end":10102182,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102187,"byte_end":10102215,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102220,"byte_end":10102223,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102228,"byte_end":10102298,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102303,"byte_end":10102306,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102311,"byte_end":10102343,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102348,"byte_end":10102380,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103779,"byte_end":10103784,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103544,"byte_end":10103598,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103599,"byte_end":10103602,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103603,"byte_end":10103674,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103860,"byte_end":10103865,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103811,"byte_end":10103845,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103959,"byte_end":10103967,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103890,"byte_end":10103944,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104068,"byte_end":10104076,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103999,"byte_end":10104053,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104180,"byte_end":10104191,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104108,"byte_end":10104165,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104299,"byte_end":10104311,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104226,"byte_end":10104284,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104426,"byte_end":10104429,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":808},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10104347,"byte_end":10104411,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105286,"byte_end":10105294,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105045,"byte_end":10105089,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105094,"byte_end":10105097,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105102,"byte_end":10105116,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105121,"byte_end":10105124,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105129,"byte_end":10105136,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105141,"byte_end":10105166,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105171,"byte_end":10105174,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105179,"byte_end":10105216,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105221,"byte_end":10105262,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105267,"byte_end":10105274,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105705,"byte_end":10105716,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105351,"byte_end":10105402,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105407,"byte_end":10105410,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105415,"byte_end":10105429,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105434,"byte_end":10105437,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105442,"byte_end":10105449,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105454,"byte_end":10105479,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105484,"byte_end":10105487,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105492,"byte_end":10105533,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105538,"byte_end":10105581,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105586,"byte_end":10105632,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105637,"byte_end":10105681,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105686,"byte_end":10105693,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106173,"byte_end":10106184,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105808,"byte_end":10105869,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105874,"byte_end":10105877,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105882,"byte_end":10105896,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105901,"byte_end":10105904,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105909,"byte_end":10105916,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105921,"byte_end":10105946,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105951,"byte_end":10105954,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10105959,"byte_end":10106000,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106005,"byte_end":10106049,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106054,"byte_end":10106097,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106102,"byte_end":10106149,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106154,"byte_end":10106161,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106605,"byte_end":10106619,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106277,"byte_end":10106341,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106346,"byte_end":10106349,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106354,"byte_end":10106368,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106373,"byte_end":10106376,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106381,"byte_end":10106388,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106393,"byte_end":10106418,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106423,"byte_end":10106426,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106431,"byte_end":10106475,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106480,"byte_end":10106527,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106532,"byte_end":10106581,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106586,"byte_end":10106593,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10107022,"byte_end":10107037,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106689,"byte_end":10106754,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106759,"byte_end":10106762,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106767,"byte_end":10106781,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106786,"byte_end":10106789,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106794,"byte_end":10106801,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106806,"byte_end":10106831,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106836,"byte_end":10106839,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106844,"byte_end":10106889,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106894,"byte_end":10106942,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10106947,"byte_end":10106998,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10107003,"byte_end":10107010,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10145891,"byte_end":10145899,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1300}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146028,"byte_end":10146037,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1303}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146351,"byte_end":10146356,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146982,"byte_end":10146992,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146879,"byte_end":10146954,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146959,"byte_end":10146970,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147399,"byte_end":10147406,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147075,"byte_end":10147124,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147129,"byte_end":10147132,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147137,"byte_end":10147149,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147154,"byte_end":10147157,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147162,"byte_end":10147236,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147241,"byte_end":10147291,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147296,"byte_end":10147360,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147365,"byte_end":10147387,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147907,"byte_end":10147917,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147805,"byte_end":10147879,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147884,"byte_end":10147895,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":11100},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\seek.rs","byte_start":10150786,"byte_end":10150790,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":11105}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10154211,"byte_end":10154226,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2203}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10157022,"byte_end":10157032,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10159923,"byte_end":10159932,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10161332,"byte_end":10161337,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10163177,"byte_end":10163182,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10165255,"byte_end":10165267,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10166387,"byte_end":10166392,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10169221,"byte_end":10169225,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10171528,"byte_end":10171536,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10173433,"byte_end":10173443,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10174880,"byte_end":10174887,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10176176,"byte_end":10176183,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10177514,"byte_end":10177522,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10178862,"byte_end":10178870,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10180151,"byte_end":10180159,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10181454,"byte_end":10181462,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10182825,"byte_end":10182833,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10184126,"byte_end":10184134,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10185594,"byte_end":10185603,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10186997,"byte_end":10187006,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10188353,"byte_end":10188364,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10189725,"byte_end":10189736,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10191037,"byte_end":10191048,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10192360,"byte_end":10192371,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10193752,"byte_end":10193763,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10195057,"byte_end":10195068,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10196546,"byte_end":10196558,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10197952,"byte_end":10197964,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10199623,"byte_end":10199634,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10201189,"byte_end":10201203,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10202495,"byte_end":10202499,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10203587,"byte_end":10203599,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10204595,"byte_end":10204599,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2256},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10204939,"byte_end":10204954,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"stream_position","qualname":"::io::util::async_seek_ext::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2256},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10207237,"byte_end":10207250,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2274},{"krate":0,"index":2275}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10209092,"byte_end":10209097,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10210302,"byte_end":10210316,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a, 'b>(&'a mut Self, &'a [IoSlice]) -> WriteVectored\nwhere Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10213208,"byte_end":10213217,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10215092,"byte_end":10215105,"line_start":282,"line_end":282,"column_start":12,"column_end":25},"name":"write_all_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all_buf","value":"pub fn write_all_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteAllBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10216454,"byte_end":10216463,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10217863,"byte_end":10217871,"line_start":366,"line_end":366,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10219132,"byte_end":10219140,"line_start":403,"line_end":403,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10220455,"byte_end":10220464,"line_start":441,"line_end":441,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10221777,"byte_end":10221786,"line_start":479,"line_end":479,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10223126,"byte_end":10223135,"line_start":517,"line_end":517,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10224470,"byte_end":10224479,"line_start":555,"line_end":555,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10225856,"byte_end":10225865,"line_start":593,"line_end":593,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10227252,"byte_end":10227261,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10228716,"byte_end":10228726,"line_start":671,"line_end":671,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10230116,"byte_end":10230126,"line_start":711,"line_end":711,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10231458,"byte_end":10231470,"line_start":750,"line_end":750,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10232797,"byte_end":10232809,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10234163,"byte_end":10234175,"line_start":826,"line_end":826,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10235524,"byte_end":10235536,"line_start":864,"line_end":864,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10236927,"byte_end":10236939,"line_start":902,"line_end":902,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10238340,"byte_end":10238352,"line_start":940,"line_end":940,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10239819,"byte_end":10239832,"line_start":980,"line_end":980,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10241234,"byte_end":10241247,"line_start":1020,"line_end":1020,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10242267,"byte_end":10242272,"line_start":1053,"line_end":1053,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10243562,"byte_end":10243570,"line_start":1092,"line_end":1092,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11044},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10244965,"byte_end":10244974,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":11046},{"krate":0,"index":11047},{"krate":0,"index":11048},{"krate":0,"index":11049},{"krate":0,"index":11050}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245352,"byte_end":10245355,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245210,"byte_end":10245302,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245307,"byte_end":10245340,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245517,"byte_end":10245530,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245440,"byte_end":10245505,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245925,"byte_end":10245932,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245788,"byte_end":10245834,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245839,"byte_end":10245842,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245847,"byte_end":10245913,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246124,"byte_end":10246131,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245979,"byte_end":10246033,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246038,"byte_end":10246041,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246046,"byte_end":10246112,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246342,"byte_end":10246353,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246190,"byte_end":10246251,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246256,"byte_end":10246259,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246264,"byte_end":10246330,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246584,"byte_end":10246594,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246433,"byte_end":10246496,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246501,"byte_end":10246504,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246509,"byte_end":10246572,"line_start":79,"line_end":79,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246798,"byte_end":10246804,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246638,"byte_end":10246694,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246699,"byte_end":10246702,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10246707,"byte_end":10246786,"line_start":86,"line_end":86,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":11013},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256072,"byte_end":10256081,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":11015}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256360,"byte_end":10256363,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256206,"byte_end":10256263,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256268,"byte_end":10256271,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256276,"byte_end":10256348,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256695,"byte_end":10256708,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256495,"byte_end":10256580,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256585,"byte_end":10256598,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256603,"byte_end":10256606,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256611,"byte_end":10256683,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257165,"byte_end":10257172,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257020,"byte_end":10257070,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257075,"byte_end":10257078,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257083,"byte_end":10257153,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257392,"byte_end":10257399,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257239,"byte_end":10257297,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257302,"byte_end":10257305,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257310,"byte_end":10257380,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257634,"byte_end":10257645,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257474,"byte_end":10257539,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257544,"byte_end":10257547,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257552,"byte_end":10257622,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257909,"byte_end":10257919,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257754,"byte_end":10257821,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257826,"byte_end":10257829,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10257834,"byte_end":10257897,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10963},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10261685,"byte_end":10261694,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10965},{"krate":0,"index":10966},{"krate":0,"index":10967},{"krate":0,"index":10968}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10262044,"byte_end":10262047,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10261902,"byte_end":10261994,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10261999,"byte_end":10262032,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10262209,"byte_end":10262222,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10262132,"byte_end":10262197,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263345,"byte_end":10263352,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263287,"byte_end":10263333,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263543,"byte_end":10263550,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263399,"byte_end":10263453,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263458,"byte_end":10263461,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263466,"byte_end":10263531,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263760,"byte_end":10263771,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263609,"byte_end":10263670,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263675,"byte_end":10263678,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263683,"byte_end":10263748,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10264002,"byte_end":10264012,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263851,"byte_end":10263914,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263919,"byte_end":10263922,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10263927,"byte_end":10263990,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10264124,"byte_end":10264130,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10264056,"byte_end":10264112,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10914},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10268497,"byte_end":10268502,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10917},{"krate":0,"index":10918},{"krate":0,"index":10919}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10268943,"byte_end":10268950,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10268869,"byte_end":10268931,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269282,"byte_end":10269289,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269019,"byte_end":10269089,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269094,"byte_end":10269097,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269102,"byte_end":10269175,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269180,"byte_end":10269253,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269258,"byte_end":10269270,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269648,"byte_end":10269659,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269378,"byte_end":10269455,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269460,"byte_end":10269463,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269468,"byte_end":10269541,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269546,"byte_end":10269619,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269624,"byte_end":10269636,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269856,"byte_end":10269866,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269788,"byte_end":10269844,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2361},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy.rs","byte_start":10275264,"byte_end":10275268,"line_start":123,"line_end":123,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279342,"byte_end":10279360,"line_start":108,"line_end":108,"column_start":14,"column_end":32},"name":"copy_bidirectional","qualname":"::io::util::copy_bidirectional::copy_bidirectional","value":"pub async fn copy_bidirectional<A: ?Sized, B: ?Sized, '_,\n                                '_>(&'_ mut A, &'_ mut B) -> /*impl Trait*/\nwhere A: AsyncRead + AsyncWrite + Unpin, B: AsyncRead + AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies data in both directions between `a` and `b`.","sig":null,"attributes":[{"value":"/ Copies data in both directions between `a` and `b`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278090,"byte_end":10278145,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278146,"byte_end":10278149,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function returns a future that will read from both streams,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278150,"byte_end":10278218,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ writing any data read to the opposing stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278219,"byte_end":10278268,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ This happens in both directions concurrently.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278269,"byte_end":10278318,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278319,"byte_end":10278322,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If an EOF is observed on one stream, [`shutdown()`] will be invoked on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278323,"byte_end":10278397,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ the other, and reading from that stream will stop. Copying of data in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278398,"byte_end":10278471,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ the other direction will continue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278472,"byte_end":10278510,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278511,"byte_end":10278514,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The future will complete successfully once both directions of communication has been shut down.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278515,"byte_end":10278614,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ A direction is shut down when the reader reports EOF,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278615,"byte_end":10278672,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ at which point [`shutdown()`] is called on the corresponding writer. When finished,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278673,"byte_end":10278760,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/ it will return a tuple of the number of bytes copied from a to b","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278761,"byte_end":10278829,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ and the number of bytes copied from b to a, in that order.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278830,"byte_end":10278892,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278893,"byte_end":10278896,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`shutdown()`]: crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278897,"byte_end":10278951,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278952,"byte_end":10278955,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278956,"byte_end":10278968,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278969,"byte_end":10278972,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The future will immediately return an error if any IO operation on `a`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10278973,"byte_end":10279047,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ or `b` returns an error. Some data read from either stream may be lost (not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279048,"byte_end":10279127,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ written to the other stream) in this case.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279128,"byte_end":10279174,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279175,"byte_end":10279178,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279179,"byte_end":10279197,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279198,"byte_end":10279201,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of bytes copied `a` to `b` and bytes copied `b` to `a`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10279202,"byte_end":10279277,"line_start":106,"line_end":106,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_buf.rs","byte_start":10281356,"byte_end":10281364,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10283173,"byte_end":10283178,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2386}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10283857,"byte_end":10283862,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10872},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\flush.rs","byte_start":10285103,"byte_end":10285108,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10875},{"krate":0,"index":10876}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10822},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286542,"byte_end":10286547,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10824},{"krate":0,"index":10825},{"krate":0,"index":10826},{"krate":0,"index":10827}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287394,"byte_end":10287403,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286904,"byte_end":10286944,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286949,"byte_end":10286952,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286957,"byte_end":10286971,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286976,"byte_end":10286979,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286984,"byte_end":10286991,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286996,"byte_end":10287030,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287035,"byte_end":10287070,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287075,"byte_end":10287078,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287083,"byte_end":10287166,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287171,"byte_end":10287211,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287216,"byte_end":10287219,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287224,"byte_end":10287277,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287282,"byte_end":10287325,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287330,"byte_end":10287335,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287340,"byte_end":10287352,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287357,"byte_end":10287364,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287369,"byte_end":10287376,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287630,"byte_end":10287637,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287563,"byte_end":10287618,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287756,"byte_end":10287763,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287697,"byte_end":10287744,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288050,"byte_end":10288060,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287815,"byte_end":10287876,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287881,"byte_end":10287884,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287889,"byte_end":10287952,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10287957,"byte_end":10288038,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288946,"byte_end":10288960,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288153,"byte_end":10288195,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288200,"byte_end":10288203,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288208,"byte_end":10288232,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288237,"byte_end":10288240,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288245,"byte_end":10288306,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288311,"byte_end":10288378,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288383,"byte_end":10288456,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288461,"byte_end":10288544,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288549,"byte_end":10288552,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288557,"byte_end":10288629,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288634,"byte_end":10288703,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288708,"byte_end":10288752,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288757,"byte_end":10288760,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288765,"byte_end":10288839,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288844,"byte_end":10288918,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288923,"byte_end":10288934,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10291117,"byte_end":10291129,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10289882,"byte_end":10289941,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10289942,"byte_end":10289945,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10289946,"byte_end":10290025,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290026,"byte_end":10290102,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290103,"byte_end":10290165,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290166,"byte_end":10290169,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Closing a `DuplexStream`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290170,"byte_end":10290200,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290201,"byte_end":10290204,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If one end of the `DuplexStream` channel is dropped, any pending reads on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290205,"byte_end":10290282,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the other side will continue to read data until the buffer is drained, then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290283,"byte_end":10290362,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ they will signal EOF by returning 0 bytes. Any writes to the other side,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290363,"byte_end":10290439,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ including pending ones (that are waiting for free space in the buffer) will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290440,"byte_end":10290519,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ return `Err(BrokenPipe)` immediately.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290520,"byte_end":10290561,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290562,"byte_end":10290565,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290566,"byte_end":10290579,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290580,"byte_end":10290583,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290584,"byte_end":10290591,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290592,"byte_end":10290636,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290637,"byte_end":10290688,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290689,"byte_end":10290746,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290747,"byte_end":10290750,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290751,"byte_end":10290788,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290789,"byte_end":10290792,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290793,"byte_end":10290820,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290821,"byte_end":10290860,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290861,"byte_end":10290891,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290892,"byte_end":10290895,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290896,"byte_end":10290933,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290934,"byte_end":10290937,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290938,"byte_end":10290977,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10290978,"byte_end":10291008,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10291009,"byte_end":10291021,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10291022,"byte_end":10291029,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10291030,"byte_end":10291037,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292477,"byte_end":10292483,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292192,"byte_end":10292275,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292276,"byte_end":10292279,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292280,"byte_end":10292354,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292355,"byte_end":10292418,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read.rs","byte_start":10297886,"byte_end":10297890,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10711},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_buf.rs","byte_start":10299107,"byte_end":10299114,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10715},{"krate":0,"index":10716},{"krate":0,"index":10717}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10656},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_exact.rs","byte_start":10301319,"byte_end":10301328,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10659},{"krate":0,"index":10660},{"krate":0,"index":10661}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306352,"byte_end":10306358,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10614},{"krate":0,"index":10615}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10575},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306374,"byte_end":10306380,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10577},{"krate":0,"index":10578}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10526},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306396,"byte_end":10306403,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10528},{"krate":0,"index":10529},{"krate":0,"index":10531},{"krate":0,"index":10532}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306428,"byte_end":10306435,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10479},{"krate":0,"index":10480},{"krate":0,"index":10482},{"krate":0,"index":10483}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10428},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306460,"byte_end":10306467,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10430},{"krate":0,"index":10431},{"krate":0,"index":10433},{"krate":0,"index":10434}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306492,"byte_end":10306500,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10381},{"krate":0,"index":10382},{"krate":0,"index":10384},{"krate":0,"index":10385}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10330},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306528,"byte_end":10306535,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10332},{"krate":0,"index":10333},{"krate":0,"index":10335},{"krate":0,"index":10336}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10281},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306560,"byte_end":10306567,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10283},{"krate":0,"index":10284},{"krate":0,"index":10286},{"krate":0,"index":10287}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306592,"byte_end":10306599,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10234},{"krate":0,"index":10235},{"krate":0,"index":10237},{"krate":0,"index":10238}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306624,"byte_end":10306632,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10186},{"krate":0,"index":10188},{"krate":0,"index":10189}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306660,"byte_end":10306669,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":10136},{"krate":0,"index":10137},{"krate":0,"index":10139},{"krate":0,"index":10140}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10085},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306697,"byte_end":10306706,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":10087},{"krate":0,"index":10088},{"krate":0,"index":10090},{"krate":0,"index":10091}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10036},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306734,"byte_end":10306743,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":10038},{"krate":0,"index":10039},{"krate":0,"index":10041},{"krate":0,"index":10042}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306771,"byte_end":10306781,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9989},{"krate":0,"index":9990},{"krate":0,"index":9992},{"krate":0,"index":9993}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9938},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306812,"byte_end":10306821,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9940},{"krate":0,"index":9941},{"krate":0,"index":9943},{"krate":0,"index":9944}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9889},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306849,"byte_end":10306858,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9891},{"krate":0,"index":9892},{"krate":0,"index":9894},{"krate":0,"index":9895}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9840},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306886,"byte_end":10306895,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9842},{"krate":0,"index":9843},{"krate":0,"index":9845},{"krate":0,"index":9846}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_int.rs","byte_start":10306923,"byte_end":10306933,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9793},{"krate":0,"index":9794},{"krate":0,"index":9796},{"krate":0,"index":9797}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_line.rs","byte_start":10307450,"byte_end":10307458,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9740},{"krate":0,"index":9741},{"krate":0,"index":9742},{"krate":0,"index":9743},{"krate":0,"index":9744}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9680},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_end.rs","byte_start":10311381,"byte_end":10311390,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9683},{"krate":0,"index":9684},{"krate":0,"index":9685},{"krate":0,"index":9686}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9619},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_string.rs","byte_start":10319710,"byte_end":10319722,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9622},{"krate":0,"index":9623},{"krate":0,"index":9624},{"krate":0,"index":9625},{"krate":0,"index":9626}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_until.rs","byte_start":10322114,"byte_end":10322123,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9561},{"krate":0,"index":9562},{"krate":0,"index":9563},{"krate":0,"index":9564},{"krate":0,"index":9565}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\repeat.rs","byte_start":10324465,"byte_end":10324471,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2554}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\repeat.rs","byte_start":10325157,"byte_end":10325163,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\shutdown.rs","byte_start":10326202,"byte_end":10326210,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9512},{"krate":0,"index":9513}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10327356,"byte_end":10327360,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2558}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10328201,"byte_end":10328205,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10329642,"byte_end":10329647,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9461},{"krate":0,"index":9462},{"krate":0,"index":9463},{"krate":0,"index":9464}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330508,"byte_end":10330520,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10329996,"byte_end":10330039,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330044,"byte_end":10330047,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330052,"byte_end":10330066,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330071,"byte_end":10330074,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330079,"byte_end":10330086,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330091,"byte_end":10330125,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330130,"byte_end":10330165,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330170,"byte_end":10330173,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330178,"byte_end":10330261,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330266,"byte_end":10330313,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330318,"byte_end":10330321,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330326,"byte_end":10330388,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330393,"byte_end":10330439,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330444,"byte_end":10330449,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330454,"byte_end":10330466,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330471,"byte_end":10330478,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330483,"byte_end":10330490,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331557,"byte_end":10331574,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330732,"byte_end":10330777,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330782,"byte_end":10330785,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330790,"byte_end":10330814,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330819,"byte_end":10330822,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330827,"byte_end":10330891,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330896,"byte_end":10330969,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330974,"byte_end":10331050,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331055,"byte_end":10331127,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331132,"byte_end":10331152,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331157,"byte_end":10331160,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331165,"byte_end":10331237,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331242,"byte_end":10331311,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331316,"byte_end":10331360,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331365,"byte_end":10331368,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331373,"byte_end":10331445,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331450,"byte_end":10331519,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10331524,"byte_end":10331545,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9419},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10332716,"byte_end":10332720,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9421},{"krate":0,"index":9422}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333310,"byte_end":10333315,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333007,"byte_end":10333060,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333065,"byte_end":10333111,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333116,"byte_end":10333119,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333124,"byte_end":10333134,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333139,"byte_end":10333142,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333147,"byte_end":10333224,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333229,"byte_end":10333298,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333634,"byte_end":10333643,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333363,"byte_end":10333434,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333439,"byte_end":10333513,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333518,"byte_end":10333593,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333598,"byte_end":10333622,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333766,"byte_end":10333773,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333708,"byte_end":10333754,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334065,"byte_end":10334072,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333820,"byte_end":10333874,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333879,"byte_end":10333882,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333887,"byte_end":10333960,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10333965,"byte_end":10334037,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334042,"byte_end":10334053,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334383,"byte_end":10334394,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334131,"byte_end":10334192,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334197,"byte_end":10334200,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334205,"byte_end":10334278,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334283,"byte_end":10334355,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334360,"byte_end":10334371,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334540,"byte_end":10334550,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334474,"byte_end":10334528,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9368},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write.rs","byte_start":10336534,"byte_end":10336539,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9373}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9308},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_vectored.rs","byte_start":10337743,"byte_end":10337756,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"name":"WriteVectored","qualname":"::io::util::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":9312},{"krate":0,"index":9313},{"krate":0,"index":9314}],"decl_id":null,"docs":" A future to write a slice of buffers to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9253},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all.rs","byte_start":10338869,"byte_end":10338877,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":9256},{"krate":0,"index":9257},{"krate":0,"index":9258}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_buf.rs","byte_start":10340318,"byte_end":10340326,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":9197},{"krate":0,"index":9198},{"krate":0,"index":9199}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all_buf.rs","byte_start":10341640,"byte_end":10341651,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"WriteAllBuf","qualname":"::io::util::write_all_buf::WriteAllBuf","value":"WriteAllBuf {  }","parent":null,"children":[{"krate":0,"index":9135},{"krate":0,"index":9136},{"krate":0,"index":9137}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346508,"byte_end":10346515,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9083},{"krate":0,"index":9084},{"krate":0,"index":9085}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346531,"byte_end":10346538,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9042},{"krate":0,"index":9043},{"krate":0,"index":9044}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8991},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346554,"byte_end":10346562,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8993},{"krate":0,"index":8994},{"krate":0,"index":8996},{"krate":0,"index":8997}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8942},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346587,"byte_end":10346595,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8944},{"krate":0,"index":8945},{"krate":0,"index":8947},{"krate":0,"index":8948}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8893},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346620,"byte_end":10346628,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8898},{"krate":0,"index":8899}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346653,"byte_end":10346662,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8849},{"krate":0,"index":8850}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346690,"byte_end":10346698,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8800},{"krate":0,"index":8801}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346723,"byte_end":10346731,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8748},{"krate":0,"index":8749},{"krate":0,"index":8751},{"krate":0,"index":8752}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346756,"byte_end":10346764,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8702},{"krate":0,"index":8703}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8648},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346789,"byte_end":10346798,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8650},{"krate":0,"index":8651},{"krate":0,"index":8653},{"krate":0,"index":8654}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8599},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346826,"byte_end":10346836,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8604},{"krate":0,"index":8605}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8550},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346864,"byte_end":10346874,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8552},{"krate":0,"index":8553},{"krate":0,"index":8555},{"krate":0,"index":8556}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8501},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346902,"byte_end":10346912,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8507}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346940,"byte_end":10346951,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8457},{"krate":0,"index":8458}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8403},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10346982,"byte_end":10346992,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8405},{"krate":0,"index":8406},{"krate":0,"index":8408},{"krate":0,"index":8409}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8354},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10347020,"byte_end":10347030,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8359},{"krate":0,"index":8360}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8305},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10347058,"byte_end":10347068,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8310},{"krate":0,"index":8311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_int.rs","byte_start":10347096,"byte_end":10347107,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8258},{"krate":0,"index":8259},{"krate":0,"index":8261},{"krate":0,"index":8262}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3177}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79298,"byte_end":79316,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79318,"byte_end":79356,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79357,"byte_end":79360,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79361,"byte_end":79444,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79445,"byte_end":79510,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79511,"byte_end":79514,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79515,"byte_end":79533,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79534,"byte_end":79537,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79538,"byte_end":79626,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79627,"byte_end":79696,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79697,"byte_end":79785,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79786,"byte_end":79844,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79845,"byte_end":79908,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79909,"byte_end":79974,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79976,"byte_end":79979,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":79980,"byte_end":80012,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80013,"byte_end":80041,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80042,"byte_end":80070,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80071,"byte_end":80105,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80106,"byte_end":80136,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80137,"byte_end":80171,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81393,"byte_end":81406,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80805,"byte_end":80882,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80883,"byte_end":80886,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80887,"byte_end":80896,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80897,"byte_end":80900,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80901,"byte_end":80978,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80979,"byte_end":80982,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80983,"byte_end":80996,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":80997,"byte_end":81000,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81001,"byte_end":81078,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81079,"byte_end":81151,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81152,"byte_end":81221,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81222,"byte_end":81225,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81226,"byte_end":81305,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81306,"byte_end":81382,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87846,"byte_end":87863,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87879,"byte_end":87883,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87944,"byte_end":87950,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88022,"byte_end":88037,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88148,"byte_end":88156,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88093,"byte_end":88132,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88398,"byte_end":88408,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88698,"byte_end":88701,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88745,"byte_end":88749,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88674,"byte_end":88683,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2762}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\lookup_host.rs","byte_start":10347980,"byte_end":10347991,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":2820},{"krate":0,"index":2855},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":12436},{"krate":0,"index":2940},{"krate":0,"index":3059}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\mod.rs","byte_start":10348144,"byte_end":10348165,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350019,"byte_end":10350030,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3189}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351529,"byte_end":10351533,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350113,"byte_end":10350189,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350194,"byte_end":10350197,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350202,"byte_end":10350263,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350268,"byte_end":10350271,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350276,"byte_end":10350351,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350356,"byte_end":10350432,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350437,"byte_end":10350448,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350453,"byte_end":10350456,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350461,"byte_end":10350536,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350541,"byte_end":10350617,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350622,"byte_end":10350695,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350700,"byte_end":10350773,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350778,"byte_end":10350830,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350835,"byte_end":10350838,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350843,"byte_end":10350906,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350911,"byte_end":10350914,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350919,"byte_end":10350992,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350997,"byte_end":10351006,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351011,"byte_end":10351014,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351019,"byte_end":10351073,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351078,"byte_end":10351125,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351130,"byte_end":10351133,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351138,"byte_end":10351152,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351157,"byte_end":10351160,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351165,"byte_end":10351178,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351183,"byte_end":10351215,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351220,"byte_end":10351223,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351228,"byte_end":10351244,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351249,"byte_end":10351252,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351257,"byte_end":10351275,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351280,"byte_end":10351319,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351324,"byte_end":10351390,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351395,"byte_end":10351398,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351403,"byte_end":10351430,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351435,"byte_end":10351438,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351443,"byte_end":10351470,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351475,"byte_end":10351489,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351494,"byte_end":10351499,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10351504,"byte_end":10351511,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353099,"byte_end":10353105,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352244,"byte_end":10352301,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352306,"byte_end":10352309,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352314,"byte_end":10352389,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352394,"byte_end":10352464,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352469,"byte_end":10352498,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352503,"byte_end":10352506,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352511,"byte_end":10352558,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352563,"byte_end":10352566,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352571,"byte_end":10352585,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352590,"byte_end":10352593,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352598,"byte_end":10352611,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352616,"byte_end":10352648,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352653,"byte_end":10352656,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352661,"byte_end":10352677,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352682,"byte_end":10352685,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352690,"byte_end":10352708,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352713,"byte_end":10352752,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352757,"byte_end":10352823,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352828,"byte_end":10352831,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352836,"byte_end":10352875,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352880,"byte_end":10352950,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10352955,"byte_end":10353018,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353023,"byte_end":10353032,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353037,"byte_end":10353040,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353045,"byte_end":10353059,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353064,"byte_end":10353069,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353074,"byte_end":10353081,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353773,"byte_end":10353784,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353395,"byte_end":10353458,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353463,"byte_end":10353466,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353471,"byte_end":10353547,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353552,"byte_end":10353626,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353631,"byte_end":10353707,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10353712,"byte_end":10353761,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355822,"byte_end":10355830,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354392,"byte_end":10354453,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354458,"byte_end":10354461,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354466,"byte_end":10354538,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354543,"byte_end":10354619,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354624,"byte_end":10354697,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354702,"byte_end":10354724,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354729,"byte_end":10354732,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354737,"byte_end":10354811,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354816,"byte_end":10354892,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354897,"byte_end":10354962,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10354967,"byte_end":10355022,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355027,"byte_end":10355030,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355035,"byte_end":10355049,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355054,"byte_end":10355057,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355062,"byte_end":10355080,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355085,"byte_end":10355111,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355116,"byte_end":10355148,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355153,"byte_end":10355156,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355161,"byte_end":10355179,"line_start":201,"line_end":201,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355184,"byte_end":10355235,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355240,"byte_end":10355311,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355316,"byte_end":10355360,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355365,"byte_end":10355425,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355430,"byte_end":10355444,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355449,"byte_end":10355454,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355459,"byte_end":10355466,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355471,"byte_end":10355474,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355479,"byte_end":10355491,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355496,"byte_end":10355499,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355504,"byte_end":10355564,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355569,"byte_end":10355572,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355577,"byte_end":10355647,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355652,"byte_end":10355725,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10355730,"byte_end":10355810,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356880,"byte_end":10356888,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356030,"byte_end":10356102,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356107,"byte_end":10356110,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpListener`] will have nonblocking mode set as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356115,"byte_end":10356191,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356196,"byte_end":10356271,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356276,"byte_end":10356279,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356284,"byte_end":10356298,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356303,"byte_end":10356306,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356311,"byte_end":10356329,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356334,"byte_end":10356360,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356365,"byte_end":10356368,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356373,"byte_end":10356391,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356396,"byte_end":10356447,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356452,"byte_end":10356533,"line_start":235,"line_end":235,"column_start":5,"column_end":86}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356538,"byte_end":10356592,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356597,"byte_end":10356642,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356647,"byte_end":10356661,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356666,"byte_end":10356671,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356676,"byte_end":10356683,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356688,"byte_end":10356691,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356696,"byte_end":10356740,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`std::net::TcpListener`]: std::net::TcpListener","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356745,"byte_end":10356797,"line_start":243,"line_end":243,"column_start":5,"column_end":57}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpListener::set_nonblocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10356802,"byte_end":10356868,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358428,"byte_end":10358438,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357702,"byte_end":10357763,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357768,"byte_end":10357771,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357776,"byte_end":10357849,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357854,"byte_end":10357888,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357893,"byte_end":10357896,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357901,"byte_end":10357915,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357920,"byte_end":10357923,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357928,"byte_end":10357946,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357951,"byte_end":10357983,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357988,"byte_end":10357991,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10357996,"byte_end":10358012,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358017,"byte_end":10358072,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358077,"byte_end":10358080,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358085,"byte_end":10358103,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358108,"byte_end":10358147,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358152,"byte_end":10358218,"line_start":285,"line_end":285,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358223,"byte_end":10358226,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358231,"byte_end":10358273,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358278,"byte_end":10358367,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358372,"byte_end":10358375,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358380,"byte_end":10358394,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358399,"byte_end":10358404,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358409,"byte_end":10358416,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359131,"byte_end":10359134,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358514,"byte_end":10358572,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358577,"byte_end":10358580,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358585,"byte_end":10358645,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358650,"byte_end":10358653,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358658,"byte_end":10358695,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358700,"byte_end":10358703,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358708,"byte_end":10358722,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358727,"byte_end":10358730,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358735,"byte_end":10358748,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358753,"byte_end":10358785,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358790,"byte_end":10358793,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358798,"byte_end":10358814,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358819,"byte_end":10358822,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358827,"byte_end":10358845,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358850,"byte_end":10358889,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358894,"byte_end":10358956,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358961,"byte_end":10358964,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10358969,"byte_end":10359026,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359031,"byte_end":10359071,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359076,"byte_end":10359079,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359084,"byte_end":10359097,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359102,"byte_end":10359107,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359112,"byte_end":10359119,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359763,"byte_end":10359770,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359196,"byte_end":10359254,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359259,"byte_end":10359262,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359267,"byte_end":10359343,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359348,"byte_end":10359369,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359374,"byte_end":10359377,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359382,"byte_end":10359396,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359401,"byte_end":10359404,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359409,"byte_end":10359422,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359427,"byte_end":10359459,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359464,"byte_end":10359467,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359472,"byte_end":10359488,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359493,"byte_end":10359496,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359501,"byte_end":10359519,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359524,"byte_end":10359563,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359568,"byte_end":10359631,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359636,"byte_end":10359639,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359644,"byte_end":10359702,"line_start":340,"line_end":340,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359707,"byte_end":10359710,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359715,"byte_end":10359729,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359734,"byte_end":10359739,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359744,"byte_end":10359751,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10363907,"byte_end":10363916,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3191}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364780,"byte_end":10364786,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10363985,"byte_end":10364029,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364034,"byte_end":10364037,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364042,"byte_end":10364097,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364102,"byte_end":10364105,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364110,"byte_end":10364123,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364128,"byte_end":10364131,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364136,"byte_end":10364209,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364214,"byte_end":10364254,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364259,"byte_end":10364262,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364267,"byte_end":10364281,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364286,"byte_end":10364289,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364294,"byte_end":10364343,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364348,"byte_end":10364351,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364356,"byte_end":10364369,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364374,"byte_end":10364404,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364409,"byte_end":10364412,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364417,"byte_end":10364433,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364438,"byte_end":10364441,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364446,"byte_end":10364464,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364469,"byte_end":10364508,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364513,"byte_end":10364566,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364571,"byte_end":10364613,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364618,"byte_end":10364645,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364650,"byte_end":10364653,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364658,"byte_end":10364701,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364706,"byte_end":10364727,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364732,"byte_end":10364746,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364751,"byte_end":10364756,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364761,"byte_end":10364768,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365703,"byte_end":10365709,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364911,"byte_end":10364955,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364960,"byte_end":10364963,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10364968,"byte_end":10365024,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365029,"byte_end":10365032,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365037,"byte_end":10365050,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365055,"byte_end":10365058,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365063,"byte_end":10365136,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365141,"byte_end":10365181,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365186,"byte_end":10365189,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365194,"byte_end":10365208,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365213,"byte_end":10365216,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365221,"byte_end":10365270,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365275,"byte_end":10365278,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365283,"byte_end":10365296,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365301,"byte_end":10365331,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365336,"byte_end":10365339,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365344,"byte_end":10365360,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365365,"byte_end":10365368,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365373,"byte_end":10365391,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365396,"byte_end":10365435,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365440,"byte_end":10365489,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365494,"byte_end":10365536,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365541,"byte_end":10365568,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365573,"byte_end":10365576,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365581,"byte_end":10365624,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365629,"byte_end":10365650,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365655,"byte_end":10365669,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365674,"byte_end":10365679,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365684,"byte_end":10365691,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366524,"byte_end":10366537,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365834,"byte_end":10365884,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365889,"byte_end":10365892,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365897,"byte_end":10365962,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10365967,"byte_end":10366002,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366007,"byte_end":10366010,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366015,"byte_end":10366029,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366034,"byte_end":10366037,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366042,"byte_end":10366055,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366060,"byte_end":10366090,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366095,"byte_end":10366098,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366103,"byte_end":10366119,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366124,"byte_end":10366127,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366132,"byte_end":10366150,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366155,"byte_end":10366194,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366199,"byte_end":10366252,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366257,"byte_end":10366260,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366265,"byte_end":10366307,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366312,"byte_end":10366348,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366353,"byte_end":10366380,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366385,"byte_end":10366388,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366393,"byte_end":10366437,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366442,"byte_end":10366463,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366468,"byte_end":10366471,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366476,"byte_end":10366490,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366495,"byte_end":10366500,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366505,"byte_end":10366512,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367236,"byte_end":10367245,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366637,"byte_end":10366698,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366703,"byte_end":10366706,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366711,"byte_end":10366725,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366730,"byte_end":10366733,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366738,"byte_end":10366751,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366756,"byte_end":10366786,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366791,"byte_end":10366794,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366799,"byte_end":10366815,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366820,"byte_end":10366823,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366828,"byte_end":10366846,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366851,"byte_end":10366890,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366895,"byte_end":10366948,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366953,"byte_end":10366956,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10366961,"byte_end":10367003,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367008,"byte_end":10367044,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367049,"byte_end":10367094,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367099,"byte_end":10367126,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367131,"byte_end":10367134,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367139,"byte_end":10367183,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367188,"byte_end":10367202,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367207,"byte_end":10367212,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10367217,"byte_end":10367224,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369571,"byte_end":10369591,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369419,"byte_end":10369475,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369480,"byte_end":10369483,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369488,"byte_end":10369559,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370914,"byte_end":10370930,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369687,"byte_end":10369747,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369752,"byte_end":10369755,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369760,"byte_end":10369834,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369839,"byte_end":10369850,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369855,"byte_end":10369858,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369863,"byte_end":10369935,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10369940,"byte_end":10370014,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370019,"byte_end":10370087,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370092,"byte_end":10370114,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370119,"byte_end":10370122,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370127,"byte_end":10370202,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370207,"byte_end":10370278,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370283,"byte_end":10370359,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370364,"byte_end":10370383,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370388,"byte_end":10370463,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370468,"byte_end":10370543,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370548,"byte_end":10370564,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370569,"byte_end":10370634,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370639,"byte_end":10370704,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370709,"byte_end":10370781,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370786,"byte_end":10370831,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370836,"byte_end":10370839,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10370844,"byte_end":10370902,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371167,"byte_end":10371187,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371012,"byte_end":10371071,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371076,"byte_end":10371079,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371084,"byte_end":10371155,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372516,"byte_end":10372532,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371283,"byte_end":10371346,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371351,"byte_end":10371354,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371359,"byte_end":10371433,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371438,"byte_end":10371449,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371454,"byte_end":10371457,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371462,"byte_end":10371534,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371539,"byte_end":10371613,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371618,"byte_end":10371686,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371691,"byte_end":10371713,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371718,"byte_end":10371721,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371726,"byte_end":10371801,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371806,"byte_end":10371880,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371885,"byte_end":10371961,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371966,"byte_end":10371985,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10371990,"byte_end":10372065,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372070,"byte_end":10372145,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372150,"byte_end":10372166,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372171,"byte_end":10372236,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372241,"byte_end":10372306,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372311,"byte_end":10372383,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372388,"byte_end":10372433,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372438,"byte_end":10372441,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372446,"byte_end":10372504,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373240,"byte_end":10373250,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372614,"byte_end":10372655,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372660,"byte_end":10372663,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372668,"byte_end":10372717,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372722,"byte_end":10372725,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372730,"byte_end":10372744,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372749,"byte_end":10372752,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372757,"byte_end":10372770,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372775,"byte_end":10372805,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372810,"byte_end":10372813,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372818,"byte_end":10372834,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372839,"byte_end":10372842,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372847,"byte_end":10372865,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372870,"byte_end":10372909,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372914,"byte_end":10372967,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372972,"byte_end":10372975,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10372980,"byte_end":10373022,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373027,"byte_end":10373054,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373059,"byte_end":10373138,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373143,"byte_end":10373187,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373192,"byte_end":10373206,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373211,"byte_end":10373216,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373221,"byte_end":10373228,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374080,"byte_end":10374084,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373332,"byte_end":10373373,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373378,"byte_end":10373381,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373386,"byte_end":10373453,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373458,"byte_end":10373534,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373539,"byte_end":10373551,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373556,"byte_end":10373559,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373564,"byte_end":10373578,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373583,"byte_end":10373586,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373591,"byte_end":10373626,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373631,"byte_end":10373634,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373639,"byte_end":10373652,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373657,"byte_end":10373687,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373692,"byte_end":10373695,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373700,"byte_end":10373716,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373721,"byte_end":10373724,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373729,"byte_end":10373747,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373752,"byte_end":10373791,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373796,"byte_end":10373849,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373854,"byte_end":10373857,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373862,"byte_end":10373904,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373909,"byte_end":10373936,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373941,"byte_end":10373944,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373949,"byte_end":10373993,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10373998,"byte_end":10374019,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374024,"byte_end":10374027,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374032,"byte_end":10374046,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374051,"byte_end":10374056,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374061,"byte_end":10374068,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375152,"byte_end":10375159,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374171,"byte_end":10374246,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374251,"byte_end":10374254,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374259,"byte_end":10374329,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374334,"byte_end":10374403,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374408,"byte_end":10374442,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374447,"byte_end":10374450,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374455,"byte_end":10374483,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374488,"byte_end":10374491,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374496,"byte_end":10374566,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374571,"byte_end":10374647,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374652,"byte_end":10374664,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374669,"byte_end":10374672,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374677,"byte_end":10374691,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374696,"byte_end":10374699,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374704,"byte_end":10374729,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374734,"byte_end":10374737,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374742,"byte_end":10374755,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374760,"byte_end":10374790,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374795,"byte_end":10374798,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374803,"byte_end":10374819,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374824,"byte_end":10374827,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374832,"byte_end":10374850,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374855,"byte_end":10374894,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374899,"byte_end":10374952,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374957,"byte_end":10374960,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10374965,"byte_end":10375007,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375012,"byte_end":10375061,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375066,"byte_end":10375085,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375090,"byte_end":10375093,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375098,"byte_end":10375112,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375117,"byte_end":10375122,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375127,"byte_end":10375134,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376456,"byte_end":10376462,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375309,"byte_end":10375353,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375358,"byte_end":10375361,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375366,"byte_end":10375440,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375445,"byte_end":10375519,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375524,"byte_end":10375595,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operating-system will start rejecting connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375600,"byte_end":10375654,"line_start":451,"line_end":451,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375659,"byte_end":10375662,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375667,"byte_end":10375715,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375720,"byte_end":10375723,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375728,"byte_end":10375804,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375809,"byte_end":10375884,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375889,"byte_end":10375935,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375940,"byte_end":10375943,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375948,"byte_end":10375962,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375967,"byte_end":10375970,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10375975,"byte_end":10376002,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376007,"byte_end":10376010,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376015,"byte_end":10376028,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376033,"byte_end":10376063,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376068,"byte_end":10376071,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376076,"byte_end":10376092,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376097,"byte_end":10376100,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376105,"byte_end":10376123,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376128,"byte_end":10376167,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376172,"byte_end":10376225,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376230,"byte_end":10376233,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376238,"byte_end":10376280,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376285,"byte_end":10376312,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376317,"byte_end":10376320,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376325,"byte_end":10376369,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376374,"byte_end":10376395,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376400,"byte_end":10376403,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376408,"byte_end":10376422,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376427,"byte_end":10376432,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376437,"byte_end":10376444,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378930,"byte_end":10378938,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378597,"byte_end":10378661,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378662,"byte_end":10378665,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378666,"byte_end":10378754,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378755,"byte_end":10378782,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378783,"byte_end":10378786,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378787,"byte_end":10378815,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378816,"byte_end":10378849,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378850,"byte_end":10378901,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379552,"byte_end":10379561,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10378960,"byte_end":10379025,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379026,"byte_end":10379029,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379030,"byte_end":10379116,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379117,"byte_end":10379169,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379170,"byte_end":10379173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379174,"byte_end":10379255,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379256,"byte_end":10379291,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379292,"byte_end":10379295,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379296,"byte_end":10379324,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379325,"byte_end":10379358,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379359,"byte_end":10379406,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379407,"byte_end":10379469,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379470,"byte_end":10379523,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380877,"byte_end":10380886,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379735,"byte_end":10379809,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379814,"byte_end":10379887,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379892,"byte_end":10379906,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379911,"byte_end":10379914,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379919,"byte_end":10379990,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379995,"byte_end":10380069,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380074,"byte_end":10380098,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380103,"byte_end":10380106,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380111,"byte_end":10380184,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380189,"byte_end":10380192,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380197,"byte_end":10380211,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380216,"byte_end":10380219,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380224,"byte_end":10380237,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380242,"byte_end":10380277,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380282,"byte_end":10380312,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380317,"byte_end":10380320,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380325,"byte_end":10380358,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380363,"byte_end":10380366,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380371,"byte_end":10380389,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380394,"byte_end":10380433,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380438,"byte_end":10380507,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380512,"byte_end":10380560,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380565,"byte_end":10380595,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380600,"byte_end":10380645,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380650,"byte_end":10380653,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380658,"byte_end":10380680,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380685,"byte_end":10380730,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380735,"byte_end":10380753,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380758,"byte_end":10380761,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380766,"byte_end":10380780,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380785,"byte_end":10380790,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380795,"byte_end":10380802,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380807,"byte_end":10380810,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10380815,"byte_end":10380865,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382346,"byte_end":10382350,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381048,"byte_end":10381118,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381123,"byte_end":10381192,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381197,"byte_end":10381236,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381241,"byte_end":10381244,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381249,"byte_end":10381317,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381322,"byte_end":10381325,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381330,"byte_end":10381370,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381375,"byte_end":10381378,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381383,"byte_end":10381397,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381402,"byte_end":10381405,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381410,"byte_end":10381423,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381428,"byte_end":10381458,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381463,"byte_end":10381495,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381500,"byte_end":10381526,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381531,"byte_end":10381534,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381539,"byte_end":10381557,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381562,"byte_end":10381613,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381618,"byte_end":10381646,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381651,"byte_end":10381720,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381725,"byte_end":10381773,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381778,"byte_end":10381781,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381786,"byte_end":10381815,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381820,"byte_end":10381849,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381854,"byte_end":10381857,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381862,"byte_end":10381889,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381894,"byte_end":10381941,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381946,"byte_end":10381949,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381954,"byte_end":10381978,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10381983,"byte_end":10382042,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382047,"byte_end":10382086,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382091,"byte_end":10382094,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382099,"byte_end":10382113,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382118,"byte_end":10382123,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382128,"byte_end":10382135,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382140,"byte_end":10382143,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382148,"byte_end":10382213,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382218,"byte_end":10382221,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382226,"byte_end":10382272,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382277,"byte_end":10382328,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384880,"byte_end":10384893,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3207}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384529,"byte_end":10384595,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384596,"byte_end":10384599,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384600,"byte_end":10384687,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384688,"byte_end":10384722,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384723,"byte_end":10384726,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384727,"byte_end":10384755,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384756,"byte_end":10384799,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384800,"byte_end":10384851,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385619,"byte_end":10385633,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3211},{"krate":0,"index":3212}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384926,"byte_end":10384993,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384994,"byte_end":10384997,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10384998,"byte_end":10385085,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385086,"byte_end":10385163,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385164,"byte_end":10385221,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385222,"byte_end":10385225,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385226,"byte_end":10385312,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385313,"byte_end":10385348,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385349,"byte_end":10385352,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385353,"byte_end":10385381,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385382,"byte_end":10385425,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385426,"byte_end":10385473,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385474,"byte_end":10385536,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10385537,"byte_end":10385590,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386598,"byte_end":10386610,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386466,"byte_end":10386548,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386549,"byte_end":10386569,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386611,"byte_end":10386628,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386630,"byte_end":10386648,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387194,"byte_end":10387201,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386931,"byte_end":10387000,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387005,"byte_end":10387069,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387074,"byte_end":10387126,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387131,"byte_end":10387134,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387139,"byte_end":10387182,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388451,"byte_end":10388460,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387308,"byte_end":10387382,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387387,"byte_end":10387460,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387465,"byte_end":10387479,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387484,"byte_end":10387487,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387492,"byte_end":10387563,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387568,"byte_end":10387642,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387647,"byte_end":10387671,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387676,"byte_end":10387679,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387684,"byte_end":10387757,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387762,"byte_end":10387765,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387770,"byte_end":10387784,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387789,"byte_end":10387792,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387797,"byte_end":10387810,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387815,"byte_end":10387850,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387855,"byte_end":10387885,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387890,"byte_end":10387893,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387898,"byte_end":10387931,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387936,"byte_end":10387939,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387944,"byte_end":10387962,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10387967,"byte_end":10388006,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388011,"byte_end":10388076,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388081,"byte_end":10388134,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388139,"byte_end":10388169,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388174,"byte_end":10388219,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388224,"byte_end":10388227,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388232,"byte_end":10388254,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388259,"byte_end":10388304,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388309,"byte_end":10388327,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388332,"byte_end":10388335,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388340,"byte_end":10388354,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388359,"byte_end":10388364,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388369,"byte_end":10388376,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388381,"byte_end":10388384,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388389,"byte_end":10388439,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389925,"byte_end":10389929,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388626,"byte_end":10388696,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388701,"byte_end":10388770,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388775,"byte_end":10388814,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388819,"byte_end":10388822,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388827,"byte_end":10388895,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388900,"byte_end":10388903,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388908,"byte_end":10388948,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388953,"byte_end":10388956,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388961,"byte_end":10388975,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388980,"byte_end":10388983,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10388988,"byte_end":10389001,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389006,"byte_end":10389036,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389041,"byte_end":10389073,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389078,"byte_end":10389104,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389109,"byte_end":10389112,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389117,"byte_end":10389135,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389140,"byte_end":10389191,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389196,"byte_end":10389224,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389229,"byte_end":10389294,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389299,"byte_end":10389352,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389357,"byte_end":10389360,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389365,"byte_end":10389394,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389399,"byte_end":10389428,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389433,"byte_end":10389436,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389441,"byte_end":10389468,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389473,"byte_end":10389520,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389525,"byte_end":10389528,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389533,"byte_end":10389557,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389562,"byte_end":10389621,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389626,"byte_end":10389665,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389670,"byte_end":10389673,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389678,"byte_end":10389692,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389697,"byte_end":10389702,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389707,"byte_end":10389714,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389719,"byte_end":10389722,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389727,"byte_end":10389792,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389797,"byte_end":10389800,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389805,"byte_end":10389851,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10389856,"byte_end":10389907,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390604,"byte_end":10390611,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390341,"byte_end":10390410,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390415,"byte_end":10390479,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390484,"byte_end":10390536,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390541,"byte_end":10390544,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390549,"byte_end":10390592,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390916,"byte_end":10390922,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390717,"byte_end":10390789,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390794,"byte_end":10390863,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390868,"byte_end":10390904,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3222},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394837,"byte_end":10394846,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3223}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396367,"byte_end":10396374,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394925,"byte_end":10394969,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394974,"byte_end":10394977,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394982,"byte_end":10395056,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395061,"byte_end":10395131,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395136,"byte_end":10395209,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395214,"byte_end":10395286,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395291,"byte_end":10395362,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395367,"byte_end":10395421,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395426,"byte_end":10395429,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395434,"byte_end":10395510,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395515,"byte_end":10395524,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395529,"byte_end":10395532,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395537,"byte_end":10395591,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395596,"byte_end":10395643,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395648,"byte_end":10395651,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395656,"byte_end":10395670,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395675,"byte_end":10395678,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395683,"byte_end":10395696,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395701,"byte_end":10395731,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395736,"byte_end":10395769,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395774,"byte_end":10395800,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395805,"byte_end":10395808,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395813,"byte_end":10395831,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395836,"byte_end":10395887,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395892,"byte_end":10395920,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395925,"byte_end":10395994,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10395999,"byte_end":10396002,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396007,"byte_end":10396034,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396039,"byte_end":10396088,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396093,"byte_end":10396096,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396101,"byte_end":10396115,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396120,"byte_end":10396125,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396130,"byte_end":10396137,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396142,"byte_end":10396145,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396150,"byte_end":10396221,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396226,"byte_end":10396229,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396234,"byte_end":10396291,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10396296,"byte_end":10396349,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399098,"byte_end":10399106,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10397981,"byte_end":10398038,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398043,"byte_end":10398046,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398051,"byte_end":10398121,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398126,"byte_end":10398202,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398207,"byte_end":10398278,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398283,"byte_end":10398305,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398310,"byte_end":10398313,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398318,"byte_end":10398332,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398337,"byte_end":10398340,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398345,"byte_end":10398363,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398368,"byte_end":10398394,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398399,"byte_end":10398429,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398434,"byte_end":10398437,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398442,"byte_end":10398460,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398465,"byte_end":10398516,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398521,"byte_end":10398595,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398600,"byte_end":10398642,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398647,"byte_end":10398701,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398706,"byte_end":10398720,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398725,"byte_end":10398730,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398735,"byte_end":10398742,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398747,"byte_end":10398750,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398755,"byte_end":10398767,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398772,"byte_end":10398775,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398780,"byte_end":10398840,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398845,"byte_end":10398848,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398853,"byte_end":10398923,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10398928,"byte_end":10399001,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399006,"byte_end":10399086,"line_start":188,"line_end":188,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400746,"byte_end":10400754,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399299,"byte_end":10399367,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399372,"byte_end":10399375,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have nonblocking mode set as `true`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399380,"byte_end":10399462,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399467,"byte_end":10399533,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399538,"byte_end":10399541,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399546,"byte_end":10399560,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399565,"byte_end":10399568,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399573,"byte_end":10399580,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399585,"byte_end":10399611,"line_start":203,"line_end":203,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399616,"byte_end":10399638,"line_start":204,"line_end":204,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399643,"byte_end":10399675,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399680,"byte_end":10399712,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399717,"byte_end":10399752,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399757,"byte_end":10399760,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399765,"byte_end":10399783,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399788,"byte_end":10399839,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399844,"byte_end":10399877,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399882,"byte_end":10399949,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10399954,"byte_end":10399995,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400000,"byte_end":10400093,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400098,"byte_end":10400155,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400160,"byte_end":10400171,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400176,"byte_end":10400237,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400242,"byte_end":10400304,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400309,"byte_end":10400375,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400380,"byte_end":10400427,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400432,"byte_end":10400478,"line_start":221,"line_end":221,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400483,"byte_end":10400526,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400531,"byte_end":10400545,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400550,"byte_end":10400555,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400560,"byte_end":10400567,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400572,"byte_end":10400612,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400617,"byte_end":10400665,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10400670,"byte_end":10400734,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401793,"byte_end":10401803,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401394,"byte_end":10401453,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401458,"byte_end":10401461,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401466,"byte_end":10401480,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401485,"byte_end":10401488,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401493,"byte_end":10401506,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401511,"byte_end":10401541,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401546,"byte_end":10401549,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401554,"byte_end":10401618,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401623,"byte_end":10401684,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401689,"byte_end":10401692,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401697,"byte_end":10401740,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401745,"byte_end":10401757,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401762,"byte_end":10401769,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401774,"byte_end":10401781,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402282,"byte_end":10402291,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401879,"byte_end":10401943,"line_start":267,"line_end":267,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401948,"byte_end":10401951,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401956,"byte_end":10401970,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401975,"byte_end":10401978,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10401983,"byte_end":10401996,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402001,"byte_end":10402031,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402036,"byte_end":10402039,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402044,"byte_end":10402108,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402113,"byte_end":10402174,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402179,"byte_end":10402182,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402187,"byte_end":10402229,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402234,"byte_end":10402246,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402251,"byte_end":10402258,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402263,"byte_end":10402270,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403782,"byte_end":10403791,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402366,"byte_end":10402441,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402446,"byte_end":10402519,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402524,"byte_end":10402538,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402543,"byte_end":10402546,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402551,"byte_end":10402613,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402618,"byte_end":10402690,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402695,"byte_end":10402759,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402764,"byte_end":10402818,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402823,"byte_end":10402826,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402831,"byte_end":10402849,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402854,"byte_end":10402857,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402862,"byte_end":10402887,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402892,"byte_end":10402895,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402900,"byte_end":10402951,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10402956,"byte_end":10403039,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403044,"byte_end":10403099,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403104,"byte_end":10403107,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403112,"byte_end":10403124,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403129,"byte_end":10403132,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403137,"byte_end":10403212,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403217,"byte_end":10403220,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403225,"byte_end":10403239,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403244,"byte_end":10403247,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403252,"byte_end":10403265,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403270,"byte_end":10403305,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403310,"byte_end":10403340,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403345,"byte_end":10403348,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403353,"byte_end":10403386,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403391,"byte_end":10403394,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403399,"byte_end":10403417,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403422,"byte_end":10403461,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403466,"byte_end":10403531,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403536,"byte_end":10403566,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403571,"byte_end":10403616,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403621,"byte_end":10403624,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403629,"byte_end":10403651,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403656,"byte_end":10403698,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403703,"byte_end":10403721,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403726,"byte_end":10403729,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403734,"byte_end":10403748,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403753,"byte_end":10403758,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10403763,"byte_end":10403770,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406863,"byte_end":10406868,"line_start":413,"line_end":413,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404598,"byte_end":10404645,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404650,"byte_end":10404653,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404658,"byte_end":10404732,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404737,"byte_end":10404812,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404817,"byte_end":10404855,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404860,"byte_end":10404863,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404868,"byte_end":10404882,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404887,"byte_end":10404890,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404895,"byte_end":10404965,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404970,"byte_end":10404984,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404989,"byte_end":10404992,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10404997,"byte_end":10405010,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405015,"byte_end":10405043,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405048,"byte_end":10405078,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405083,"byte_end":10405109,"line_start":367,"line_end":367,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405114,"byte_end":10405130,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405135,"byte_end":10405138,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405143,"byte_end":10405161,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405166,"byte_end":10405217,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405222,"byte_end":10405287,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405292,"byte_end":10405295,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405300,"byte_end":10405314,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405319,"byte_end":10405404,"line_start":375,"line_end":375,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405409,"byte_end":10405412,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405417,"byte_end":10405453,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405458,"byte_end":10405503,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405508,"byte_end":10405582,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405587,"byte_end":10405649,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405654,"byte_end":10405704,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405709,"byte_end":10405739,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405744,"byte_end":10405805,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405810,"byte_end":10405831,"line_start":384,"line_end":384,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405836,"byte_end":10405912,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405917,"byte_end":10405950,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405955,"byte_end":10405976,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10405981,"byte_end":10406012,"line_start":388,"line_end":388,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406017,"byte_end":10406062,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406067,"byte_end":10406088,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406093,"byte_end":10406110,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406115,"byte_end":10406118,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406123,"byte_end":10406136,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406141,"byte_end":10406144,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406149,"byte_end":10406185,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406190,"byte_end":10406265,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406270,"byte_end":10406332,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406337,"byte_end":10406393,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406398,"byte_end":10406428,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406433,"byte_end":10406487,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406492,"byte_end":10406513,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406518,"byte_end":10406594,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406599,"byte_end":10406631,"line_start":403,"line_end":403,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406636,"byte_end":10406657,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406662,"byte_end":10406693,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406698,"byte_end":10406743,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406748,"byte_end":10406769,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406774,"byte_end":10406791,"line_start":408,"line_end":408,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406796,"byte_end":10406809,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406814,"byte_end":10406823,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406828,"byte_end":10406833,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10406838,"byte_end":10406845,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408388,"byte_end":10408396,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407025,"byte_end":10407068,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407073,"byte_end":10407076,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407081,"byte_end":10407158,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407163,"byte_end":10407192,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407197,"byte_end":10407200,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407205,"byte_end":10407219,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407224,"byte_end":10407227,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407232,"byte_end":10407245,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407250,"byte_end":10407280,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407285,"byte_end":10407311,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407316,"byte_end":10407332,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407337,"byte_end":10407340,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407345,"byte_end":10407363,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407368,"byte_end":10407419,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407424,"byte_end":10407452,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407457,"byte_end":10407522,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407527,"byte_end":10407530,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407535,"byte_end":10407571,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407576,"byte_end":10407579,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407584,"byte_end":10407598,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407603,"byte_end":10407652,"line_start":438,"line_end":438,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407657,"byte_end":10407694,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407699,"byte_end":10407702,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407707,"byte_end":10407777,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407782,"byte_end":10407840,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407845,"byte_end":10407890,"line_start":443,"line_end":443,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407895,"byte_end":10407921,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407926,"byte_end":10407962,"line_start":445,"line_end":445,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407967,"byte_end":10407993,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10407998,"byte_end":10408015,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408020,"byte_end":10408092,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408097,"byte_end":10408126,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408131,"byte_end":10408148,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408153,"byte_end":10408180,"line_start":451,"line_end":451,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408185,"byte_end":10408226,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408231,"byte_end":10408248,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408253,"byte_end":10408266,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408271,"byte_end":10408280,"line_start":455,"line_end":455,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408285,"byte_end":10408288,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408293,"byte_end":10408329,"line_start":457,"line_end":457,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408334,"byte_end":10408348,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408353,"byte_end":10408358,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408363,"byte_end":10408370,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409768,"byte_end":10409783,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408497,"byte_end":10408526,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408531,"byte_end":10408534,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408539,"byte_end":10408613,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408618,"byte_end":10408692,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408697,"byte_end":10408770,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408775,"byte_end":10408785,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408790,"byte_end":10408793,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408798,"byte_end":10408866,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408871,"byte_end":10408942,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10408947,"byte_end":10409006,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409011,"byte_end":10409071,"line_start":476,"line_end":476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409076,"byte_end":10409079,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409084,"byte_end":10409159,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409164,"byte_end":10409239,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409244,"byte_end":10409312,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409317,"byte_end":10409320,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409325,"byte_end":10409343,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409348,"byte_end":10409351,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409356,"byte_end":10409381,"line_start":484,"line_end":484,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409386,"byte_end":10409389,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409394,"byte_end":10409459,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409464,"byte_end":10409531,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409536,"byte_end":10409591,"line_start":488,"line_end":488,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409596,"byte_end":10409599,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409604,"byte_end":10409616,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409621,"byte_end":10409624,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409629,"byte_end":10409704,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409709,"byte_end":10409712,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409717,"byte_end":10409756,"line_start":494,"line_end":494,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412119,"byte_end":10412127,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409916,"byte_end":10409992,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10409997,"byte_end":10410022,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410027,"byte_end":10410030,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410035,"byte_end":10410111,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410116,"byte_end":10410184,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410189,"byte_end":10410263,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410268,"byte_end":10410323,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410328,"byte_end":10410331,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410336,"byte_end":10410406,"line_start":507,"line_end":507,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410411,"byte_end":10410414,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410419,"byte_end":10410460,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410465,"byte_end":10410500,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410505,"byte_end":10410508,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410513,"byte_end":10410525,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410530,"byte_end":10410533,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410538,"byte_end":10410609,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410614,"byte_end":10410690,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410695,"byte_end":10410769,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410774,"byte_end":10410823,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410828,"byte_end":10410831,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410836,"byte_end":10410850,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410855,"byte_end":10410858,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410863,"byte_end":10410876,"line_start":521,"line_end":521,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410881,"byte_end":10410911,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410916,"byte_end":10410942,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410947,"byte_end":10410963,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410968,"byte_end":10410971,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410976,"byte_end":10410994,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10410999,"byte_end":10411050,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411055,"byte_end":10411083,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411088,"byte_end":10411153,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411158,"byte_end":10411161,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411166,"byte_end":10411180,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411185,"byte_end":10411234,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411239,"byte_end":10411276,"line_start":533,"line_end":533,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411281,"byte_end":10411284,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411289,"byte_end":10411362,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411367,"byte_end":10411413,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411418,"byte_end":10411454,"line_start":537,"line_end":537,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411459,"byte_end":10411462,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411467,"byte_end":10411537,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411542,"byte_end":10411600,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411605,"byte_end":10411650,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411655,"byte_end":10411686,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411691,"byte_end":10411717,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411722,"byte_end":10411771,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411776,"byte_end":10411793,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411798,"byte_end":10411870,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411875,"byte_end":10411904,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411909,"byte_end":10411926,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411931,"byte_end":10411958,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10411963,"byte_end":10412004,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412009,"byte_end":10412026,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412031,"byte_end":10412044,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412049,"byte_end":10412058,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412063,"byte_end":10412066,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412071,"byte_end":10412085,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412090,"byte_end":10412095,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412100,"byte_end":10412107,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10415057,"byte_end":10415074,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"try_read_vectored","qualname":"<TcpStream>::try_read_vectored","value":"pub fn try_read_vectored(&Self, &mut [io::IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffers, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffers, returning","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412323,"byte_end":10412396,"line_start":566,"line_end":566,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412401,"byte_end":10412430,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412435,"byte_end":10412438,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412443,"byte_end":10412513,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method behaves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412518,"byte_end":10412590,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ equivalently to a single call to [`try_read()`] with concatenated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412595,"byte_end":10412664,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412669,"byte_end":10412681,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412686,"byte_end":10412689,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412694,"byte_end":10412770,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412775,"byte_end":10412843,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/ `try_read_vectored()` is non-blocking, the buffer does not have to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412848,"byte_end":10412921,"line_start":576,"line_end":576,"column_start":5,"column_end":78}},{"value":"/ stored by the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412926,"byte_end":10412991,"line_start":577,"line_end":577,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10412996,"byte_end":10412999,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413004,"byte_end":10413074,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413079,"byte_end":10413082,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`try_read()`]: TcpStream::try_read()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413087,"byte_end":10413128,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413133,"byte_end":10413174,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413179,"byte_end":10413214,"line_start":583,"line_end":583,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413219,"byte_end":10413222,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413227,"byte_end":10413239,"line_start":585,"line_end":585,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413244,"byte_end":10413247,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413252,"byte_end":10413323,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413328,"byte_end":10413404,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413409,"byte_end":10413483,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413488,"byte_end":10413537,"line_start":590,"line_end":590,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413542,"byte_end":10413545,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413550,"byte_end":10413564,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413569,"byte_end":10413572,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413577,"byte_end":10413590,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413595,"byte_end":10413625,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413630,"byte_end":10413656,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, IoSliceMut};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413661,"byte_end":10413697,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413702,"byte_end":10413705,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413710,"byte_end":10413728,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413733,"byte_end":10413784,"line_start":600,"line_end":600,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413789,"byte_end":10413817,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413822,"byte_end":10413887,"line_start":602,"line_end":602,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413892,"byte_end":10413895,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413900,"byte_end":10413914,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413919,"byte_end":10413968,"line_start":605,"line_end":605,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10413973,"byte_end":10414010,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414015,"byte_end":10414018,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414023,"byte_end":10414096,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414101,"byte_end":10414147,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/         let mut buf_a = [0; 512];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414152,"byte_end":10414189,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/         let mut buf_b = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414194,"byte_end":10414232,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/         let mut bufs = [","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414237,"byte_end":10414265,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/             IoSliceMut::new(&mut buf_a),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414270,"byte_end":10414314,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/             IoSliceMut::new(&mut buf_b),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414319,"byte_end":10414363,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/         ];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414368,"byte_end":10414382,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414387,"byte_end":10414390,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414395,"byte_end":10414465,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414470,"byte_end":10414528,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read_vectored(&mut bufs) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414533,"byte_end":10414588,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414593,"byte_end":10414624,"line_start":620,"line_end":620,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414629,"byte_end":10414655,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414660,"byte_end":10414709,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414714,"byte_end":10414731,"line_start":623,"line_end":623,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414736,"byte_end":10414808,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414813,"byte_end":10414842,"line_start":625,"line_end":625,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414847,"byte_end":10414864,"line_start":626,"line_end":626,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414869,"byte_end":10414896,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414901,"byte_end":10414942,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414947,"byte_end":10414964,"line_start":629,"line_end":629,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414969,"byte_end":10414982,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10414987,"byte_end":10414996,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10415001,"byte_end":10415004,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10415009,"byte_end":10415023,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10415028,"byte_end":10415033,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10415038,"byte_end":10415045,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10417685,"byte_end":10417697,"line_start":702,"line_end":702,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419576,"byte_end":10419584,"line_start":762,"line_end":762,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418335,"byte_end":10418378,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418383,"byte_end":10418386,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418391,"byte_end":10418468,"line_start":725,"line_end":725,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418473,"byte_end":10418503,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418508,"byte_end":10418511,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418516,"byte_end":10418530,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418535,"byte_end":10418538,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418543,"byte_end":10418556,"line_start":730,"line_end":730,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418561,"byte_end":10418591,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418596,"byte_end":10418622,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418627,"byte_end":10418643,"line_start":733,"line_end":733,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418648,"byte_end":10418651,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418656,"byte_end":10418674,"line_start":735,"line_end":735,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418679,"byte_end":10418730,"line_start":736,"line_end":736,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418735,"byte_end":10418763,"line_start":737,"line_end":737,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418768,"byte_end":10418833,"line_start":738,"line_end":738,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418838,"byte_end":10418841,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418846,"byte_end":10418860,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418865,"byte_end":10418914,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418919,"byte_end":10418956,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418961,"byte_end":10418964,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10418969,"byte_end":10419040,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419045,"byte_end":10419103,"line_start":745,"line_end":745,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419108,"byte_end":10419160,"line_start":746,"line_end":746,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419165,"byte_end":10419191,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419196,"byte_end":10419222,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419227,"byte_end":10419244,"line_start":749,"line_end":749,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419249,"byte_end":10419321,"line_start":750,"line_end":750,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419326,"byte_end":10419355,"line_start":751,"line_end":751,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419360,"byte_end":10419377,"line_start":752,"line_end":752,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419382,"byte_end":10419409,"line_start":753,"line_end":753,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419414,"byte_end":10419455,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419460,"byte_end":10419477,"line_start":755,"line_end":755,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419482,"byte_end":10419495,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419500,"byte_end":10419509,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419514,"byte_end":10419517,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419522,"byte_end":10419536,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419541,"byte_end":10419546,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419551,"byte_end":10419558,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420945,"byte_end":10420961,"line_start":796,"line_end":796,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419685,"byte_end":10419715,"line_start":767,"line_end":767,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419720,"byte_end":10419723,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419728,"byte_end":10419802,"line_start":769,"line_end":769,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419807,"byte_end":10419881,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419886,"byte_end":10419959,"line_start":771,"line_end":771,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419964,"byte_end":10419974,"line_start":772,"line_end":772,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419979,"byte_end":10419982,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10419987,"byte_end":10420062,"line_start":774,"line_end":774,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420067,"byte_end":10420135,"line_start":775,"line_end":775,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420140,"byte_end":10420212,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420217,"byte_end":10420248,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420253,"byte_end":10420256,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420261,"byte_end":10420336,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420341,"byte_end":10420416,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420421,"byte_end":10420489,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420494,"byte_end":10420497,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420502,"byte_end":10420520,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420525,"byte_end":10420528,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420533,"byte_end":10420558,"line_start":785,"line_end":785,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420563,"byte_end":10420566,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420571,"byte_end":10420636,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420641,"byte_end":10420708,"line_start":788,"line_end":788,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420713,"byte_end":10420768,"line_start":789,"line_end":789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420773,"byte_end":10420776,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420781,"byte_end":10420793,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420798,"byte_end":10420801,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420806,"byte_end":10420881,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420886,"byte_end":10420889,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10420894,"byte_end":10420933,"line_start":795,"line_end":795,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422690,"byte_end":10422699,"line_start":848,"line_end":848,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421095,"byte_end":10421165,"line_start":800,"line_end":800,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421170,"byte_end":10421182,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421187,"byte_end":10421190,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421195,"byte_end":10421267,"line_start":803,"line_end":803,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421272,"byte_end":10421315,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421320,"byte_end":10421323,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421328,"byte_end":10421382,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421387,"byte_end":10421390,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421395,"byte_end":10421407,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421412,"byte_end":10421415,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421420,"byte_end":10421494,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421499,"byte_end":10421569,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421574,"byte_end":10421623,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421628,"byte_end":10421631,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421636,"byte_end":10421650,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421655,"byte_end":10421658,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421663,"byte_end":10421676,"line_start":816,"line_end":816,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421681,"byte_end":10421711,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421716,"byte_end":10421742,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421747,"byte_end":10421763,"line_start":819,"line_end":819,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421768,"byte_end":10421771,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421776,"byte_end":10421794,"line_start":821,"line_end":821,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421799,"byte_end":10421850,"line_start":822,"line_end":822,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421855,"byte_end":10421883,"line_start":823,"line_end":823,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421888,"byte_end":10421953,"line_start":824,"line_end":824,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421958,"byte_end":10421961,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421966,"byte_end":10421980,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10421985,"byte_end":10422034,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422039,"byte_end":10422076,"line_start":828,"line_end":828,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422081,"byte_end":10422084,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422089,"byte_end":10422160,"line_start":830,"line_end":830,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422165,"byte_end":10422223,"line_start":831,"line_end":831,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422228,"byte_end":10422280,"line_start":832,"line_end":832,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422285,"byte_end":10422311,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422316,"byte_end":10422342,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422347,"byte_end":10422364,"line_start":835,"line_end":835,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422369,"byte_end":10422441,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422446,"byte_end":10422475,"line_start":837,"line_end":837,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422480,"byte_end":10422497,"line_start":838,"line_end":838,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422502,"byte_end":10422529,"line_start":839,"line_end":839,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422534,"byte_end":10422575,"line_start":840,"line_end":840,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422580,"byte_end":10422597,"line_start":841,"line_end":841,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422602,"byte_end":10422615,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422620,"byte_end":10422629,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422634,"byte_end":10422637,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422642,"byte_end":10422656,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422661,"byte_end":10422666,"line_start":846,"line_end":846,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422671,"byte_end":10422678,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424759,"byte_end":10424777,"line_start":910,"line_end":910,"column_start":12,"column_end":30},"name":"try_write_vectored","qualname":"<TcpStream>::try_write_vectored","value":"pub fn try_write_vectored(&Self, &[io::IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write several buffers to the stream, returning how many bytes\n were written.","sig":null,"attributes":[{"value":"/ Try to write several buffers to the stream, returning how many bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422893,"byte_end":10422965,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ were written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422970,"byte_end":10422987,"line_start":857,"line_end":857,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10422992,"byte_end":10422995,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Data is written from each buffer in order, with the final buffer read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423000,"byte_end":10423073,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ from possible being only partially consumed. This method behaves","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423078,"byte_end":10423146,"line_start":860,"line_end":860,"column_start":5,"column_end":73}},{"value":"/ equivalently to a single call to [`try_write()`] with concatenated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423151,"byte_end":10423221,"line_start":861,"line_end":861,"column_start":5,"column_end":75}},{"value":"/ buffers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423226,"byte_end":10423238,"line_start":862,"line_end":862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423243,"byte_end":10423246,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423251,"byte_end":10423305,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423310,"byte_end":10423313,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ [`try_write()`]: TcpStream::try_write()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423318,"byte_end":10423361,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423366,"byte_end":10423369,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423374,"byte_end":10423386,"line_start":868,"line_end":868,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423391,"byte_end":10423394,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423399,"byte_end":10423473,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423478,"byte_end":10423548,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423553,"byte_end":10423602,"line_start":872,"line_end":872,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423607,"byte_end":10423610,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423615,"byte_end":10423629,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423634,"byte_end":10423637,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423642,"byte_end":10423655,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423660,"byte_end":10423690,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423695,"byte_end":10423721,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423726,"byte_end":10423742,"line_start":879,"line_end":879,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423747,"byte_end":10423750,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423755,"byte_end":10423773,"line_start":881,"line_end":881,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423778,"byte_end":10423829,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423834,"byte_end":10423862,"line_start":883,"line_end":883,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423867,"byte_end":10423932,"line_start":884,"line_end":884,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423937,"byte_end":10423940,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     let bufs = [io::IoSlice::new(b\"hello \"), io::IoSlice::new(b\"world\")];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10423945,"byte_end":10424022,"line_start":886,"line_end":886,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424027,"byte_end":10424030,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424035,"byte_end":10424049,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424054,"byte_end":10424103,"line_start":889,"line_end":889,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424108,"byte_end":10424145,"line_start":890,"line_end":890,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424150,"byte_end":10424153,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424158,"byte_end":10424229,"line_start":892,"line_end":892,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424234,"byte_end":10424292,"line_start":893,"line_end":893,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write_vectored(&bufs) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424297,"byte_end":10424349,"line_start":894,"line_end":894,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424354,"byte_end":10424380,"line_start":895,"line_end":895,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424385,"byte_end":10424411,"line_start":896,"line_end":896,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424416,"byte_end":10424433,"line_start":897,"line_end":897,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424438,"byte_end":10424510,"line_start":898,"line_end":898,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424515,"byte_end":10424544,"line_start":899,"line_end":899,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424549,"byte_end":10424566,"line_start":900,"line_end":900,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424571,"byte_end":10424598,"line_start":901,"line_end":901,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424603,"byte_end":10424644,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424649,"byte_end":10424666,"line_start":903,"line_end":903,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424671,"byte_end":10424684,"line_start":904,"line_end":904,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424689,"byte_end":10424698,"line_start":905,"line_end":905,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424703,"byte_end":10424706,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424711,"byte_end":10424725,"line_start":907,"line_end":907,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424730,"byte_end":10424735,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424740,"byte_end":10424747,"line_start":909,"line_end":909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426252,"byte_end":10426256,"line_start":955,"line_end":955,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10424995,"byte_end":10425065,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425070,"byte_end":10425139,"line_start":919,"line_end":919,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425144,"byte_end":10425183,"line_start":920,"line_end":920,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425188,"byte_end":10425191,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425196,"byte_end":10425270,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425275,"byte_end":10425335,"line_start":923,"line_end":923,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425340,"byte_end":10425343,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425348,"byte_end":10425362,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425367,"byte_end":10425370,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425375,"byte_end":10425388,"line_start":927,"line_end":927,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425393,"byte_end":10425423,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425428,"byte_end":10425460,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425465,"byte_end":10425491,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425496,"byte_end":10425499,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425504,"byte_end":10425522,"line_start":932,"line_end":932,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425527,"byte_end":10425578,"line_start":933,"line_end":933,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425583,"byte_end":10425611,"line_start":934,"line_end":934,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425616,"byte_end":10425685,"line_start":935,"line_end":935,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425690,"byte_end":10425693,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425698,"byte_end":10425727,"line_start":937,"line_end":937,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425732,"byte_end":10425761,"line_start":938,"line_end":938,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425766,"byte_end":10425769,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425774,"byte_end":10425801,"line_start":940,"line_end":940,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425806,"byte_end":10425850,"line_start":941,"line_end":941,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425855,"byte_end":10425858,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425863,"byte_end":10425887,"line_start":943,"line_end":943,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425892,"byte_end":10425948,"line_start":944,"line_end":944,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425953,"byte_end":10425992,"line_start":945,"line_end":945,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10425997,"byte_end":10426000,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426005,"byte_end":10426019,"line_start":947,"line_end":947,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426024,"byte_end":10426029,"line_start":948,"line_end":948,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426034,"byte_end":10426041,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426046,"byte_end":10426049,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426054,"byte_end":10426119,"line_start":951,"line_end":951,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426124,"byte_end":10426127,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426132,"byte_end":10426178,"line_start":953,"line_end":953,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426183,"byte_end":10426234,"line_start":954,"line_end":954,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427351,"byte_end":10427358,"line_start":989,"line_end":989,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426819,"byte_end":10426881,"line_start":971,"line_end":971,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426886,"byte_end":10426889,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426894,"byte_end":10426958,"line_start":973,"line_end":973,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426963,"byte_end":10426966,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10426971,"byte_end":10427014,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427019,"byte_end":10427022,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427027,"byte_end":10427041,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427046,"byte_end":10427049,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427054,"byte_end":10427067,"line_start":979,"line_end":979,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427072,"byte_end":10427102,"line_start":980,"line_end":980,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427107,"byte_end":10427110,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427115,"byte_end":10427179,"line_start":982,"line_end":982,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427184,"byte_end":10427245,"line_start":983,"line_end":983,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427250,"byte_end":10427253,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427258,"byte_end":10427298,"line_start":985,"line_end":985,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427303,"byte_end":10427315,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427320,"byte_end":10427327,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427332,"byte_end":10427339,"line_start":988,"line_end":988,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428155,"byte_end":10428166,"line_start":1013,"line_end":1013,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427425,"byte_end":10427487,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427492,"byte_end":10427495,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427500,"byte_end":10427569,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427574,"byte_end":10427647,"line_start":996,"line_end":996,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427652,"byte_end":10427725,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427730,"byte_end":10427805,"line_start":998,"line_end":998,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427810,"byte_end":10427828,"line_start":999,"line_end":999,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427833,"byte_end":10427836,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427841,"byte_end":10427855,"line_start":1001,"line_end":1001,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427860,"byte_end":10427863,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427868,"byte_end":10427881,"line_start":1003,"line_end":1003,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427886,"byte_end":10427916,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427921,"byte_end":10427924,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427929,"byte_end":10427993,"line_start":1006,"line_end":1006,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10427998,"byte_end":10428059,"line_start":1007,"line_end":1007,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428064,"byte_end":10428067,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428072,"byte_end":10428102,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428107,"byte_end":10428119,"line_start":1010,"line_end":1010,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428124,"byte_end":10428131,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428136,"byte_end":10428143,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428811,"byte_end":10428817,"line_start":1036,"line_end":1036,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428257,"byte_end":10428329,"line_start":1017,"line_end":1017,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428334,"byte_end":10428345,"line_start":1018,"line_end":1018,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428350,"byte_end":10428353,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428358,"byte_end":10428421,"line_start":1020,"line_end":1020,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428426,"byte_end":10428429,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428434,"byte_end":10428475,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428480,"byte_end":10428483,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428488,"byte_end":10428502,"line_start":1024,"line_end":1024,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428507,"byte_end":10428510,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428515,"byte_end":10428528,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428533,"byte_end":10428563,"line_start":1027,"line_end":1027,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428568,"byte_end":10428571,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428576,"byte_end":10428640,"line_start":1029,"line_end":1029,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428645,"byte_end":10428706,"line_start":1030,"line_end":1030,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428711,"byte_end":10428714,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428719,"byte_end":10428758,"line_start":1032,"line_end":1032,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428763,"byte_end":10428775,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428780,"byte_end":10428787,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428792,"byte_end":10428799,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429796,"byte_end":10429806,"line_start":1063,"line_end":1063,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10428972,"byte_end":10429048,"line_start":1042,"line_end":1042,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429053,"byte_end":10429056,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429061,"byte_end":10429154,"line_start":1044,"line_end":1044,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429159,"byte_end":10429252,"line_start":1045,"line_end":1045,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429257,"byte_end":10429292,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429297,"byte_end":10429300,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429305,"byte_end":10429398,"line_start":1048,"line_end":1048,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429403,"byte_end":10429470,"line_start":1049,"line_end":1049,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429475,"byte_end":10429478,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429483,"byte_end":10429497,"line_start":1051,"line_end":1051,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429502,"byte_end":10429505,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429510,"byte_end":10429523,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429528,"byte_end":10429558,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429563,"byte_end":10429566,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429571,"byte_end":10429635,"line_start":1056,"line_end":1056,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429640,"byte_end":10429701,"line_start":1057,"line_end":1057,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429706,"byte_end":10429709,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429714,"byte_end":10429743,"line_start":1059,"line_end":1059,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429748,"byte_end":10429760,"line_start":1060,"line_end":1060,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429765,"byte_end":10429772,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10429777,"byte_end":10429784,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430905,"byte_end":10430908,"line_start":1101,"line_end":1101,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430393,"byte_end":10430451,"line_start":1083,"line_end":1083,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430456,"byte_end":10430459,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430464,"byte_end":10430524,"line_start":1085,"line_end":1085,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430529,"byte_end":10430532,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430537,"byte_end":10430572,"line_start":1087,"line_end":1087,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430577,"byte_end":10430580,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430585,"byte_end":10430599,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430604,"byte_end":10430607,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430612,"byte_end":10430625,"line_start":1091,"line_end":1091,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430630,"byte_end":10430660,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430665,"byte_end":10430668,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430673,"byte_end":10430737,"line_start":1094,"line_end":1094,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430742,"byte_end":10430803,"line_start":1095,"line_end":1095,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430808,"byte_end":10430811,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430816,"byte_end":10430852,"line_start":1097,"line_end":1097,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430857,"byte_end":10430869,"line_start":1098,"line_end":1098,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430874,"byte_end":10430881,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430886,"byte_end":10430893,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431465,"byte_end":10431472,"line_start":1122,"line_end":1122,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10430970,"byte_end":10431028,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431033,"byte_end":10431036,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431041,"byte_end":10431117,"line_start":1107,"line_end":1107,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431122,"byte_end":10431143,"line_start":1108,"line_end":1108,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431148,"byte_end":10431151,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431156,"byte_end":10431170,"line_start":1110,"line_end":1110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431175,"byte_end":10431178,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431183,"byte_end":10431196,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431201,"byte_end":10431231,"line_start":1113,"line_end":1113,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431236,"byte_end":10431239,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431244,"byte_end":10431308,"line_start":1115,"line_end":1115,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431313,"byte_end":10431374,"line_start":1116,"line_end":1116,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431379,"byte_end":10431382,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431387,"byte_end":10431412,"line_start":1118,"line_end":1118,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431417,"byte_end":10431429,"line_start":1119,"line_end":1119,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431434,"byte_end":10431441,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431446,"byte_end":10431453,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432064,"byte_end":10432069,"line_start":1136,"line_end":1136,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431687,"byte_end":10431723,"line_start":1128,"line_end":1128,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431728,"byte_end":10431805,"line_start":1129,"line_end":1129,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431810,"byte_end":10431856,"line_start":1130,"line_end":1130,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431861,"byte_end":10431864,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431869,"byte_end":10431948,"line_start":1132,"line_end":1132,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10431953,"byte_end":10431996,"line_start":1133,"line_end":1133,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432001,"byte_end":10432004,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432009,"byte_end":10432052,"line_start":1135,"line_end":1135,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432718,"byte_end":10432728,"line_start":1151,"line_end":1151,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432154,"byte_end":10432231,"line_start":1140,"line_end":1140,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432236,"byte_end":10432282,"line_start":1141,"line_end":1141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432287,"byte_end":10432290,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432295,"byte_end":10432373,"line_start":1143,"line_end":1143,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432378,"byte_end":10432426,"line_start":1144,"line_end":1144,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432431,"byte_end":10432434,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432439,"byte_end":10432517,"line_start":1146,"line_end":1146,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432522,"byte_end":10432598,"line_start":1147,"line_end":1147,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432603,"byte_end":10432606,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432611,"byte_end":10432644,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10432649,"byte_end":10432706,"line_start":1150,"line_end":1150,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3229},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440246,"byte_end":10440255,"line_start":122,"line_end":122,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3230}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440792,"byte_end":10440796,"line_start":145,"line_end":145,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440334,"byte_end":10440406,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440411,"byte_end":10440435,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440440,"byte_end":10440443,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440448,"byte_end":10440461,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440466,"byte_end":10440469,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440474,"byte_end":10440487,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440492,"byte_end":10440522,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440527,"byte_end":10440543,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440548,"byte_end":10440551,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440556,"byte_end":10440574,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440579,"byte_end":10440618,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440623,"byte_end":10440681,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440686,"byte_end":10440707,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440712,"byte_end":10440733,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440738,"byte_end":10440752,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440757,"byte_end":10440762,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440767,"byte_end":10440774,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443035,"byte_end":10443043,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441629,"byte_end":10441703,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441708,"byte_end":10441711,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441716,"byte_end":10441786,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441791,"byte_end":10441867,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441872,"byte_end":10441943,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441948,"byte_end":10441970,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441975,"byte_end":10441978,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10441983,"byte_end":10442055,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442060,"byte_end":10442135,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442140,"byte_end":10442193,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442198,"byte_end":10442201,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442206,"byte_end":10442218,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442223,"byte_end":10442226,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442231,"byte_end":10442291,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442296,"byte_end":10442299,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442304,"byte_end":10442374,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442379,"byte_end":10442452,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442457,"byte_end":10442537,"line_start":191,"line_end":191,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442542,"byte_end":10442545,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442550,"byte_end":10442563,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442568,"byte_end":10442571,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442576,"byte_end":10442589,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442594,"byte_end":10442624,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442629,"byte_end":10442666,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442671,"byte_end":10442674,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442679,"byte_end":10442699,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442704,"byte_end":10442745,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442750,"byte_end":10442811,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442816,"byte_end":10442868,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442873,"byte_end":10442909,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442914,"byte_end":10442960,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442965,"byte_end":10442982,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10442987,"byte_end":10442999,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443004,"byte_end":10443011,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443016,"byte_end":10443023,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444013,"byte_end":10444021,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UdpSocket>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443189,"byte_end":10443257,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443262,"byte_end":10443265,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::UdpSocket`] will have nonblocking mode set as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443270,"byte_end":10443344,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443349,"byte_end":10443424,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443429,"byte_end":10443432,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443437,"byte_end":10443451,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443456,"byte_end":10443459,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443464,"byte_end":10443482,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443487,"byte_end":10443513,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443518,"byte_end":10443521,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443526,"byte_end":10443544,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443549,"byte_end":10443600,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443605,"byte_end":10443682,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443687,"byte_end":10443737,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443742,"byte_end":10443785,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443790,"byte_end":10443804,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443809,"byte_end":10443814,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443819,"byte_end":10443826,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443831,"byte_end":10443834,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443839,"byte_end":10443879,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ [`std::net::UdpSocket`]: std::net::UdpSocket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443884,"byte_end":10443932,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::UdpSocket::set_nonblocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10443937,"byte_end":10444001,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445187,"byte_end":10445197,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444661,"byte_end":10444720,"line_start":256,"line_end":256,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444725,"byte_end":10444728,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444733,"byte_end":10444746,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444751,"byte_end":10444754,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444759,"byte_end":10444772,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444777,"byte_end":10444807,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444812,"byte_end":10444849,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444854,"byte_end":10444857,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444862,"byte_end":10444882,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444887,"byte_end":10444928,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444933,"byte_end":10444994,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10444999,"byte_end":10445043,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445048,"byte_end":10445089,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445094,"byte_end":10445134,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445139,"byte_end":10445151,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445156,"byte_end":10445163,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445168,"byte_end":10445175,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446117,"byte_end":10446124,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445273,"byte_end":10445347,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445352,"byte_end":10445425,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445430,"byte_end":10445441,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445446,"byte_end":10445449,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445454,"byte_end":10445467,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445472,"byte_end":10445475,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445480,"byte_end":10445493,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445498,"byte_end":10445528,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445533,"byte_end":10445570,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445575,"byte_end":10445578,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445583,"byte_end":10445603,"line_start":287,"line_end":287,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445608,"byte_end":10445649,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445654,"byte_end":10445739,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445744,"byte_end":10445747,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445752,"byte_end":10445823,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445828,"byte_end":10445865,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445870,"byte_end":10445898,"line_start":293,"line_end":293,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445903,"byte_end":10445931,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445936,"byte_end":10445977,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10445982,"byte_end":10446008,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446013,"byte_end":10446058,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446063,"byte_end":10446075,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446080,"byte_end":10446087,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446092,"byte_end":10446099,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448931,"byte_end":10448936,"line_start":379,"line_end":379,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446647,"byte_end":10446694,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446699,"byte_end":10446702,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446707,"byte_end":10446780,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446785,"byte_end":10446859,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446864,"byte_end":10446902,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446907,"byte_end":10446910,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446915,"byte_end":10446986,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10446991,"byte_end":10447054,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447059,"byte_end":10447091,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447096,"byte_end":10447099,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447104,"byte_end":10447118,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447123,"byte_end":10447126,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447131,"byte_end":10447200,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447205,"byte_end":10447227,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447232,"byte_end":10447235,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447240,"byte_end":10447253,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447258,"byte_end":10447294,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447299,"byte_end":10447329,"line_start":337,"line_end":337,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447334,"byte_end":10447337,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447342,"byte_end":10447360,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447365,"byte_end":10447404,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447409,"byte_end":10447471,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447476,"byte_end":10447524,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447529,"byte_end":10447532,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447537,"byte_end":10447551,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447556,"byte_end":10447641,"line_start":345,"line_end":345,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447646,"byte_end":10447649,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447654,"byte_end":10447690,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447695,"byte_end":10447782,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447787,"byte_end":10447819,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447824,"byte_end":10447865,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447870,"byte_end":10447924,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447929,"byte_end":10447959,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10447964,"byte_end":10448026,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448031,"byte_end":10448052,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448057,"byte_end":10448104,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448109,"byte_end":10448186,"line_start":356,"line_end":356,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448191,"byte_end":10448222,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448227,"byte_end":10448265,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448270,"byte_end":10448291,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448296,"byte_end":10448313,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448318,"byte_end":10448331,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448336,"byte_end":10448339,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448344,"byte_end":10448380,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448385,"byte_end":10448419,"line_start":364,"line_end":364,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448424,"byte_end":10448479,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448484,"byte_end":10448514,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448519,"byte_end":10448572,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448577,"byte_end":10448598,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448603,"byte_end":10448650,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448655,"byte_end":10448732,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448737,"byte_end":10448768,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448773,"byte_end":10448811,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448816,"byte_end":10448837,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448842,"byte_end":10448859,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448864,"byte_end":10448877,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448882,"byte_end":10448891,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448896,"byte_end":10448901,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10448906,"byte_end":10448913,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450538,"byte_end":10450546,"line_start":427,"line_end":427,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449093,"byte_end":10449136,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449141,"byte_end":10449144,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449149,"byte_end":10449218,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449223,"byte_end":10449279,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449284,"byte_end":10449287,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449292,"byte_end":10449366,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449371,"byte_end":10449436,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449441,"byte_end":10449473,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449478,"byte_end":10449481,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449486,"byte_end":10449500,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449505,"byte_end":10449508,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449513,"byte_end":10449526,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449531,"byte_end":10449561,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449566,"byte_end":10449582,"line_start":397,"line_end":397,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449587,"byte_end":10449590,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449595,"byte_end":10449613,"line_start":399,"line_end":399,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449618,"byte_end":10449657,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449662,"byte_end":10449684,"line_start":401,"line_end":401,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449689,"byte_end":10449751,"line_start":402,"line_end":402,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449756,"byte_end":10449804,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449809,"byte_end":10449812,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449817,"byte_end":10449831,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449836,"byte_end":10449885,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449890,"byte_end":10449927,"line_start":407,"line_end":407,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449932,"byte_end":10449935,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10449940,"byte_end":10450010,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450015,"byte_end":10450073,"line_start":410,"line_end":410,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450078,"byte_end":10450129,"line_start":411,"line_end":411,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450134,"byte_end":10450160,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450165,"byte_end":10450191,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450196,"byte_end":10450213,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450218,"byte_end":10450290,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450295,"byte_end":10450324,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450329,"byte_end":10450346,"line_start":417,"line_end":417,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450351,"byte_end":10450378,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450383,"byte_end":10450417,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450422,"byte_end":10450439,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450444,"byte_end":10450457,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450462,"byte_end":10450471,"line_start":422,"line_end":422,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450476,"byte_end":10450479,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450484,"byte_end":10450498,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450503,"byte_end":10450508,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450513,"byte_end":10450520,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451566,"byte_end":10451570,"line_start":463,"line_end":463,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450647,"byte_end":10450716,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450721,"byte_end":10450738,"line_start":433,"line_end":433,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450743,"byte_end":10450746,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450751,"byte_end":10450823,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450828,"byte_end":10450885,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450890,"byte_end":10450893,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450898,"byte_end":10450935,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450940,"byte_end":10450943,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450948,"byte_end":10450960,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450965,"byte_end":10450968,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10450973,"byte_end":10451041,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451046,"byte_end":10451080,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451085,"byte_end":10451088,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451093,"byte_end":10451107,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451112,"byte_end":10451115,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451120,"byte_end":10451133,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451138,"byte_end":10451156,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451161,"byte_end":10451191,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451196,"byte_end":10451199,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451204,"byte_end":10451222,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451227,"byte_end":10451266,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451271,"byte_end":10451293,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451298,"byte_end":10451360,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451365,"byte_end":10451413,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451418,"byte_end":10451421,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451426,"byte_end":10451451,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451456,"byte_end":10451499,"line_start":458,"line_end":458,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451504,"byte_end":10451507,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451512,"byte_end":10451526,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451531,"byte_end":10451536,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451541,"byte_end":10451548,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452658,"byte_end":10452667,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451751,"byte_end":10451824,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451829,"byte_end":10451860,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451865,"byte_end":10451868,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451873,"byte_end":10451945,"line_start":473,"line_end":473,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10451950,"byte_end":10452007,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452012,"byte_end":10452015,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452020,"byte_end":10452095,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452100,"byte_end":10452175,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452180,"byte_end":10452217,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452222,"byte_end":10452225,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452230,"byte_end":10452248,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452253,"byte_end":10452256,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452261,"byte_end":10452286,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452291,"byte_end":10452294,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452299,"byte_end":10452360,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452365,"byte_end":10452423,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452428,"byte_end":10452483,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452488,"byte_end":10452491,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452496,"byte_end":10452508,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452513,"byte_end":10452516,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452521,"byte_end":10452596,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452601,"byte_end":10452604,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452609,"byte_end":10452646,"line_start":492,"line_end":492,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454411,"byte_end":10454419,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452846,"byte_end":10452917,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452922,"byte_end":10452936,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452941,"byte_end":10452944,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10452949,"byte_end":10453020,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453025,"byte_end":10453089,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453094,"byte_end":10453097,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453102,"byte_end":10453115,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453120,"byte_end":10453123,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453128,"byte_end":10453200,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453205,"byte_end":10453255,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453260,"byte_end":10453305,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453310,"byte_end":10453313,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453318,"byte_end":10453332,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453337,"byte_end":10453340,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453345,"byte_end":10453358,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453363,"byte_end":10453393,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453398,"byte_end":10453414,"line_start":515,"line_end":515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453419,"byte_end":10453422,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453427,"byte_end":10453445,"line_start":517,"line_end":517,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453450,"byte_end":10453489,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453494,"byte_end":10453522,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453527,"byte_end":10453589,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453594,"byte_end":10453597,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453602,"byte_end":10453630,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453635,"byte_end":10453683,"line_start":523,"line_end":523,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453688,"byte_end":10453691,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453696,"byte_end":10453710,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453715,"byte_end":10453764,"line_start":526,"line_end":526,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453769,"byte_end":10453806,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453811,"byte_end":10453814,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453819,"byte_end":10453889,"line_start":529,"line_end":529,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453894,"byte_end":10453952,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10453957,"byte_end":10454008,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454013,"byte_end":10454039,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454044,"byte_end":10454070,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454075,"byte_end":10454092,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454097,"byte_end":10454169,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454174,"byte_end":10454203,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454208,"byte_end":10454225,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454230,"byte_end":10454257,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454262,"byte_end":10454296,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454301,"byte_end":10454318,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454323,"byte_end":10454336,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454341,"byte_end":10454350,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454355,"byte_end":10454358,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454363,"byte_end":10454377,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454382,"byte_end":10454387,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454392,"byte_end":10454399,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456232,"byte_end":10456240,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454579,"byte_end":10454622,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454627,"byte_end":10454630,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454635,"byte_end":10454712,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454717,"byte_end":10454746,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454751,"byte_end":10454754,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454759,"byte_end":10454833,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454838,"byte_end":10454903,"line_start":559,"line_end":559,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454908,"byte_end":10454940,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454945,"byte_end":10454948,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454953,"byte_end":10454967,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454972,"byte_end":10454975,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454980,"byte_end":10454993,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10454998,"byte_end":10455028,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455033,"byte_end":10455049,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455054,"byte_end":10455057,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455062,"byte_end":10455080,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455085,"byte_end":10455124,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455129,"byte_end":10455157,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455162,"byte_end":10455224,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455229,"byte_end":10455277,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455282,"byte_end":10455285,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455290,"byte_end":10455304,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455309,"byte_end":10455358,"line_start":575,"line_end":575,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455363,"byte_end":10455400,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455405,"byte_end":10455408,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455413,"byte_end":10455485,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455490,"byte_end":10455529,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455534,"byte_end":10455570,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455575,"byte_end":10455578,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455583,"byte_end":10455653,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455658,"byte_end":10455716,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455721,"byte_end":10455766,"line_start":584,"line_end":584,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455771,"byte_end":10455797,"line_start":585,"line_end":585,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455802,"byte_end":10455854,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455859,"byte_end":10455885,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455890,"byte_end":10455907,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455912,"byte_end":10455984,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10455989,"byte_end":10456018,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456023,"byte_end":10456040,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456045,"byte_end":10456072,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456077,"byte_end":10456111,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456116,"byte_end":10456133,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456138,"byte_end":10456151,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456156,"byte_end":10456165,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456170,"byte_end":10456173,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456178,"byte_end":10456192,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456197,"byte_end":10456202,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456207,"byte_end":10456214,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457453,"byte_end":10457457,"line_start":636,"line_end":636,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456341,"byte_end":10456417,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456422,"byte_end":10456497,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456502,"byte_end":10456505,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456510,"byte_end":10456583,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456588,"byte_end":10456662,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456667,"byte_end":10456718,"line_start":611,"line_end":611,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456723,"byte_end":10456726,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456731,"byte_end":10456803,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456808,"byte_end":10456865,"line_start":614,"line_end":614,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456870,"byte_end":10456873,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456878,"byte_end":10456915,"line_start":616,"line_end":616,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456920,"byte_end":10456923,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456928,"byte_end":10456941,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456946,"byte_end":10456976,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10456981,"byte_end":10456997,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457002,"byte_end":10457005,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457010,"byte_end":10457028,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457033,"byte_end":10457072,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457077,"byte_end":10457099,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457104,"byte_end":10457166,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457171,"byte_end":10457219,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457224,"byte_end":10457227,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457232,"byte_end":10457266,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457271,"byte_end":10457316,"line_start":629,"line_end":629,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457321,"byte_end":10457324,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457329,"byte_end":10457386,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457391,"byte_end":10457394,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457399,"byte_end":10457413,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457418,"byte_end":10457423,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457428,"byte_end":10457435,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458582,"byte_end":10458591,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457642,"byte_end":10457721,"line_start":643,"line_end":643,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457726,"byte_end":10457765,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457770,"byte_end":10457773,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457778,"byte_end":10457862,"line_start":646,"line_end":646,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457867,"byte_end":10457923,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457928,"byte_end":10457931,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10457936,"byte_end":10458020,"line_start":649,"line_end":649,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458025,"byte_end":10458107,"line_start":650,"line_end":650,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458112,"byte_end":10458133,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458138,"byte_end":10458141,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458146,"byte_end":10458164,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458169,"byte_end":10458172,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458177,"byte_end":10458202,"line_start":655,"line_end":655,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458207,"byte_end":10458210,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458215,"byte_end":10458271,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458276,"byte_end":10458347,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458352,"byte_end":10458407,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458412,"byte_end":10458415,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458420,"byte_end":10458432,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458437,"byte_end":10458440,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458445,"byte_end":10458520,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458525,"byte_end":10458528,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10458533,"byte_end":10458570,"line_start":665,"line_end":665,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10461012,"byte_end":10461020,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459185,"byte_end":10459259,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459264,"byte_end":10459335,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459340,"byte_end":10459355,"line_start":686,"line_end":686,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459360,"byte_end":10459363,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459368,"byte_end":10459444,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459449,"byte_end":10459518,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459523,"byte_end":10459574,"line_start":690,"line_end":690,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459579,"byte_end":10459582,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459587,"byte_end":10459657,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459662,"byte_end":10459726,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459731,"byte_end":10459734,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459739,"byte_end":10459753,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459758,"byte_end":10459761,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459766,"byte_end":10459779,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459784,"byte_end":10459814,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459819,"byte_end":10459835,"line_start":699,"line_end":699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459840,"byte_end":10459843,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459848,"byte_end":10459866,"line_start":701,"line_end":701,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459871,"byte_end":10459910,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459915,"byte_end":10459943,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10459948,"byte_end":10460010,"line_start":704,"line_end":704,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460015,"byte_end":10460063,"line_start":705,"line_end":705,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460068,"byte_end":10460071,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460076,"byte_end":10460090,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460095,"byte_end":10460144,"line_start":708,"line_end":708,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460149,"byte_end":10460186,"line_start":709,"line_end":709,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460191,"byte_end":10460194,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460199,"byte_end":10460271,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460276,"byte_end":10460315,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460320,"byte_end":10460356,"line_start":713,"line_end":713,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460361,"byte_end":10460364,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460369,"byte_end":10460439,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460444,"byte_end":10460502,"line_start":716,"line_end":716,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460507,"byte_end":10460552,"line_start":717,"line_end":717,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460557,"byte_end":10460583,"line_start":718,"line_end":718,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460588,"byte_end":10460640,"line_start":719,"line_end":719,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460645,"byte_end":10460671,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460676,"byte_end":10460693,"line_start":721,"line_end":721,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460698,"byte_end":10460770,"line_start":722,"line_end":722,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460775,"byte_end":10460804,"line_start":723,"line_end":723,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460809,"byte_end":10460826,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460831,"byte_end":10460858,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460863,"byte_end":10460897,"line_start":726,"line_end":726,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460902,"byte_end":10460919,"line_start":727,"line_end":727,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460924,"byte_end":10460937,"line_start":728,"line_end":728,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460942,"byte_end":10460951,"line_start":729,"line_end":729,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460956,"byte_end":10460959,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460964,"byte_end":10460978,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460983,"byte_end":10460988,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10460993,"byte_end":10461000,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10463099,"byte_end":10463111,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10465539,"byte_end":10465556,"line_start":852,"line_end":852,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467243,"byte_end":10467250,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466198,"byte_end":10466272,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466277,"byte_end":10466305,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466310,"byte_end":10466313,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466318,"byte_end":10466393,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466398,"byte_end":10466438,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466443,"byte_end":10466446,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466451,"byte_end":10466523,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466528,"byte_end":10466591,"line_start":878,"line_end":878,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466596,"byte_end":10466599,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466604,"byte_end":10466678,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466683,"byte_end":10466734,"line_start":881,"line_end":881,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466739,"byte_end":10466742,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466747,"byte_end":10466795,"line_start":883,"line_end":883,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466800,"byte_end":10466803,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466808,"byte_end":10466821,"line_start":885,"line_end":885,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466826,"byte_end":10466829,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466834,"byte_end":10466847,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466852,"byte_end":10466882,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466887,"byte_end":10466903,"line_start":889,"line_end":889,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466908,"byte_end":10466911,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466916,"byte_end":10466934,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466939,"byte_end":10466978,"line_start":892,"line_end":892,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10466983,"byte_end":10467045,"line_start":893,"line_end":893,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467050,"byte_end":10467124,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467129,"byte_end":10467132,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467137,"byte_end":10467176,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467181,"byte_end":10467184,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467189,"byte_end":10467203,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467208,"byte_end":10467213,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467218,"byte_end":10467225,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468301,"byte_end":10468313,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467644,"byte_end":10467703,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467708,"byte_end":10467711,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467716,"byte_end":10467800,"line_start":915,"line_end":915,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467805,"byte_end":10467887,"line_start":916,"line_end":916,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467892,"byte_end":10467913,"line_start":917,"line_end":917,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467918,"byte_end":10467921,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467926,"byte_end":10467944,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467949,"byte_end":10467952,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467957,"byte_end":10467982,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467987,"byte_end":10467990,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10467995,"byte_end":10468052,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468057,"byte_end":10468116,"line_start":924,"line_end":924,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468121,"byte_end":10468176,"line_start":925,"line_end":925,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468181,"byte_end":10468184,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468189,"byte_end":10468201,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468206,"byte_end":10468209,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468214,"byte_end":10468289,"line_start":929,"line_end":929,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470113,"byte_end":10470124,"line_start":988,"line_end":988,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468562,"byte_end":10468637,"line_start":941,"line_end":941,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468642,"byte_end":10468682,"line_start":942,"line_end":942,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468687,"byte_end":10468690,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468695,"byte_end":10468749,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468754,"byte_end":10468757,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468762,"byte_end":10468775,"line_start":946,"line_end":946,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468780,"byte_end":10468783,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468788,"byte_end":10468840,"line_start":948,"line_end":948,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468845,"byte_end":10468848,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468853,"byte_end":10468917,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10468922,"byte_end":10468996,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469001,"byte_end":10469069,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469074,"byte_end":10469077,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469082,"byte_end":10469143,"line_start":954,"line_end":954,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469148,"byte_end":10469151,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469156,"byte_end":10469169,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469174,"byte_end":10469177,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469182,"byte_end":10469195,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469200,"byte_end":10469230,"line_start":959,"line_end":959,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469235,"byte_end":10469261,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469266,"byte_end":10469282,"line_start":961,"line_end":961,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469287,"byte_end":10469290,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469295,"byte_end":10469313,"line_start":963,"line_end":963,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469318,"byte_end":10469369,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469374,"byte_end":10469436,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469441,"byte_end":10469444,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469449,"byte_end":10469493,"line_start":967,"line_end":967,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469498,"byte_end":10469501,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469506,"byte_end":10469520,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469525,"byte_end":10469562,"line_start":970,"line_end":970,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469567,"byte_end":10469570,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469575,"byte_end":10469639,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469644,"byte_end":10469673,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469678,"byte_end":10469730,"line_start":974,"line_end":974,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469735,"byte_end":10469761,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469766,"byte_end":10469783,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469788,"byte_end":10469860,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469865,"byte_end":10469912,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469917,"byte_end":10469946,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469951,"byte_end":10469968,"line_start":980,"line_end":980,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10469973,"byte_end":10470020,"line_start":981,"line_end":981,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470025,"byte_end":10470038,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470043,"byte_end":10470052,"line_start":983,"line_end":983,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470057,"byte_end":10470060,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470065,"byte_end":10470079,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470084,"byte_end":10470089,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470094,"byte_end":10470101,"line_start":987,"line_end":987,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471396,"byte_end":10471405,"line_start":1026,"line_end":1026,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470548,"byte_end":10470621,"line_start":1001,"line_end":1001,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470626,"byte_end":10470670,"line_start":1002,"line_end":1002,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470675,"byte_end":10470678,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470683,"byte_end":10470756,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470761,"byte_end":10470835,"line_start":1005,"line_end":1005,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470840,"byte_end":10470891,"line_start":1006,"line_end":1006,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470896,"byte_end":10470899,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470904,"byte_end":10470917,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470922,"byte_end":10470925,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470930,"byte_end":10470943,"line_start":1010,"line_end":1010,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470948,"byte_end":10470978,"line_start":1011,"line_end":1011,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10470983,"byte_end":10470999,"line_start":1012,"line_end":1012,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471004,"byte_end":10471007,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471012,"byte_end":10471030,"line_start":1014,"line_end":1014,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471035,"byte_end":10471074,"line_start":1015,"line_end":1015,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471079,"byte_end":10471141,"line_start":1016,"line_end":1016,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471146,"byte_end":10471149,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471154,"byte_end":10471190,"line_start":1018,"line_end":1018,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471195,"byte_end":10471255,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471260,"byte_end":10471263,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471268,"byte_end":10471329,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471334,"byte_end":10471337,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471342,"byte_end":10471356,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471361,"byte_end":10471366,"line_start":1024,"line_end":1024,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471371,"byte_end":10471378,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472293,"byte_end":10472307,"line_start":1050,"line_end":1050,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471609,"byte_end":10471665,"line_start":1033,"line_end":1033,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471670,"byte_end":10471673,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471678,"byte_end":10471762,"line_start":1035,"line_end":1035,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471767,"byte_end":10471849,"line_start":1036,"line_end":1036,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471854,"byte_end":10471875,"line_start":1037,"line_end":1037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471880,"byte_end":10471883,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471888,"byte_end":10471906,"line_start":1039,"line_end":1039,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471911,"byte_end":10471914,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471919,"byte_end":10471944,"line_start":1041,"line_end":1041,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471949,"byte_end":10471952,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10471957,"byte_end":10472013,"line_start":1043,"line_end":1043,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472018,"byte_end":10472108,"line_start":1044,"line_end":1044,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472113,"byte_end":10472168,"line_start":1045,"line_end":1045,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472173,"byte_end":10472176,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472181,"byte_end":10472193,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472198,"byte_end":10472201,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472206,"byte_end":10472281,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474701,"byte_end":10474714,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10472955,"byte_end":10473026,"line_start":1072,"line_end":1072,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473031,"byte_end":10473083,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473088,"byte_end":10473091,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473096,"byte_end":10473172,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473177,"byte_end":10473246,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473251,"byte_end":10473302,"line_start":1077,"line_end":1077,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473307,"byte_end":10473310,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473315,"byte_end":10473385,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473390,"byte_end":10473454,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473459,"byte_end":10473462,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473467,"byte_end":10473481,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473486,"byte_end":10473489,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473494,"byte_end":10473507,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473512,"byte_end":10473542,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473547,"byte_end":10473563,"line_start":1086,"line_end":1086,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473568,"byte_end":10473571,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473576,"byte_end":10473594,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473599,"byte_end":10473638,"line_start":1089,"line_end":1089,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473643,"byte_end":10473671,"line_start":1090,"line_end":1090,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473676,"byte_end":10473738,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473743,"byte_end":10473746,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473751,"byte_end":10473765,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473770,"byte_end":10473819,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473824,"byte_end":10473861,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473866,"byte_end":10473869,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473874,"byte_end":10473946,"line_start":1097,"line_end":1097,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473951,"byte_end":10473990,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10473995,"byte_end":10474031,"line_start":1099,"line_end":1099,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474036,"byte_end":10474039,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474044,"byte_end":10474114,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474119,"byte_end":10474177,"line_start":1102,"line_end":1102,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474182,"byte_end":10474232,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474237,"byte_end":10474272,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474277,"byte_end":10474329,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474334,"byte_end":10474360,"line_start":1106,"line_end":1106,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474365,"byte_end":10474382,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474387,"byte_end":10474459,"line_start":1108,"line_end":1108,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474464,"byte_end":10474493,"line_start":1109,"line_end":1109,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474498,"byte_end":10474515,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474520,"byte_end":10474547,"line_start":1111,"line_end":1111,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474552,"byte_end":10474586,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474591,"byte_end":10474608,"line_start":1113,"line_end":1113,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474613,"byte_end":10474626,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474631,"byte_end":10474640,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474645,"byte_end":10474648,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474653,"byte_end":10474667,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474672,"byte_end":10474677,"line_start":1118,"line_end":1118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474682,"byte_end":10474689,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475974,"byte_end":10475983,"line_start":1156,"line_end":1156,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474897,"byte_end":10474973,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10474978,"byte_end":10475054,"line_start":1127,"line_end":1127,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475059,"byte_end":10475077,"line_start":1128,"line_end":1128,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475082,"byte_end":10475085,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475090,"byte_end":10475101,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475106,"byte_end":10475109,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475114,"byte_end":10475189,"line_start":1132,"line_end":1132,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475194,"byte_end":10475272,"line_start":1133,"line_end":1133,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475277,"byte_end":10475325,"line_start":1134,"line_end":1134,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475330,"byte_end":10475397,"line_start":1135,"line_end":1135,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475402,"byte_end":10475470,"line_start":1136,"line_end":1136,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475475,"byte_end":10475478,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475483,"byte_end":10475497,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475502,"byte_end":10475505,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475510,"byte_end":10475523,"line_start":1140,"line_end":1140,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475528,"byte_end":10475558,"line_start":1141,"line_end":1141,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475563,"byte_end":10475579,"line_start":1142,"line_end":1142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475584,"byte_end":10475587,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475592,"byte_end":10475610,"line_start":1144,"line_end":1144,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475615,"byte_end":10475654,"line_start":1145,"line_end":1145,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475659,"byte_end":10475721,"line_start":1146,"line_end":1146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475726,"byte_end":10475729,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475734,"byte_end":10475770,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475775,"byte_end":10475835,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475840,"byte_end":10475843,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475848,"byte_end":10475907,"line_start":1151,"line_end":1151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475912,"byte_end":10475915,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475920,"byte_end":10475934,"line_start":1153,"line_end":1153,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475939,"byte_end":10475944,"line_start":1154,"line_end":1154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10475949,"byte_end":10475956,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477332,"byte_end":10477346,"line_start":1189,"line_end":1189,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476187,"byte_end":10476263,"line_start":1163,"line_end":1163,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476268,"byte_end":10476317,"line_start":1164,"line_end":1164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476322,"byte_end":10476325,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476330,"byte_end":10476341,"line_start":1166,"line_end":1166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476346,"byte_end":10476349,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476354,"byte_end":10476438,"line_start":1168,"line_end":1168,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476443,"byte_end":10476525,"line_start":1169,"line_end":1169,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476530,"byte_end":10476550,"line_start":1170,"line_end":1170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476555,"byte_end":10476558,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476563,"byte_end":10476638,"line_start":1172,"line_end":1172,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476643,"byte_end":10476716,"line_start":1173,"line_end":1173,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476721,"byte_end":10476769,"line_start":1174,"line_end":1174,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476774,"byte_end":10476841,"line_start":1175,"line_end":1175,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476846,"byte_end":10476914,"line_start":1176,"line_end":1176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476919,"byte_end":10476922,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476927,"byte_end":10476945,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476950,"byte_end":10476953,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476958,"byte_end":10476983,"line_start":1180,"line_end":1180,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476988,"byte_end":10476991,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10476996,"byte_end":10477052,"line_start":1182,"line_end":1182,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477057,"byte_end":10477147,"line_start":1183,"line_end":1183,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477152,"byte_end":10477207,"line_start":1184,"line_end":1184,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477212,"byte_end":10477215,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477220,"byte_end":10477232,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477237,"byte_end":10477240,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477245,"byte_end":10477320,"line_start":1188,"line_end":1188,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478211,"byte_end":10478220,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10477994,"byte_end":10478058,"line_start":1211,"line_end":1211,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478063,"byte_end":10478066,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478071,"byte_end":10478137,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478142,"byte_end":10478145,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478150,"byte_end":10478199,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478466,"byte_end":10478479,"line_start":1224,"line_end":1224,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478289,"byte_end":10478353,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478358,"byte_end":10478361,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478366,"byte_end":10478437,"line_start":1222,"line_end":1222,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478442,"byte_end":10478454,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478808,"byte_end":10478825,"line_start":1233,"line_end":1233,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478562,"byte_end":10478631,"line_start":1228,"line_end":1228,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478636,"byte_end":10478639,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478644,"byte_end":10478718,"line_start":1230,"line_end":1230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478723,"byte_end":10478726,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478731,"byte_end":10478796,"line_start":1232,"line_end":1232,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479155,"byte_end":10479176,"line_start":1244,"line_end":1244,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478902,"byte_end":10478971,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478976,"byte_end":10478979,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10478984,"byte_end":10479058,"line_start":1239,"line_end":1239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479063,"byte_end":10479066,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479071,"byte_end":10479081,"line_start":1241,"line_end":1241,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479086,"byte_end":10479089,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479094,"byte_end":10479143,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479509,"byte_end":10479525,"line_start":1253,"line_end":1253,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479267,"byte_end":10479335,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479340,"byte_end":10479343,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479348,"byte_end":10479421,"line_start":1250,"line_end":1250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479426,"byte_end":10479429,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479434,"byte_end":10479497,"line_start":1252,"line_end":1252,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479994,"byte_end":10480014,"line_start":1266,"line_end":1266,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479600,"byte_end":10479668,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479673,"byte_end":10479676,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479681,"byte_end":10479751,"line_start":1259,"line_end":1259,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479756,"byte_end":10479830,"line_start":1260,"line_end":1260,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479835,"byte_end":10479897,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479902,"byte_end":10479905,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479910,"byte_end":10479920,"line_start":1263,"line_end":1263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479925,"byte_end":10479928,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10479933,"byte_end":10479982,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480353,"byte_end":10480370,"line_start":1275,"line_end":1275,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480105,"byte_end":10480176,"line_start":1270,"line_end":1270,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480181,"byte_end":10480184,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480189,"byte_end":10480263,"line_start":1272,"line_end":1272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480268,"byte_end":10480271,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480276,"byte_end":10480341,"line_start":1274,"line_end":1274,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480704,"byte_end":10480725,"line_start":1286,"line_end":1286,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480447,"byte_end":10480518,"line_start":1279,"line_end":1279,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480523,"byte_end":10480526,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480531,"byte_end":10480607,"line_start":1281,"line_end":1281,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480612,"byte_end":10480615,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480620,"byte_end":10480630,"line_start":1283,"line_end":1283,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480635,"byte_end":10480638,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480643,"byte_end":10480692,"line_start":1285,"line_end":1285,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481322,"byte_end":10481325,"line_start":1309,"line_end":1309,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480816,"byte_end":10480874,"line_start":1290,"line_end":1290,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480879,"byte_end":10480882,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480887,"byte_end":10480947,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480952,"byte_end":10480955,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10480960,"byte_end":10480997,"line_start":1294,"line_end":1294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481002,"byte_end":10481005,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481010,"byte_end":10481024,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481029,"byte_end":10481032,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481037,"byte_end":10481050,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481055,"byte_end":10481085,"line_start":1299,"line_end":1299,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481090,"byte_end":10481108,"line_start":1300,"line_end":1300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481113,"byte_end":10481116,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481121,"byte_end":10481161,"line_start":1302,"line_end":1302,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481166,"byte_end":10481222,"line_start":1303,"line_end":1303,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481227,"byte_end":10481230,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481235,"byte_end":10481269,"line_start":1305,"line_end":1305,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481274,"byte_end":10481286,"line_start":1306,"line_end":1306,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481291,"byte_end":10481298,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481303,"byte_end":10481310,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481873,"byte_end":10481880,"line_start":1331,"line_end":1331,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481387,"byte_end":10481445,"line_start":1313,"line_end":1313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481450,"byte_end":10481453,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481458,"byte_end":10481534,"line_start":1315,"line_end":1315,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481539,"byte_end":10481560,"line_start":1316,"line_end":1316,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481565,"byte_end":10481568,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481573,"byte_end":10481587,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481592,"byte_end":10481595,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481600,"byte_end":10481613,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481618,"byte_end":10481648,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481653,"byte_end":10481671,"line_start":1322,"line_end":1322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481676,"byte_end":10481679,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481684,"byte_end":10481724,"line_start":1324,"line_end":1324,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481729,"byte_end":10481785,"line_start":1325,"line_end":1325,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481790,"byte_end":10481812,"line_start":1326,"line_end":1326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481817,"byte_end":10481820,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481825,"byte_end":10481837,"line_start":1328,"line_end":1328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481842,"byte_end":10481849,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481854,"byte_end":10481861,"line_start":1330,"line_end":1330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482388,"byte_end":10482405,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10481958,"byte_end":10482016,"line_start":1335,"line_end":1335,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482021,"byte_end":10482024,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482029,"byte_end":10482103,"line_start":1337,"line_end":1337,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482108,"byte_end":10482181,"line_start":1338,"line_end":1338,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482186,"byte_end":10482258,"line_start":1339,"line_end":1339,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482263,"byte_end":10482333,"line_start":1340,"line_end":1340,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482338,"byte_end":10482376,"line_start":1341,"line_end":1341,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482860,"byte_end":10482877,"line_start":1351,"line_end":1351,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482544,"byte_end":10482604,"line_start":1346,"line_end":1346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482609,"byte_end":10482612,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482617,"byte_end":10482691,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482696,"byte_end":10482769,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10482774,"byte_end":10482848,"line_start":1350,"line_end":1350,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483234,"byte_end":10483252,"line_start":1360,"line_end":1360,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483010,"byte_end":10483069,"line_start":1355,"line_end":1355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483074,"byte_end":10483077,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483082,"byte_end":10483152,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483157,"byte_end":10483160,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483165,"byte_end":10483222,"line_start":1359,"line_end":1359,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483618,"byte_end":10483636,"line_start":1369,"line_end":1369,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483392,"byte_end":10483453,"line_start":1364,"line_end":1364,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483458,"byte_end":10483461,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483466,"byte_end":10483536,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483541,"byte_end":10483544,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483549,"byte_end":10483606,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484273,"byte_end":10484283,"line_start":1392,"line_end":1392,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483770,"byte_end":10483817,"line_start":1373,"line_end":1373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483822,"byte_end":10483825,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483830,"byte_end":10483844,"line_start":1375,"line_end":1375,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483849,"byte_end":10483856,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483861,"byte_end":10483891,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483896,"byte_end":10483912,"line_start":1378,"line_end":1378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483917,"byte_end":10483920,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483925,"byte_end":10483943,"line_start":1380,"line_end":1380,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483948,"byte_end":10483987,"line_start":1381,"line_end":1381,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10483992,"byte_end":10484018,"line_start":1382,"line_end":1382,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484023,"byte_end":10484083,"line_start":1383,"line_end":1383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484088,"byte_end":10484091,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484096,"byte_end":10484148,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484153,"byte_end":10484198,"line_start":1386,"line_end":1386,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484203,"byte_end":10484212,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484217,"byte_end":10484220,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484225,"byte_end":10484239,"line_start":1389,"line_end":1389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484244,"byte_end":10484249,"line_start":1390,"line_end":1390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484254,"byte_end":10484261,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":106340,"byte_end":106346,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":106277,"byte_end":106330,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":106399,"byte_end":106404,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":106361,"byte_end":106389,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3347},{"krate":0,"index":3952},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4273},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":4447},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4600},{"krate":0,"index":4819},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4852},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4865},{"krate":0,"index":4838},{"krate":0,"index":4839}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10486916,"byte_end":10486938,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10486939,"byte_end":10486942,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10486943,"byte_end":10487016,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487017,"byte_end":10487090,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487091,"byte_end":10487094,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487095,"byte_end":10487173,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487174,"byte_end":10487231,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487232,"byte_end":10487302,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487303,"byte_end":10487375,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487376,"byte_end":10487379,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487380,"byte_end":10487460,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487461,"byte_end":10487541,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487542,"byte_end":10487623,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487624,"byte_end":10487704,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487705,"byte_end":10487708,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487709,"byte_end":10487720,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487721,"byte_end":10487724,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487725,"byte_end":10487804,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487805,"byte_end":10487814,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487815,"byte_end":10487818,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487819,"byte_end":10487832,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487833,"byte_end":10487865,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487866,"byte_end":10487915,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487916,"byte_end":10487919,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487920,"byte_end":10487938,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10487939,"byte_end":10488002,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488003,"byte_end":10488069,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488070,"byte_end":10488073,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488074,"byte_end":10488088,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488089,"byte_end":10488148,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488149,"byte_end":10488152,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488153,"byte_end":10488190,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488191,"byte_end":10488231,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488232,"byte_end":10488235,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488236,"byte_end":10488316,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488317,"byte_end":10488339,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488340,"byte_end":10488403,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488404,"byte_end":10488444,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488445,"byte_end":10488495,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488496,"byte_end":10488531,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488532,"byte_end":10488567,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488568,"byte_end":10488650,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488651,"byte_end":10488686,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488687,"byte_end":10488712,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488713,"byte_end":10488735,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488736,"byte_end":10488739,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488740,"byte_end":10488782,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488783,"byte_end":10488855,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488856,"byte_end":10488933,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488934,"byte_end":10488965,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488966,"byte_end":10488987,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10488988,"byte_end":10489005,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489006,"byte_end":10489021,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489022,"byte_end":10489031,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489032,"byte_end":10489037,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489038,"byte_end":10489045,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489046,"byte_end":10489049,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489050,"byte_end":10489128,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489129,"byte_end":10489207,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489208,"byte_end":10489269,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489270,"byte_end":10489273,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489274,"byte_end":10489327,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489328,"byte_end":10489331,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489332,"byte_end":10489345,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489346,"byte_end":10489378,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489379,"byte_end":10489428,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489429,"byte_end":10489461,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489462,"byte_end":10489465,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489466,"byte_end":10489523,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489524,"byte_end":10489553,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489554,"byte_end":10489588,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489589,"byte_end":10489592,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489593,"byte_end":10489623,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489624,"byte_end":10489651,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489652,"byte_end":10489722,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489723,"byte_end":10489726,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489727,"byte_end":10489745,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489746,"byte_end":10489809,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489810,"byte_end":10489813,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489814,"byte_end":10489855,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489856,"byte_end":10489900,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489901,"byte_end":10489904,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489905,"byte_end":10489989,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10489990,"byte_end":10490016,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490017,"byte_end":10490084,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490085,"byte_end":10490129,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490130,"byte_end":10490184,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490185,"byte_end":10490224,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490225,"byte_end":10490264,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490265,"byte_end":10490351,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490352,"byte_end":10490391,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490392,"byte_end":10490421,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490422,"byte_end":10490448,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490449,"byte_end":10490452,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490453,"byte_end":10490499,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490500,"byte_end":10490576,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490577,"byte_end":10490658,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490659,"byte_end":10490694,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490695,"byte_end":10490720,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490721,"byte_end":10490742,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490743,"byte_end":10490762,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490763,"byte_end":10490776,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490777,"byte_end":10490787,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490788,"byte_end":10490793,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490794,"byte_end":10490801,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490802,"byte_end":10490805,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490806,"byte_end":10490835,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490836,"byte_end":10490839,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490840,"byte_end":10490918,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490919,"byte_end":10490995,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10490996,"byte_end":10491038,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491039,"byte_end":10491042,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491043,"byte_end":10491074,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491075,"byte_end":10491078,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491079,"byte_end":10491154,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491155,"byte_end":10491233,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491234,"byte_end":10491312,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491313,"byte_end":10491397,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491398,"byte_end":10491443,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491444,"byte_end":10491451,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491452,"byte_end":10491475,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491476,"byte_end":10491479,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491480,"byte_end":10491539,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491540,"byte_end":10491587,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491588,"byte_end":10491602,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491603,"byte_end":10491610,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491611,"byte_end":10491614,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491615,"byte_end":10491690,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491691,"byte_end":10491766,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491767,"byte_end":10491770,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491771,"byte_end":10491804,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491805,"byte_end":10491808,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491809,"byte_end":10491887,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491888,"byte_end":10491967,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491968,"byte_end":10491994,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10491995,"byte_end":10492002,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492003,"byte_end":10492026,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492027,"byte_end":10492030,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492031,"byte_end":10492090,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492091,"byte_end":10492148,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492149,"byte_end":10492167,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492168,"byte_end":10492182,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492183,"byte_end":10492190,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492191,"byte_end":10492194,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492195,"byte_end":10492220,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492221,"byte_end":10492224,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492225,"byte_end":10492299,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492300,"byte_end":10492380,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492381,"byte_end":10492460,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492461,"byte_end":10492540,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492541,"byte_end":10492610,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492611,"byte_end":10492614,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492615,"byte_end":10492649,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492650,"byte_end":10492653,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492654,"byte_end":10492733,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492734,"byte_end":10492818,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492819,"byte_end":10492829,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492830,"byte_end":10492833,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492834,"byte_end":10492912,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492913,"byte_end":10492992,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10492993,"byte_end":10493051,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493052,"byte_end":10493055,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493056,"byte_end":10493080,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493081,"byte_end":10493105,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493106,"byte_end":10493140,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493141,"byte_end":10493179,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493180,"byte_end":10493226,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493227,"byte_end":10493277,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493278,"byte_end":10493352,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493353,"byte_end":10493433,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493434,"byte_end":10493496,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493497,"byte_end":10493563,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10493564,"byte_end":10493628,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10528796,"byte_end":10528805,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3886}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529294,"byte_end":10529306,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529214,"byte_end":10529282,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529760,"byte_end":10529768,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529381,"byte_end":10529443,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529448,"byte_end":10529451,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529456,"byte_end":10529470,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529475,"byte_end":10529478,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529483,"byte_end":10529490,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529495,"byte_end":10529514,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529519,"byte_end":10529522,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529527,"byte_end":10529545,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529550,"byte_end":10529571,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529576,"byte_end":10529614,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529619,"byte_end":10529646,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529651,"byte_end":10529681,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529686,"byte_end":10529689,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529694,"byte_end":10529726,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529731,"byte_end":10529736,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529741,"byte_end":10529748,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530623,"byte_end":10530633,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529842,"byte_end":10529921,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529926,"byte_end":10529929,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529934,"byte_end":10529946,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529951,"byte_end":10529954,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10529959,"byte_end":10530033,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530038,"byte_end":10530113,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530118,"byte_end":10530176,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530181,"byte_end":10530184,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530189,"byte_end":10530203,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530208,"byte_end":10530211,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530216,"byte_end":10530235,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530240,"byte_end":10530259,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530264,"byte_end":10530267,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530272,"byte_end":10530290,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530295,"byte_end":10530316,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530321,"byte_end":10530359,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530364,"byte_end":10530391,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530396,"byte_end":10530426,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530431,"byte_end":10530434,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530439,"byte_end":10530466,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530471,"byte_end":10530519,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530524,"byte_end":10530575,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530580,"byte_end":10530589,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530594,"byte_end":10530599,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530604,"byte_end":10530611,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531398,"byte_end":10531412,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530774,"byte_end":10530843,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530848,"byte_end":10530920,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530925,"byte_end":10530938,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530943,"byte_end":10530946,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530951,"byte_end":10530965,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530970,"byte_end":10530973,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10530978,"byte_end":10530997,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531002,"byte_end":10531021,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531026,"byte_end":10531029,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531034,"byte_end":10531052,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531057,"byte_end":10531078,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531083,"byte_end":10531121,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531126,"byte_end":10531153,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531158,"byte_end":10531188,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531193,"byte_end":10531196,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531201,"byte_end":10531251,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531256,"byte_end":10531304,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531309,"byte_end":10531350,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531355,"byte_end":10531364,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531369,"byte_end":10531374,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531379,"byte_end":10531386,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551396,"byte_end":10551406,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552709,"byte_end":10552714,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551752,"byte_end":10551798,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551803,"byte_end":10551806,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551811,"byte_end":10551880,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551885,"byte_end":10551955,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551960,"byte_end":10552013,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552018,"byte_end":10552021,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552026,"byte_end":10552037,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552042,"byte_end":10552062,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552067,"byte_end":10552070,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552075,"byte_end":10552093,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552098,"byte_end":10552119,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552124,"byte_end":10552160,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552165,"byte_end":10552168,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552173,"byte_end":10552213,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552218,"byte_end":10552277,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552282,"byte_end":10552296,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552301,"byte_end":10552312,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552317,"byte_end":10552320,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552325,"byte_end":10552365,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552370,"byte_end":10552429,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552434,"byte_end":10552449,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552454,"byte_end":10552465,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552470,"byte_end":10552473,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552478,"byte_end":10552509,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552514,"byte_end":10552540,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552545,"byte_end":10552553,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552558,"byte_end":10552561,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552566,"byte_end":10552596,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552601,"byte_end":10552662,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552667,"byte_end":10552675,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552680,"byte_end":10552685,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552690,"byte_end":10552697,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610126,"byte_end":10610133,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609170,"byte_end":10609228,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609229,"byte_end":10609232,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609233,"byte_end":10609305,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609306,"byte_end":10609354,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609355,"byte_end":10609358,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609359,"byte_end":10609436,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609437,"byte_end":10609476,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609477,"byte_end":10609480,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609481,"byte_end":10609558,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609559,"byte_end":10609572,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609573,"byte_end":10609576,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609577,"byte_end":10609610,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609611,"byte_end":10609675,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609676,"byte_end":10609744,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609745,"byte_end":10609748,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609749,"byte_end":10609763,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609764,"byte_end":10609767,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609768,"byte_end":10609775,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609776,"byte_end":10609808,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609809,"byte_end":10609812,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609813,"byte_end":10609828,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609829,"byte_end":10609853,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609854,"byte_end":10609903,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609904,"byte_end":10609934,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609935,"byte_end":10609977,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10609978,"byte_end":10610025,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610026,"byte_end":10610046,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610047,"byte_end":10610069,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610070,"byte_end":10610073,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610074,"byte_end":10610100,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610101,"byte_end":10610106,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10610107,"byte_end":10610114,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611654,"byte_end":10611672,"line_start":94,"line_end":94,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611339,"byte_end":10611408,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611413,"byte_end":10611416,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611421,"byte_end":10611482,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611487,"byte_end":10611490,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611495,"byte_end":10611568,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611573,"byte_end":10611590,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611595,"byte_end":10611598,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611603,"byte_end":10611642,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611997,"byte_end":10612013,"line_start":103,"line_end":103,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611741,"byte_end":10611808,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611813,"byte_end":10611816,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611821,"byte_end":10611882,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611887,"byte_end":10611922,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613543,"byte_end":10613553,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613050,"byte_end":10613088,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613093,"byte_end":10613096,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613101,"byte_end":10613172,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613177,"byte_end":10613253,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613258,"byte_end":10613312,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613317,"byte_end":10613320,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613325,"byte_end":10613339,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613344,"byte_end":10613347,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613352,"byte_end":10613359,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613364,"byte_end":10613387,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613392,"byte_end":10613395,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613400,"byte_end":10613449,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613454,"byte_end":10613475,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613480,"byte_end":10613496,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613501,"byte_end":10613519,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613524,"byte_end":10613531,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615230,"byte_end":10615244,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613781,"byte_end":10613842,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613847,"byte_end":10613850,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613855,"byte_end":10613929,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613934,"byte_end":10613958,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613963,"byte_end":10613966,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613971,"byte_end":10613984,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613989,"byte_end":10613992,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10613997,"byte_end":10614066,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614071,"byte_end":10614074,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614079,"byte_end":10614090,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614095,"byte_end":10614098,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614103,"byte_end":10614176,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614181,"byte_end":10614242,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614247,"byte_end":10614250,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614255,"byte_end":10614258,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614263,"byte_end":10614277,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614282,"byte_end":10614285,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614290,"byte_end":10614334,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614339,"byte_end":10614342,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614347,"byte_end":10614354,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614359,"byte_end":10614382,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614387,"byte_end":10614390,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614395,"byte_end":10614464,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614469,"byte_end":10614518,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614523,"byte_end":10614549,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614554,"byte_end":10614570,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614575,"byte_end":10614593,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614598,"byte_end":10614601,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614606,"byte_end":10614634,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614639,"byte_end":10614646,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614651,"byte_end":10614654,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614659,"byte_end":10614750,"line_start":199,"line_end":199,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614755,"byte_end":10614758,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614763,"byte_end":10614770,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614775,"byte_end":10614798,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614803,"byte_end":10614806,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614811,"byte_end":10614868,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614873,"byte_end":10614903,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614908,"byte_end":10614959,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614964,"byte_end":10614980,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10614985,"byte_end":10615003,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615008,"byte_end":10615011,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615016,"byte_end":10615081,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615086,"byte_end":10615117,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615122,"byte_end":10615129,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615134,"byte_end":10615137,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615142,"byte_end":10615153,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615158,"byte_end":10615161,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615166,"byte_end":10615218,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616369,"byte_end":10616389,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615411,"byte_end":10615481,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615486,"byte_end":10615489,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615494,"byte_end":10615563,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615568,"byte_end":10615643,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615648,"byte_end":10615721,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615726,"byte_end":10615779,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615784,"byte_end":10615787,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615792,"byte_end":10615821,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615826,"byte_end":10615829,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615834,"byte_end":10615845,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615850,"byte_end":10615853,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615858,"byte_end":10615910,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615915,"byte_end":10615918,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615923,"byte_end":10615947,"line_start":236,"line_end":236,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615952,"byte_end":10615955,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10615960,"byte_end":10616043,"line_start":238,"line_end":238,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616048,"byte_end":10616134,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616139,"byte_end":10616142,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616147,"byte_end":10616201,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616206,"byte_end":10616250,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616255,"byte_end":10616305,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616945,"byte_end":10616956,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616562,"byte_end":10616626,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616631,"byte_end":10616634,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616639,"byte_end":10616686,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616691,"byte_end":10616694,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616699,"byte_end":10616713,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616718,"byte_end":10616721,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616726,"byte_end":10616733,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616738,"byte_end":10616763,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616768,"byte_end":10616771,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616776,"byte_end":10616797,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616802,"byte_end":10616851,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616856,"byte_end":10616887,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616892,"byte_end":10616909,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616914,"byte_end":10616921,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10616926,"byte_end":10616933,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617805,"byte_end":10617819,"line_start":292,"line_end":292,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617130,"byte_end":10617226,"line_start":272,"line_end":272,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617231,"byte_end":10617234,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617239,"byte_end":10617301,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617306,"byte_end":10617309,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617314,"byte_end":10617328,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617333,"byte_end":10617336,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617341,"byte_end":10617348,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617353,"byte_end":10617378,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617383,"byte_end":10617436,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617441,"byte_end":10617444,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617449,"byte_end":10617470,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617475,"byte_end":10617524,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617529,"byte_end":10617557,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617562,"byte_end":10617625,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617630,"byte_end":10617691,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617696,"byte_end":10617732,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617737,"byte_end":10617747,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617752,"byte_end":10617769,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617774,"byte_end":10617781,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617786,"byte_end":10617793,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618584,"byte_end":10618601,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10617995,"byte_end":10618049,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618054,"byte_end":10618057,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618062,"byte_end":10618134,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618139,"byte_end":10618172,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618177,"byte_end":10618180,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618185,"byte_end":10618253,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618258,"byte_end":10618319,"line_start":306,"line_end":306,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618324,"byte_end":10618327,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618332,"byte_end":10618346,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618351,"byte_end":10618354,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618359,"byte_end":10618366,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618371,"byte_end":10618396,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618401,"byte_end":10618404,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618409,"byte_end":10618430,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618435,"byte_end":10618484,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618489,"byte_end":10618526,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618531,"byte_end":10618548,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618553,"byte_end":10618560,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618565,"byte_end":10618572,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619221,"byte_end":10619236,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618708,"byte_end":10618783,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618788,"byte_end":10618803,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618808,"byte_end":10618811,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618816,"byte_end":10618878,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618883,"byte_end":10618886,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618891,"byte_end":10618905,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618910,"byte_end":10618913,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618918,"byte_end":10618925,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618930,"byte_end":10618955,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618960,"byte_end":10618963,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618968,"byte_end":10618989,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10618994,"byte_end":10619048,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619053,"byte_end":10619082,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619087,"byte_end":10619126,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619131,"byte_end":10619141,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619146,"byte_end":10619163,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619168,"byte_end":10619175,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619180,"byte_end":10619187,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619192,"byte_end":10619209,"line_start":342,"line_end":342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619877,"byte_end":10619891,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619408,"byte_end":10619459,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619464,"byte_end":10619467,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619472,"byte_end":10619534,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619539,"byte_end":10619542,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619547,"byte_end":10619561,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619566,"byte_end":10619569,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619574,"byte_end":10619581,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619586,"byte_end":10619611,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619616,"byte_end":10619619,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619624,"byte_end":10619645,"line_start":360,"line_end":360,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619650,"byte_end":10619704,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619709,"byte_end":10619737,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619742,"byte_end":10619782,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619787,"byte_end":10619797,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619802,"byte_end":10619819,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619824,"byte_end":10619831,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619836,"byte_end":10619843,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10619848,"byte_end":10619865,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620455,"byte_end":10620460,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620063,"byte_end":10620100,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620105,"byte_end":10620108,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620113,"byte_end":10620173,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620178,"byte_end":10620181,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620186,"byte_end":10620200,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620205,"byte_end":10620208,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620213,"byte_end":10620220,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620225,"byte_end":10620257,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620262,"byte_end":10620265,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620270,"byte_end":10620329,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620334,"byte_end":10620337,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620342,"byte_end":10620365,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620370,"byte_end":10620419,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620424,"byte_end":10620431,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10620436,"byte_end":10620443,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621639,"byte_end":10621656,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621130,"byte_end":10621190,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621195,"byte_end":10621198,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621203,"byte_end":10621274,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621279,"byte_end":10621323,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621328,"byte_end":10621331,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621336,"byte_end":10621349,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621354,"byte_end":10621357,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621362,"byte_end":10621369,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621374,"byte_end":10621399,"line_start":421,"line_end":421,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621404,"byte_end":10621434,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621439,"byte_end":10621442,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621447,"byte_end":10621468,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621473,"byte_end":10621522,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621527,"byte_end":10621581,"line_start":426,"line_end":426,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621586,"byte_end":10621603,"line_start":427,"line_end":427,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621608,"byte_end":10621615,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10621620,"byte_end":10621627,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10623403,"byte_end":10623412,"line_start":483,"line_end":483,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10623936,"byte_end":10623947,"line_start":506,"line_end":506,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634718,"byte_end":10634724,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634449,"byte_end":10634475,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634476,"byte_end":10634479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634480,"byte_end":10634568,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634569,"byte_end":10634619,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634620,"byte_end":10634623,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10634624,"byte_end":10634682,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635470,"byte_end":10635480,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":4425}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635175,"byte_end":10635201,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635202,"byte_end":10635205,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635206,"byte_end":10635287,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635288,"byte_end":10635320,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635321,"byte_end":10635324,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635325,"byte_end":10635382,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635400,"byte_end":10635458,"line_start":42,"line_end":42,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635954,"byte_end":10635959,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635564,"byte_end":10635639,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635644,"byte_end":10635722,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635727,"byte_end":10635795,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635800,"byte_end":10635803,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635808,"byte_end":10635848,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635853,"byte_end":10635900,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635905,"byte_end":10635942,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637453,"byte_end":10637460,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636104,"byte_end":10636168,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636173,"byte_end":10636176,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636181,"byte_end":10636192,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636197,"byte_end":10636200,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636205,"byte_end":10636299,"line_start":67,"line_end":67,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636304,"byte_end":10636396,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636401,"byte_end":10636477,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636482,"byte_end":10636485,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636490,"byte_end":10636504,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636509,"byte_end":10636512,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636517,"byte_end":10636599,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636604,"byte_end":10636650,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636655,"byte_end":10636658,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636663,"byte_end":10636670,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636675,"byte_end":10636697,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636702,"byte_end":10636736,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636741,"byte_end":10636757,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636762,"byte_end":10636801,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636806,"byte_end":10636828,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636833,"byte_end":10636864,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636869,"byte_end":10636872,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636877,"byte_end":10636918,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636923,"byte_end":10636958,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636963,"byte_end":10636987,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10636992,"byte_end":10637048,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637053,"byte_end":10637060,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637065,"byte_end":10637068,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637073,"byte_end":10637091,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637096,"byte_end":10637123,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637128,"byte_end":10637213,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637218,"byte_end":10637259,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637264,"byte_end":10637309,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637314,"byte_end":10637357,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637362,"byte_end":10637369,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637374,"byte_end":10637403,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637408,"byte_end":10637417,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637422,"byte_end":10637429,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637434,"byte_end":10637441,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637734,"byte_end":10637745,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637541,"byte_end":10637601,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637606,"byte_end":10637609,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637614,"byte_end":10637665,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637670,"byte_end":10637673,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637678,"byte_end":10637722,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638700,"byte_end":10638705,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637848,"byte_end":10637890,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637895,"byte_end":10637898,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637903,"byte_end":10637974,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10637979,"byte_end":10638054,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638059,"byte_end":10638082,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638087,"byte_end":10638090,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638095,"byte_end":10638154,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638159,"byte_end":10638162,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638167,"byte_end":10638188,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638193,"byte_end":10638196,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638201,"byte_end":10638215,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638220,"byte_end":10638223,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638228,"byte_end":10638235,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638240,"byte_end":10638272,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638277,"byte_end":10638280,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638285,"byte_end":10638301,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638306,"byte_end":10638331,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638336,"byte_end":10638373,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638378,"byte_end":10638415,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638420,"byte_end":10638449,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638454,"byte_end":10638457,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638462,"byte_end":10638517,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638522,"byte_end":10638546,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638551,"byte_end":10638602,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638607,"byte_end":10638614,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638619,"byte_end":10638626,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638631,"byte_end":10638638,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10638674,"byte_end":10638686,"line_start":141,"line_end":141,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639608,"byte_end":10639622,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639005,"byte_end":10639071,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639076,"byte_end":10639091,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639096,"byte_end":10639099,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639104,"byte_end":10639118,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639123,"byte_end":10639126,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639131,"byte_end":10639138,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639143,"byte_end":10639175,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639180,"byte_end":10639183,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639188,"byte_end":10639204,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639209,"byte_end":10639234,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639239,"byte_end":10639276,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639281,"byte_end":10639318,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639323,"byte_end":10639352,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639357,"byte_end":10639360,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639365,"byte_end":10639431,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639436,"byte_end":10639466,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639471,"byte_end":10639522,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639527,"byte_end":10639534,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639539,"byte_end":10639546,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10639582,"byte_end":10639594,"line_start":171,"line_end":171,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643640,"byte_end":10643648,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Run a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10640813,"byte_end":10640884,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10640889,"byte_end":10640892,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10640897,"byte_end":10640971,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10640976,"byte_end":10641049,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641054,"byte_end":10641119,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641124,"byte_end":10641127,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641132,"byte_end":10641193,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641198,"byte_end":10641274,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641279,"byte_end":10641355,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641360,"byte_end":10641434,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641439,"byte_end":10641512,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641517,"byte_end":10641563,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641568,"byte_end":10641571,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641576,"byte_end":10641615,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641620,"byte_end":10641623,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641628,"byte_end":10641698,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641703,"byte_end":10641777,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641782,"byte_end":10641857,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641862,"byte_end":10641935,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10641940,"byte_end":10641998,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642003,"byte_end":10642006,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642011,"byte_end":10642023,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642028,"byte_end":10642031,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642036,"byte_end":10642111,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642116,"byte_end":10642189,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642194,"byte_end":10642230,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642235,"byte_end":10642238,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642243,"byte_end":10642257,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642262,"byte_end":10642265,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642270,"byte_end":10642277,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642282,"byte_end":10642314,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642319,"byte_end":10642322,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642327,"byte_end":10642352,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642357,"byte_end":10642395,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642400,"byte_end":10642403,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642408,"byte_end":10642445,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642450,"byte_end":10642479,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642484,"byte_end":10642487,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642492,"byte_end":10642563,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642568,"byte_end":10642595,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642600,"byte_end":10642626,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642631,"byte_end":10642638,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642643,"byte_end":10642650,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642655,"byte_end":10642658,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642663,"byte_end":10642694,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642699,"byte_end":10642702,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642707,"byte_end":10642714,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642719,"byte_end":10642750,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642755,"byte_end":10642758,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642763,"byte_end":10642781,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642786,"byte_end":10642808,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642813,"byte_end":10642852,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642857,"byte_end":10642893,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642898,"byte_end":10642972,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10642977,"byte_end":10643012,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643017,"byte_end":10643051,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643056,"byte_end":10643071,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643076,"byte_end":10643087,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643092,"byte_end":10643097,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643102,"byte_end":10643109,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643114,"byte_end":10643117,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643122,"byte_end":10643170,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643175,"byte_end":10643225,"line_start":268,"line_end":268,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643230,"byte_end":10643293,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643298,"byte_end":10643383,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643388,"byte_end":10643467,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643472,"byte_end":10643523,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643528,"byte_end":10643556,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643561,"byte_end":10643591,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10643596,"byte_end":10643628,"line_start":275,"line_end":275,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644268,"byte_end":10644283,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644188,"byte_end":10644256,"line_start":294,"line_end":294,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10496004,"byte_end":10496011,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10497994,"byte_end":10497997,"line_start":321,"line_end":321,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10497876,"byte_end":10497911,"line_start":319,"line_end":319,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10498635,"byte_end":10498641,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10499565,"byte_end":10499570,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10499535,"byte_end":10499547,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10500343,"byte_end":10500357,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10500313,"byte_end":10500325,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10502289,"byte_end":10502297,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10503785,"byte_end":10503790,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10505360,"byte_end":10505376,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10506797,"byte_end":10506816,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","parent":null,"children":[{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4966},{"krate":0,"index":4970},{"krate":0,"index":5023},{"krate":0,"index":5069},{"krate":0,"index":5112},{"krate":0,"index":5114},{"krate":0,"index":5070},{"krate":0,"index":5073}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":22362,"byte_end":22388,"line_start":217,"line_end":217,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":22463,"byte_end":22480,"line_start":219,"line_end":219,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710042,"byte_end":10710084,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710085,"byte_end":10710088,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710089,"byte_end":10710166,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710167,"byte_end":10710245,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710246,"byte_end":10710326,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710327,"byte_end":10710355,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710356,"byte_end":10710359,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are some fundamental limitations of this crate documented on the OS","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710360,"byte_end":10710437,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ specific structures, as well.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710438,"byte_end":10710471,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710472,"byte_end":10710475,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710476,"byte_end":10710490,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710491,"byte_end":10710494,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710495,"byte_end":10710530,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710531,"byte_end":10710534,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710535,"byte_end":10710553,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710554,"byte_end":10710576,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710577,"byte_end":10710580,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710581,"byte_end":10710599,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710600,"byte_end":10710663,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710664,"byte_end":10710696,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710697,"byte_end":10710734,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710735,"byte_end":10710749,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710750,"byte_end":10710755,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710756,"byte_end":10710763,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710764,"byte_end":10710767,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710768,"byte_end":10710795,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710796,"byte_end":10710799,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710800,"byte_end":10710818,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710819,"byte_end":10710839,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710840,"byte_end":10710890,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710891,"byte_end":10710894,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710895,"byte_end":10710913,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710914,"byte_end":10710977,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10710978,"byte_end":10711026,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711027,"byte_end":10711082,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711083,"byte_end":10711086,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711087,"byte_end":10711137,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711138,"byte_end":10711152,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711153,"byte_end":10711185,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711186,"byte_end":10711225,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711226,"byte_end":10711235,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711236,"byte_end":10711241,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711242,"byte_end":10711249,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711250,"byte_end":10711257,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714306,"byte_end":10714312,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712604,"byte_end":10712670,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712671,"byte_end":10712674,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712675,"byte_end":10712752,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712753,"byte_end":10712831,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712832,"byte_end":10712881,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712882,"byte_end":10712885,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712886,"byte_end":10712962,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10712963,"byte_end":10713041,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713042,"byte_end":10713080,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713081,"byte_end":10713084,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713085,"byte_end":10713098,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713099,"byte_end":10713102,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713103,"byte_end":10713185,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713186,"byte_end":10713266,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713267,"byte_end":10713348,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713349,"byte_end":10713374,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713375,"byte_end":10713378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713379,"byte_end":10713452,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713453,"byte_end":10713525,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713526,"byte_end":10713604,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713605,"byte_end":10713682,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713683,"byte_end":10713759,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713760,"byte_end":10713839,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713840,"byte_end":10713864,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713865,"byte_end":10713868,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713869,"byte_end":10713947,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10713948,"byte_end":10714008,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714009,"byte_end":10714012,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714013,"byte_end":10714027,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714028,"byte_end":10714031,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714032,"byte_end":10714050,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714051,"byte_end":10714073,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714074,"byte_end":10714077,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714078,"byte_end":10714096,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714097,"byte_end":10714118,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714119,"byte_end":10714158,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714159,"byte_end":10714162,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714163,"byte_end":10714231,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714232,"byte_end":10714235,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714236,"byte_end":10714278,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714279,"byte_end":10714284,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\ctrl_c.rs","byte_start":10714285,"byte_end":10714292,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows","qualname":"::signal::windows","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","parent":null,"children":[{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":5092},{"krate":0,"index":5095},{"krate":0,"index":4993},{"krate":0,"index":4995},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5000},{"krate":0,"index":5100},{"krate":0,"index":5102},{"krate":0,"index":5002},{"krate":0,"index":5004},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5104},{"krate":0,"index":5106},{"krate":0,"index":5011},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5016},{"krate":0,"index":5021}],"decl_id":null,"docs":" Windows-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Windows-specific types for signal handling.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737122,"byte_end":10737169,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737170,"byte_end":10737173,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Windows and allows receiving \"ctrl-c\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737174,"byte_end":10737246,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ and \"ctrl-break\" notifications. These events are listened for via the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737247,"byte_end":10737320,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ `SetConsoleCtrlHandler` function which receives events of the type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737321,"byte_end":10737391,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ `CTRL_C_EVENT` and `CTRL_BREAK_EVENT`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737392,"byte_end":10737434,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737436,"byte_end":10737452,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":5009},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741294,"byte_end":10741300,"line_start":152,"line_end":152,"column_start":8,"column_end":14},"name":"ctrl_c","qualname":"::signal::windows::ctrl_c","value":"pub fn ctrl_c() -> io::Result<CtrlC>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-c\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-c\" notifications sent to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740708,"byte_end":10740782,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740783,"byte_end":10740795,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740796,"byte_end":10740799,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740800,"byte_end":10740814,"line_start":133,"line_end":133,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740815,"byte_end":10740818,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740819,"byte_end":10740837,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740838,"byte_end":10740877,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740878,"byte_end":10740881,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740882,"byte_end":10740900,"line_start":138,"line_end":138,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740901,"byte_end":10740964,"line_start":139,"line_end":139,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10740965,"byte_end":10741012,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741013,"byte_end":10741048,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741049,"byte_end":10741052,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741053,"byte_end":10741106,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741107,"byte_end":10741146,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741147,"byte_end":10741179,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741180,"byte_end":10741243,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741244,"byte_end":10741253,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741254,"byte_end":10741257,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741258,"byte_end":10741272,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741273,"byte_end":10741278,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741279,"byte_end":10741286,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5104},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741901,"byte_end":10741906,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"CtrlC","qualname":"::signal::windows::CtrlC","value":"CtrlC {  }","parent":null,"children":[{"krate":0,"index":5105}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-c\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-c\" notifications sent to the process","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741387,"byte_end":10741468,"line_start":156,"line_end":156,"column_start":1,"column_end":82}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741469,"byte_end":10741501,"line_start":157,"line_end":157,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741502,"byte_end":10741505,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741506,"byte_end":10741577,"line_start":159,"line_end":159,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741578,"byte_end":10741664,"line_start":160,"line_end":160,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741665,"byte_end":10741748,"line_start":161,"line_end":161,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741749,"byte_end":10741823,"line_start":162,"line_end":162,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741824,"byte_end":10741872,"line_start":163,"line_end":163,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742669,"byte_end":10742673,"line_start":193,"line_end":193,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlC>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741947,"byte_end":10741995,"line_start":170,"line_end":170,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742000,"byte_end":10742003,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742008,"byte_end":10742080,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742085,"byte_end":10742088,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742093,"byte_end":10742107,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742112,"byte_end":10742115,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742120,"byte_end":10742138,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_c;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742143,"byte_end":10742182,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742187,"byte_end":10742190,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742195,"byte_end":10742213,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742218,"byte_end":10742281,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-C events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742286,"byte_end":10742333,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/     let mut stream = ctrl_c()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742338,"byte_end":10742373,"line_start":182,"line_end":182,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742378,"byte_end":10742381,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-C event is received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742386,"byte_end":10742439,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/     for countdown in (0..3).rev() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742444,"byte_end":10742483,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742488,"byte_end":10742520,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/         println!(\"got CTRL-C. {} more to exit\", countdown);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742525,"byte_end":10742588,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742593,"byte_end":10742602,"line_start":188,"line_end":188,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742607,"byte_end":10742610,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742615,"byte_end":10742629,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742634,"byte_end":10742639,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742644,"byte_end":10742651,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5015},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743578,"byte_end":10743587,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlC>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742750,"byte_end":10742820,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742825,"byte_end":10742845,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742850,"byte_end":10742853,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742858,"byte_end":10742930,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742935,"byte_end":10742938,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742943,"byte_end":10742957,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742962,"byte_end":10742965,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10742970,"byte_end":10743016,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743021,"byte_end":10743024,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743029,"byte_end":10743047,"line_start":206,"line_end":206,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743052,"byte_end":10743074,"line_start":207,"line_end":207,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743079,"byte_end":10743107,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743112,"byte_end":10743147,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlC;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743152,"byte_end":10743190,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743195,"byte_end":10743198,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743203,"byte_end":10743224,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     ctrl_c: CtrlC,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743229,"byte_end":10743251,"line_start":213,"line_end":213,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743256,"byte_end":10743261,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743266,"byte_end":10743269,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743274,"byte_end":10743304,"line_start":216,"line_end":216,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743309,"byte_end":10743342,"line_start":217,"line_end":217,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743347,"byte_end":10743350,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743355,"byte_end":10743442,"line_start":219,"line_end":219,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743447,"byte_end":10743488,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_c.poll_recv(cx)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743493,"byte_end":10743530,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743535,"byte_end":10743544,"line_start":222,"line_end":222,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743549,"byte_end":10743554,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743559,"byte_end":10743566,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744209,"byte_end":10744218,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"CtrlBreak","qualname":"::signal::windows::CtrlBreak","value":"CtrlBreak {  }","parent":null,"children":[{"krate":0,"index":5109}],"decl_id":null,"docs":" Represents a stream which receives \"ctrl-break\" notifications sent to the process\n via `SetConsoleCtrlHandler`.","sig":null,"attributes":[{"value":"/ Represents a stream which receives \"ctrl-break\" notifications sent to the process","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743691,"byte_end":10743776,"line_start":230,"line_end":230,"column_start":1,"column_end":86}},{"value":"/ via `SetConsoleCtrlHandler`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743777,"byte_end":10743809,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743810,"byte_end":10743813,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ A notification to this process notifies *all* streams listening for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743814,"byte_end":10743885,"line_start":233,"line_end":233,"column_start":1,"column_end":72}},{"value":"/ this event. Moreover, the notifications **are coalesced** if they aren't processed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743886,"byte_end":10743972,"line_start":234,"line_end":234,"column_start":1,"column_end":87}},{"value":"/ quickly enough. This means that if two notifications are received back-to-back,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10743973,"byte_end":10744056,"line_start":235,"line_end":235,"column_start":1,"column_end":84}},{"value":"/ then the stream may only receive one item about the two notifications.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744057,"byte_end":10744131,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744132,"byte_end":10744180,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744932,"byte_end":10744936,"line_start":265,"line_end":265,"column_start":18,"column_end":22},"name":"recv","qualname":"<CtrlBreak>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744263,"byte_end":10744311,"line_start":244,"line_end":244,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744316,"byte_end":10744319,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744324,"byte_end":10744396,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744401,"byte_end":10744404,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744409,"byte_end":10744423,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744428,"byte_end":10744431,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744436,"byte_end":10744454,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744459,"byte_end":10744502,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744507,"byte_end":10744510,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744515,"byte_end":10744533,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744538,"byte_end":10744601,"line_start":254,"line_end":254,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744606,"byte_end":10744657,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744662,"byte_end":10744701,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744706,"byte_end":10744709,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744714,"byte_end":10744771,"line_start":258,"line_end":258,"column_start":5,"column_end":62}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744776,"byte_end":10744790,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744795,"byte_end":10744827,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744832,"byte_end":10744878,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744883,"byte_end":10744892,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744897,"byte_end":10744902,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744907,"byte_end":10744914,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745857,"byte_end":10745866,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<CtrlBreak>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745013,"byte_end":10745083,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745088,"byte_end":10745108,"line_start":270,"line_end":270,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745113,"byte_end":10745116,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745121,"byte_end":10745193,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745198,"byte_end":10745201,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745206,"byte_end":10745220,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745225,"byte_end":10745228,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745233,"byte_end":10745279,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745284,"byte_end":10745287,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745292,"byte_end":10745310,"line_start":278,"line_end":278,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745315,"byte_end":10745337,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745342,"byte_end":10745370,"line_start":280,"line_end":280,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745375,"byte_end":10745410,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::windows::CtrlBreak;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745415,"byte_end":10745457,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745462,"byte_end":10745465,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745470,"byte_end":10745491,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"/     ctrl_break: CtrlBreak,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745496,"byte_end":10745526,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745531,"byte_end":10745536,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745541,"byte_end":10745544,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745549,"byte_end":10745579,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745584,"byte_end":10745617,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745622,"byte_end":10745625,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745630,"byte_end":10745717,"line_start":291,"line_end":291,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745722,"byte_end":10745763,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/         self.ctrl_break.poll_recv(cx)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745768,"byte_end":10745809,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745814,"byte_end":10745823,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745828,"byte_end":10745833,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745838,"byte_end":10745845,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5021},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746515,"byte_end":10746525,"line_start":322,"line_end":322,"column_start":8,"column_end":18},"name":"ctrl_break","qualname":"::signal::windows::ctrl_break","value":"pub fn ctrl_break() -> io::Result<CtrlBreak>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which receives \"ctrl-break\" notifications sent to the\n process.","sig":null,"attributes":[{"value":"/ Creates a new stream which receives \"ctrl-break\" notifications sent to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10745970,"byte_end":10746048,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746049,"byte_end":10746061,"line_start":303,"line_end":303,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746062,"byte_end":10746065,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746066,"byte_end":10746080,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746081,"byte_end":10746084,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746085,"byte_end":10746103,"line_start":307,"line_end":307,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::windows::ctrl_break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746104,"byte_end":10746147,"line_start":308,"line_end":308,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746148,"byte_end":10746151,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746152,"byte_end":10746170,"line_start":310,"line_end":310,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746171,"byte_end":10746234,"line_start":311,"line_end":311,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of CTRL-BREAK events.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746235,"byte_end":10746286,"line_start":312,"line_end":312,"column_start":1,"column_end":52}},{"value":"/     let mut stream = ctrl_break()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746287,"byte_end":10746326,"line_start":313,"line_end":313,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746327,"byte_end":10746330,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a CTRL-BREAK event is received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746331,"byte_end":10746388,"line_start":315,"line_end":315,"column_start":1,"column_end":58}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746389,"byte_end":10746403,"line_start":316,"line_end":316,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746404,"byte_end":10746436,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal CTRL-BREAK\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746437,"byte_end":10746483,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746484,"byte_end":10746493,"line_start":319,"line_end":319,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746494,"byte_end":10746499,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10746500,"byte_end":10746507,"line_start":321,"line_end":321,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5116},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":5117},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5293},{"krate":0,"index":5728},{"krate":0,"index":5872},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":13612},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":6054},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755139,"byte_end":10755203,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755204,"byte_end":10755207,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755208,"byte_end":10755283,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755284,"byte_end":10755364,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755365,"byte_end":10755444,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755445,"byte_end":10755479,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755480,"byte_end":10755483,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755484,"byte_end":10755508,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755509,"byte_end":10755512,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755513,"byte_end":10755534,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755535,"byte_end":10755538,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755539,"byte_end":10755612,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755613,"byte_end":10755692,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755693,"byte_end":10755762,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755763,"byte_end":10755766,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755767,"byte_end":10755846,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755847,"byte_end":10755924,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10755925,"byte_end":10756000,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756001,"byte_end":10756073,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756074,"byte_end":10756146,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756147,"byte_end":10756225,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756226,"byte_end":10756239,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756240,"byte_end":10756243,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756244,"byte_end":10756322,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756323,"byte_end":10756384,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756385,"byte_end":10756388,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756389,"byte_end":10756413,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756414,"byte_end":10756417,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756418,"byte_end":10756497,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756498,"byte_end":10756576,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756577,"byte_end":10756621,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756622,"byte_end":10756625,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756626,"byte_end":10756706,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756707,"byte_end":10756723,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756724,"byte_end":10756727,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756728,"byte_end":10756735,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756736,"byte_end":10756765,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756766,"byte_end":10756769,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756770,"byte_end":10756813,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756814,"byte_end":10756876,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756877,"byte_end":10756882,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756883,"byte_end":10756886,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756887,"byte_end":10756905,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756906,"byte_end":10756927,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756928,"byte_end":10756970,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756971,"byte_end":10756974,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10756975,"byte_end":10757008,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757009,"byte_end":10757056,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757057,"byte_end":10757091,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757092,"byte_end":10757103,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757104,"byte_end":10757107,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757108,"byte_end":10757185,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757186,"byte_end":10757189,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757190,"byte_end":10757232,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757233,"byte_end":10757269,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757270,"byte_end":10757275,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757276,"byte_end":10757283,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757284,"byte_end":10757287,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757288,"byte_end":10757352,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757353,"byte_end":10757417,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757418,"byte_end":10757480,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757481,"byte_end":10757551,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757552,"byte_end":10757617,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757618,"byte_end":10757628,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757629,"byte_end":10757632,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757633,"byte_end":10757649,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757650,"byte_end":10757653,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757654,"byte_end":10757661,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757662,"byte_end":10757705,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757706,"byte_end":10757757,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757758,"byte_end":10757763,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757764,"byte_end":10757767,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757768,"byte_end":10757786,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757787,"byte_end":10757808,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757809,"byte_end":10757860,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757861,"byte_end":10757897,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757898,"byte_end":10757909,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757910,"byte_end":10757913,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757914,"byte_end":10757991,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757992,"byte_end":10757995,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10757996,"byte_end":10758038,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758039,"byte_end":10758084,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758085,"byte_end":10758090,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758091,"byte_end":10758098,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758099,"byte_end":10758102,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758103,"byte_end":10758125,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758126,"byte_end":10758169,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758170,"byte_end":10758173,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758174,"byte_end":10758195,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758196,"byte_end":10758199,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758200,"byte_end":10758277,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758278,"byte_end":10758358,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758359,"byte_end":10758414,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758415,"byte_end":10758418,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758419,"byte_end":10758497,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758498,"byte_end":10758518,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758519,"byte_end":10758522,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758523,"byte_end":10758530,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758531,"byte_end":10758557,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758558,"byte_end":10758561,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758562,"byte_end":10758615,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758616,"byte_end":10758670,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758671,"byte_end":10758676,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758677,"byte_end":10758680,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758681,"byte_end":10758699,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758700,"byte_end":10758721,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758722,"byte_end":10758768,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758769,"byte_end":10758772,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758773,"byte_end":10758806,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758807,"byte_end":10758835,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758836,"byte_end":10758888,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758889,"byte_end":10758933,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758934,"byte_end":10758947,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758948,"byte_end":10758959,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758960,"byte_end":10758963,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10758964,"byte_end":10759011,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759012,"byte_end":10759050,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759051,"byte_end":10759060,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759061,"byte_end":10759066,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759067,"byte_end":10759074,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759075,"byte_end":10759078,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759079,"byte_end":10759159,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759160,"byte_end":10759237,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759238,"byte_end":10759311,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759312,"byte_end":10759387,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759388,"byte_end":10759401,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759402,"byte_end":10759405,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759406,"byte_end":10759481,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759482,"byte_end":10759561,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759562,"byte_end":10759640,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759641,"byte_end":10759720,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759721,"byte_end":10759801,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759802,"byte_end":10759867,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759868,"byte_end":10759871,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759872,"byte_end":10759952,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759953,"byte_end":10759965,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759966,"byte_end":10759969,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759970,"byte_end":10759983,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10759984,"byte_end":10760025,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760026,"byte_end":10760056,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760057,"byte_end":10760083,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760084,"byte_end":10760087,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760088,"byte_end":10760106,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760107,"byte_end":10760146,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760147,"byte_end":10760222,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760223,"byte_end":10760269,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760270,"byte_end":10760273,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760274,"byte_end":10760298,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760299,"byte_end":10760378,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760379,"byte_end":10760410,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760411,"byte_end":10760443,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760444,"byte_end":10760447,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760448,"byte_end":10760485,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760486,"byte_end":10760548,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760549,"byte_end":10760564,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760565,"byte_end":10760574,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760575,"byte_end":10760578,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760579,"byte_end":10760658,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760659,"byte_end":10760734,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760735,"byte_end":10760813,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760814,"byte_end":10760861,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760862,"byte_end":10760879,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760880,"byte_end":10760883,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760884,"byte_end":10760931,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760932,"byte_end":10760973,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760974,"byte_end":10760983,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760984,"byte_end":10760987,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10760988,"byte_end":10761002,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761003,"byte_end":10761008,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761009,"byte_end":10761016,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761017,"byte_end":10761020,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761021,"byte_end":10761096,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761097,"byte_end":10761172,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761173,"byte_end":10761252,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761253,"byte_end":10761318,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761319,"byte_end":10761396,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761397,"byte_end":10761400,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761401,"byte_end":10761479,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761480,"byte_end":10761560,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761561,"byte_end":10761606,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761607,"byte_end":10761610,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761611,"byte_end":10761618,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761619,"byte_end":10761656,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761657,"byte_end":10761684,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761685,"byte_end":10761688,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761689,"byte_end":10761707,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761708,"byte_end":10761726,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761727,"byte_end":10761770,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761771,"byte_end":10761776,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761777,"byte_end":10761780,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761781,"byte_end":10761799,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761800,"byte_end":10761821,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761822,"byte_end":10761911,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761912,"byte_end":10761915,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761916,"byte_end":10761961,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761962,"byte_end":10761995,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10761996,"byte_end":10762033,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762034,"byte_end":10762037,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762038,"byte_end":10762105,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762106,"byte_end":10762133,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762134,"byte_end":10762168,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762169,"byte_end":10762212,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762213,"byte_end":10762250,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762251,"byte_end":10762304,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762305,"byte_end":10762326,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762327,"byte_end":10762344,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762345,"byte_end":10762358,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762359,"byte_end":10762370,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762371,"byte_end":10762374,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762375,"byte_end":10762413,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762414,"byte_end":10762417,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762418,"byte_end":10762478,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762479,"byte_end":10762503,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762504,"byte_end":10762544,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762545,"byte_end":10762548,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762549,"byte_end":10762604,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762605,"byte_end":10762665,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762666,"byte_end":10762669,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762670,"byte_end":10762740,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762741,"byte_end":10762790,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762791,"byte_end":10762794,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762795,"byte_end":10762848,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762849,"byte_end":10762865,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762866,"byte_end":10762875,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762876,"byte_end":10762879,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762880,"byte_end":10762921,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762922,"byte_end":10762973,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10762974,"byte_end":10763013,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763014,"byte_end":10763023,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763024,"byte_end":10763029,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763030,"byte_end":10763037,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763038,"byte_end":10763041,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763042,"byte_end":10763058,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763059,"byte_end":10763062,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763063,"byte_end":10763089,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763090,"byte_end":10763093,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763094,"byte_end":10763161,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763162,"byte_end":10763234,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763235,"byte_end":10763308,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763309,"byte_end":10763362,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763363,"byte_end":10763366,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763367,"byte_end":10763447,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763448,"byte_end":10763470,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763471,"byte_end":10763474,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763475,"byte_end":10763490,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763491,"byte_end":10763494,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763495,"byte_end":10763502,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763503,"byte_end":10763534,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763535,"byte_end":10763538,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763539,"byte_end":10763557,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763558,"byte_end":10763579,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763580,"byte_end":10763631,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763632,"byte_end":10763669,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763670,"byte_end":10763673,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763674,"byte_end":10763707,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763708,"byte_end":10763762,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763763,"byte_end":10763817,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763818,"byte_end":10763829,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763830,"byte_end":10763833,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763834,"byte_end":10763867,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763868,"byte_end":10763922,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763923,"byte_end":10763977,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763978,"byte_end":10763989,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763990,"byte_end":10763993,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10763994,"byte_end":10764023,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764024,"byte_end":10764053,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764054,"byte_end":10764059,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764060,"byte_end":10764067,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764068,"byte_end":10764071,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764072,"byte_end":10764121,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764122,"byte_end":10764125,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764126,"byte_end":10764148,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764149,"byte_end":10764152,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764153,"byte_end":10764229,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764230,"byte_end":10764308,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764309,"byte_end":10764388,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764389,"byte_end":10764454,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764455,"byte_end":10764458,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764459,"byte_end":10764539,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764540,"byte_end":10764543,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764544,"byte_end":10764618,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764619,"byte_end":10764692,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764693,"byte_end":10764706,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764707,"byte_end":10764710,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764711,"byte_end":10764784,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764785,"byte_end":10764865,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764866,"byte_end":10764941,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764942,"byte_end":10764945,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764946,"byte_end":10764953,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764954,"byte_end":10764981,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10764982,"byte_end":10765029,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765030,"byte_end":10765033,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765034,"byte_end":10765050,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765051,"byte_end":10765054,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765055,"byte_end":10765097,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765098,"byte_end":10765117,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765118,"byte_end":10765144,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765145,"byte_end":10765150,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765151,"byte_end":10765154,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765155,"byte_end":10765172,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765173,"byte_end":10765230,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765231,"byte_end":10765289,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765290,"byte_end":10765342,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765343,"byte_end":10765352,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765353,"byte_end":10765358,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765359,"byte_end":10765362,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765363,"byte_end":10765398,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765399,"byte_end":10765427,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765428,"byte_end":10765433,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765434,"byte_end":10765437,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765438,"byte_end":10765456,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765457,"byte_end":10765478,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765479,"byte_end":10765522,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765523,"byte_end":10765588,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765589,"byte_end":10765592,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765593,"byte_end":10765671,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765672,"byte_end":10765726,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765727,"byte_end":10765730,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765731,"byte_end":10765775,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765776,"byte_end":10765809,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765810,"byte_end":10765828,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765829,"byte_end":10765878,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765879,"byte_end":10765938,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765939,"byte_end":10765942,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765943,"byte_end":10765989,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10765990,"byte_end":10766063,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766064,"byte_end":10766067,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766068,"byte_end":10766142,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766143,"byte_end":10766183,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766184,"byte_end":10766225,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766226,"byte_end":10766283,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766284,"byte_end":10766324,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766325,"byte_end":10766342,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766343,"byte_end":10766356,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766357,"byte_end":10766368,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766369,"byte_end":10766372,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766373,"byte_end":10766406,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766407,"byte_end":10766410,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766411,"byte_end":10766489,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766490,"byte_end":10766544,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766545,"byte_end":10766555,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766556,"byte_end":10766633,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766634,"byte_end":10766712,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766713,"byte_end":10766748,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766749,"byte_end":10766772,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766773,"byte_end":10766836,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766837,"byte_end":10766873,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766874,"byte_end":10766877,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766878,"byte_end":10766928,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10766929,"byte_end":10767008,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767009,"byte_end":10767084,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767085,"byte_end":10767138,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767139,"byte_end":10767185,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767186,"byte_end":10767218,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767219,"byte_end":10767222,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767223,"byte_end":10767270,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767271,"byte_end":10767322,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767323,"byte_end":10767326,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767327,"byte_end":10767377,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767378,"byte_end":10767449,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767450,"byte_end":10767485,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767486,"byte_end":10767489,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767490,"byte_end":10767512,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767513,"byte_end":10767549,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767550,"byte_end":10767593,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767594,"byte_end":10767658,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767659,"byte_end":10767716,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767717,"byte_end":10767720,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767721,"byte_end":10767776,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767777,"byte_end":10767831,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767832,"byte_end":10767835,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767836,"byte_end":10767886,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767887,"byte_end":10767969,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767970,"byte_end":10767995,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10767996,"byte_end":10768041,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768042,"byte_end":10768097,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768098,"byte_end":10768101,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768102,"byte_end":10768179,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768180,"byte_end":10768249,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768250,"byte_end":10768324,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768325,"byte_end":10768350,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768351,"byte_end":10768391,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768392,"byte_end":10768447,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768448,"byte_end":10768482,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768483,"byte_end":10768508,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768509,"byte_end":10768530,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768531,"byte_end":10768548,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768549,"byte_end":10768564,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768565,"byte_end":10768568,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768569,"byte_end":10768602,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768603,"byte_end":10768612,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768613,"byte_end":10768616,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768617,"byte_end":10768658,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768659,"byte_end":10768693,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768694,"byte_end":10768703,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768704,"byte_end":10768709,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768710,"byte_end":10768717,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768718,"byte_end":10768721,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768722,"byte_end":10768767,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768768,"byte_end":10768821,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768822,"byte_end":10768825,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768826,"byte_end":10768853,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768854,"byte_end":10768857,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768858,"byte_end":10768932,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10768933,"byte_end":10769007,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769008,"byte_end":10769078,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769079,"byte_end":10769129,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769130,"byte_end":10769133,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769134,"byte_end":10769211,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769212,"byte_end":10769289,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769290,"byte_end":10769293,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769294,"byte_end":10769371,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769372,"byte_end":10769427,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769428,"byte_end":10769431,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769432,"byte_end":10769511,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769512,"byte_end":10769590,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769591,"byte_end":10769616,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769617,"byte_end":10769620,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769621,"byte_end":10769696,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769697,"byte_end":10769773,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769774,"byte_end":10769841,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769842,"byte_end":10769845,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769846,"byte_end":10769922,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10769923,"byte_end":10769999,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770000,"byte_end":10770074,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770075,"byte_end":10770102,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6717},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772840,"byte_end":10772847,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6720}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771779,"byte_end":10771865,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771866,"byte_end":10771869,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771870,"byte_end":10771877,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771878,"byte_end":10771898,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771899,"byte_end":10771922,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771923,"byte_end":10771952,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771953,"byte_end":10771976,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771977,"byte_end":10771980,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10771981,"byte_end":10772026,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772027,"byte_end":10772072,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772073,"byte_end":10772093,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772094,"byte_end":10772126,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772127,"byte_end":10772181,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772182,"byte_end":10772227,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772228,"byte_end":10772274,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772275,"byte_end":10772311,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772312,"byte_end":10772357,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772358,"byte_end":10772393,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772394,"byte_end":10772417,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772418,"byte_end":10772430,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772431,"byte_end":10772436,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772437,"byte_end":10772440,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772441,"byte_end":10772514,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772515,"byte_end":10772543,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772544,"byte_end":10772571,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772572,"byte_end":10772620,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772621,"byte_end":10772657,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772658,"byte_end":10772687,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772688,"byte_end":10772697,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772698,"byte_end":10772703,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772704,"byte_end":10772707,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772708,"byte_end":10772763,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772764,"byte_end":10772795,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772796,"byte_end":10772803,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10772804,"byte_end":10772811,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773302,"byte_end":10773305,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773070,"byte_end":10773135,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773140,"byte_end":10773143,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773148,"byte_end":10773234,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773239,"byte_end":10773290,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774374,"byte_end":10774378,"line_start":88,"line_end":88,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773904,"byte_end":10773964,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773969,"byte_end":10773972,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773977,"byte_end":10774051,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774056,"byte_end":10774081,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774086,"byte_end":10774089,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774094,"byte_end":10774187,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774192,"byte_end":10774283,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10774288,"byte_end":10774356,"line_start":87,"line_end":87,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776297,"byte_end":10776314,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776163,"byte_end":10776261,"line_start":132,"line_end":132,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776554,"byte_end":10776563,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776352,"byte_end":10776415,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776420,"byte_end":10776423,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776428,"byte_end":10776516,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776521,"byte_end":10776542,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5130},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":13416},{"krate":0,"index":5144},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":13422},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5155},{"krate":0,"index":5159},{"krate":0,"index":5172},{"krate":0,"index":5173},{"krate":0,"index":5179},{"krate":0,"index":5184},{"krate":0,"index":5190},{"krate":0,"index":5195},{"krate":0,"index":5199},{"krate":0,"index":5204},{"krate":0,"index":5207},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5213},{"krate":0,"index":5215},{"krate":0,"index":5217},{"krate":0,"index":5219},{"krate":0,"index":5221},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5244},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5258},{"krate":0,"index":5263},{"krate":0,"index":5269},{"krate":0,"index":5275},{"krate":0,"index":5278},{"krate":0,"index":5281},{"krate":0,"index":5286},{"krate":0,"index":5291}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776605,"byte_end":10776685,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776686,"byte_end":10776704,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776705,"byte_end":10776708,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776709,"byte_end":10776787,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776788,"byte_end":10776863,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776864,"byte_end":10776942,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776943,"byte_end":10776997,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10776998,"byte_end":10777001,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777002,"byte_end":10777078,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777079,"byte_end":10777159,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777160,"byte_end":10777237,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777238,"byte_end":10777288,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777289,"byte_end":10777292,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777293,"byte_end":10777371,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777372,"byte_end":10777429,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777430,"byte_end":10777433,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777434,"byte_end":10777512,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777513,"byte_end":10777585,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777586,"byte_end":10777602,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777603,"byte_end":10777606,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777607,"byte_end":10777621,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777622,"byte_end":10777625,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777626,"byte_end":10777706,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777707,"byte_end":10777786,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777787,"byte_end":10777864,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777865,"byte_end":10777943,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777944,"byte_end":10777951,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777952,"byte_end":10777955,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10777956,"byte_end":10778033,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778034,"byte_end":10778109,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778110,"byte_end":10778190,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778191,"byte_end":10778194,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778195,"byte_end":10778267,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778268,"byte_end":10778346,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778347,"byte_end":10778423,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778424,"byte_end":10778483,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778484,"byte_end":10778487,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778488,"byte_end":10778566,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778567,"byte_end":10778641,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778642,"byte_end":10778678,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778679,"byte_end":10778682,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778683,"byte_end":10778762,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778763,"byte_end":10778840,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778841,"byte_end":10778916,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778917,"byte_end":10778948,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778949,"byte_end":10778952,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778953,"byte_end":10778967,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778968,"byte_end":10778971,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10778972,"byte_end":10779047,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779048,"byte_end":10779126,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779127,"byte_end":10779204,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779205,"byte_end":10779236,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779237,"byte_end":10779240,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779241,"byte_end":10779287,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779288,"byte_end":10779356,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779357,"byte_end":10779407,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779408,"byte_end":10779456,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779457,"byte_end":10779532,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779533,"byte_end":10779608,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779609,"byte_end":10779661,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779662,"byte_end":10779665,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779666,"byte_end":10779680,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779681,"byte_end":10779684,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779685,"byte_end":10779700,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779701,"byte_end":10779704,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779705,"byte_end":10779712,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779713,"byte_end":10779744,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779745,"byte_end":10779748,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779749,"byte_end":10779767,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779768,"byte_end":10779789,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779790,"byte_end":10779841,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779842,"byte_end":10779879,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779880,"byte_end":10779883,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779884,"byte_end":10779917,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779918,"byte_end":10779972,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10779973,"byte_end":10780027,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780028,"byte_end":10780039,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780040,"byte_end":10780043,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780044,"byte_end":10780077,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780078,"byte_end":10780132,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780133,"byte_end":10780187,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780188,"byte_end":10780199,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780200,"byte_end":10780203,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780204,"byte_end":10780233,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780234,"byte_end":10780263,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780264,"byte_end":10780269,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780270,"byte_end":10780277,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780278,"byte_end":10780281,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780282,"byte_end":10780298,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780299,"byte_end":10780302,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780303,"byte_end":10780310,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780311,"byte_end":10780342,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780343,"byte_end":10780346,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780347,"byte_end":10780365,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780366,"byte_end":10780387,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780388,"byte_end":10780437,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780438,"byte_end":10780441,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780442,"byte_end":10780471,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780472,"byte_end":10780501,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780502,"byte_end":10780531,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780532,"byte_end":10780535,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780536,"byte_end":10780573,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780574,"byte_end":10780616,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780617,"byte_end":10780620,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780621,"byte_end":10780690,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780691,"byte_end":10780694,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780695,"byte_end":10780744,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780745,"byte_end":10780794,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780795,"byte_end":10780800,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10780801,"byte_end":10780808,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782005,"byte_end":10782011,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5154}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781212,"byte_end":10781258,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781259,"byte_end":10781262,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781263,"byte_end":10781323,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781324,"byte_end":10781351,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781352,"byte_end":10781355,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781356,"byte_end":10781370,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781371,"byte_end":10781374,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781375,"byte_end":10781382,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781383,"byte_end":10781414,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781415,"byte_end":10781418,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781419,"byte_end":10781437,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781438,"byte_end":10781459,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781460,"byte_end":10781511,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781512,"byte_end":10781549,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781550,"byte_end":10781553,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781554,"byte_end":10781587,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781588,"byte_end":10781642,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781643,"byte_end":10781697,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781698,"byte_end":10781709,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781710,"byte_end":10781713,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781714,"byte_end":10781747,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781748,"byte_end":10781802,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781803,"byte_end":10781857,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781858,"byte_end":10781869,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781870,"byte_end":10781873,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781874,"byte_end":10781903,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781904,"byte_end":10781933,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781934,"byte_end":10781939,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781940,"byte_end":10781947,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781948,"byte_end":10781951,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10781952,"byte_end":10781993,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5155},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783059,"byte_end":10783067,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5157},{"krate":0,"index":5158}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782048,"byte_end":10782096,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782097,"byte_end":10782100,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782101,"byte_end":10782167,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782168,"byte_end":10782197,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782198,"byte_end":10782201,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782202,"byte_end":10782280,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782281,"byte_end":10782293,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782294,"byte_end":10782297,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782298,"byte_end":10782405,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782406,"byte_end":10782409,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782410,"byte_end":10782424,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782425,"byte_end":10782428,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782429,"byte_end":10782436,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782437,"byte_end":10782468,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782469,"byte_end":10782472,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782473,"byte_end":10782491,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782492,"byte_end":10782513,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782514,"byte_end":10782565,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782566,"byte_end":10782603,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782604,"byte_end":10782607,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782608,"byte_end":10782641,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782642,"byte_end":10782696,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782697,"byte_end":10782751,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782752,"byte_end":10782763,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782764,"byte_end":10782767,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782768,"byte_end":10782801,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782802,"byte_end":10782856,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782857,"byte_end":10782911,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782912,"byte_end":10782923,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782924,"byte_end":10782927,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782928,"byte_end":10782957,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782958,"byte_end":10782987,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782988,"byte_end":10782993,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10782994,"byte_end":10783001,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783002,"byte_end":10783005,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783006,"byte_end":10783047,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783216,"byte_end":10783221,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5160},{"krate":0,"index":6736},{"krate":0,"index":6740},{"krate":0,"index":5161},{"krate":0,"index":5164},{"krate":0,"index":6743},{"krate":0,"index":6753},{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":6755},{"krate":0,"index":6767},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":5169},{"krate":0,"index":5171}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783228,"byte_end":10783253,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6736},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783725,"byte_end":10783734,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783278,"byte_end":10783343,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783348,"byte_end":10783351,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783356,"byte_end":10783428,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783433,"byte_end":10783510,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783515,"byte_end":10783574,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783579,"byte_end":10783582,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783587,"byte_end":10783637,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783642,"byte_end":10783688,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6739},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783738,"byte_end":10783743,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784340,"byte_end":10784346,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6743},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784235,"byte_end":10784310,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784319,"byte_end":10784331,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784572,"byte_end":10784578,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6743},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784357,"byte_end":10784429,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784438,"byte_end":10784498,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784507,"byte_end":10784510,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784519,"byte_end":10784563,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6743},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784215,"byte_end":10784224,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6744},{"krate":0,"index":6746}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783982,"byte_end":10784049,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784054,"byte_end":10784057,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784062,"byte_end":10784114,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784119,"byte_end":10784169,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6756},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785418,"byte_end":10785423,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6755},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785218,"byte_end":10785276,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785285,"byte_end":10785342,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785351,"byte_end":10785354,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785363,"byte_end":10785409,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785539,"byte_end":10785545,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6755},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785434,"byte_end":10785509,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785518,"byte_end":10785530,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785818,"byte_end":10785824,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6755},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785556,"byte_end":10785630,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785639,"byte_end":10785707,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785716,"byte_end":10785744,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785753,"byte_end":10785756,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785765,"byte_end":10785809,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785195,"byte_end":10785207,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6756},{"krate":0,"index":6758},{"krate":0,"index":6760}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784950,"byte_end":10785021,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785026,"byte_end":10785029,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785034,"byte_end":10785094,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785099,"byte_end":10785149,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10790019,"byte_end":10790026,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788393,"byte_end":10788469,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788470,"byte_end":10788519,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788520,"byte_end":10788523,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788524,"byte_end":10788593,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788594,"byte_end":10788644,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788645,"byte_end":10788648,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788649,"byte_end":10788723,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788724,"byte_end":10788799,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788800,"byte_end":10788868,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788869,"byte_end":10788872,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788873,"byte_end":10788949,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788950,"byte_end":10789031,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789032,"byte_end":10789071,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789072,"byte_end":10789075,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789076,"byte_end":10789122,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789123,"byte_end":10789191,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789192,"byte_end":10789242,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789243,"byte_end":10789295,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789296,"byte_end":10789355,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789356,"byte_end":10789415,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789416,"byte_end":10789419,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789420,"byte_end":10789434,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789435,"byte_end":10789438,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789439,"byte_end":10789446,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789447,"byte_end":10789478,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789479,"byte_end":10789482,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789483,"byte_end":10789501,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789502,"byte_end":10789523,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789524,"byte_end":10789575,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789576,"byte_end":10789613,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789614,"byte_end":10789617,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789618,"byte_end":10789651,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789652,"byte_end":10789706,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789707,"byte_end":10789761,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789762,"byte_end":10789773,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789774,"byte_end":10789777,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789778,"byte_end":10789811,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789812,"byte_end":10789866,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789867,"byte_end":10789921,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789922,"byte_end":10789933,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789934,"byte_end":10789937,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789938,"byte_end":10789967,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789968,"byte_end":10789997,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10789998,"byte_end":10790003,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10790004,"byte_end":10790011,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793078,"byte_end":10793082,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791228,"byte_end":10791302,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791307,"byte_end":10791343,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791348,"byte_end":10791351,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791356,"byte_end":10791431,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791436,"byte_end":10791502,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791507,"byte_end":10791558,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791563,"byte_end":10791566,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791571,"byte_end":10791583,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791588,"byte_end":10791591,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791596,"byte_end":10791670,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791675,"byte_end":10791751,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791756,"byte_end":10791809,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791814,"byte_end":10791817,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791822,"byte_end":10791832,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791837,"byte_end":10791840,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791845,"byte_end":10791917,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791922,"byte_end":10791997,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792002,"byte_end":10792063,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792068,"byte_end":10792071,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792076,"byte_end":10792149,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792154,"byte_end":10792219,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792224,"byte_end":10792242,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792247,"byte_end":10792250,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792255,"byte_end":10792305,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792310,"byte_end":10792370,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792375,"byte_end":10792378,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792383,"byte_end":10792397,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792402,"byte_end":10792405,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792410,"byte_end":10792417,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792422,"byte_end":10792453,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792458,"byte_end":10792461,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792466,"byte_end":10792484,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792489,"byte_end":10792510,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792515,"byte_end":10792566,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792571,"byte_end":10792608,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792613,"byte_end":10792616,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792621,"byte_end":10792654,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792659,"byte_end":10792713,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792718,"byte_end":10792772,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792777,"byte_end":10792788,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792793,"byte_end":10792796,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792801,"byte_end":10792834,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792839,"byte_end":10792893,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792898,"byte_end":10792952,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792957,"byte_end":10792968,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792973,"byte_end":10792976,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10792981,"byte_end":10793010,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793015,"byte_end":10793044,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793049,"byte_end":10793054,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793059,"byte_end":10793066,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793842,"byte_end":10793851,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793247,"byte_end":10793324,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793329,"byte_end":10793358,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793363,"byte_end":10793366,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793371,"byte_end":10793385,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793390,"byte_end":10793393,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793398,"byte_end":10793405,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793410,"byte_end":10793441,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793446,"byte_end":10793449,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793454,"byte_end":10793472,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793477,"byte_end":10793498,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793503,"byte_end":10793550,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793555,"byte_end":10793558,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793563,"byte_end":10793590,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793595,"byte_end":10793624,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793629,"byte_end":10793632,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793637,"byte_end":10793673,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793678,"byte_end":10793681,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793686,"byte_end":10793715,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793720,"byte_end":10793723,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793728,"byte_end":10793773,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793778,"byte_end":10793808,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793813,"byte_end":10793818,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793823,"byte_end":10793830,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10795110,"byte_end":10795124,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10793958,"byte_end":10794000,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794005,"byte_end":10794008,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794013,"byte_end":10794089,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794094,"byte_end":10794167,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794172,"byte_end":10794192,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794197,"byte_end":10794200,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794205,"byte_end":10794215,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794220,"byte_end":10794223,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794228,"byte_end":10794298,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794303,"byte_end":10794371,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794376,"byte_end":10794389,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794394,"byte_end":10794397,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794402,"byte_end":10794454,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794459,"byte_end":10794509,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794514,"byte_end":10794560,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794565,"byte_end":10794625,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794630,"byte_end":10794678,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794683,"byte_end":10794686,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794691,"byte_end":10794705,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794710,"byte_end":10794713,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794718,"byte_end":10794725,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794730,"byte_end":10794761,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794766,"byte_end":10794769,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794774,"byte_end":10794792,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794797,"byte_end":10794818,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794823,"byte_end":10794871,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794876,"byte_end":10794879,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794884,"byte_end":10794927,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794932,"byte_end":10794935,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794940,"byte_end":10794978,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794983,"byte_end":10794986,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10794991,"byte_end":10795034,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10795039,"byte_end":10795042,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10795047,"byte_end":10795076,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10795081,"byte_end":10795086,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10795091,"byte_end":10795098,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804687,"byte_end":10804691,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802459,"byte_end":10802505,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802510,"byte_end":10802513,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802518,"byte_end":10802586,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802591,"byte_end":10802623,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802628,"byte_end":10802631,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802636,"byte_end":10802706,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802711,"byte_end":10802785,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802790,"byte_end":10802793,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802798,"byte_end":10802874,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802879,"byte_end":10802955,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802960,"byte_end":10803028,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803033,"byte_end":10803106,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803111,"byte_end":10803180,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803185,"byte_end":10803230,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803235,"byte_end":10803238,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803243,"byte_end":10803293,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803298,"byte_end":10803350,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803355,"byte_end":10803358,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803363,"byte_end":10803377,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803382,"byte_end":10803385,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803390,"byte_end":10803397,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803402,"byte_end":10803433,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803438,"byte_end":10803441,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803446,"byte_end":10803464,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803469,"byte_end":10803490,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803495,"byte_end":10803546,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803551,"byte_end":10803588,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803593,"byte_end":10803596,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803601,"byte_end":10803634,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803639,"byte_end":10803693,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803698,"byte_end":10803752,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803757,"byte_end":10803768,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803773,"byte_end":10803776,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803781,"byte_end":10803814,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803819,"byte_end":10803873,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803878,"byte_end":10803932,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803937,"byte_end":10803948,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803953,"byte_end":10803956,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803961,"byte_end":10803990,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10803995,"byte_end":10804024,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804029,"byte_end":10804034,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804039,"byte_end":10804046,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804051,"byte_end":10804054,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804059,"byte_end":10804075,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804080,"byte_end":10804083,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804088,"byte_end":10804095,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804100,"byte_end":10804131,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804136,"byte_end":10804139,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804144,"byte_end":10804162,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804167,"byte_end":10804188,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804193,"byte_end":10804242,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804247,"byte_end":10804250,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804255,"byte_end":10804284,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804289,"byte_end":10804318,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804323,"byte_end":10804352,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804357,"byte_end":10804360,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804365,"byte_end":10804402,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804407,"byte_end":10804449,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804454,"byte_end":10804457,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804462,"byte_end":10804531,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804536,"byte_end":10804539,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804544,"byte_end":10804593,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804598,"byte_end":10804647,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804652,"byte_end":10804657,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804662,"byte_end":10804669,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806452,"byte_end":10806460,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804793,"byte_end":10804866,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804871,"byte_end":10804874,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804879,"byte_end":10804951,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804956,"byte_end":10804980,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804985,"byte_end":10804988,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10804993,"byte_end":10805073,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805078,"byte_end":10805152,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805157,"byte_end":10805160,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805165,"byte_end":10805238,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805243,"byte_end":10805317,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805322,"byte_end":10805325,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805330,"byte_end":10805406,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805411,"byte_end":10805487,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805492,"byte_end":10805563,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805568,"byte_end":10805641,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805646,"byte_end":10805719,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805724,"byte_end":10805795,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805800,"byte_end":10805852,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805857,"byte_end":10805860,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805865,"byte_end":10805917,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805922,"byte_end":10805982,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10805987,"byte_end":10806037,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806042,"byte_end":10806045,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806050,"byte_end":10806064,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806069,"byte_end":10806072,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806077,"byte_end":10806084,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806089,"byte_end":10806120,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806125,"byte_end":10806128,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806133,"byte_end":10806151,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806156,"byte_end":10806177,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806182,"byte_end":10806232,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806237,"byte_end":10806240,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806245,"byte_end":10806285,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806290,"byte_end":10806293,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806298,"byte_end":10806327,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806332,"byte_end":10806335,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806340,"byte_end":10806383,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806388,"byte_end":10806418,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806423,"byte_end":10806428,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806433,"byte_end":10806440,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":5294},{"krate":0,"index":5368},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5608},{"krate":0,"index":5653},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5727}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810733,"byte_end":10810803,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810804,"byte_end":10810827,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810828,"byte_end":10810831,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810832,"byte_end":10810912,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810913,"byte_end":10810991,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10810992,"byte_end":10811068,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811069,"byte_end":10811148,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811149,"byte_end":10811229,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811230,"byte_end":10811301,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811302,"byte_end":10811324,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811325,"byte_end":10811328,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811329,"byte_end":10811406,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811407,"byte_end":10811478,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811479,"byte_end":10811544,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811545,"byte_end":10811629,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811630,"byte_end":10811708,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811709,"byte_end":10811786,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811787,"byte_end":10811865,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811866,"byte_end":10811945,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811946,"byte_end":10811963,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811964,"byte_end":10811967,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811968,"byte_end":10811971,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811972,"byte_end":10811991,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811992,"byte_end":10811995,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10811996,"byte_end":10812062,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812063,"byte_end":10812143,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812144,"byte_end":10812221,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812222,"byte_end":10812225,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812226,"byte_end":10812296,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812297,"byte_end":10812376,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812377,"byte_end":10812400,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812401,"byte_end":10812404,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812405,"byte_end":10812425,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812426,"byte_end":10812429,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812430,"byte_end":10812510,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812511,"byte_end":10812591,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812592,"byte_end":10812670,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812671,"byte_end":10812743,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812744,"byte_end":10812818,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812819,"byte_end":10812831,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812832,"byte_end":10812835,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812836,"byte_end":10812883,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812884,"byte_end":10812887,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812888,"byte_end":10812969,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10812970,"byte_end":10813005,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813006,"byte_end":10813009,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813010,"byte_end":10813090,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813091,"byte_end":10813172,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813173,"byte_end":10813247,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813248,"byte_end":10813329,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813330,"byte_end":10813375,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813376,"byte_end":10813379,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813380,"byte_end":10813460,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813461,"byte_end":10813539,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813540,"byte_end":10813606,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813607,"byte_end":10813689,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813690,"byte_end":10813754,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813755,"byte_end":10813758,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813759,"byte_end":10813800,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813801,"byte_end":10813846,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813847,"byte_end":10813900,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813901,"byte_end":10813956,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10813957,"byte_end":10814020,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814021,"byte_end":10814086,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814087,"byte_end":10814146,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814147,"byte_end":10814210,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814211,"byte_end":10814271,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814272,"byte_end":10814317,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814318,"byte_end":10814408,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5380},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828615,"byte_end":10828621,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5382}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828304,"byte_end":10828349,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828350,"byte_end":10828353,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828354,"byte_end":10828417,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828418,"byte_end":10828421,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Sender` in a poll function, you can use the [`PollSender`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828422,"byte_end":10828496,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828497,"byte_end":10828509,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828510,"byte_end":10828513,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828514,"byte_end":10828603,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":5383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828996,"byte_end":10829002,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5386}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828664,"byte_end":10828710,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828711,"byte_end":10828714,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828715,"byte_end":10828802,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828803,"byte_end":10828886,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828887,"byte_end":10828890,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828891,"byte_end":10828933,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10828934,"byte_end":10828984,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829571,"byte_end":10829582,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":5389}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829053,"byte_end":10829105,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829106,"byte_end":10829109,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829110,"byte_end":10829187,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829188,"byte_end":10829217,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829218,"byte_end":10829221,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829222,"byte_end":10829294,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829295,"byte_end":10829373,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829374,"byte_end":10829414,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829415,"byte_end":10829418,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829419,"byte_end":10829441,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829442,"byte_end":10829496,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829497,"byte_end":10829559,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829949,"byte_end":10829957,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5392}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829633,"byte_end":10829681,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829682,"byte_end":10829685,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829686,"byte_end":10829749,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829750,"byte_end":10829753,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829754,"byte_end":10829827,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829828,"byte_end":10829831,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10829832,"byte_end":10829937,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":5393},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831415,"byte_end":10831422,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830029,"byte_end":10830108,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830109,"byte_end":10830131,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830132,"byte_end":10830135,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830136,"byte_end":10830212,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830213,"byte_end":10830293,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830294,"byte_end":10830373,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830374,"byte_end":10830377,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830378,"byte_end":10830455,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830456,"byte_end":10830481,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830482,"byte_end":10830485,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830486,"byte_end":10830565,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830566,"byte_end":10830614,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830615,"byte_end":10830618,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830619,"byte_end":10830698,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830699,"byte_end":10830774,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830775,"byte_end":10830841,"line_start":79,"line_end":79,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830842,"byte_end":10830845,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830846,"byte_end":10830858,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830859,"byte_end":10830862,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830863,"byte_end":10830902,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830903,"byte_end":10830906,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830907,"byte_end":10830921,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830922,"byte_end":10830925,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830926,"byte_end":10830937,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830938,"byte_end":10830964,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830965,"byte_end":10830968,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830969,"byte_end":10830987,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10830988,"byte_end":10831009,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831010,"byte_end":10831056,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831057,"byte_end":10831060,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831061,"byte_end":10831094,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831095,"byte_end":10831123,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831124,"byte_end":10831174,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831175,"byte_end":10831224,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831225,"byte_end":10831252,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831253,"byte_end":10831270,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831271,"byte_end":10831284,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831285,"byte_end":10831296,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831297,"byte_end":10831300,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831301,"byte_end":10831346,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831347,"byte_end":10831383,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831384,"byte_end":10831393,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831394,"byte_end":10831399,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831400,"byte_end":10831407,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833784,"byte_end":10833788,"line_start":180,"line_end":180,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832022,"byte_end":10832068,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832073,"byte_end":10832076,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832081,"byte_end":10832156,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832161,"byte_end":10832234,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832239,"byte_end":10832315,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832320,"byte_end":10832395,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832400,"byte_end":10832403,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832408,"byte_end":10832481,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832486,"byte_end":10832560,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832565,"byte_end":10832591,"line_start":137,"line_end":137,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832596,"byte_end":10832599,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832604,"byte_end":10832673,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832678,"byte_end":10832750,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832755,"byte_end":10832807,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832812,"byte_end":10832815,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832820,"byte_end":10832846,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832851,"byte_end":10832900,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832905,"byte_end":10832908,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832913,"byte_end":10832927,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832932,"byte_end":10832935,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832940,"byte_end":10832947,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832952,"byte_end":10832978,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832983,"byte_end":10832986,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10832991,"byte_end":10833009,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833014,"byte_end":10833035,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833040,"byte_end":10833086,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833091,"byte_end":10833094,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833099,"byte_end":10833132,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833137,"byte_end":10833181,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833186,"byte_end":10833197,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833202,"byte_end":10833205,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833210,"byte_end":10833261,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833266,"byte_end":10833308,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833313,"byte_end":10833318,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833323,"byte_end":10833330,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833335,"byte_end":10833338,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833343,"byte_end":10833367,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833372,"byte_end":10833375,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833380,"byte_end":10833387,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833392,"byte_end":10833418,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833423,"byte_end":10833426,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833431,"byte_end":10833449,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833454,"byte_end":10833475,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833480,"byte_end":10833526,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833531,"byte_end":10833534,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833539,"byte_end":10833579,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833584,"byte_end":10833624,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833629,"byte_end":10833632,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833637,"byte_end":10833688,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833693,"byte_end":10833744,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833749,"byte_end":10833754,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833759,"byte_end":10833766,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835852,"byte_end":10835865,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833909,"byte_end":10833971,"line_start":185,"line_end":185,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833976,"byte_end":10833979,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10833984,"byte_end":10834059,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834064,"byte_end":10834137,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834142,"byte_end":10834218,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834223,"byte_end":10834298,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834303,"byte_end":10834306,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834311,"byte_end":10834384,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834389,"byte_end":10834463,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834468,"byte_end":10834494,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834499,"byte_end":10834502,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834507,"byte_end":10834575,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834580,"byte_end":10834655,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834660,"byte_end":10834715,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834720,"byte_end":10834723,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834728,"byte_end":10834797,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834802,"byte_end":10834874,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834879,"byte_end":10834940,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834945,"byte_end":10834948,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834953,"byte_end":10834979,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10834984,"byte_end":10835033,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835038,"byte_end":10835104,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835109,"byte_end":10835112,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835117,"byte_end":10835129,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835134,"byte_end":10835137,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835142,"byte_end":10835209,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835214,"byte_end":10835226,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835231,"byte_end":10835234,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835239,"byte_end":10835253,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835258,"byte_end":10835261,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835266,"byte_end":10835273,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835278,"byte_end":10835298,"line_start":216,"line_end":216,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835303,"byte_end":10835335,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835340,"byte_end":10835366,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835371,"byte_end":10835374,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835379,"byte_end":10835394,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835399,"byte_end":10835450,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835455,"byte_end":10835458,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835463,"byte_end":10835510,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835515,"byte_end":10835568,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835573,"byte_end":10835584,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835589,"byte_end":10835592,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835597,"byte_end":10835619,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835624,"byte_end":10835645,"line_start":228,"line_end":228,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835650,"byte_end":10835684,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835689,"byte_end":10835731,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835736,"byte_end":10835751,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835756,"byte_end":10835789,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835794,"byte_end":10835799,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835804,"byte_end":10835811,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835816,"byte_end":10835840,"line_start":235,"line_end":235,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5405},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837276,"byte_end":10837281,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10835948,"byte_end":10836011,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836016,"byte_end":10836019,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836024,"byte_end":10836099,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836104,"byte_end":10836176,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836181,"byte_end":10836251,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836256,"byte_end":10836259,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836264,"byte_end":10836335,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836340,"byte_end":10836406,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836411,"byte_end":10836487,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836492,"byte_end":10836539,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836544,"byte_end":10836547,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836552,"byte_end":10836574,"line_start":251,"line_end":251,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836579,"byte_end":10836611,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836616,"byte_end":10836619,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836624,"byte_end":10836638,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836643,"byte_end":10836646,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836651,"byte_end":10836658,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836663,"byte_end":10836689,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836694,"byte_end":10836697,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836702,"byte_end":10836720,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836725,"byte_end":10836746,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836751,"byte_end":10836796,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836801,"byte_end":10836804,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836809,"byte_end":10836842,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836847,"byte_end":10836873,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836878,"byte_end":10836933,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836938,"byte_end":10836969,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10836974,"byte_end":10836997,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837002,"byte_end":10837015,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837020,"byte_end":10837031,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837036,"byte_end":10837039,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837044,"byte_end":10837063,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837068,"byte_end":10837071,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837076,"byte_end":10837123,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837128,"byte_end":10837164,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837169,"byte_end":10837178,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837183,"byte_end":10837186,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837191,"byte_end":10837242,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837247,"byte_end":10837252,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837257,"byte_end":10837264,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5406},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838122,"byte_end":10838131,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837333,"byte_end":10837387,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837392,"byte_end":10837395,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837400,"byte_end":10837424,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837429,"byte_end":10837432,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837437,"byte_end":10837511,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837516,"byte_end":10837530,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837535,"byte_end":10837597,"line_start":290,"line_end":290,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837602,"byte_end":10837676,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837681,"byte_end":10837733,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837738,"byte_end":10837741,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837746,"byte_end":10837818,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837823,"byte_end":10837899,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837904,"byte_end":10837980,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10837985,"byte_end":10838056,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838061,"byte_end":10838110,"line_start":298,"line_end":298,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840227,"byte_end":10840231,"line_start":364,"line_end":364,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838587,"byte_end":10838638,"line_start":319,"line_end":319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838643,"byte_end":10838646,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838651,"byte_end":10838727,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838732,"byte_end":10838808,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838813,"byte_end":10838887,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838892,"byte_end":10838967,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838972,"byte_end":10839041,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839046,"byte_end":10839118,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839123,"byte_end":10839154,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839159,"byte_end":10839162,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839167,"byte_end":10839179,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839184,"byte_end":10839187,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839192,"byte_end":10839265,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839270,"byte_end":10839344,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839349,"byte_end":10839409,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839414,"byte_end":10839417,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839422,"byte_end":10839452,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839457,"byte_end":10839483,"line_start":336,"line_end":336,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839488,"byte_end":10839491,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839496,"byte_end":10839510,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839515,"byte_end":10839518,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839523,"byte_end":10839593,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839598,"byte_end":10839637,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839642,"byte_end":10839645,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839650,"byte_end":10839661,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839666,"byte_end":10839692,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839697,"byte_end":10839700,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839705,"byte_end":10839723,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839728,"byte_end":10839749,"line_start":347,"line_end":347,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839754,"byte_end":10839798,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839803,"byte_end":10839806,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839811,"byte_end":10839844,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839849,"byte_end":10839877,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839882,"byte_end":10839932,"line_start":352,"line_end":352,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839937,"byte_end":10839986,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10839991,"byte_end":10840018,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840023,"byte_end":10840040,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840045,"byte_end":10840058,"line_start":356,"line_end":356,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840063,"byte_end":10840074,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840079,"byte_end":10840082,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840087,"byte_end":10840132,"line_start":359,"line_end":359,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840137,"byte_end":10840173,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840178,"byte_end":10840187,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840192,"byte_end":10840197,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840202,"byte_end":10840209,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841364,"byte_end":10841370,"line_start":405,"line_end":405,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840483,"byte_end":10840527,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840532,"byte_end":10840535,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840540,"byte_end":10840615,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840620,"byte_end":10840675,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840680,"byte_end":10840683,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840688,"byte_end":10840702,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840707,"byte_end":10840710,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840715,"byte_end":10840722,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840727,"byte_end":10840753,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840758,"byte_end":10840761,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840766,"byte_end":10840784,"line_start":384,"line_end":384,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840789,"byte_end":10840810,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840815,"byte_end":10840862,"line_start":386,"line_end":386,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840867,"byte_end":10840897,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840902,"byte_end":10840932,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840937,"byte_end":10840967,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10840972,"byte_end":10841002,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841007,"byte_end":10841040,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841045,"byte_end":10841066,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841071,"byte_end":10841082,"line_start":393,"line_end":393,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841087,"byte_end":10841090,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841095,"byte_end":10841118,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841123,"byte_end":10841148,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841153,"byte_end":10841178,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841183,"byte_end":10841208,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841213,"byte_end":10841238,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841243,"byte_end":10841267,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841272,"byte_end":10841282,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841287,"byte_end":10841324,"line_start":402,"line_end":402,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841329,"byte_end":10841334,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841339,"byte_end":10841346,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843544,"byte_end":10843552,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841424,"byte_end":10841483,"line_start":409,"line_end":409,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841488,"byte_end":10841491,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841496,"byte_end":10841575,"line_start":411,"line_end":411,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841580,"byte_end":10841655,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841660,"byte_end":10841738,"line_start":413,"line_end":413,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841743,"byte_end":10841785,"line_start":414,"line_end":414,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841790,"byte_end":10841793,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841798,"byte_end":10841810,"line_start":416,"line_end":416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841815,"byte_end":10841818,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841823,"byte_end":10841894,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841899,"byte_end":10841975,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10841980,"byte_end":10842002,"line_start":420,"line_end":420,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842007,"byte_end":10842010,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842015,"byte_end":10842088,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842093,"byte_end":10842167,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842172,"byte_end":10842232,"line_start":424,"line_end":424,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842237,"byte_end":10842240,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842245,"byte_end":10842271,"line_start":426,"line_end":426,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842276,"byte_end":10842300,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842305,"byte_end":10842335,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842340,"byte_end":10842343,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842348,"byte_end":10842362,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842367,"byte_end":10842370,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842375,"byte_end":10842382,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842387,"byte_end":10842413,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842418,"byte_end":10842421,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842426,"byte_end":10842444,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842449,"byte_end":10842470,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842475,"byte_end":10842521,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842526,"byte_end":10842571,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842576,"byte_end":10842606,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842611,"byte_end":10842614,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842619,"byte_end":10842652,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842657,"byte_end":10842696,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842701,"byte_end":10842740,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842745,"byte_end":10842807,"line_start":444,"line_end":444,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842812,"byte_end":10842823,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842828,"byte_end":10842831,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842836,"byte_end":10842869,"line_start":447,"line_end":447,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842874,"byte_end":10842923,"line_start":448,"line_end":448,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842928,"byte_end":10842975,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10842980,"byte_end":10843016,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843021,"byte_end":10843032,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843037,"byte_end":10843040,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843045,"byte_end":10843065,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843070,"byte_end":10843109,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843114,"byte_end":10843159,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843164,"byte_end":10843167,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843172,"byte_end":10843211,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843216,"byte_end":10843261,"line_start":458,"line_end":458,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843266,"byte_end":10843269,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843274,"byte_end":10843323,"line_start":460,"line_end":460,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843328,"byte_end":10843359,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843364,"byte_end":10843426,"line_start":462,"line_end":462,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843431,"byte_end":10843496,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843501,"byte_end":10843510,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843515,"byte_end":10843520,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843525,"byte_end":10843532,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845641,"byte_end":10845653,"line_start":526,"line_end":526,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10843957,"byte_end":10844037,"line_start":479,"line_end":479,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844042,"byte_end":10844045,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844050,"byte_end":10844127,"line_start":481,"line_end":481,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844132,"byte_end":10844210,"line_start":482,"line_end":482,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844215,"byte_end":10844263,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844268,"byte_end":10844271,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844276,"byte_end":10844302,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844307,"byte_end":10844310,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844315,"byte_end":10844327,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844332,"byte_end":10844335,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844340,"byte_end":10844413,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844418,"byte_end":10844475,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844480,"byte_end":10844561,"line_start":491,"line_end":491,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844566,"byte_end":10844569,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844574,"byte_end":10844604,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844609,"byte_end":10844635,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844640,"byte_end":10844643,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844648,"byte_end":10844662,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844667,"byte_end":10844670,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844675,"byte_end":10844753,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844758,"byte_end":10844829,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844834,"byte_end":10844837,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844842,"byte_end":10844853,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844858,"byte_end":10844884,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844889,"byte_end":10844928,"line_start":503,"line_end":503,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844933,"byte_end":10844936,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844941,"byte_end":10844959,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844964,"byte_end":10844985,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10844990,"byte_end":10845034,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845039,"byte_end":10845042,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845047,"byte_end":10845080,"line_start":509,"line_end":509,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845085,"byte_end":10845113,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845118,"byte_end":10845204,"line_start":511,"line_end":511,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845209,"byte_end":10845262,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845267,"byte_end":10845294,"line_start":513,"line_end":513,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845299,"byte_end":10845316,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845321,"byte_end":10845334,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845339,"byte_end":10845350,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845355,"byte_end":10845358,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845363,"byte_end":10845408,"line_start":518,"line_end":518,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845413,"byte_end":10845449,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845454,"byte_end":10845506,"line_start":520,"line_end":520,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845511,"byte_end":10845520,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845525,"byte_end":10845530,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845535,"byte_end":10845542,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10845547,"byte_end":10845571,"line_start":524,"line_end":524,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847218,"byte_end":10847231,"line_start":579,"line_end":579,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846146,"byte_end":10846205,"line_start":545,"line_end":545,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846210,"byte_end":10846213,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846218,"byte_end":10846286,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846291,"byte_end":10846359,"line_start":548,"line_end":548,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846364,"byte_end":10846431,"line_start":549,"line_end":549,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846436,"byte_end":10846439,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846444,"byte_end":10846512,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846517,"byte_end":10846520,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846525,"byte_end":10846537,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846542,"byte_end":10846545,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846550,"byte_end":10846617,"line_start":555,"line_end":555,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846622,"byte_end":10846634,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846639,"byte_end":10846642,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846647,"byte_end":10846661,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846666,"byte_end":10846669,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846674,"byte_end":10846681,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846686,"byte_end":10846706,"line_start":561,"line_end":561,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846711,"byte_end":10846743,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846748,"byte_end":10846774,"line_start":563,"line_end":563,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846779,"byte_end":10846782,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846787,"byte_end":10846802,"line_start":565,"line_end":565,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846807,"byte_end":10846857,"line_start":566,"line_end":566,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846862,"byte_end":10846865,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846870,"byte_end":10846917,"line_start":568,"line_end":568,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846922,"byte_end":10846964,"line_start":569,"line_end":569,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846969,"byte_end":10846980,"line_start":570,"line_end":570,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846985,"byte_end":10846988,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10846993,"byte_end":10847046,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847051,"byte_end":10847101,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847106,"byte_end":10847117,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847122,"byte_end":10847155,"line_start":575,"line_end":575,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847160,"byte_end":10847165,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847170,"byte_end":10847177,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847182,"byte_end":10847206,"line_start":578,"line_end":578,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847922,"byte_end":10847931,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847340,"byte_end":10847404,"line_start":583,"line_end":583,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847409,"byte_end":10847479,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847484,"byte_end":10847495,"line_start":585,"line_end":585,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847500,"byte_end":10847503,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847508,"byte_end":10847553,"line_start":587,"line_end":587,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847558,"byte_end":10847617,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847622,"byte_end":10847625,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847630,"byte_end":10847637,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847642,"byte_end":10847698,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847703,"byte_end":10847732,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847737,"byte_end":10847740,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847745,"byte_end":10847770,"line_start":594,"line_end":594,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847775,"byte_end":10847805,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847810,"byte_end":10847813,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847818,"byte_end":10847831,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847836,"byte_end":10847864,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847869,"byte_end":10847898,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847903,"byte_end":10847910,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849322,"byte_end":10849329,"line_start":643,"line_end":643,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10847990,"byte_end":10848057,"line_start":605,"line_end":605,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848062,"byte_end":10848107,"line_start":606,"line_end":606,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848112,"byte_end":10848115,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848120,"byte_end":10848195,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848200,"byte_end":10848275,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848280,"byte_end":10848353,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848358,"byte_end":10848433,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848438,"byte_end":10848460,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848465,"byte_end":10848468,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848473,"byte_end":10848549,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848554,"byte_end":10848573,"line_start":615,"line_end":615,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848578,"byte_end":10848581,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848586,"byte_end":10848608,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848613,"byte_end":10848639,"line_start":618,"line_end":618,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848644,"byte_end":10848647,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848652,"byte_end":10848666,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848671,"byte_end":10848674,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848679,"byte_end":10848686,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848691,"byte_end":10848717,"line_start":623,"line_end":623,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848722,"byte_end":10848725,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848730,"byte_end":10848748,"line_start":625,"line_end":625,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848753,"byte_end":10848774,"line_start":626,"line_end":626,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848779,"byte_end":10848823,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848828,"byte_end":10848831,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848836,"byte_end":10848863,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848868,"byte_end":10848917,"line_start":630,"line_end":630,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848922,"byte_end":10848925,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10848930,"byte_end":10848996,"line_start":632,"line_end":632,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849001,"byte_end":10849031,"line_start":633,"line_end":633,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849036,"byte_end":10849079,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849084,"byte_end":10849087,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849092,"byte_end":10849133,"line_start":636,"line_end":636,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849138,"byte_end":10849163,"line_start":637,"line_end":637,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849168,"byte_end":10849171,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849176,"byte_end":10849227,"line_start":639,"line_end":639,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849232,"byte_end":10849282,"line_start":640,"line_end":640,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849287,"byte_end":10849292,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849297,"byte_end":10849304,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852450,"byte_end":10852463,"line_start":722,"line_end":722,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849467,"byte_end":10849540,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849545,"byte_end":10849619,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849624,"byte_end":10849643,"line_start":650,"line_end":650,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849648,"byte_end":10849651,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849656,"byte_end":10849730,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849735,"byte_end":10849810,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849815,"byte_end":10849890,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849895,"byte_end":10849970,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10849975,"byte_end":10850050,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850055,"byte_end":10850129,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850134,"byte_end":10850195,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850200,"byte_end":10850203,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850208,"byte_end":10850283,"line_start":660,"line_end":660,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850288,"byte_end":10850363,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850368,"byte_end":10850441,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850446,"byte_end":10850519,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850524,"byte_end":10850559,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850564,"byte_end":10850567,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850572,"byte_end":10850643,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850648,"byte_end":10850681,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850686,"byte_end":10850689,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850694,"byte_end":10850708,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850713,"byte_end":10850760,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850765,"byte_end":10850772,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850777,"byte_end":10850803,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850808,"byte_end":10850811,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850816,"byte_end":10850834,"line_start":674,"line_end":674,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850839,"byte_end":10850860,"line_start":675,"line_end":675,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850865,"byte_end":10850909,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850914,"byte_end":10850917,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850922,"byte_end":10850969,"line_start":678,"line_end":678,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10850974,"byte_end":10851029,"line_start":679,"line_end":679,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851034,"byte_end":10851037,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851042,"byte_end":10851103,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851108,"byte_end":10851136,"line_start":682,"line_end":682,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851141,"byte_end":10851175,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851180,"byte_end":10851183,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851188,"byte_end":10851240,"line_start":685,"line_end":685,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851245,"byte_end":10851295,"line_start":686,"line_end":686,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851300,"byte_end":10851303,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851308,"byte_end":10851352,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851357,"byte_end":10851393,"line_start":689,"line_end":689,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851398,"byte_end":10851403,"line_start":690,"line_end":690,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851408,"byte_end":10851415,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851420,"byte_end":10851423,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851428,"byte_end":10851504,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851509,"byte_end":10851585,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851590,"byte_end":10851593,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851598,"byte_end":10851605,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851610,"byte_end":10851636,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851641,"byte_end":10851644,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851649,"byte_end":10851667,"line_start":699,"line_end":699,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851672,"byte_end":10851693,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851698,"byte_end":10851742,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851747,"byte_end":10851750,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851755,"byte_end":10851804,"line_start":703,"line_end":703,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851809,"byte_end":10851872,"line_start":704,"line_end":704,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851877,"byte_end":10851880,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851885,"byte_end":10851951,"line_start":706,"line_end":706,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851956,"byte_end":10851986,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10851991,"byte_end":10852034,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852039,"byte_end":10852042,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852047,"byte_end":10852089,"line_start":710,"line_end":710,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852094,"byte_end":10852119,"line_start":711,"line_end":711,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852124,"byte_end":10852127,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852132,"byte_end":10852183,"line_start":713,"line_end":713,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852188,"byte_end":10852238,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852243,"byte_end":10852248,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852253,"byte_end":10852260,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852265,"byte_end":10852268,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852273,"byte_end":10852313,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852318,"byte_end":10852350,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852355,"byte_end":10852386,"line_start":720,"line_end":720,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852391,"byte_end":10852432,"line_start":721,"line_end":721,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5436},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854363,"byte_end":10854374,"line_start":779,"line_end":779,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852842,"byte_end":10852921,"line_start":736,"line_end":736,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852926,"byte_end":10852940,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852945,"byte_end":10852948,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10852953,"byte_end":10853033,"line_start":739,"line_end":739,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853038,"byte_end":10853123,"line_start":740,"line_end":740,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853128,"byte_end":10853210,"line_start":741,"line_end":741,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853215,"byte_end":10853289,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853294,"byte_end":10853297,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853302,"byte_end":10853378,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853383,"byte_end":10853402,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853407,"byte_end":10853410,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853415,"byte_end":10853437,"line_start":747,"line_end":747,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853442,"byte_end":10853468,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853473,"byte_end":10853505,"line_start":749,"line_end":749,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853510,"byte_end":10853513,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853518,"byte_end":10853532,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853537,"byte_end":10853540,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853545,"byte_end":10853552,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853557,"byte_end":10853583,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853588,"byte_end":10853591,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853596,"byte_end":10853614,"line_start":756,"line_end":756,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853619,"byte_end":10853640,"line_start":757,"line_end":757,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853645,"byte_end":10853689,"line_start":758,"line_end":758,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853694,"byte_end":10853697,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853702,"byte_end":10853729,"line_start":760,"line_end":760,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853734,"byte_end":10853781,"line_start":761,"line_end":761,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853786,"byte_end":10853789,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853794,"byte_end":10853860,"line_start":763,"line_end":763,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853865,"byte_end":10853895,"line_start":764,"line_end":764,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853900,"byte_end":10853943,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853948,"byte_end":10853951,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10853956,"byte_end":10854020,"line_start":767,"line_end":767,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854025,"byte_end":10854070,"line_start":768,"line_end":768,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854075,"byte_end":10854118,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854123,"byte_end":10854126,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854131,"byte_end":10854172,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854177,"byte_end":10854202,"line_start":772,"line_end":772,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854207,"byte_end":10854210,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854215,"byte_end":10854266,"line_start":774,"line_end":774,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854271,"byte_end":10854321,"line_start":775,"line_end":775,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854326,"byte_end":10854329,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854334,"byte_end":10854339,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854344,"byte_end":10854351,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857006,"byte_end":10857023,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854626,"byte_end":10854705,"line_start":788,"line_end":788,"column_start":5,"column_end":84}},{"value":"/ available, returning an owned permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854710,"byte_end":10854751,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854756,"byte_end":10854759,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854764,"byte_end":10854838,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854843,"byte_end":10854922,"line_start":792,"line_end":792,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10854927,"byte_end":10855002,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855007,"byte_end":10855083,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855088,"byte_end":10855163,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855168,"byte_end":10855242,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855247,"byte_end":10855312,"line_start":797,"line_end":797,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855317,"byte_end":10855320,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855325,"byte_end":10855397,"line_start":799,"line_end":799,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855402,"byte_end":10855477,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855482,"byte_end":10855555,"line_start":801,"line_end":801,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855560,"byte_end":10855633,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855638,"byte_end":10855714,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855719,"byte_end":10855794,"line_start":804,"line_end":804,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855799,"byte_end":10855836,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855841,"byte_end":10855844,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855849,"byte_end":10855934,"line_start":807,"line_end":807,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855939,"byte_end":10855958,"line_start":808,"line_end":808,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855963,"byte_end":10855966,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10855971,"byte_end":10856003,"line_start":810,"line_end":810,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856008,"byte_end":10856039,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856044,"byte_end":10856088,"line_start":812,"line_end":812,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856093,"byte_end":10856134,"line_start":813,"line_end":813,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856139,"byte_end":10856142,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856147,"byte_end":10856161,"line_start":815,"line_end":815,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856166,"byte_end":10856169,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856174,"byte_end":10856181,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856186,"byte_end":10856212,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856217,"byte_end":10856220,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856225,"byte_end":10856243,"line_start":820,"line_end":820,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856248,"byte_end":10856269,"line_start":821,"line_end":821,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856274,"byte_end":10856318,"line_start":822,"line_end":822,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856323,"byte_end":10856326,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856331,"byte_end":10856358,"line_start":824,"line_end":824,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856363,"byte_end":10856424,"line_start":825,"line_end":825,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856429,"byte_end":10856432,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856437,"byte_end":10856503,"line_start":827,"line_end":827,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856508,"byte_end":10856538,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856543,"byte_end":10856586,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856591,"byte_end":10856594,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856599,"byte_end":10856663,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856668,"byte_end":10856713,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856718,"byte_end":10856761,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856766,"byte_end":10856769,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856774,"byte_end":10856815,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856820,"byte_end":10856845,"line_start":836,"line_end":836,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856850,"byte_end":10856853,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856858,"byte_end":10856909,"line_start":838,"line_end":838,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856914,"byte_end":10856964,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856969,"byte_end":10856972,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856977,"byte_end":10856982,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10856987,"byte_end":10856994,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857681,"byte_end":10857693,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857310,"byte_end":10857367,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857372,"byte_end":10857375,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857380,"byte_end":10857394,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857399,"byte_end":10857402,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857407,"byte_end":10857414,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857419,"byte_end":10857474,"line_start":859,"line_end":859,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857479,"byte_end":10857505,"line_start":860,"line_end":860,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857510,"byte_end":10857545,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857550,"byte_end":10857553,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857558,"byte_end":10857615,"line_start":863,"line_end":863,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857620,"byte_end":10857657,"line_start":864,"line_end":864,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857662,"byte_end":10857669,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858736,"byte_end":10858744,"line_start":899,"line_end":899,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857780,"byte_end":10857828,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857833,"byte_end":10857836,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857841,"byte_end":10857933,"line_start":872,"line_end":872,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10857938,"byte_end":10858026,"line_start":873,"line_end":873,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858031,"byte_end":10858034,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858039,"byte_end":10858053,"line_start":875,"line_end":875,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858058,"byte_end":10858061,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858066,"byte_end":10858073,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858078,"byte_end":10858104,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858109,"byte_end":10858112,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858117,"byte_end":10858135,"line_start":880,"line_end":880,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858140,"byte_end":10858161,"line_start":881,"line_end":881,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858166,"byte_end":10858216,"line_start":882,"line_end":882,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858221,"byte_end":10858224,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858229,"byte_end":10858266,"line_start":884,"line_end":884,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858271,"byte_end":10858274,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858279,"byte_end":10858337,"line_start":886,"line_end":886,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858342,"byte_end":10858391,"line_start":887,"line_end":887,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858396,"byte_end":10858433,"line_start":888,"line_end":888,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858438,"byte_end":10858441,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the caapcity by one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858446,"byte_end":10858517,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858522,"byte_end":10858546,"line_start":891,"line_end":891,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858551,"byte_end":10858584,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858589,"byte_end":10858626,"line_start":893,"line_end":893,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858631,"byte_end":10858636,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858641,"byte_end":10858648,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858653,"byte_end":10858656,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858661,"byte_end":10858687,"line_start":897,"line_end":897,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858692,"byte_end":10858724,"line_start":898,"line_end":898,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860291,"byte_end":10860295,"line_start":955,"line_end":955,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859218,"byte_end":10859264,"line_start":923,"line_end":923,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859269,"byte_end":10859272,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859277,"byte_end":10859352,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859357,"byte_end":10859431,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859436,"byte_end":10859510,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859515,"byte_end":10859563,"line_start":928,"line_end":928,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859568,"byte_end":10859571,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859576,"byte_end":10859616,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859621,"byte_end":10859624,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859629,"byte_end":10859643,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859648,"byte_end":10859651,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859656,"byte_end":10859663,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859668,"byte_end":10859694,"line_start":935,"line_end":935,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859699,"byte_end":10859702,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859707,"byte_end":10859725,"line_start":937,"line_end":937,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859730,"byte_end":10859751,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859756,"byte_end":10859800,"line_start":939,"line_end":939,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859805,"byte_end":10859808,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859813,"byte_end":10859840,"line_start":941,"line_end":941,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859845,"byte_end":10859894,"line_start":942,"line_end":942,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859899,"byte_end":10859902,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859907,"byte_end":10859973,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859978,"byte_end":10860008,"line_start":945,"line_end":945,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860013,"byte_end":10860056,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860061,"byte_end":10860064,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860069,"byte_end":10860108,"line_start":948,"line_end":948,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860113,"byte_end":10860138,"line_start":949,"line_end":949,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860143,"byte_end":10860146,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860151,"byte_end":10860202,"line_start":951,"line_end":951,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860207,"byte_end":10860257,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860262,"byte_end":10860267,"line_start":953,"line_end":953,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860272,"byte_end":10860279,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862357,"byte_end":10862361,"line_start":1027,"line_end":1027,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861170,"byte_end":10861216,"line_start":993,"line_end":993,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861221,"byte_end":10861224,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861229,"byte_end":10861304,"line_start":995,"line_end":995,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861309,"byte_end":10861383,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861388,"byte_end":10861462,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861467,"byte_end":10861515,"line_start":998,"line_end":998,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861520,"byte_end":10861523,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861528,"byte_end":10861602,"line_start":1000,"line_end":1000,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861607,"byte_end":10861642,"line_start":1001,"line_end":1001,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861647,"byte_end":10861650,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861655,"byte_end":10861695,"line_start":1003,"line_end":1003,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861700,"byte_end":10861703,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861708,"byte_end":10861722,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861727,"byte_end":10861730,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861735,"byte_end":10861742,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861747,"byte_end":10861773,"line_start":1008,"line_end":1008,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861778,"byte_end":10861781,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861786,"byte_end":10861804,"line_start":1010,"line_end":1010,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861809,"byte_end":10861830,"line_start":1011,"line_end":1011,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861835,"byte_end":10861879,"line_start":1012,"line_end":1012,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861884,"byte_end":10861887,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861892,"byte_end":10861919,"line_start":1014,"line_end":1014,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861924,"byte_end":10861979,"line_start":1015,"line_end":1015,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861984,"byte_end":10861987,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861992,"byte_end":10862054,"line_start":1017,"line_end":1017,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862059,"byte_end":10862093,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862098,"byte_end":10862101,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862106,"byte_end":10862157,"line_start":1020,"line_end":1020,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862162,"byte_end":10862212,"line_start":1021,"line_end":1021,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862217,"byte_end":10862220,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862225,"byte_end":10862282,"line_start":1023,"line_end":1023,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862287,"byte_end":10862323,"line_start":1024,"line_end":1024,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862328,"byte_end":10862333,"line_start":1025,"line_end":1025,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862338,"byte_end":10862345,"line_start":1026,"line_end":1026,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863586,"byte_end":10863593,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Release the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Release the reserved capacity *without* sending a message, returning the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862614,"byte_end":10862690,"line_start":1036,"line_end":1036,"column_start":5,"column_end":81}},{"value":"/ [`Sender`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862695,"byte_end":10862710,"line_start":1037,"line_end":1037,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862715,"byte_end":10862718,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862723,"byte_end":10862737,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862742,"byte_end":10862745,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862750,"byte_end":10862757,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862762,"byte_end":10862788,"line_start":1042,"line_end":1042,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862793,"byte_end":10862796,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862801,"byte_end":10862819,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862824,"byte_end":10862845,"line_start":1045,"line_end":1045,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862850,"byte_end":10862890,"line_start":1046,"line_end":1046,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862895,"byte_end":10862898,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862903,"byte_end":10862951,"line_start":1048,"line_end":1048,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10862956,"byte_end":10863019,"line_start":1049,"line_end":1049,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863024,"byte_end":10863027,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863032,"byte_end":10863108,"line_start":1051,"line_end":1051,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863113,"byte_end":10863164,"line_start":1052,"line_end":1052,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863169,"byte_end":10863212,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863217,"byte_end":10863220,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863225,"byte_end":10863301,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863306,"byte_end":10863331,"line_start":1056,"line_end":1056,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863336,"byte_end":10863371,"line_start":1057,"line_end":1057,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863376,"byte_end":10863379,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863384,"byte_end":10863441,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863446,"byte_end":10863482,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863487,"byte_end":10863517,"line_start":1061,"line_end":1061,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863522,"byte_end":10863527,"line_start":1062,"line_end":1062,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863532,"byte_end":10863539,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863544,"byte_end":10863547,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863552,"byte_end":10863574,"line_start":1065,"line_end":1065,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885724,"byte_end":10885739,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5663}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885566,"byte_end":10885620,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885621,"byte_end":10885624,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885625,"byte_end":10885657,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885658,"byte_end":10885712,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886532,"byte_end":10886549,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5672}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886156,"byte_end":10886213,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886214,"byte_end":10886217,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886218,"byte_end":10886250,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886251,"byte_end":10886305,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886306,"byte_end":10886309,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886310,"byte_end":10886392,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886393,"byte_end":10886396,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886397,"byte_end":10886520,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887381,"byte_end":10887398,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886848,"byte_end":10886924,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886925,"byte_end":10886956,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886957,"byte_end":10886960,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886961,"byte_end":10887041,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887042,"byte_end":10887121,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887122,"byte_end":10887135,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887136,"byte_end":10887139,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887140,"byte_end":10887219,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887220,"byte_end":10887296,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887297,"byte_end":10887373,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5682},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888877,"byte_end":10888881,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887807,"byte_end":10887853,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887858,"byte_end":10887861,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887866,"byte_end":10887938,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887943,"byte_end":10887997,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888002,"byte_end":10888005,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888010,"byte_end":10888024,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888029,"byte_end":10888032,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888037,"byte_end":10888044,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888049,"byte_end":10888075,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888080,"byte_end":10888083,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888088,"byte_end":10888106,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888111,"byte_end":10888132,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888137,"byte_end":10888190,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888195,"byte_end":10888198,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888203,"byte_end":10888236,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888241,"byte_end":10888279,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888284,"byte_end":10888295,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888300,"byte_end":10888303,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888308,"byte_end":10888359,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888364,"byte_end":10888406,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888411,"byte_end":10888416,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888421,"byte_end":10888428,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888433,"byte_end":10888436,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888441,"byte_end":10888465,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888470,"byte_end":10888473,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888478,"byte_end":10888485,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888490,"byte_end":10888516,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888521,"byte_end":10888524,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888529,"byte_end":10888547,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888552,"byte_end":10888573,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888578,"byte_end":10888631,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888636,"byte_end":10888639,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888644,"byte_end":10888678,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888683,"byte_end":10888717,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888722,"byte_end":10888725,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888730,"byte_end":10888781,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888786,"byte_end":10888837,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888842,"byte_end":10888847,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10888852,"byte_end":10888859,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889688,"byte_end":10889701,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889003,"byte_end":10889065,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889070,"byte_end":10889073,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889078,"byte_end":10889090,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889095,"byte_end":10889098,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889103,"byte_end":10889170,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889175,"byte_end":10889187,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889192,"byte_end":10889195,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889200,"byte_end":10889214,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889219,"byte_end":10889222,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889227,"byte_end":10889234,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889239,"byte_end":10889259,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889264,"byte_end":10889290,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889295,"byte_end":10889298,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889303,"byte_end":10889321,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889326,"byte_end":10889347,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889352,"byte_end":10889411,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889416,"byte_end":10889419,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889424,"byte_end":10889471,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889476,"byte_end":10889529,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889534,"byte_end":10889545,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889550,"byte_end":10889553,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889558,"byte_end":10889586,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889591,"byte_end":10889625,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889630,"byte_end":10889635,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889640,"byte_end":10889647,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889652,"byte_end":10889676,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890021,"byte_end":10890026,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889784,"byte_end":10889848,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889853,"byte_end":10889856,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889861,"byte_end":10889936,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10889941,"byte_end":10890009,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890867,"byte_end":10890876,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890078,"byte_end":10890132,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890137,"byte_end":10890140,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890145,"byte_end":10890169,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890174,"byte_end":10890177,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890182,"byte_end":10890256,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890261,"byte_end":10890275,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890280,"byte_end":10890342,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890347,"byte_end":10890421,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890426,"byte_end":10890478,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890483,"byte_end":10890486,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890491,"byte_end":10890563,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890568,"byte_end":10890644,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890649,"byte_end":10890725,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890730,"byte_end":10890801,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890806,"byte_end":10890855,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891804,"byte_end":10891808,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891116,"byte_end":10891190,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891195,"byte_end":10891198,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891203,"byte_end":10891288,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891293,"byte_end":10891374,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891379,"byte_end":10891447,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891452,"byte_end":10891455,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891460,"byte_end":10891533,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891538,"byte_end":10891609,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891614,"byte_end":10891691,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891696,"byte_end":10891699,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891704,"byte_end":10891743,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10891748,"byte_end":10891792,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5699},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893737,"byte_end":10893743,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10892846,"byte_end":10892890,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10892895,"byte_end":10892898,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10892903,"byte_end":10892978,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10892983,"byte_end":10893038,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893043,"byte_end":10893046,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893051,"byte_end":10893065,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893070,"byte_end":10893073,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893078,"byte_end":10893085,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893090,"byte_end":10893116,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893121,"byte_end":10893124,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893129,"byte_end":10893147,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893152,"byte_end":10893173,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893178,"byte_end":10893234,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893239,"byte_end":10893269,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893274,"byte_end":10893304,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893309,"byte_end":10893339,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893344,"byte_end":10893374,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893379,"byte_end":10893412,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893417,"byte_end":10893438,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893443,"byte_end":10893454,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893459,"byte_end":10893462,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893467,"byte_end":10893490,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893495,"byte_end":10893520,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893525,"byte_end":10893550,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893555,"byte_end":10893580,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893585,"byte_end":10893610,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893615,"byte_end":10893639,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893644,"byte_end":10893654,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893702,"byte_end":10893707,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893712,"byte_end":10893719,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894440,"byte_end":10894449,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893796,"byte_end":10893860,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893865,"byte_end":10893914,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893919,"byte_end":10893969,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893974,"byte_end":10893977,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10893982,"byte_end":10894045,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894050,"byte_end":10894127,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894132,"byte_end":10894135,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894140,"byte_end":10894147,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894152,"byte_end":10894216,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894221,"byte_end":10894250,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894255,"byte_end":10894258,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894263,"byte_end":10894288,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894293,"byte_end":10894323,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894328,"byte_end":10894331,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894336,"byte_end":10894349,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894354,"byte_end":10894382,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894387,"byte_end":10894416,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894421,"byte_end":10894428,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894897,"byte_end":10894909,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894508,"byte_end":10894565,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894570,"byte_end":10894573,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894578,"byte_end":10894592,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894597,"byte_end":10894600,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894605,"byte_end":10894612,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894617,"byte_end":10894681,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894686,"byte_end":10894712,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894717,"byte_end":10894752,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894757,"byte_end":10894760,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894765,"byte_end":10894831,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894836,"byte_end":10894873,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10894878,"byte_end":10894885,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5708},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":6773},{"krate":0,"index":6777},{"krate":0,"index":5711},{"krate":0,"index":5714},{"krate":0,"index":6780},{"krate":0,"index":6788},{"krate":0,"index":5716},{"krate":0,"index":5718},{"krate":0,"index":5721},{"krate":0,"index":6791},{"krate":0,"index":6794},{"krate":0,"index":5724},{"krate":0,"index":5726},{"krate":0,"index":6801},{"krate":0,"index":6809},{"krate":0,"index":6796},{"krate":0,"index":6798}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10894994,"byte_end":10895017,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895121,"byte_end":10895130,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895057,"byte_end":10895092,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895134,"byte_end":10895139,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6782},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895683,"byte_end":10895687,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6780},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895551,"byte_end":10895619,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895624,"byte_end":10895678,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6785},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895788,"byte_end":10895794,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6780},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895697,"byte_end":10895766,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895771,"byte_end":10895783,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895529,"byte_end":10895541,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6782},{"krate":0,"index":6785}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895383,"byte_end":10895454,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895455,"byte_end":10895502,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896432,"byte_end":10896441,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896370,"byte_end":10896403,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6803},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896950,"byte_end":10896957,"line_start":76,"line_end":76,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6806},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10897070,"byte_end":10897076,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6801},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6801},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896788,"byte_end":10896804,"line_start":73,"line_end":73,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6803},{"krate":0,"index":6806}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902487,"byte_end":10902492,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5742},{"krate":0,"index":5743}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10897824,"byte_end":10897862,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10897863,"byte_end":10897866,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10897867,"byte_end":10897935,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10897936,"byte_end":10898012,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898013,"byte_end":10898069,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898070,"byte_end":10898073,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898074,"byte_end":10898115,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898116,"byte_end":10898119,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898120,"byte_end":10898200,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898201,"byte_end":10898267,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898268,"byte_end":10898271,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898272,"byte_end":10898346,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898347,"byte_end":10898423,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898424,"byte_end":10898502,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898503,"byte_end":10898583,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898584,"byte_end":10898661,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898662,"byte_end":10898735,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898736,"byte_end":10898815,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898816,"byte_end":10898847,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898848,"byte_end":10898851,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898852,"byte_end":10898934,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10898935,"byte_end":10899015,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899016,"byte_end":10899093,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899094,"byte_end":10899142,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899143,"byte_end":10899146,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899147,"byte_end":10899226,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899227,"byte_end":10899303,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899304,"byte_end":10899381,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899382,"byte_end":10899415,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899416,"byte_end":10899419,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899420,"byte_end":10899495,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899496,"byte_end":10899574,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899575,"byte_end":10899617,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899618,"byte_end":10899621,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899622,"byte_end":10899649,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899650,"byte_end":10899698,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899699,"byte_end":10899777,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899778,"byte_end":10899781,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899782,"byte_end":10899797,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899798,"byte_end":10899801,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899802,"byte_end":10899820,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899821,"byte_end":10899848,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899849,"byte_end":10899872,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899873,"byte_end":10899876,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899877,"byte_end":10899895,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899896,"byte_end":10899917,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899918,"byte_end":10899962,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10899963,"byte_end":10900002,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900003,"byte_end":10900006,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900007,"byte_end":10900040,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900041,"byte_end":10900087,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900088,"byte_end":10900111,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900112,"byte_end":10900123,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900124,"byte_end":10900127,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900128,"byte_end":10900170,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900171,"byte_end":10900190,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900191,"byte_end":10900196,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900197,"byte_end":10900204,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900205,"byte_end":10900208,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900209,"byte_end":10900212,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900213,"byte_end":10900231,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900232,"byte_end":10900259,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900260,"byte_end":10900283,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900284,"byte_end":10900287,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900288,"byte_end":10900306,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900307,"byte_end":10900328,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900329,"byte_end":10900373,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900374,"byte_end":10900377,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900378,"byte_end":10900401,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900402,"byte_end":10900448,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900449,"byte_end":10900486,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900487,"byte_end":10900519,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900520,"byte_end":10900577,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900578,"byte_end":10900609,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900610,"byte_end":10900663,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900664,"byte_end":10900681,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900682,"byte_end":10900697,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900698,"byte_end":10900707,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900708,"byte_end":10900711,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900712,"byte_end":10900726,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900727,"byte_end":10900769,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900770,"byte_end":10900792,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900793,"byte_end":10900806,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900807,"byte_end":10900816,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900817,"byte_end":10900851,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900852,"byte_end":10900857,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900858,"byte_end":10900865,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900866,"byte_end":10900942,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10900943,"byte_end":10901016,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901017,"byte_end":10901032,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901033,"byte_end":10901108,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901109,"byte_end":10901185,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901186,"byte_end":10901238,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901239,"byte_end":10901242,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901243,"byte_end":10901321,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901322,"byte_end":10901402,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901403,"byte_end":10901479,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901480,"byte_end":10901560,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901561,"byte_end":10901641,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901642,"byte_end":10901716,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901717,"byte_end":10901793,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901794,"byte_end":10901874,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901875,"byte_end":10901944,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901945,"byte_end":10901948,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10901949,"byte_end":10902028,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902029,"byte_end":10902108,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902109,"byte_end":10902187,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902188,"byte_end":10902249,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902250,"byte_end":10902253,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902254,"byte_end":10902281,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902282,"byte_end":10902319,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902320,"byte_end":10902354,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902355,"byte_end":10902404,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902405,"byte_end":10902442,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902443,"byte_end":10902475,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902992,"byte_end":10903002,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5747}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902560,"byte_end":10902639,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902640,"byte_end":10902662,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902663,"byte_end":10902666,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902667,"byte_end":10902746,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902747,"byte_end":10902822,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902823,"byte_end":10902856,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902857,"byte_end":10902860,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902861,"byte_end":10902939,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10902940,"byte_end":10902980,"line_start":139,"line_end":139,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903790,"byte_end":10903805,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5750}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903047,"byte_end":10903085,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903086,"byte_end":10903089,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903090,"byte_end":10903171,"line_start":146,"line_end":146,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903172,"byte_end":10903252,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903253,"byte_end":10903327,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903328,"byte_end":10903389,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903390,"byte_end":10903393,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903394,"byte_end":10903473,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903474,"byte_end":10903553,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903554,"byte_end":10903622,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903623,"byte_end":10903626,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903627,"byte_end":10903705,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903706,"byte_end":10903746,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903747,"byte_end":10903750,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903751,"byte_end":10903778,"line_start":158,"line_end":158,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5751},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904131,"byte_end":10904147,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903847,"byte_end":10903940,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903941,"byte_end":10903944,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10903945,"byte_end":10904007,"line_start":165,"line_end":165,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904008,"byte_end":10904011,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904012,"byte_end":10904059,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904060,"byte_end":10904119,"line_start":168,"line_end":168,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905548,"byte_end":10905560,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904959,"byte_end":10905032,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905033,"byte_end":10905069,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905070,"byte_end":10905073,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905074,"byte_end":10905152,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905153,"byte_end":10905156,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905157,"byte_end":10905234,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905235,"byte_end":10905262,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905263,"byte_end":10905266,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905267,"byte_end":10905344,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905345,"byte_end":10905366,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905367,"byte_end":10905370,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905371,"byte_end":10905411,"line_start":197,"line_end":197,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905412,"byte_end":10905464,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905465,"byte_end":10905519,"line_start":199,"line_end":199,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906787,"byte_end":10906790,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906584,"byte_end":10906642,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906647,"byte_end":10906650,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906655,"byte_end":10906669,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906674,"byte_end":10906677,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906682,"byte_end":10906689,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906694,"byte_end":10906721,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906726,"byte_end":10906729,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906734,"byte_end":10906763,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906768,"byte_end":10906775,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907308,"byte_end":10907317,"line_start":266,"line_end":266,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Mutex<T>>::const_new","value":"pub const fn const_new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906955,"byte_end":10907013,"line_start":255,"line_end":255,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907018,"byte_end":10907021,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907026,"byte_end":10907040,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907045,"byte_end":10907048,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907053,"byte_end":10907060,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907065,"byte_end":10907092,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907097,"byte_end":10907100,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ static LOCK: Mutex<i32> = Mutex::const_new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907105,"byte_end":10907155,"line_start":262,"line_end":262,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907160,"byte_end":10907167,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test)),))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907172,"byte_end":10907231,"line_start":264,"line_end":264,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907948,"byte_end":10907952,"line_start":293,"line_end":293,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907488,"byte_end":10907534,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907539,"byte_end":10907585,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907590,"byte_end":10907661,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907666,"byte_end":10907669,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907674,"byte_end":10907688,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907693,"byte_end":10907696,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907701,"byte_end":10907708,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907713,"byte_end":10907740,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907745,"byte_end":10907748,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907753,"byte_end":10907771,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907776,"byte_end":10907797,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907802,"byte_end":10907836,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907841,"byte_end":10907844,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907849,"byte_end":10907888,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907893,"byte_end":10907908,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907913,"byte_end":10907918,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10907923,"byte_end":10907930,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5781},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908979,"byte_end":10908989,"line_start":324,"line_end":324,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908058,"byte_end":10908132,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908137,"byte_end":10908204,"line_start":299,"line_end":299,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908209,"byte_end":10908233,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908238,"byte_end":10908241,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908246,"byte_end":10908319,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908324,"byte_end":10908397,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908402,"byte_end":10908473,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908478,"byte_end":10908553,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908558,"byte_end":10908600,"line_start":306,"line_end":306,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908605,"byte_end":10908608,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908613,"byte_end":10908627,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908632,"byte_end":10908635,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908640,"byte_end":10908647,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908652,"byte_end":10908679,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908684,"byte_end":10908707,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908712,"byte_end":10908715,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908720,"byte_end":10908738,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908743,"byte_end":10908764,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908769,"byte_end":10908813,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908818,"byte_end":10908821,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908826,"byte_end":10908879,"line_start":318,"line_end":318,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908884,"byte_end":10908899,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908904,"byte_end":10908909,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908914,"byte_end":10908921,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908926,"byte_end":10908929,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10908934,"byte_end":10908961,"line_start":323,"line_end":323,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5788},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909866,"byte_end":10909874,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909398,"byte_end":10909467,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909472,"byte_end":10909514,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909519,"byte_end":10909522,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909527,"byte_end":10909561,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909566,"byte_end":10909580,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909585,"byte_end":10909588,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909593,"byte_end":10909600,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909605,"byte_end":10909632,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909637,"byte_end":10909700,"line_start":345,"line_end":345,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909705,"byte_end":10909708,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909713,"byte_end":10909743,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909748,"byte_end":10909751,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909756,"byte_end":10909786,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909791,"byte_end":10909813,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909818,"byte_end":10909830,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909835,"byte_end":10909842,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10909847,"byte_end":10909854,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910554,"byte_end":10910561,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910083,"byte_end":10910138,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910143,"byte_end":10910146,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910151,"byte_end":10910226,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910231,"byte_end":10910305,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910310,"byte_end":10910313,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910318,"byte_end":10910332,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910337,"byte_end":10910340,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910345,"byte_end":10910352,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910357,"byte_end":10910384,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910389,"byte_end":10910392,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910397,"byte_end":10910412,"line_start":371,"line_end":371,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910417,"byte_end":10910455,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910460,"byte_end":10910463,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910468,"byte_end":10910500,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910505,"byte_end":10910520,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910525,"byte_end":10910530,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910535,"byte_end":10910542,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911642,"byte_end":10911656,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910730,"byte_end":10910804,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910809,"byte_end":10910846,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910851,"byte_end":10910854,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910859,"byte_end":10910927,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10910932,"byte_end":10911005,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911010,"byte_end":10911086,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911091,"byte_end":10911165,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911170,"byte_end":10911218,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911223,"byte_end":10911226,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911231,"byte_end":10911265,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911270,"byte_end":10911297,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911302,"byte_end":10911316,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911321,"byte_end":10911324,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911329,"byte_end":10911336,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911341,"byte_end":10911368,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911373,"byte_end":10911396,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911401,"byte_end":10911464,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911469,"byte_end":10911472,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911477,"byte_end":10911517,"line_start":403,"line_end":403,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911522,"byte_end":10911525,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911530,"byte_end":10911574,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911579,"byte_end":10911601,"line_start":406,"line_end":406,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911606,"byte_end":10911618,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911623,"byte_end":10911630,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912214,"byte_end":10912224,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911881,"byte_end":10911935,"line_start":416,"line_end":416,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911940,"byte_end":10911954,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911959,"byte_end":10911962,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911967,"byte_end":10911974,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10911979,"byte_end":10912006,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912011,"byte_end":10912014,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912019,"byte_end":10912037,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912042,"byte_end":10912063,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912068,"byte_end":10912102,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912107,"byte_end":10912110,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912115,"byte_end":10912150,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912155,"byte_end":10912180,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912185,"byte_end":10912190,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912195,"byte_end":10912202,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913950,"byte_end":10913953,"line_start":501,"line_end":501,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912964,"byte_end":10913036,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913041,"byte_end":10913044,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913049,"byte_end":10913137,"line_start":472,"line_end":472,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913142,"byte_end":10913145,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913150,"byte_end":10913242,"line_start":474,"line_end":474,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913247,"byte_end":10913332,"line_start":475,"line_end":475,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913337,"byte_end":10913340,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913345,"byte_end":10913359,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913364,"byte_end":10913367,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913372,"byte_end":10913379,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913384,"byte_end":10913425,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913430,"byte_end":10913433,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913438,"byte_end":10913486,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913491,"byte_end":10913511,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913516,"byte_end":10913519,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913524,"byte_end":10913544,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913549,"byte_end":10913572,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913577,"byte_end":10913610,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913615,"byte_end":10913618,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913623,"byte_end":10913628,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913633,"byte_end":10913706,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913711,"byte_end":10913731,"line_start":491,"line_end":491,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913736,"byte_end":10913741,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913746,"byte_end":10913749,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913754,"byte_end":10913796,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913801,"byte_end":10913808,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913813,"byte_end":10913820,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913825,"byte_end":10913828,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913833,"byte_end":10913870,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913875,"byte_end":10913924,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10913929,"byte_end":10913938,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915409,"byte_end":10915416,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914285,"byte_end":10914372,"line_start":515,"line_end":515,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914377,"byte_end":10914438,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914443,"byte_end":10914446,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914451,"byte_end":10914539,"line_start":518,"line_end":518,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914544,"byte_end":10914547,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914552,"byte_end":10914641,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914646,"byte_end":10914738,"line_start":521,"line_end":521,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914743,"byte_end":10914746,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914751,"byte_end":10914765,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914770,"byte_end":10914773,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914778,"byte_end":10914785,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914790,"byte_end":10914831,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914836,"byte_end":10914839,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914844,"byte_end":10914892,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914897,"byte_end":10914917,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914922,"byte_end":10914925,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914930,"byte_end":10914950,"line_start":531,"line_end":531,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914955,"byte_end":10914978,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10914983,"byte_end":10915016,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915021,"byte_end":10915024,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915029,"byte_end":10915034,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915039,"byte_end":10915121,"line_start":536,"line_end":536,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915126,"byte_end":10915165,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915170,"byte_end":10915190,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915195,"byte_end":10915200,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915205,"byte_end":10915208,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915213,"byte_end":10915255,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915260,"byte_end":10915267,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915272,"byte_end":10915279,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915284,"byte_end":10915287,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915292,"byte_end":10915329,"line_start":545,"line_end":545,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915334,"byte_end":10915383,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915388,"byte_end":10915397,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917982,"byte_end":10917985,"line_start":642,"line_end":642,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917514,"byte_end":10917586,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917591,"byte_end":10917594,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917599,"byte_end":10917693,"line_start":635,"line_end":635,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917698,"byte_end":10917701,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917706,"byte_end":10917797,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917802,"byte_end":10917894,"line_start":638,"line_end":638,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917899,"byte_end":10917902,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917907,"byte_end":10917956,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917961,"byte_end":10917970,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918864,"byte_end":10918871,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918311,"byte_end":10918398,"line_start":656,"line_end":656,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918403,"byte_end":10918464,"line_start":657,"line_end":657,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918469,"byte_end":10918472,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918477,"byte_end":10918571,"line_start":659,"line_end":659,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918576,"byte_end":10918579,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918584,"byte_end":10918679,"line_start":661,"line_end":661,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918684,"byte_end":10918776,"line_start":662,"line_end":662,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918781,"byte_end":10918784,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918789,"byte_end":10918838,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10918843,"byte_end":10918852,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923742,"byte_end":10923748,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6818},{"krate":0,"index":6819}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10920899,"byte_end":10920935,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10920936,"byte_end":10920939,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10920940,"byte_end":10921016,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921017,"byte_end":10921097,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921098,"byte_end":10921139,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921140,"byte_end":10921143,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921144,"byte_end":10921218,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921219,"byte_end":10921304,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921305,"byte_end":10921371,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921372,"byte_end":10921375,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921376,"byte_end":10921434,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921435,"byte_end":10921515,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921516,"byte_end":10921596,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921597,"byte_end":10921680,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921681,"byte_end":10921731,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921732,"byte_end":10921735,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921736,"byte_end":10921820,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921821,"byte_end":10921896,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921897,"byte_end":10921967,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921968,"byte_end":10921971,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10921972,"byte_end":10922056,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922057,"byte_end":10922130,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922131,"byte_end":10922202,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922203,"byte_end":10922206,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922207,"byte_end":10922221,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922222,"byte_end":10922225,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922226,"byte_end":10922242,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922243,"byte_end":10922246,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922247,"byte_end":10922254,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922255,"byte_end":10922283,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922284,"byte_end":10922307,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922308,"byte_end":10922311,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922312,"byte_end":10922330,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922331,"byte_end":10922352,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922353,"byte_end":10922398,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922399,"byte_end":10922436,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922437,"byte_end":10922440,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922441,"byte_end":10922474,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922475,"byte_end":10922512,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922513,"byte_end":10922559,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922560,"byte_end":10922571,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922572,"byte_end":10922575,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922576,"byte_end":10922617,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922618,"byte_end":10922646,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922647,"byte_end":10922652,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922653,"byte_end":10922660,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922661,"byte_end":10922664,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922665,"byte_end":10922690,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922691,"byte_end":10922694,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922695,"byte_end":10922702,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922703,"byte_end":10922731,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922732,"byte_end":10922735,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922736,"byte_end":10922771,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922772,"byte_end":10922797,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922798,"byte_end":10922801,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922802,"byte_end":10922825,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922826,"byte_end":10922861,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922862,"byte_end":10922885,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922886,"byte_end":10922891,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922892,"byte_end":10922895,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922896,"byte_end":10922920,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922921,"byte_end":10922959,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10922960,"byte_end":10922999,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923000,"byte_end":10923034,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923035,"byte_end":10923038,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923039,"byte_end":10923094,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923095,"byte_end":10923132,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923133,"byte_end":10923142,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923143,"byte_end":10923146,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923147,"byte_end":10923186,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923187,"byte_end":10923205,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923206,"byte_end":10923237,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923238,"byte_end":10923316,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923317,"byte_end":10923350,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923351,"byte_end":10923368,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923369,"byte_end":10923372,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923373,"byte_end":10923423,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923424,"byte_end":10923469,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923470,"byte_end":10923483,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923484,"byte_end":10923493,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923494,"byte_end":10923499,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923500,"byte_end":10923507,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923508,"byte_end":10923511,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923512,"byte_end":10923541,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923542,"byte_end":10923583,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923584,"byte_end":10923628,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923629,"byte_end":10923671,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10923672,"byte_end":10923713,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6839},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924598,"byte_end":10924606,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6843}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924532,"byte_end":10924569,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5911},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926066,"byte_end":10926069,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925862,"byte_end":10925918,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925923,"byte_end":10925926,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925931,"byte_end":10925945,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925950,"byte_end":10925953,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925958,"byte_end":10925965,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925970,"byte_end":10925998,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926003,"byte_end":10926006,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926011,"byte_end":10926042,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926047,"byte_end":10926054,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5912},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926563,"byte_end":10926572,"line_start":227,"line_end":227,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Notify>::const_new","value":"pub const fn const_new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926214,"byte_end":10926270,"line_start":216,"line_end":216,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926275,"byte_end":10926278,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926283,"byte_end":10926297,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926302,"byte_end":10926305,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926310,"byte_end":10926317,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926322,"byte_end":10926350,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926355,"byte_end":10926358,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ static NOTIFY: Notify = Notify::const_new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926363,"byte_end":10926411,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926416,"byte_end":10926423,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926428,"byte_end":10926486,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927770,"byte_end":10927778,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926723,"byte_end":10926751,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926756,"byte_end":10926759,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926764,"byte_end":10926782,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926787,"byte_end":10926790,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926795,"byte_end":10926808,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926813,"byte_end":10926842,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926847,"byte_end":10926854,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926859,"byte_end":10926862,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926867,"byte_end":10926943,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10926948,"byte_end":10927026,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927031,"byte_end":10927106,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927111,"byte_end":10927184,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927189,"byte_end":10927192,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927197,"byte_end":10927237,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927242,"byte_end":10927245,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927250,"byte_end":10927264,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927269,"byte_end":10927272,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927277,"byte_end":10927284,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927289,"byte_end":10927317,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927322,"byte_end":10927345,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927350,"byte_end":10927353,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927358,"byte_end":10927376,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927381,"byte_end":10927402,"line_start":256,"line_end":256,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927407,"byte_end":10927452,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927457,"byte_end":10927494,"line_start":258,"line_end":258,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927499,"byte_end":10927502,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927507,"byte_end":10927540,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927545,"byte_end":10927582,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927587,"byte_end":10927633,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927638,"byte_end":10927649,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927654,"byte_end":10927657,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927662,"byte_end":10927703,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927708,"byte_end":10927736,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927741,"byte_end":10927746,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10927751,"byte_end":10927758,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929554,"byte_end":10929564,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928303,"byte_end":10928330,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928335,"byte_end":10928338,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928343,"byte_end":10928414,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928419,"byte_end":10928487,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928492,"byte_end":10928568,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928573,"byte_end":10928618,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928623,"byte_end":10928626,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928631,"byte_end":10928705,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928710,"byte_end":10928788,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928793,"byte_end":10928865,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928870,"byte_end":10928884,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928889,"byte_end":10928892,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928897,"byte_end":10928941,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928946,"byte_end":10928949,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928954,"byte_end":10928968,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928973,"byte_end":10928976,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928981,"byte_end":10928988,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10928993,"byte_end":10929021,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929026,"byte_end":10929049,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929054,"byte_end":10929057,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929062,"byte_end":10929080,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929085,"byte_end":10929106,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929111,"byte_end":10929156,"line_start":307,"line_end":307,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929161,"byte_end":10929198,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929203,"byte_end":10929206,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929211,"byte_end":10929244,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929249,"byte_end":10929286,"line_start":311,"line_end":311,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929291,"byte_end":10929337,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929342,"byte_end":10929353,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929358,"byte_end":10929361,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929366,"byte_end":10929407,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929412,"byte_end":10929440,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929445,"byte_end":10929450,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10929455,"byte_end":10929462,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931899,"byte_end":10931913,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10930807,"byte_end":10930837,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10930842,"byte_end":10930845,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10930850,"byte_end":10930920,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10930925,"byte_end":10930995,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931000,"byte_end":10931067,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931072,"byte_end":10931143,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931148,"byte_end":10931224,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931229,"byte_end":10931232,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931237,"byte_end":10931251,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931256,"byte_end":10931259,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931264,"byte_end":10931271,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931276,"byte_end":10931304,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931309,"byte_end":10931332,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931337,"byte_end":10931340,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931345,"byte_end":10931363,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931368,"byte_end":10931389,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931394,"byte_end":10931439,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931444,"byte_end":10931481,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931486,"byte_end":10931489,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931494,"byte_end":10931536,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931541,"byte_end":10931583,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931588,"byte_end":10931591,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931596,"byte_end":10931642,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931647,"byte_end":10931693,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931698,"byte_end":10931735,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931740,"byte_end":10931751,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931756,"byte_end":10931759,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931764,"byte_end":10931788,"line_start":382,"line_end":382,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931793,"byte_end":10931817,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931822,"byte_end":10931865,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931870,"byte_end":10931875,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10931880,"byte_end":10931887,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":13662},{"krate":0,"index":5950},{"krate":0,"index":13664},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":13666},{"krate":0,"index":5953},{"krate":0,"index":13668},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":6857},{"krate":0,"index":6860},{"krate":0,"index":6863},{"krate":0,"index":6866},{"krate":0,"index":5958},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5973},{"krate":0,"index":5976},{"krate":0,"index":6894},{"krate":0,"index":6898},{"krate":0,"index":6897},{"krate":0,"index":5987},{"krate":0,"index":5989},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6007},{"krate":0,"index":6010},{"krate":0,"index":6014},{"krate":0,"index":6021},{"krate":0,"index":6023},{"krate":0,"index":6025},{"krate":0,"index":6027},{"krate":0,"index":6030},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":6052}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10944892,"byte_end":10944959,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10944960,"byte_end":10945028,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945029,"byte_end":10945095,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945096,"byte_end":10945099,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945100,"byte_end":10945166,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945167,"byte_end":10945238,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945239,"byte_end":10945242,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945243,"byte_end":10945289,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945290,"byte_end":10945293,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945294,"byte_end":10945308,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945309,"byte_end":10945312,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945313,"byte_end":10945320,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945321,"byte_end":10945350,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945351,"byte_end":10945354,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945355,"byte_end":10945373,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945374,"byte_end":10945395,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945396,"byte_end":10945438,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945439,"byte_end":10945442,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945443,"byte_end":10945476,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945477,"byte_end":10945517,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945518,"byte_end":10945567,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945568,"byte_end":10945581,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945582,"byte_end":10945593,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945594,"byte_end":10945597,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945598,"byte_end":10945622,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945623,"byte_end":10945670,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945671,"byte_end":10945724,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945725,"byte_end":10945734,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945735,"byte_end":10945740,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945741,"byte_end":10945748,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945749,"byte_end":10945752,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945753,"byte_end":10945826,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945827,"byte_end":10945852,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945853,"byte_end":10945856,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945857,"byte_end":10945864,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945865,"byte_end":10945894,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945895,"byte_end":10945898,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945899,"byte_end":10945917,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945918,"byte_end":10945939,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945940,"byte_end":10945989,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945990,"byte_end":10945993,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10945994,"byte_end":10946027,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946028,"byte_end":10946049,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946050,"byte_end":10946061,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946062,"byte_end":10946065,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946066,"byte_end":10946090,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946091,"byte_end":10946142,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946143,"byte_end":10946196,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946197,"byte_end":10946206,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946207,"byte_end":10946212,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946213,"byte_end":10946220,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6857},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946743,"byte_end":10946749,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6859}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946552,"byte_end":10946601,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946602,"byte_end":10946605,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946606,"byte_end":10946676,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946677,"byte_end":10946714,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6863},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947916,"byte_end":10947924,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6865}],"decl_id":null,"docs":" Receive a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receive a value from the associated [`Sender`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946792,"byte_end":10946843,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946844,"byte_end":10946847,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946848,"byte_end":10946918,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946919,"byte_end":10946956,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946957,"byte_end":10946960,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946961,"byte_end":10946975,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946976,"byte_end":10946979,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946980,"byte_end":10946987,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10946988,"byte_end":10947017,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947018,"byte_end":10947021,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947022,"byte_end":10947040,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947041,"byte_end":10947062,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947063,"byte_end":10947105,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947106,"byte_end":10947109,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947110,"byte_end":10947143,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947144,"byte_end":10947184,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947185,"byte_end":10947234,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947235,"byte_end":10947248,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947249,"byte_end":10947260,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947261,"byte_end":10947264,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947265,"byte_end":10947289,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947290,"byte_end":10947337,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947338,"byte_end":10947391,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947392,"byte_end":10947401,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947402,"byte_end":10947407,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947408,"byte_end":10947415,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947416,"byte_end":10947419,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947420,"byte_end":10947493,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947494,"byte_end":10947519,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947520,"byte_end":10947523,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947524,"byte_end":10947531,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947532,"byte_end":10947561,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947562,"byte_end":10947565,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947566,"byte_end":10947584,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947585,"byte_end":10947606,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947607,"byte_end":10947656,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947657,"byte_end":10947660,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947661,"byte_end":10947694,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947695,"byte_end":10947716,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947717,"byte_end":10947728,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947729,"byte_end":10947732,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947733,"byte_end":10947757,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947758,"byte_end":10947809,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947810,"byte_end":10947863,"line_start":119,"line_end":119,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947864,"byte_end":10947873,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947874,"byte_end":10947879,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947880,"byte_end":10947887,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947975,"byte_end":10947980,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5959},{"krate":0,"index":6869},{"krate":0,"index":6879},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6881},{"krate":0,"index":6892},{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6886},{"krate":0,"index":6887},{"krate":0,"index":5960},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5965}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10947987,"byte_end":10948010,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6869},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948152,"byte_end":10948161,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948035,"byte_end":10948100,"line_start":133,"line_end":133,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948383,"byte_end":10948388,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6881},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948316,"byte_end":10948374,"line_start":140,"line_end":140,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6884},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948477,"byte_end":10948483,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6881},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948399,"byte_end":10948468,"line_start":143,"line_end":143,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6881},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948293,"byte_end":10948305,"line_start":139,"line_end":139,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6884}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948183,"byte_end":10948243,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951216,"byte_end":10951223,"line_start":253,"line_end":253,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950401,"byte_end":10950480,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950481,"byte_end":10950491,"line_start":224,"line_end":224,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950492,"byte_end":10950495,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950496,"byte_end":10950572,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950573,"byte_end":10950651,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950652,"byte_end":10950698,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950699,"byte_end":10950702,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950703,"byte_end":10950749,"line_start":230,"line_end":230,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950750,"byte_end":10950753,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950754,"byte_end":10950768,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950769,"byte_end":10950772,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950773,"byte_end":10950780,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950781,"byte_end":10950810,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950811,"byte_end":10950814,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950815,"byte_end":10950833,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950834,"byte_end":10950855,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950856,"byte_end":10950898,"line_start":239,"line_end":239,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950899,"byte_end":10950902,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950903,"byte_end":10950936,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950937,"byte_end":10950977,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10950978,"byte_end":10951027,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951028,"byte_end":10951041,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951042,"byte_end":10951053,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951054,"byte_end":10951057,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951058,"byte_end":10951082,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951083,"byte_end":10951130,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951131,"byte_end":10951184,"line_start":249,"line_end":249,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951185,"byte_end":10951194,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951195,"byte_end":10951200,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951201,"byte_end":10951208,"line_start":252,"line_end":252,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953246,"byte_end":10953250,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951675,"byte_end":10951750,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951755,"byte_end":10951771,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951776,"byte_end":10951779,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951784,"byte_end":10951863,"line_start":273,"line_end":273,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951868,"byte_end":10951943,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951948,"byte_end":10952024,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952029,"byte_end":10952101,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952106,"byte_end":10952119,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952124,"byte_end":10952127,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952132,"byte_end":10952208,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952213,"byte_end":10952289,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952294,"byte_end":10952366,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952371,"byte_end":10952444,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952449,"byte_end":10952523,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952528,"byte_end":10952600,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952605,"byte_end":10952642,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952647,"byte_end":10952650,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952655,"byte_end":10952669,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952674,"byte_end":10952677,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952682,"byte_end":10952714,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952719,"byte_end":10952722,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952727,"byte_end":10952734,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952739,"byte_end":10952768,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952773,"byte_end":10952776,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952781,"byte_end":10952799,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952804,"byte_end":10952825,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952830,"byte_end":10952872,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952877,"byte_end":10952880,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952885,"byte_end":10952918,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952923,"byte_end":10952963,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10952968,"byte_end":10953017,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953022,"byte_end":10953035,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953040,"byte_end":10953051,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953056,"byte_end":10953059,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953064,"byte_end":10953088,"line_start":304,"line_end":304,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953093,"byte_end":10953140,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953145,"byte_end":10953198,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953203,"byte_end":10953212,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953217,"byte_end":10953222,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953227,"byte_end":10953234,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5993},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955588,"byte_end":10955594,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953583,"byte_end":10953641,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953646,"byte_end":10953649,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953654,"byte_end":10953728,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953733,"byte_end":10953767,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953772,"byte_end":10953775,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953780,"byte_end":10953845,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953850,"byte_end":10953922,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953927,"byte_end":10953930,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953935,"byte_end":10953947,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953952,"byte_end":10953955,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10953960,"byte_end":10954008,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954013,"byte_end":10954016,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954021,"byte_end":10954047,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954052,"byte_end":10954082,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954087,"byte_end":10954090,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954095,"byte_end":10954109,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954114,"byte_end":10954117,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954122,"byte_end":10954137,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954142,"byte_end":10954145,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954150,"byte_end":10954157,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954162,"byte_end":10954191,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954196,"byte_end":10954199,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954204,"byte_end":10954222,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954227,"byte_end":10954248,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954253,"byte_end":10954305,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954310,"byte_end":10954313,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954318,"byte_end":10954351,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954356,"byte_end":10954377,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954382,"byte_end":10954393,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954398,"byte_end":10954401,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954406,"byte_end":10954432,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954437,"byte_end":10954478,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954483,"byte_end":10954488,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954493,"byte_end":10954500,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954505,"byte_end":10954508,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954513,"byte_end":10954535,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954540,"byte_end":10954543,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954548,"byte_end":10954555,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954560,"byte_end":10954589,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954594,"byte_end":10954632,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954637,"byte_end":10954640,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954645,"byte_end":10954679,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954684,"byte_end":10954735,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954740,"byte_end":10954765,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954770,"byte_end":10954775,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954780,"byte_end":10954783,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954788,"byte_end":10954806,"line_start":372,"line_end":372,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954811,"byte_end":10954832,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954837,"byte_end":10954883,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954888,"byte_end":10954891,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954896,"byte_end":10954929,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954934,"byte_end":10954962,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10954967,"byte_end":10955003,"line_start":378,"line_end":378,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955008,"byte_end":10955083,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955088,"byte_end":10955105,"line_start":380,"line_end":380,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955110,"byte_end":10955148,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955153,"byte_end":10955237,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955242,"byte_end":10955325,"line_start":383,"line_end":383,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955330,"byte_end":10955373,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955378,"byte_end":10955395,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955400,"byte_end":10955413,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955418,"byte_end":10955429,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955434,"byte_end":10955437,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955442,"byte_end":10955478,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955483,"byte_end":10955548,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955553,"byte_end":10955558,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955563,"byte_end":10955570,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5998},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956464,"byte_end":10956473,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955705,"byte_end":10955779,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955784,"byte_end":10955787,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955792,"byte_end":10955866,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955871,"byte_end":10955905,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955910,"byte_end":10955913,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955918,"byte_end":10955993,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10955998,"byte_end":10956001,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956006,"byte_end":10956032,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956037,"byte_end":10956067,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956072,"byte_end":10956075,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956080,"byte_end":10956094,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956099,"byte_end":10956102,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956107,"byte_end":10956114,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956119,"byte_end":10956148,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956153,"byte_end":10956156,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956161,"byte_end":10956179,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956184,"byte_end":10956205,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956210,"byte_end":10956252,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956257,"byte_end":10956260,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956265,"byte_end":10956298,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956303,"byte_end":10956306,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956311,"byte_end":10956328,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956333,"byte_end":10956336,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956341,"byte_end":10956373,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956378,"byte_end":10956430,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956435,"byte_end":10956440,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956445,"byte_end":10956452,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957919,"byte_end":10957930,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956635,"byte_end":10956715,"line_start":433,"line_end":433,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956720,"byte_end":10956803,"line_start":434,"line_end":434,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956808,"byte_end":10956819,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956824,"byte_end":10956827,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956832,"byte_end":10956912,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956917,"byte_end":10956951,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956956,"byte_end":10956959,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10956964,"byte_end":10957047,"line_start":440,"line_end":440,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957052,"byte_end":10957118,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957123,"byte_end":10957126,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957131,"byte_end":10957186,"line_start":443,"line_end":443,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957191,"byte_end":10957246,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957251,"byte_end":10957254,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957259,"byte_end":10957277,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957282,"byte_end":10957285,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957290,"byte_end":10957316,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957321,"byte_end":10957324,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957329,"byte_end":10957381,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957386,"byte_end":10957436,"line_start":451,"line_end":451,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957441,"byte_end":10957444,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957449,"byte_end":10957463,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957468,"byte_end":10957471,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957476,"byte_end":10957483,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957488,"byte_end":10957517,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957522,"byte_end":10957525,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957530,"byte_end":10957563,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957568,"byte_end":10957571,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957576,"byte_end":10957594,"line_start":460,"line_end":460,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957599,"byte_end":10957620,"line_start":461,"line_end":461,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957625,"byte_end":10957681,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957686,"byte_end":10957689,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957694,"byte_end":10957727,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957732,"byte_end":10957755,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957760,"byte_end":10957771,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957776,"byte_end":10957779,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957784,"byte_end":10957831,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957836,"byte_end":10957839,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957844,"byte_end":10957885,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957890,"byte_end":10957895,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10957900,"byte_end":10957907,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6005},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961201,"byte_end":10961206,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959455,"byte_end":10959522,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959527,"byte_end":10959530,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959535,"byte_end":10959609,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959614,"byte_end":10959682,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959687,"byte_end":10959753,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959758,"byte_end":10959772,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959777,"byte_end":10959780,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959785,"byte_end":10959861,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959866,"byte_end":10959929,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959934,"byte_end":10959937,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959942,"byte_end":10960010,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960015,"byte_end":10960037,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960042,"byte_end":10960045,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960050,"byte_end":10960072,"line_start":544,"line_end":544,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960077,"byte_end":10960113,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960118,"byte_end":10960121,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960126,"byte_end":10960140,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960145,"byte_end":10960148,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960153,"byte_end":10960188,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960193,"byte_end":10960196,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960201,"byte_end":10960208,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960213,"byte_end":10960242,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960247,"byte_end":10960297,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960302,"byte_end":10960305,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960310,"byte_end":10960328,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960333,"byte_end":10960354,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960359,"byte_end":10960405,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960410,"byte_end":10960413,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960418,"byte_end":10960451,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960456,"byte_end":10960459,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960464,"byte_end":10960483,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960488,"byte_end":10960491,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960496,"byte_end":10960528,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960533,"byte_end":10960585,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960590,"byte_end":10960593,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960598,"byte_end":10960627,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960632,"byte_end":10960675,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960680,"byte_end":10960712,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960717,"byte_end":10960726,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960731,"byte_end":10960736,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960741,"byte_end":10960748,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960753,"byte_end":10960756,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960761,"byte_end":10960812,"line_start":573,"line_end":573,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960817,"byte_end":10960820,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960825,"byte_end":10960832,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960837,"byte_end":10960866,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960871,"byte_end":10960874,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960879,"byte_end":10960897,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960902,"byte_end":10960923,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960928,"byte_end":10960974,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960979,"byte_end":10960982,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10960987,"byte_end":10961036,"line_start":582,"line_end":582,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961041,"byte_end":10961044,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961049,"byte_end":10961068,"line_start":584,"line_end":584,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961073,"byte_end":10961076,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961081,"byte_end":10961122,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961127,"byte_end":10961167,"line_start":587,"line_end":587,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961172,"byte_end":10961177,"line_start":588,"line_end":588,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961182,"byte_end":10961189,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6006},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963204,"byte_end":10963212,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961319,"byte_end":10961351,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961356,"byte_end":10961359,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961364,"byte_end":10961437,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961442,"byte_end":10961508,"line_start":599,"line_end":599,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961513,"byte_end":10961537,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961542,"byte_end":10961545,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961550,"byte_end":10961616,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961621,"byte_end":10961643,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961648,"byte_end":10961651,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961656,"byte_end":10961668,"line_start":605,"line_end":605,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961673,"byte_end":10961676,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961681,"byte_end":10961732,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961737,"byte_end":10961800,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961805,"byte_end":10961880,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961885,"byte_end":10961899,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961904,"byte_end":10961907,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961912,"byte_end":10961926,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961931,"byte_end":10961934,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961939,"byte_end":10961989,"line_start":614,"line_end":614,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10961994,"byte_end":10961997,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962002,"byte_end":10962009,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962014,"byte_end":10962043,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962048,"byte_end":10962098,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962103,"byte_end":10962106,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962111,"byte_end":10962129,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962134,"byte_end":10962155,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962160,"byte_end":10962206,"line_start":622,"line_end":622,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962211,"byte_end":10962214,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962219,"byte_end":10962248,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962253,"byte_end":10962298,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962303,"byte_end":10962345,"line_start":626,"line_end":626,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962350,"byte_end":10962382,"line_start":627,"line_end":627,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962387,"byte_end":10962396,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962401,"byte_end":10962404,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962409,"byte_end":10962432,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962437,"byte_end":10962471,"line_start":631,"line_end":631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962476,"byte_end":10962479,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962484,"byte_end":10962513,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962518,"byte_end":10962570,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962575,"byte_end":10962607,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962612,"byte_end":10962621,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962626,"byte_end":10962631,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962636,"byte_end":10962643,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962648,"byte_end":10962651,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962656,"byte_end":10962717,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962722,"byte_end":10962725,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962730,"byte_end":10962737,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962742,"byte_end":10962771,"line_start":643,"line_end":643,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962776,"byte_end":10962826,"line_start":644,"line_end":644,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962831,"byte_end":10962834,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962839,"byte_end":10962857,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962862,"byte_end":10962883,"line_start":647,"line_end":647,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962888,"byte_end":10962940,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962945,"byte_end":10962948,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962953,"byte_end":10962970,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962975,"byte_end":10962978,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10962983,"byte_end":10963012,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963017,"byte_end":10963071,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963076,"byte_end":10963119,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963124,"byte_end":10963156,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963161,"byte_end":10963170,"line_start":656,"line_end":656,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963175,"byte_end":10963180,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963185,"byte_end":10963192,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972779,"byte_end":10972785,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":6900},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972653,"byte_end":10972718,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972723,"byte_end":10972726,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972731,"byte_end":10972774,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6903},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972840,"byte_end":10972849,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":6900},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972792,"byte_end":10972835,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":6900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972631,"byte_end":10972646,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":6901},{"krate":0,"index":6903}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972457,"byte_end":10972521,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972522,"byte_end":10972525,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972526,"byte_end":10972593,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6910},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10973135,"byte_end":10973147,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972853,"byte_end":10972913,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972914,"byte_end":10972917,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972918,"byte_end":10972984,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972985,"byte_end":10972998,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10972999,"byte_end":10973002,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10973003,"byte_end":10973046,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10973047,"byte_end":10973106,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992873,"byte_end":10992882,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6916}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991599,"byte_end":10991665,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991666,"byte_end":10991669,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991670,"byte_end":10991745,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991746,"byte_end":10991822,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991823,"byte_end":10991903,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991904,"byte_end":10991913,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991914,"byte_end":10991917,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991918,"byte_end":10991991,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10991992,"byte_end":10992071,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992072,"byte_end":10992150,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992151,"byte_end":10992222,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992223,"byte_end":10992226,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992227,"byte_end":10992308,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992309,"byte_end":10992388,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992389,"byte_end":10992468,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992469,"byte_end":10992548,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992549,"byte_end":10992628,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992629,"byte_end":10992646,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992647,"byte_end":10992650,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992651,"byte_end":10992731,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992732,"byte_end":10992744,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992745,"byte_end":10992748,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992749,"byte_end":10992844,"line_start":27,"line_end":27,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":6919},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993131,"byte_end":10993146,"line_start":41,"line_end":41,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6921},{"krate":0,"index":6922}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992947,"byte_end":10992979,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992980,"byte_end":10992983,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10992984,"byte_end":10993035,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993036,"byte_end":10993039,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993040,"byte_end":10993090,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993091,"byte_end":10993102,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993407,"byte_end":10993427,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993198,"byte_end":10993237,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993238,"byte_end":10993241,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993242,"byte_end":10993299,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993300,"byte_end":10993303,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993304,"byte_end":10993366,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993367,"byte_end":10993378,"line_start":51,"line_end":51,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6157},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994023,"byte_end":10994026,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993948,"byte_end":10994011,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994341,"byte_end":10994350,"line_start":84,"line_end":84,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Semaphore>::const_new","value":"pub const fn const_new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994138,"byte_end":10994201,"line_start":81,"line_end":81,"column_start":5,"column_end":68}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994206,"byte_end":10994264,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994532,"byte_end":10994549,"line_start":91,"line_end":91,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994468,"byte_end":10994520,"line_start":90,"line_end":90,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994796,"byte_end":10994807,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994619,"byte_end":10994661,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994666,"byte_end":10994669,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994674,"byte_end":10994784,"line_start":97,"line_end":97,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995227,"byte_end":10995234,"line_start":110,"line_end":110,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994870,"byte_end":10994911,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994916,"byte_end":10994919,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10994924,"byte_end":10994995,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995000,"byte_end":10995066,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995071,"byte_end":10995091,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995096,"byte_end":10995099,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995104,"byte_end":10995151,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995156,"byte_end":10995209,"line_start":109,"line_end":109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6164},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995788,"byte_end":10995800,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995427,"byte_end":10995471,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995476,"byte_end":10995479,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995484,"byte_end":10995555,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995560,"byte_end":10995626,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995631,"byte_end":10995652,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995657,"byte_end":10995660,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995665,"byte_end":10995712,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10995717,"byte_end":10995770,"line_start":125,"line_end":125,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996539,"byte_end":10996550,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996001,"byte_end":10996050,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996055,"byte_end":10996058,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996063,"byte_end":10996143,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996148,"byte_end":10996229,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996234,"byte_end":10996307,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996312,"byte_end":10996315,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996320,"byte_end":10996389,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996394,"byte_end":10996469,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996474,"byte_end":10996527,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997356,"byte_end":10997372,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996815,"byte_end":10996867,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996872,"byte_end":10996875,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996880,"byte_end":10996960,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10996965,"byte_end":10997046,"line_start":156,"line_end":156,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997051,"byte_end":10997124,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997129,"byte_end":10997132,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997137,"byte_end":10997206,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997211,"byte_end":10997286,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997291,"byte_end":10997344,"line_start":161,"line_end":161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998122,"byte_end":10998135,"line_start":182,"line_end":182,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997645,"byte_end":10997686,"line_start":172,"line_end":172,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997691,"byte_end":10997694,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997699,"byte_end":10997767,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997772,"byte_end":10997843,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997848,"byte_end":10997919,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997924,"byte_end":10997944,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997949,"byte_end":10997952,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997957,"byte_end":10997984,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10997989,"byte_end":10998036,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998041,"byte_end":10998104,"line_start":181,"line_end":181,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6172},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998823,"byte_end":10998841,"line_start":200,"line_end":200,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998343,"byte_end":10998387,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998392,"byte_end":10998395,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998400,"byte_end":10998468,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998473,"byte_end":10998544,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998549,"byte_end":10998620,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998625,"byte_end":10998645,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998650,"byte_end":10998653,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998658,"byte_end":10998685,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998690,"byte_end":10998737,"line_start":198,"line_end":198,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10998742,"byte_end":10998805,"line_start":199,"line_end":199,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999745,"byte_end":10999762,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999080,"byte_end":10999129,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999134,"byte_end":10999137,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999142,"byte_end":10999213,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999218,"byte_end":10999295,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999300,"byte_end":10999370,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999375,"byte_end":10999446,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999451,"byte_end":10999471,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999476,"byte_end":10999479,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999484,"byte_end":10999511,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999516,"byte_end":10999585,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999590,"byte_end":10999665,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10999670,"byte_end":10999733,"line_start":222,"line_end":222,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000711,"byte_end":11000733,"line_start":245,"line_end":245,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000043,"byte_end":11000095,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000100,"byte_end":11000103,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000108,"byte_end":11000179,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000184,"byte_end":11000261,"line_start":236,"line_end":236,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000266,"byte_end":11000336,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000341,"byte_end":11000412,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000417,"byte_end":11000437,"line_start":239,"line_end":239,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000442,"byte_end":11000445,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000450,"byte_end":11000477,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000482,"byte_end":11000551,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000556,"byte_end":11000631,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11000636,"byte_end":11000699,"line_start":244,"line_end":244,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001958,"byte_end":11001963,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001045,"byte_end":11001070,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001075,"byte_end":11001078,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001083,"byte_end":11001173,"line_start":260,"line_end":260,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001178,"byte_end":11001181,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001186,"byte_end":11001200,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001205,"byte_end":11001208,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001213,"byte_end":11001220,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001225,"byte_end":11001256,"line_start":265,"line_end":265,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001261,"byte_end":11001284,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001289,"byte_end":11001326,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001331,"byte_end":11001334,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001339,"byte_end":11001357,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001362,"byte_end":11001383,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001388,"byte_end":11001440,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001445,"byte_end":11001488,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001493,"byte_end":11001496,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001501,"byte_end":11001534,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001539,"byte_end":11001596,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001601,"byte_end":11001638,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001643,"byte_end":11001689,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001694,"byte_end":11001705,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001710,"byte_end":11001713,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001718,"byte_end":11001756,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001761,"byte_end":11001788,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001793,"byte_end":11001796,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001801,"byte_end":11001838,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001843,"byte_end":11001924,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001929,"byte_end":11001934,"line_start":285,"line_end":285,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11001939,"byte_end":11001946,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002068,"byte_end":11002077,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002013,"byte_end":11002056,"line_start":291,"line_end":291,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6181},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002346,"byte_end":11002352,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002171,"byte_end":11002241,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002246,"byte_end":11002315,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002320,"byte_end":11002334,"line_start":300,"line_end":300,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002607,"byte_end":11002613,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002432,"byte_end":11002502,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002507,"byte_end":11002576,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002581,"byte_end":11002595,"line_start":309,"line_end":309,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027123,"byte_end":11027143,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6214},{"krate":0,"index":6215},{"krate":0,"index":6216}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11026832,"byte_end":11026910,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11026911,"byte_end":11026923,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11026924,"byte_end":11026927,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11026928,"byte_end":11026989,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11026990,"byte_end":11027005,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027006,"byte_end":11027009,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027010,"byte_end":11027068,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027069,"byte_end":11027111,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6220},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028374,"byte_end":11028377,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027445,"byte_end":11027518,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027523,"byte_end":11027593,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027598,"byte_end":11027626,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027631,"byte_end":11027634,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027639,"byte_end":11027690,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027695,"byte_end":11027770,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027775,"byte_end":11027839,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027844,"byte_end":11027847,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027852,"byte_end":11027866,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027871,"byte_end":11027874,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027879,"byte_end":11027886,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027891,"byte_end":11027914,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027919,"byte_end":11027971,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027976,"byte_end":11027979,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027984,"byte_end":11028032,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028037,"byte_end":11028057,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028062,"byte_end":11028065,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028070,"byte_end":11028090,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028095,"byte_end":11028118,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028123,"byte_end":11028168,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028173,"byte_end":11028176,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028181,"byte_end":11028221,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028226,"byte_end":11028285,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028290,"byte_end":11028293,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028298,"byte_end":11028324,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028329,"byte_end":11028336,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028341,"byte_end":11028348,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028353,"byte_end":11028362,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029894,"byte_end":11029901,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028826,"byte_end":11028900,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028905,"byte_end":11028975,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028980,"byte_end":11028991,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11028996,"byte_end":11028999,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029004,"byte_end":11029074,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029079,"byte_end":11029107,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029112,"byte_end":11029115,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029120,"byte_end":11029179,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029184,"byte_end":11029254,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029259,"byte_end":11029323,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029328,"byte_end":11029331,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029336,"byte_end":11029350,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029355,"byte_end":11029358,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029363,"byte_end":11029370,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029375,"byte_end":11029398,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029403,"byte_end":11029455,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029460,"byte_end":11029463,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029468,"byte_end":11029516,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029521,"byte_end":11029541,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029546,"byte_end":11029549,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029554,"byte_end":11029574,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029579,"byte_end":11029602,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029607,"byte_end":11029652,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029657,"byte_end":11029660,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029665,"byte_end":11029705,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029710,"byte_end":11029805,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029810,"byte_end":11029813,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029818,"byte_end":11029844,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029849,"byte_end":11029856,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029861,"byte_end":11029868,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11029873,"byte_end":11029882,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031814,"byte_end":11031835,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6258},{"krate":0,"index":6259}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031516,"byte_end":11031598,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031599,"byte_end":11031611,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031612,"byte_end":11031615,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031616,"byte_end":11031675,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031676,"byte_end":11031694,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031695,"byte_end":11031698,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031699,"byte_end":11031759,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11031760,"byte_end":11031802,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033193,"byte_end":11033196,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032145,"byte_end":11032221,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032226,"byte_end":11032235,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032240,"byte_end":11032243,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032248,"byte_end":11032319,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032324,"byte_end":11032352,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032357,"byte_end":11032360,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032365,"byte_end":11032424,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032429,"byte_end":11032504,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032509,"byte_end":11032565,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032570,"byte_end":11032573,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032578,"byte_end":11032592,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032597,"byte_end":11032600,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032605,"byte_end":11032612,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032617,"byte_end":11032640,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032645,"byte_end":11032698,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032703,"byte_end":11032706,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032711,"byte_end":11032759,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032764,"byte_end":11032784,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032789,"byte_end":11032792,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032797,"byte_end":11032817,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032822,"byte_end":11032845,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032850,"byte_end":11032895,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032900,"byte_end":11032903,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032908,"byte_end":11032913,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032918,"byte_end":11032955,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032960,"byte_end":11033052,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033057,"byte_end":11033077,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033082,"byte_end":11033087,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033092,"byte_end":11033095,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033100,"byte_end":11033143,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033148,"byte_end":11033155,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033160,"byte_end":11033167,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033172,"byte_end":11033181,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6265},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035012,"byte_end":11035019,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033753,"byte_end":11033828,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033833,"byte_end":11033902,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033907,"byte_end":11033926,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033931,"byte_end":11033934,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11033939,"byte_end":11034010,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034015,"byte_end":11034043,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034048,"byte_end":11034051,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034056,"byte_end":11034107,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034112,"byte_end":11034187,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034192,"byte_end":11034261,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034266,"byte_end":11034269,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034274,"byte_end":11034348,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034353,"byte_end":11034356,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034361,"byte_end":11034375,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034380,"byte_end":11034383,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034388,"byte_end":11034395,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034400,"byte_end":11034423,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034428,"byte_end":11034481,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034486,"byte_end":11034489,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034494,"byte_end":11034542,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034547,"byte_end":11034567,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034572,"byte_end":11034575,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034580,"byte_end":11034600,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034605,"byte_end":11034628,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034633,"byte_end":11034678,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034683,"byte_end":11034686,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034691,"byte_end":11034696,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034701,"byte_end":11034759,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034764,"byte_end":11034872,"line_start":105,"line_end":105,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034877,"byte_end":11034896,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034901,"byte_end":11034906,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034911,"byte_end":11034914,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034919,"byte_end":11034962,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034967,"byte_end":11034974,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034979,"byte_end":11034986,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11034991,"byte_end":11035000,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036026,"byte_end":11036037,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035713,"byte_end":11035762,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035767,"byte_end":11035836,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035841,"byte_end":11035908,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035913,"byte_end":11035916,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11035921,"byte_end":11036000,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036005,"byte_end":11036014,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037270,"byte_end":11037279,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036130,"byte_end":11036202,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036207,"byte_end":11036276,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036281,"byte_end":11036284,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036289,"byte_end":11036367,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036372,"byte_end":11036448,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036453,"byte_end":11036465,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036470,"byte_end":11036473,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036478,"byte_end":11036552,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036557,"byte_end":11036574,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036579,"byte_end":11036582,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036587,"byte_end":11036601,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036606,"byte_end":11036609,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036614,"byte_end":11036621,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036626,"byte_end":11036656,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036661,"byte_end":11036686,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036691,"byte_end":11036696,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036701,"byte_end":11036721,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036726,"byte_end":11036749,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036754,"byte_end":11036794,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036799,"byte_end":11036802,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036807,"byte_end":11036852,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036857,"byte_end":11036860,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036865,"byte_end":11036900,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036905,"byte_end":11036947,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11036952,"byte_end":11036997,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037002,"byte_end":11037009,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037014,"byte_end":11037017,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037022,"byte_end":11037048,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037053,"byte_end":11037098,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037103,"byte_end":11037106,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037111,"byte_end":11037123,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037128,"byte_end":11037154,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037159,"byte_end":11037234,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037239,"byte_end":11037246,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037251,"byte_end":11037258,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6296},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039273,"byte_end":11039300,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11038806,"byte_end":11038888,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11038889,"byte_end":11038901,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11038902,"byte_end":11038905,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11038906,"byte_end":11038986,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11038987,"byte_end":11039066,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039067,"byte_end":11039122,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039123,"byte_end":11039126,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039127,"byte_end":11039188,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039189,"byte_end":11039261,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6306},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040697,"byte_end":11040700,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039645,"byte_end":11039719,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039724,"byte_end":11039733,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039738,"byte_end":11039741,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039746,"byte_end":11039820,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039825,"byte_end":11039856,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039861,"byte_end":11039864,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039869,"byte_end":11039928,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039933,"byte_end":11040008,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040013,"byte_end":11040069,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040074,"byte_end":11040077,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040082,"byte_end":11040096,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040101,"byte_end":11040104,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040109,"byte_end":11040116,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040121,"byte_end":11040144,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040149,"byte_end":11040202,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040207,"byte_end":11040210,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040215,"byte_end":11040263,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040268,"byte_end":11040288,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040293,"byte_end":11040296,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040301,"byte_end":11040321,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040326,"byte_end":11040349,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040354,"byte_end":11040399,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040404,"byte_end":11040407,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040412,"byte_end":11040417,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040422,"byte_end":11040459,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040464,"byte_end":11040556,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040561,"byte_end":11040581,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040586,"byte_end":11040591,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040596,"byte_end":11040599,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040604,"byte_end":11040647,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040652,"byte_end":11040659,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040664,"byte_end":11040671,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11040676,"byte_end":11040685,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042438,"byte_end":11042445,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041257,"byte_end":11041329,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041334,"byte_end":11041403,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041408,"byte_end":11041427,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041432,"byte_end":11041435,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041440,"byte_end":11041514,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041519,"byte_end":11041550,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041555,"byte_end":11041558,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041563,"byte_end":11041614,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041619,"byte_end":11041705,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041710,"byte_end":11041774,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041779,"byte_end":11041782,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041787,"byte_end":11041801,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041806,"byte_end":11041809,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041814,"byte_end":11041821,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041826,"byte_end":11041849,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041854,"byte_end":11041907,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041912,"byte_end":11041915,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041920,"byte_end":11041968,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041973,"byte_end":11041993,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11041998,"byte_end":11042001,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042006,"byte_end":11042026,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042031,"byte_end":11042054,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042059,"byte_end":11042104,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042109,"byte_end":11042112,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042117,"byte_end":11042122,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042127,"byte_end":11042185,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042190,"byte_end":11042298,"line_start":102,"line_end":102,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042303,"byte_end":11042322,"line_start":103,"line_end":103,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042327,"byte_end":11042332,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042337,"byte_end":11042340,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042345,"byte_end":11042388,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042393,"byte_end":11042400,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042405,"byte_end":11042412,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11042417,"byte_end":11042426,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044492,"byte_end":11044507,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044225,"byte_end":11044297,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044298,"byte_end":11044310,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044311,"byte_end":11044314,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044315,"byte_end":11044370,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044371,"byte_end":11044386,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044387,"byte_end":11044390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044391,"byte_end":11044437,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044438,"byte_end":11044480,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045866,"byte_end":11045869,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044692,"byte_end":11044760,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044765,"byte_end":11044768,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044773,"byte_end":11044846,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044851,"byte_end":11044871,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044876,"byte_end":11044879,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044884,"byte_end":11044935,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044940,"byte_end":11045010,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045015,"byte_end":11045079,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045084,"byte_end":11045087,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045092,"byte_end":11045164,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045169,"byte_end":11045195,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045200,"byte_end":11045203,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045208,"byte_end":11045317,"line_start":34,"line_end":34,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045322,"byte_end":11045385,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045390,"byte_end":11045393,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045398,"byte_end":11045412,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045417,"byte_end":11045420,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045425,"byte_end":11045432,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045437,"byte_end":11045484,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045489,"byte_end":11045492,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045497,"byte_end":11045545,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045550,"byte_end":11045570,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045575,"byte_end":11045578,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045583,"byte_end":11045603,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045608,"byte_end":11045631,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045636,"byte_end":11045671,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045676,"byte_end":11045679,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045684,"byte_end":11045718,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045723,"byte_end":11045777,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045782,"byte_end":11045785,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045790,"byte_end":11045816,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045821,"byte_end":11045828,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045833,"byte_end":11045840,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11045845,"byte_end":11045854,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047564,"byte_end":11047571,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046247,"byte_end":11046316,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046321,"byte_end":11046391,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046396,"byte_end":11046407,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046412,"byte_end":11046415,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046420,"byte_end":11046493,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046498,"byte_end":11046518,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046523,"byte_end":11046526,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046531,"byte_end":11046590,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046595,"byte_end":11046675,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046680,"byte_end":11046729,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046734,"byte_end":11046737,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046742,"byte_end":11046818,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046823,"byte_end":11046849,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046854,"byte_end":11046857,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046862,"byte_end":11046979,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11046984,"byte_end":11047047,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047052,"byte_end":11047055,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047060,"byte_end":11047074,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047079,"byte_end":11047082,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047087,"byte_end":11047094,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047099,"byte_end":11047146,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047151,"byte_end":11047154,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047159,"byte_end":11047207,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047212,"byte_end":11047232,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047237,"byte_end":11047240,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047245,"byte_end":11047265,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047270,"byte_end":11047293,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047298,"byte_end":11047333,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047338,"byte_end":11047341,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047346,"byte_end":11047380,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047385,"byte_end":11047475,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047480,"byte_end":11047483,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047488,"byte_end":11047514,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047519,"byte_end":11047526,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047531,"byte_end":11047538,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11047543,"byte_end":11047552,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049216,"byte_end":11049232,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11048942,"byte_end":11049018,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049019,"byte_end":11049031,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049032,"byte_end":11049035,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049036,"byte_end":11049089,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049090,"byte_end":11049108,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049109,"byte_end":11049112,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049113,"byte_end":11049161,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049162,"byte_end":11049204,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050775,"byte_end":11050778,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049458,"byte_end":11049535,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049540,"byte_end":11049543,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049548,"byte_end":11049622,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049627,"byte_end":11049647,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049652,"byte_end":11049655,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049660,"byte_end":11049719,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049724,"byte_end":11049797,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049802,"byte_end":11049855,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049860,"byte_end":11049863,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049868,"byte_end":11049941,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049946,"byte_end":11049972,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049977,"byte_end":11049980,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049985,"byte_end":11050059,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050064,"byte_end":11050175,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050180,"byte_end":11050243,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050248,"byte_end":11050251,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050256,"byte_end":11050270,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050275,"byte_end":11050278,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050283,"byte_end":11050290,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050295,"byte_end":11050343,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050348,"byte_end":11050351,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050356,"byte_end":11050404,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050409,"byte_end":11050429,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050434,"byte_end":11050437,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050442,"byte_end":11050462,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050467,"byte_end":11050490,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050495,"byte_end":11050530,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050535,"byte_end":11050538,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050543,"byte_end":11050548,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050553,"byte_end":11050634,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050639,"byte_end":11050659,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050664,"byte_end":11050669,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050674,"byte_end":11050677,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050682,"byte_end":11050725,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050730,"byte_end":11050737,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050742,"byte_end":11050749,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11050754,"byte_end":11050763,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6391},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052758,"byte_end":11052765,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051268,"byte_end":11051341,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051346,"byte_end":11051420,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051425,"byte_end":11051436,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051441,"byte_end":11051444,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051449,"byte_end":11051523,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051528,"byte_end":11051548,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051553,"byte_end":11051556,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051561,"byte_end":11051612,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051617,"byte_end":11051692,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051697,"byte_end":11051761,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051766,"byte_end":11051769,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051774,"byte_end":11051847,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051852,"byte_end":11051882,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051887,"byte_end":11051890,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051895,"byte_end":11051969,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11051974,"byte_end":11052093,"line_start":94,"line_end":94,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052098,"byte_end":11052161,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052166,"byte_end":11052169,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052174,"byte_end":11052188,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052193,"byte_end":11052196,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052201,"byte_end":11052208,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052213,"byte_end":11052261,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052266,"byte_end":11052269,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052274,"byte_end":11052322,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052327,"byte_end":11052347,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052352,"byte_end":11052355,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052360,"byte_end":11052380,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052385,"byte_end":11052408,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052413,"byte_end":11052448,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052453,"byte_end":11052456,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052461,"byte_end":11052466,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052471,"byte_end":11052510,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052515,"byte_end":11052618,"line_start":111,"line_end":111,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052623,"byte_end":11052642,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052647,"byte_end":11052652,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052657,"byte_end":11052660,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052665,"byte_end":11052708,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052713,"byte_end":11052720,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052725,"byte_end":11052732,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11052737,"byte_end":11052746,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053690,"byte_end":11053701,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053392,"byte_end":11053467,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053472,"byte_end":11053545,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053550,"byte_end":11053577,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053582,"byte_end":11053585,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053590,"byte_end":11053664,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053669,"byte_end":11053678,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054980,"byte_end":11054989,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053805,"byte_end":11053877,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053882,"byte_end":11053951,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053956,"byte_end":11053959,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11053964,"byte_end":11054042,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054047,"byte_end":11054123,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054128,"byte_end":11054140,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054145,"byte_end":11054148,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054153,"byte_end":11054227,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054232,"byte_end":11054249,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054254,"byte_end":11054257,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054262,"byte_end":11054276,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054281,"byte_end":11054284,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054289,"byte_end":11054296,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054301,"byte_end":11054331,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054336,"byte_end":11054361,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054366,"byte_end":11054371,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054376,"byte_end":11054396,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054401,"byte_end":11054424,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054429,"byte_end":11054469,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054474,"byte_end":11054477,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054482,"byte_end":11054513,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054518,"byte_end":11054521,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054526,"byte_end":11054561,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054566,"byte_end":11054608,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054613,"byte_end":11054652,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054657,"byte_end":11054664,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054669,"byte_end":11054672,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054677,"byte_end":11054703,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054708,"byte_end":11054753,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054758,"byte_end":11054761,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054766,"byte_end":11054778,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054783,"byte_end":11054809,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054814,"byte_end":11054889,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054894,"byte_end":11054901,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054906,"byte_end":11054913,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054918,"byte_end":11054921,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11054926,"byte_end":11054968,"line_start":188,"line_end":188,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056782,"byte_end":11056804,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056346,"byte_end":11056422,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056423,"byte_end":11056435,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056436,"byte_end":11056439,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056440,"byte_end":11056515,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056516,"byte_end":11056590,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056591,"byte_end":11056646,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056647,"byte_end":11056650,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056651,"byte_end":11056707,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11056708,"byte_end":11056770,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6432},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058284,"byte_end":11058287,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057036,"byte_end":11057111,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057116,"byte_end":11057119,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057124,"byte_end":11057204,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057209,"byte_end":11057229,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057234,"byte_end":11057237,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057242,"byte_end":11057301,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057306,"byte_end":11057382,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057387,"byte_end":11057443,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057448,"byte_end":11057451,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057456,"byte_end":11057529,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057534,"byte_end":11057560,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057565,"byte_end":11057568,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057573,"byte_end":11057684,"line_start":36,"line_end":36,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057689,"byte_end":11057752,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057757,"byte_end":11057760,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057765,"byte_end":11057779,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057784,"byte_end":11057787,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057792,"byte_end":11057799,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057804,"byte_end":11057852,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057857,"byte_end":11057860,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057865,"byte_end":11057913,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057918,"byte_end":11057938,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057943,"byte_end":11057946,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057951,"byte_end":11057971,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057976,"byte_end":11057999,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058004,"byte_end":11058039,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058044,"byte_end":11058047,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058052,"byte_end":11058057,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058062,"byte_end":11058143,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058148,"byte_end":11058168,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058173,"byte_end":11058178,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058183,"byte_end":11058186,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058191,"byte_end":11058234,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058239,"byte_end":11058246,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058251,"byte_end":11058258,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058263,"byte_end":11058272,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6435},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060199,"byte_end":11060206,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058777,"byte_end":11058849,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058854,"byte_end":11058928,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058933,"byte_end":11058944,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058949,"byte_end":11058952,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11058957,"byte_end":11059037,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059042,"byte_end":11059062,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059067,"byte_end":11059070,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059075,"byte_end":11059126,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059131,"byte_end":11059207,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059212,"byte_end":11059281,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059286,"byte_end":11059289,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059294,"byte_end":11059367,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059372,"byte_end":11059402,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059407,"byte_end":11059410,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059415,"byte_end":11059534,"line_start":91,"line_end":91,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059539,"byte_end":11059602,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059607,"byte_end":11059610,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059615,"byte_end":11059629,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059634,"byte_end":11059637,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059642,"byte_end":11059649,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059654,"byte_end":11059702,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059707,"byte_end":11059710,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059715,"byte_end":11059763,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059768,"byte_end":11059788,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059793,"byte_end":11059796,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059801,"byte_end":11059821,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059826,"byte_end":11059849,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059854,"byte_end":11059889,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059894,"byte_end":11059897,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059902,"byte_end":11059907,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059912,"byte_end":11059951,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11059956,"byte_end":11060059,"line_start":108,"line_end":108,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060064,"byte_end":11060083,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060088,"byte_end":11060093,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060098,"byte_end":11060101,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060106,"byte_end":11060149,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060154,"byte_end":11060161,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060166,"byte_end":11060173,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060178,"byte_end":11060187,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006301,"byte_end":11006307,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11003770,"byte_end":11003809,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11003810,"byte_end":11003813,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11003814,"byte_end":11003891,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11003892,"byte_end":11003971,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11003972,"byte_end":11004051,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004052,"byte_end":11004110,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004111,"byte_end":11004114,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004115,"byte_end":11004193,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004194,"byte_end":11004272,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004273,"byte_end":11004351,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004352,"byte_end":11004417,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004418,"byte_end":11004421,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004422,"byte_end":11004486,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004487,"byte_end":11004559,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004560,"byte_end":11004640,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004641,"byte_end":11004721,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004722,"byte_end":11004802,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004803,"byte_end":11004872,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004873,"byte_end":11004943,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004944,"byte_end":11004982,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004983,"byte_end":11004986,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11004987,"byte_end":11005064,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005065,"byte_end":11005150,"line_start":50,"line_end":50,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005151,"byte_end":11005231,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005232,"byte_end":11005279,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005280,"byte_end":11005352,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005353,"byte_end":11005356,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005357,"byte_end":11005371,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005372,"byte_end":11005375,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005376,"byte_end":11005383,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005384,"byte_end":11005412,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005413,"byte_end":11005416,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005417,"byte_end":11005435,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005436,"byte_end":11005457,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005458,"byte_end":11005492,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005493,"byte_end":11005496,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005497,"byte_end":11005545,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005546,"byte_end":11005555,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005556,"byte_end":11005595,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005596,"byte_end":11005635,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005636,"byte_end":11005667,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005668,"byte_end":11005699,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005700,"byte_end":11005749,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005750,"byte_end":11005753,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005754,"byte_end":11005805,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005806,"byte_end":11005815,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005816,"byte_end":11005859,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005860,"byte_end":11005880,"line_start":75,"line_end":75,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005881,"byte_end":11005911,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005912,"byte_end":11005951,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005952,"byte_end":11005957,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005958,"byte_end":11005965,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005966,"byte_end":11005969,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11005970,"byte_end":11006004,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006005,"byte_end":11006034,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006035,"byte_end":11006082,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006083,"byte_end":11006132,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006133,"byte_end":11006170,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11006171,"byte_end":11006272,"line_start":86,"line_end":86,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010323,"byte_end":11010326,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010113,"byte_end":11010176,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010181,"byte_end":11010184,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010189,"byte_end":11010203,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010208,"byte_end":11010211,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010216,"byte_end":11010223,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010228,"byte_end":11010256,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010261,"byte_end":11010264,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010269,"byte_end":11010299,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010304,"byte_end":11010311,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010924,"byte_end":11010940,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010539,"byte_end":11010601,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010606,"byte_end":11010665,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010670,"byte_end":11010673,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010678,"byte_end":11010692,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010697,"byte_end":11010700,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010705,"byte_end":11010712,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010717,"byte_end":11010745,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010750,"byte_end":11010753,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010758,"byte_end":11010807,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010812,"byte_end":11010819,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010824,"byte_end":11010827,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010832,"byte_end":11010844,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010849,"byte_end":11010852,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010857,"byte_end":11010912,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011684,"byte_end":11011693,"line_start":252,"line_end":252,"column_start":18,"column_end":27},"name":"const_new","qualname":"<RwLock<T>>::const_new","value":"pub const fn const_new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011324,"byte_end":11011387,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011392,"byte_end":11011395,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011400,"byte_end":11011414,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011419,"byte_end":11011422,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011427,"byte_end":11011434,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011439,"byte_end":11011467,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011472,"byte_end":11011475,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ static LOCK: RwLock<i32> = RwLock::const_new(5);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011480,"byte_end":11011532,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011537,"byte_end":11011544,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011549,"byte_end":11011607,"line_start":250,"line_end":250,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012354,"byte_end":11012376,"line_start":275,"line_end":275,"column_start":18,"column_end":40},"name":"const_with_max_readers","qualname":"<RwLock<T>>::const_with_max_readers","value":"pub const fn const_with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011912,"byte_end":11011974,"line_start":263,"line_end":263,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11011979,"byte_end":11012038,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012043,"byte_end":11012046,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012051,"byte_end":11012065,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012070,"byte_end":11012073,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012078,"byte_end":11012085,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012090,"byte_end":11012118,"line_start":269,"line_end":269,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012123,"byte_end":11012126,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ static LOCK: RwLock<i32> = RwLock::const_with_max_readers(5, 1024);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012131,"byte_end":11012202,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012207,"byte_end":11012214,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012219,"byte_end":11012277,"line_start":273,"line_end":273,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014117,"byte_end":11014121,"line_start":326,"line_end":326,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012647,"byte_end":11012720,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012725,"byte_end":11012771,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012776,"byte_end":11012779,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012784,"byte_end":11012857,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012862,"byte_end":11012937,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012942,"byte_end":11012945,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11012950,"byte_end":11013023,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013028,"byte_end":11013097,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013102,"byte_end":11013176,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013181,"byte_end":11013254,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013259,"byte_end":11013283,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013288,"byte_end":11013291,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013296,"byte_end":11013370,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013375,"byte_end":11013392,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013397,"byte_end":11013400,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013405,"byte_end":11013419,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013424,"byte_end":11013427,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013432,"byte_end":11013439,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013444,"byte_end":11013467,"line_start":305,"line_end":305,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013472,"byte_end":11013500,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013505,"byte_end":11013508,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013513,"byte_end":11013531,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013536,"byte_end":11013557,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013562,"byte_end":11013606,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013611,"byte_end":11013645,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013650,"byte_end":11013653,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013658,"byte_end":11013692,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013697,"byte_end":11013723,"line_start":314,"line_end":314,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013728,"byte_end":11013731,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013736,"byte_end":11013769,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013774,"byte_end":11013844,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013849,"byte_end":11013889,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013894,"byte_end":11013924,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013929,"byte_end":11013986,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013991,"byte_end":11013994,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11013999,"byte_end":11014057,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014062,"byte_end":11014078,"line_start":323,"line_end":323,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014083,"byte_end":11014087,"line_start":324,"line_end":324,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014092,"byte_end":11014099,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016421,"byte_end":11016431,"line_start":384,"line_end":384,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014568,"byte_end":11014641,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014646,"byte_end":11014692,"line_start":340,"line_end":340,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014697,"byte_end":11014700,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014705,"byte_end":11014778,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014783,"byte_end":11014858,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014863,"byte_end":11014866,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014871,"byte_end":11014945,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11014950,"byte_end":11015024,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015029,"byte_end":11015101,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015106,"byte_end":11015181,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015186,"byte_end":11015229,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015234,"byte_end":11015237,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015242,"byte_end":11015315,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015320,"byte_end":11015389,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015394,"byte_end":11015468,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015473,"byte_end":11015546,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015551,"byte_end":11015575,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015580,"byte_end":11015583,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015588,"byte_end":11015662,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015667,"byte_end":11015684,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015689,"byte_end":11015692,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015697,"byte_end":11015711,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015716,"byte_end":11015719,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015724,"byte_end":11015731,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015736,"byte_end":11015759,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015764,"byte_end":11015792,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015797,"byte_end":11015800,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015805,"byte_end":11015823,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015828,"byte_end":11015849,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015854,"byte_end":11015898,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015903,"byte_end":11015937,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015942,"byte_end":11015945,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015950,"byte_end":11015990,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11015995,"byte_end":11016021,"line_start":372,"line_end":372,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016026,"byte_end":11016029,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016034,"byte_end":11016067,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016072,"byte_end":11016142,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016147,"byte_end":11016193,"line_start":376,"line_end":376,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016198,"byte_end":11016228,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016233,"byte_end":11016290,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016295,"byte_end":11016298,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016303,"byte_end":11016361,"line_start":380,"line_end":380,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016366,"byte_end":11016382,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016387,"byte_end":11016391,"line_start":382,"line_end":382,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016396,"byte_end":11016403,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017920,"byte_end":11017928,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016901,"byte_end":11016963,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016968,"byte_end":11016971,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11016976,"byte_end":11017053,"line_start":399,"line_end":399,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017058,"byte_end":11017129,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017134,"byte_end":11017151,"line_start":401,"line_end":401,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017156,"byte_end":11017159,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017164,"byte_end":11017198,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017203,"byte_end":11017206,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017211,"byte_end":11017225,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017230,"byte_end":11017233,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017238,"byte_end":11017245,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017250,"byte_end":11017273,"line_start":408,"line_end":408,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017278,"byte_end":11017306,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017311,"byte_end":11017314,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017319,"byte_end":11017337,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017342,"byte_end":11017363,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017368,"byte_end":11017412,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017417,"byte_end":11017451,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017456,"byte_end":11017459,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017464,"byte_end":11017505,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017510,"byte_end":11017536,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017541,"byte_end":11017544,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017549,"byte_end":11017582,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017587,"byte_end":11017657,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017662,"byte_end":11017702,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017707,"byte_end":11017737,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017742,"byte_end":11017799,"line_start":423,"line_end":423,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017804,"byte_end":11017807,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017812,"byte_end":11017865,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017870,"byte_end":11017886,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017891,"byte_end":11017896,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11017901,"byte_end":11017908,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019760,"byte_end":11019774,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018354,"byte_end":11018416,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018421,"byte_end":11018424,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018429,"byte_end":11018506,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018511,"byte_end":11018582,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018587,"byte_end":11018604,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018609,"byte_end":11018612,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018617,"byte_end":11018686,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018691,"byte_end":11018764,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018769,"byte_end":11018841,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018846,"byte_end":11018919,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018924,"byte_end":11018979,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018984,"byte_end":11018987,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11018992,"byte_end":11019026,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019031,"byte_end":11019034,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019039,"byte_end":11019053,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019058,"byte_end":11019061,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019066,"byte_end":11019073,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019078,"byte_end":11019101,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019106,"byte_end":11019134,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019139,"byte_end":11019142,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019147,"byte_end":11019165,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019170,"byte_end":11019191,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019196,"byte_end":11019240,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019245,"byte_end":11019279,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019284,"byte_end":11019287,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019292,"byte_end":11019339,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019344,"byte_end":11019370,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019375,"byte_end":11019378,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019383,"byte_end":11019416,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019421,"byte_end":11019491,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019496,"byte_end":11019542,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019547,"byte_end":11019577,"line_start":474,"line_end":474,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019582,"byte_end":11019639,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019644,"byte_end":11019647,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019652,"byte_end":11019705,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019710,"byte_end":11019726,"line_start":478,"line_end":478,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019731,"byte_end":11019736,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11019741,"byte_end":11019748,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020860,"byte_end":11020865,"line_start":517,"line_end":517,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020223,"byte_end":11020295,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020300,"byte_end":11020351,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020356,"byte_end":11020359,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020364,"byte_end":11020436,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020441,"byte_end":11020469,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020474,"byte_end":11020477,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020482,"byte_end":11020557,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020562,"byte_end":11020579,"line_start":502,"line_end":502,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020584,"byte_end":11020587,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020592,"byte_end":11020606,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020611,"byte_end":11020614,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020619,"byte_end":11020626,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020631,"byte_end":11020659,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020664,"byte_end":11020667,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020672,"byte_end":11020690,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020695,"byte_end":11020716,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020721,"byte_end":11020753,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020758,"byte_end":11020761,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020766,"byte_end":11020803,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020808,"byte_end":11020821,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020826,"byte_end":11020830,"line_start":515,"line_end":515,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11020835,"byte_end":11020842,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022412,"byte_end":11022423,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021359,"byte_end":11021431,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021436,"byte_end":11021487,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021492,"byte_end":11021495,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021500,"byte_end":11021572,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021577,"byte_end":11021605,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021610,"byte_end":11021613,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021618,"byte_end":11021693,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021698,"byte_end":11021772,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021777,"byte_end":11021849,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021854,"byte_end":11021929,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021934,"byte_end":11021977,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021982,"byte_end":11021985,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11021990,"byte_end":11022065,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022070,"byte_end":11022087,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022092,"byte_end":11022095,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022100,"byte_end":11022114,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022119,"byte_end":11022122,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022127,"byte_end":11022134,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022139,"byte_end":11022162,"line_start":549,"line_end":549,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022167,"byte_end":11022195,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022200,"byte_end":11022203,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022208,"byte_end":11022226,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022231,"byte_end":11022252,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022257,"byte_end":11022299,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022304,"byte_end":11022307,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022312,"byte_end":11022355,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022360,"byte_end":11022373,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022378,"byte_end":11022382,"line_start":558,"line_end":558,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022387,"byte_end":11022394,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6520},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023580,"byte_end":11023589,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11022940,"byte_end":11023006,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023011,"byte_end":11023014,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023019,"byte_end":11023096,"line_start":576,"line_end":576,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023101,"byte_end":11023173,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023178,"byte_end":11023195,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023200,"byte_end":11023203,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023208,"byte_end":11023242,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023247,"byte_end":11023250,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023255,"byte_end":11023269,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023274,"byte_end":11023277,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023282,"byte_end":11023289,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023294,"byte_end":11023322,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023327,"byte_end":11023330,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023335,"byte_end":11023353,"line_start":587,"line_end":587,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023358,"byte_end":11023379,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023384,"byte_end":11023416,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023421,"byte_end":11023424,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023429,"byte_end":11023461,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023466,"byte_end":11023492,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023497,"byte_end":11023500,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023505,"byte_end":11023546,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023551,"byte_end":11023556,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11023561,"byte_end":11023568,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025141,"byte_end":11025156,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024062,"byte_end":11024128,"line_start":612,"line_end":612,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024133,"byte_end":11024136,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024141,"byte_end":11024218,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024223,"byte_end":11024295,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024300,"byte_end":11024317,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024322,"byte_end":11024325,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024330,"byte_end":11024400,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024405,"byte_end":11024478,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024483,"byte_end":11024555,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024560,"byte_end":11024633,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024638,"byte_end":11024693,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024698,"byte_end":11024701,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024706,"byte_end":11024740,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024745,"byte_end":11024748,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024753,"byte_end":11024767,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024772,"byte_end":11024775,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024780,"byte_end":11024787,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024792,"byte_end":11024815,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024820,"byte_end":11024848,"line_start":630,"line_end":630,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024853,"byte_end":11024856,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024861,"byte_end":11024879,"line_start":632,"line_end":632,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024884,"byte_end":11024905,"line_start":633,"line_end":633,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024910,"byte_end":11024952,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024957,"byte_end":11024960,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11024965,"byte_end":11025016,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025021,"byte_end":11025047,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025052,"byte_end":11025055,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025060,"byte_end":11025107,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025112,"byte_end":11025117,"line_start":640,"line_end":640,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025122,"byte_end":11025129,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026124,"byte_end":11026131,"line_start":674,"line_end":674,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025652,"byte_end":11025707,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025712,"byte_end":11025715,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025720,"byte_end":11025796,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025801,"byte_end":11025875,"line_start":660,"line_end":660,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025880,"byte_end":11025883,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025888,"byte_end":11025902,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025907,"byte_end":11025910,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025915,"byte_end":11025922,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025927,"byte_end":11025955,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025960,"byte_end":11025963,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025968,"byte_end":11025983,"line_start":667,"line_end":667,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11025988,"byte_end":11026026,"line_start":668,"line_end":668,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026031,"byte_end":11026034,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026039,"byte_end":11026070,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026075,"byte_end":11026090,"line_start":671,"line_end":671,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026095,"byte_end":11026100,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026105,"byte_end":11026112,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6523},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026365,"byte_end":11026375,"line_start":682,"line_end":682,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026300,"byte_end":11026353,"line_start":681,"line_end":681,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075451,"byte_end":11075459,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":6597},{"krate":0,"index":6598},{"krate":0,"index":6599}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11074773,"byte_end":11074830,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11074831,"byte_end":11074834,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Provides the functionality to either set the value, in case `OnceCell`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11074835,"byte_end":11074909,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ is uninitialized, or get the already initialized value by using an async","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11074910,"byte_end":11074986,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ function via [`OnceCell::get_or_init`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11074987,"byte_end":11075030,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075031,"byte_end":11075034,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075035,"byte_end":11075100,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075101,"byte_end":11075104,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075105,"byte_end":11075119,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075120,"byte_end":11075127,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075128,"byte_end":11075158,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075159,"byte_end":11075162,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075163,"byte_end":11075203,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075204,"byte_end":11075217,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075218,"byte_end":11075223,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075224,"byte_end":11075227,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075228,"byte_end":11075283,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075284,"byte_end":11075287,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075288,"byte_end":11075306,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075307,"byte_end":11075328,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let result1 = ONCE.get_or_init(some_computation).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075329,"byte_end":11075392,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/     assert_eq!(*result1, 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075393,"byte_end":11075425,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075426,"byte_end":11075431,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075432,"byte_end":11075439,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076531,"byte_end":11076534,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized OnceCell instance.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized OnceCell instance.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076469,"byte_end":11076519,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076945,"byte_end":11076953,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new initialized OnceCell instance if `value` is `Some`, otherwise\n has the same functionality as [`OnceCell::new`].","sig":null,"attributes":[{"value":"/ Creates a new initialized OnceCell instance if `value` is `Some`, otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076735,"byte_end":11076814,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ has the same functionality as [`OnceCell::new`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076819,"byte_end":11076871,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076876,"byte_end":11076879,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076884,"byte_end":11076933,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11077525,"byte_end":11077534,"line_start":111,"line_end":111,"column_start":18,"column_end":27},"name":"const_new","qualname":"<OnceCell<T>>::const_new","value":"pub const fn const_new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized OnceCell instance.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized OnceCell instance.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11077334,"byte_end":11077384,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test)),))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11077389,"byte_end":11077448,"line_start":109,"line_end":109,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11077805,"byte_end":11077816,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value of the OnceCell is set or not.\n","sig":null,"attributes":[{"value":"/ Whether the value of the OnceCell is set or not.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11077741,"byte_end":11077793,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078758,"byte_end":11078761,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to get a reference to the value of the OnceCell.","sig":null,"attributes":[{"value":"/ Tries to get a reference to the value of the OnceCell.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078594,"byte_end":11078652,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078657,"byte_end":11078660,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value of the OnceCell hasn't previously been initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078665,"byte_end":11078746,"line_start":145,"line_end":145,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":6631},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079076,"byte_end":11079083,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to return a mutable reference to the value of the cell.","sig":null,"attributes":[{"value":"/ Tries to return a mutable reference to the value of the cell.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078922,"byte_end":11078987,"line_start":154,"line_end":154,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11078992,"byte_end":11078995,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cell hasn't previously been initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079000,"byte_end":11079064,"line_start":156,"line_end":156,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079970,"byte_end":11079973,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the OnceCell to the argument value.","sig":null,"attributes":[{"value":"/ Sets the value of the OnceCell to the argument value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079256,"byte_end":11079313,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079318,"byte_end":11079321,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the value of the OnceCell was already set prior to this call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079326,"byte_end":11079393,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/ then [`SetError::AlreadyInitializedError`] is returned. If another thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079398,"byte_end":11079475,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ is initializing the cell while this method is called,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079480,"byte_end":11079537,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ [`SetError::InitializingError`] is returned. In order to wait","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079542,"byte_end":11079607,"line_start":170,"line_end":170,"column_start":5,"column_end":70}},{"value":"/ for an ongoing initialization to finish, call","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079612,"byte_end":11079661,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ [`OnceCell::get_or_init`] instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079666,"byte_end":11079704,"line_start":172,"line_end":172,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079709,"byte_end":11079712,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079717,"byte_end":11079806,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079811,"byte_end":11079888,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/ ['OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11079893,"byte_end":11079958,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081651,"byte_end":11081662,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081155,"byte_end":11081234,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081239,"byte_end":11081315,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081320,"byte_end":11081395,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081400,"byte_end":11081474,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081479,"byte_end":11081554,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081559,"byte_end":11081562,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11081567,"byte_end":11081633,"line_start":213,"line_end":213,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084542,"byte_end":11084557,"line_start":270,"line_end":270,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.\n If the function argument `f` returns an error, `get_or_try_init`\n returns that error, otherwise the result of `f` will be stored in the cell.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11083889,"byte_end":11083968,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11083973,"byte_end":11084049,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084054,"byte_end":11084129,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084134,"byte_end":11084208,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084213,"byte_end":11084288,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ If the function argument `f` returns an error, `get_or_try_init`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084293,"byte_end":11084361,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/ returns that error, otherwise the result of `f` will be stored in the cell.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084366,"byte_end":11084445,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084450,"byte_end":11084453,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11084458,"byte_end":11084524,"line_start":269,"line_end":269,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6644},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087201,"byte_end":11087211,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Moves the value out of the cell, destroying the cell in the process.","sig":null,"attributes":[{"value":"/ Moves the value out of the cell, destroying the cell in the process.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087056,"byte_end":11087128,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087133,"byte_end":11087136,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087141,"byte_end":11087189,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6646},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087684,"byte_end":11087688,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell uninitialized.","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell uninitialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087538,"byte_end":11087611,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087616,"byte_end":11087619,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11087624,"byte_end":11087672,"line_start":337,"line_end":337,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6941},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088712,"byte_end":11088735,"line_start":364,"line_end":364,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088557,"byte_end":11088645,"line_start":361,"line_end":361,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088650,"byte_end":11088653,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088658,"byte_end":11088707,"line_start":363,"line_end":363,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6944},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088947,"byte_end":11088964,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":6939},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls when the cell is currently being\n inintialized during the calls to that method.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls when the cell is currently being","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088745,"byte_end":11088826,"line_start":366,"line_end":366,"column_start":5,"column_end":86}},{"value":"/ inintialized during the calls to that method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088831,"byte_end":11088880,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088885,"byte_end":11088888,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088893,"byte_end":11088942,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":6939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088539,"byte_end":11088547,"line_start":360,"line_end":360,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> {\n\n    /// Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    AlreadyInitializedError(T),\n\n    /// Error resulting from [`OnceCell::set`] calls when the cell is currently being\n    /// inintialized during the calls to that method.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    InitializingError(T),\n}","parent":null,"children":[{"krate":0,"index":6941},{"krate":0,"index":6944}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`]","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088393,"byte_end":11088447,"line_start":356,"line_end":356,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088448,"byte_end":11088451,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088452,"byte_end":11088501,"line_start":358,"line_end":358,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6658},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089428,"byte_end":11089447,"line_start":386,"line_end":386,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089354,"byte_end":11089416,"line_start":385,"line_end":385,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089685,"byte_end":11089704,"line_start":394,"line_end":394,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089618,"byte_end":11089673,"line_start":393,"line_end":393,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":13900},{"krate":0,"index":6668},{"krate":0,"index":13902},{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6956},{"krate":0,"index":6960},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":6973},{"krate":0,"index":6977},{"krate":0,"index":6984},{"krate":0,"index":6674},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6687},{"krate":0,"index":6694},{"krate":0,"index":6696},{"krate":0,"index":6699},{"krate":0,"index":6702},{"krate":0,"index":6710},{"krate":0,"index":6713}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11089945,"byte_end":11090024,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090025,"byte_end":11090035,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090036,"byte_end":11090039,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090040,"byte_end":11090116,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090117,"byte_end":11090191,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090192,"byte_end":11090195,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090196,"byte_end":11090207,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090208,"byte_end":11090211,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090212,"byte_end":11090292,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090293,"byte_end":11090369,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090370,"byte_end":11090440,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090441,"byte_end":11090517,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090518,"byte_end":11090559,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090560,"byte_end":11090563,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090564,"byte_end":11090578,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090579,"byte_end":11090582,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090583,"byte_end":11090590,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090591,"byte_end":11090618,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090619,"byte_end":11090622,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090623,"byte_end":11090687,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090688,"byte_end":11090739,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090740,"byte_end":11090743,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090744,"byte_end":11090777,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090778,"byte_end":11090824,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090825,"byte_end":11090883,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090884,"byte_end":11090897,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090898,"byte_end":11090909,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090910,"byte_end":11090913,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090914,"byte_end":11090940,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090941,"byte_end":11090953,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090954,"byte_end":11090961,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090962,"byte_end":11090969,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090970,"byte_end":11090973,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090974,"byte_end":11090987,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090988,"byte_end":11090991,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11090992,"byte_end":11091069,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091070,"byte_end":11091148,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091149,"byte_end":11091229,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091230,"byte_end":11091233,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091234,"byte_end":11091253,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091254,"byte_end":11091257,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091258,"byte_end":11091338,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091339,"byte_end":11091418,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091419,"byte_end":11091491,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091492,"byte_end":11091495,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091496,"byte_end":11091538,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091539,"byte_end":11091585,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091586,"byte_end":11091652,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091653,"byte_end":11091717,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091718,"byte_end":11091762,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091763,"byte_end":11091827,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11091828,"byte_end":11091886,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092458,"byte_end":11092466,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092096,"byte_end":11092162,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092163,"byte_end":11092166,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092167,"byte_end":11092233,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092234,"byte_end":11092237,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092238,"byte_end":11092312,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092313,"byte_end":11092325,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092326,"byte_end":11092329,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092330,"byte_end":11092429,"line_start":70,"line_end":70,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6963},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092755,"byte_end":11092761,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6965}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092590,"byte_end":11092655,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092656,"byte_end":11092659,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092660,"byte_end":11092726,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6969},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093081,"byte_end":11093084,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6972}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092798,"byte_end":11092840,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092841,"byte_end":11092844,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092845,"byte_end":11092921,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11092922,"byte_end":11093001,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093002,"byte_end":11093052,"line_start":92,"line_end":92,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093661,"byte_end":11093666,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6987},{"krate":0,"index":6990},{"krate":0,"index":6676},{"krate":0,"index":6679},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":6681},{"krate":0,"index":6683}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093673,"byte_end":11093694,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093802,"byte_end":11093811,"line_start":126,"line_end":126,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6989}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093719,"byte_end":11093765,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094232,"byte_end":11094241,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094139,"byte_end":11094195,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6685},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095296,"byte_end":11095303,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094533,"byte_end":11094609,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094610,"byte_end":11094613,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094614,"byte_end":11094696,"line_start":159,"line_end":159,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094697,"byte_end":11094773,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094774,"byte_end":11094810,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094811,"byte_end":11094814,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094815,"byte_end":11094829,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094830,"byte_end":11094833,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094834,"byte_end":11094841,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094842,"byte_end":11094869,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094870,"byte_end":11094873,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094874,"byte_end":11094938,"line_start":168,"line_end":168,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094939,"byte_end":11094990,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094991,"byte_end":11094994,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094995,"byte_end":11095028,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095029,"byte_end":11095075,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095076,"byte_end":11095134,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095135,"byte_end":11095148,"line_start":174,"line_end":174,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095149,"byte_end":11095160,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095161,"byte_end":11095164,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095165,"byte_end":11095191,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095192,"byte_end":11095204,"line_start":178,"line_end":178,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095205,"byte_end":11095212,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095213,"byte_end":11095220,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095221,"byte_end":11095224,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095225,"byte_end":11095254,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095255,"byte_end":11095288,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096455,"byte_end":11096461,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095993,"byte_end":11096048,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096053,"byte_end":11096056,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096061,"byte_end":11096137,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096142,"byte_end":11096218,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096223,"byte_end":11096254,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096259,"byte_end":11096262,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096267,"byte_end":11096281,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096286,"byte_end":11096289,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096294,"byte_end":11096301,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096306,"byte_end":11096333,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096338,"byte_end":11096341,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096346,"byte_end":11096388,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096393,"byte_end":11096431,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096436,"byte_end":11096443,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097387,"byte_end":11097394,"line_start":258,"line_end":258,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096573,"byte_end":11096607,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096612,"byte_end":11096615,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096620,"byte_end":11096695,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096700,"byte_end":11096776,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096781,"byte_end":11096794,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096799,"byte_end":11096802,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096807,"byte_end":11096836,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096841,"byte_end":11096844,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096849,"byte_end":11096863,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096868,"byte_end":11096871,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096876,"byte_end":11096883,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096888,"byte_end":11096915,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096920,"byte_end":11096923,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096928,"byte_end":11096946,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096951,"byte_end":11096972,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11096977,"byte_end":11097028,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097033,"byte_end":11097036,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097041,"byte_end":11097074,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097079,"byte_end":11097119,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097124,"byte_end":11097135,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097140,"byte_end":11097143,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097148,"byte_end":11097192,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097197,"byte_end":11097241,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097246,"byte_end":11097249,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097254,"byte_end":11097297,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097302,"byte_end":11097347,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097352,"byte_end":11097357,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11097362,"byte_end":11097369,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6704},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099370,"byte_end":11099374,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099295,"byte_end":11099358,"line_start":324,"line_end":324,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100401,"byte_end":11100407,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099939,"byte_end":11099994,"line_start":342,"line_end":342,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099999,"byte_end":11100002,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100007,"byte_end":11100083,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100088,"byte_end":11100164,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100169,"byte_end":11100200,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100205,"byte_end":11100208,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100213,"byte_end":11100227,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100232,"byte_end":11100235,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100240,"byte_end":11100247,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100252,"byte_end":11100279,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100284,"byte_end":11100287,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100292,"byte_end":11100334,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100339,"byte_end":11100377,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100382,"byte_end":11100389,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6706},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100835,"byte_end":11100844,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100519,"byte_end":11100593,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100598,"byte_end":11100615,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100620,"byte_end":11100623,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100628,"byte_end":11100642,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100647,"byte_end":11100650,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100655,"byte_end":11100662,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100667,"byte_end":11100718,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100723,"byte_end":11100752,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100757,"byte_end":11100760,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100765,"byte_end":11100778,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100783,"byte_end":11100811,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100816,"byte_end":11100823,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101588,"byte_end":11101594,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100925,"byte_end":11100971,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100976,"byte_end":11100979,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11100984,"byte_end":11101058,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101063,"byte_end":11101118,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101123,"byte_end":11101126,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101131,"byte_end":11101145,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101150,"byte_end":11101153,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101158,"byte_end":11101165,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101170,"byte_end":11101197,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101202,"byte_end":11101205,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101210,"byte_end":11101228,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101233,"byte_end":11101254,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101259,"byte_end":11101306,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101311,"byte_end":11101314,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101319,"byte_end":11101352,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101357,"byte_end":11101380,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101385,"byte_end":11101406,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101411,"byte_end":11101422,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101427,"byte_end":11101430,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101435,"byte_end":11101468,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101473,"byte_end":11101499,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101504,"byte_end":11101548,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101553,"byte_end":11101558,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11101563,"byte_end":11101570,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7010},{"krate":0,"index":7197},{"krate":0,"index":7011},{"krate":0,"index":7017},{"krate":0,"index":7018},{"krate":0,"index":7098},{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7173},{"krate":0,"index":7174},{"krate":0,"index":7186},{"krate":0,"index":7187},{"krate":0,"index":7188}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128738,"byte_end":128769,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128770,"byte_end":128773,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128774,"byte_end":128796,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128797,"byte_end":128800,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128801,"byte_end":128882,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128883,"byte_end":128963,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":128964,"byte_end":129044,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129045,"byte_end":129119,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129120,"byte_end":129195,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129196,"byte_end":129218,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129219,"byte_end":129222,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129223,"byte_end":129258,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129259,"byte_end":129262,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129263,"byte_end":129337,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129338,"byte_end":129417,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129418,"byte_end":129490,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129491,"byte_end":129566,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129567,"byte_end":129620,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129621,"byte_end":129624,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129625,"byte_end":129702,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129703,"byte_end":129776,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129777,"byte_end":129856,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129857,"byte_end":129935,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":129936,"byte_end":130008,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130009,"byte_end":130084,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130085,"byte_end":130159,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130160,"byte_end":130235,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130236,"byte_end":130266,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130267,"byte_end":130270,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130271,"byte_end":130349,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130350,"byte_end":130425,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130426,"byte_end":130503,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130504,"byte_end":130583,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130584,"byte_end":130662,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130663,"byte_end":130738,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130739,"byte_end":130814,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130815,"byte_end":130876,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130877,"byte_end":130880,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130881,"byte_end":130905,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130906,"byte_end":130970,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":130971,"byte_end":131031,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131032,"byte_end":131121,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131122,"byte_end":131210,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131211,"byte_end":131214,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131215,"byte_end":131240,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131241,"byte_end":131244,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131245,"byte_end":131312,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131313,"byte_end":131316,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131317,"byte_end":131333,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131334,"byte_end":131337,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131338,"byte_end":131417,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131418,"byte_end":131497,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131498,"byte_end":131577,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131578,"byte_end":131645,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131646,"byte_end":131649,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131650,"byte_end":131657,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131658,"byte_end":131678,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131679,"byte_end":131682,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131683,"byte_end":131705,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131706,"byte_end":131729,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131730,"byte_end":131766,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131767,"byte_end":131774,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131775,"byte_end":131782,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131783,"byte_end":131790,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131791,"byte_end":131794,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131795,"byte_end":131874,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131875,"byte_end":131953,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131954,"byte_end":131988,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131989,"byte_end":131992,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":131993,"byte_end":132000,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132001,"byte_end":132021,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132022,"byte_end":132025,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132026,"byte_end":132106,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132107,"byte_end":132141,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132142,"byte_end":132156,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132157,"byte_end":132179,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132180,"byte_end":132187,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132188,"byte_end":132191,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132192,"byte_end":132202,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132203,"byte_end":132206,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132207,"byte_end":132251,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132252,"byte_end":132281,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132282,"byte_end":132321,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132322,"byte_end":132334,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132335,"byte_end":132342,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132343,"byte_end":132350,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132351,"byte_end":132354,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132355,"byte_end":132435,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132436,"byte_end":132512,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132513,"byte_end":132525,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132526,"byte_end":132529,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132530,"byte_end":132537,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132538,"byte_end":132558,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132559,"byte_end":132562,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132563,"byte_end":132601,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132602,"byte_end":132636,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132637,"byte_end":132678,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132679,"byte_end":132686,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132687,"byte_end":132690,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132691,"byte_end":132749,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132750,"byte_end":132783,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132784,"byte_end":132791,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132792,"byte_end":132799,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132800,"byte_end":132803,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132804,"byte_end":132872,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132873,"byte_end":132901,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132902,"byte_end":132905,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132906,"byte_end":132947,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132948,"byte_end":132981,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":132982,"byte_end":133028,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133029,"byte_end":133072,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133073,"byte_end":133115,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133116,"byte_end":133157,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133158,"byte_end":133161,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133162,"byte_end":133191,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133192,"byte_end":133195,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133196,"byte_end":133276,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133277,"byte_end":133356,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133357,"byte_end":133436,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133437,"byte_end":133477,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133478,"byte_end":133481,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133482,"byte_end":133556,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133557,"byte_end":133637,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133638,"byte_end":133641,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133642,"byte_end":133722,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133723,"byte_end":133800,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133801,"byte_end":133881,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133882,"byte_end":133897,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133898,"byte_end":133901,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133902,"byte_end":133925,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133926,"byte_end":133929,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":133930,"byte_end":134010,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134011,"byte_end":134077,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134078,"byte_end":134145,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134146,"byte_end":134220,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134221,"byte_end":134233,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134234,"byte_end":134237,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134238,"byte_end":134245,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134246,"byte_end":134266,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134267,"byte_end":134270,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134271,"byte_end":134294,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134295,"byte_end":134324,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134325,"byte_end":134387,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134388,"byte_end":134395,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134396,"byte_end":134403,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134404,"byte_end":134411,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134412,"byte_end":134415,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134416,"byte_end":134490,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134491,"byte_end":134558,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134559,"byte_end":134562,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134563,"byte_end":134574,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134575,"byte_end":134597,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134598,"byte_end":134662,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134663,"byte_end":134703,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134704,"byte_end":134766,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134767,"byte_end":134795,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134796,"byte_end":134803,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134804,"byte_end":134807,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134808,"byte_end":134837,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134838,"byte_end":134883,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134884,"byte_end":134896,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134897,"byte_end":134904,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134905,"byte_end":134912,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134913,"byte_end":134916,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134917,"byte_end":134940,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134941,"byte_end":134944,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":134945,"byte_end":135035,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135036,"byte_end":135110,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135111,"byte_end":135187,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135188,"byte_end":135262,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135263,"byte_end":135342,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135343,"byte_end":135425,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135426,"byte_end":135447,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135448,"byte_end":135451,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135452,"byte_end":135468,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135469,"byte_end":135472,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135473,"byte_end":135480,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135481,"byte_end":135501,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135502,"byte_end":135505,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135506,"byte_end":135529,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135530,"byte_end":135572,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135573,"byte_end":135635,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135636,"byte_end":135664,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135665,"byte_end":135672,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135673,"byte_end":135676,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135677,"byte_end":135722,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135723,"byte_end":135730,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135731,"byte_end":135738,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135739,"byte_end":135742,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135743,"byte_end":135761,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135762,"byte_end":135765,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135766,"byte_end":135840,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135841,"byte_end":135919,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135920,"byte_end":135996,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":135997,"byte_end":136054,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136055,"byte_end":136133,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136134,"byte_end":136162,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136163,"byte_end":136166,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136167,"byte_end":136178,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136179,"byte_end":136199,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136200,"byte_end":136203,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136204,"byte_end":136242,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136243,"byte_end":136254,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136255,"byte_end":136282,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136283,"byte_end":136301,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136302,"byte_end":136344,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136345,"byte_end":136356,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136357,"byte_end":136360,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136361,"byte_end":136428,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136429,"byte_end":136461,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136462,"byte_end":136498,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136499,"byte_end":136504,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136505,"byte_end":136518,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136519,"byte_end":136526,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136527,"byte_end":136534,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136535,"byte_end":136538,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136539,"byte_end":136569,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136570,"byte_end":136573,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136574,"byte_end":136651,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136652,"byte_end":136731,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136732,"byte_end":136805,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136806,"byte_end":136882,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136883,"byte_end":136960,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":136961,"byte_end":137037,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137038,"byte_end":137103,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137104,"byte_end":137107,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137108,"byte_end":137144,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137145,"byte_end":137148,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137149,"byte_end":137156,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137157,"byte_end":137201,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137202,"byte_end":137258,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137259,"byte_end":137308,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137309,"byte_end":137314,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137315,"byte_end":137322,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137323,"byte_end":137326,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137327,"byte_end":137402,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137403,"byte_end":137482,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137483,"byte_end":137557,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137558,"byte_end":137561,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137562,"byte_end":137641,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137642,"byte_end":137714,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137715,"byte_end":137718,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137719,"byte_end":137722,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137723,"byte_end":137745,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137746,"byte_end":137749,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137750,"byte_end":137840,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137841,"byte_end":137939,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137940,"byte_end":137963,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137964,"byte_end":137967,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137968,"byte_end":137975,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137976,"byte_end":137996,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":137997,"byte_end":138020,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138021,"byte_end":138055,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138056,"byte_end":138059,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138060,"byte_end":138081,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138082,"byte_end":138135,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138136,"byte_end":138139,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138140,"byte_end":138166,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138167,"byte_end":138199,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138200,"byte_end":138299,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138300,"byte_end":138393,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138394,"byte_end":138422,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138423,"byte_end":138432,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138433,"byte_end":138439,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138440,"byte_end":138443,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138444,"byte_end":138479,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138480,"byte_end":138487,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138488,"byte_end":138495,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138496,"byte_end":138499,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138500,"byte_end":138557,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138558,"byte_end":138615,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138616,"byte_end":138679,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138680,"byte_end":138729,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138730,"byte_end":138779,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138780,"byte_end":138837,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\mod.rs","byte_start":138838,"byte_end":138884,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\blocking.rs","byte_start":11107525,"byte_end":11107539,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23644,"byte_end":23679,"line_start":279,"line_end":279,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\blocking.rs","byte_start":11110473,"byte_end":11110487,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\blocking.rs","byte_start":11110447,"byte_end":11110459,"line_start":135,"line_end":135,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\spawn.rs","byte_start":11114374,"byte_end":11114379,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\spawn.rs","byte_start":11114348,"byte_end":11114360,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\yield_now.rs","byte_start":11115353,"byte_end":11115362,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\yield_now.rs","byte_start":11115272,"byte_end":11115335,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11123468,"byte_end":11123476,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7209}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":7215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11125570,"byte_end":11125581,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11125544,"byte_end":11125556,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11126478,"byte_end":11126481,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11126433,"byte_end":11126466,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128236,"byte_end":11128247,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127023,"byte_end":11127073,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127078,"byte_end":11127081,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127086,"byte_end":11127146,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127151,"byte_end":11127154,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127159,"byte_end":11127231,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127236,"byte_end":11127306,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127311,"byte_end":11127322,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127327,"byte_end":11127347,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127352,"byte_end":11127355,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127360,"byte_end":11127378,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127383,"byte_end":11127404,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127409,"byte_end":11127451,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127456,"byte_end":11127459,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127464,"byte_end":11127536,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127541,"byte_end":11127594,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127599,"byte_end":11127632,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127637,"byte_end":11127654,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127659,"byte_end":11127670,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127675,"byte_end":11127678,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127683,"byte_end":11127717,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127722,"byte_end":11127758,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127763,"byte_end":11127781,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127786,"byte_end":11127803,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127808,"byte_end":11127811,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127816,"byte_end":11127887,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127892,"byte_end":11127942,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127947,"byte_end":11127980,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11127985,"byte_end":11128002,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128007,"byte_end":11128018,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128023,"byte_end":11128026,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128031,"byte_end":11128067,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128072,"byte_end":11128090,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128095,"byte_end":11128112,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128117,"byte_end":11128122,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128127,"byte_end":11128134,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128139,"byte_end":11128174,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128210,"byte_end":11128222,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131087,"byte_end":11131095,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128632,"byte_end":11128706,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128711,"byte_end":11128770,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128775,"byte_end":11128778,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128783,"byte_end":11128850,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128855,"byte_end":11128928,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11128933,"byte_end":11129009,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129014,"byte_end":11129094,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129099,"byte_end":11129118,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129123,"byte_end":11129126,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129131,"byte_end":11129197,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129202,"byte_end":11129205,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129210,"byte_end":11129222,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129227,"byte_end":11129230,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129235,"byte_end":11129307,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129312,"byte_end":11129385,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129390,"byte_end":11129393,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129398,"byte_end":11129409,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129414,"byte_end":11129417,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129422,"byte_end":11129496,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129501,"byte_end":11129576,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129581,"byte_end":11129656,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129661,"byte_end":11129738,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129743,"byte_end":11129746,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129751,"byte_end":11129784,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129789,"byte_end":11129808,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129813,"byte_end":11129845,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129850,"byte_end":11129870,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129875,"byte_end":11129878,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129883,"byte_end":11129921,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129926,"byte_end":11129964,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11129969,"byte_end":11130000,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130005,"byte_end":11130049,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130054,"byte_end":11130113,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130118,"byte_end":11130140,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130145,"byte_end":11130160,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130165,"byte_end":11130183,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130188,"byte_end":11130199,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130204,"byte_end":11130232,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130237,"byte_end":11130243,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130248,"byte_end":11130255,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130260,"byte_end":11130294,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130299,"byte_end":11130306,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130311,"byte_end":11130343,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130348,"byte_end":11130368,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130373,"byte_end":11130376,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130381,"byte_end":11130419,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130424,"byte_end":11130462,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130467,"byte_end":11130498,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130503,"byte_end":11130547,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130552,"byte_end":11130611,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130616,"byte_end":11130638,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130643,"byte_end":11130664,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130669,"byte_end":11130687,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130692,"byte_end":11130703,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130708,"byte_end":11130736,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130741,"byte_end":11130747,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130752,"byte_end":11130759,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130764,"byte_end":11130767,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130772,"byte_end":11130807,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130812,"byte_end":11130879,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130884,"byte_end":11130939,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11130944,"byte_end":11130998,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131003,"byte_end":11131025,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132342,"byte_end":11132351,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131250,"byte_end":11131320,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131325,"byte_end":11131328,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131333,"byte_end":11131403,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131408,"byte_end":11131484,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131489,"byte_end":11131557,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131562,"byte_end":11131642,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131647,"byte_end":11131719,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131724,"byte_end":11131799,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131804,"byte_end":11131860,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131865,"byte_end":11131868,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131873,"byte_end":11131887,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131892,"byte_end":11131895,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131900,"byte_end":11131911,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131916,"byte_end":11131936,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131941,"byte_end":11131944,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131949,"byte_end":11131967,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131972,"byte_end":11131993,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11131998,"byte_end":11132045,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132050,"byte_end":11132092,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132097,"byte_end":11132119,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132124,"byte_end":11132154,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132159,"byte_end":11132177,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132182,"byte_end":11132199,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132204,"byte_end":11132209,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132214,"byte_end":11132221,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132226,"byte_end":11132229,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132234,"byte_end":11132269,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11132274,"byte_end":11132324,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141348,"byte_end":11141356,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7117}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140469,"byte_end":11140499,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140500,"byte_end":11140503,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140504,"byte_end":11140558,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140559,"byte_end":11140562,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140563,"byte_end":11140629,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140630,"byte_end":11140697,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140698,"byte_end":11140755,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140756,"byte_end":11140825,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140826,"byte_end":11140829,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140830,"byte_end":11140844,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140845,"byte_end":11140848,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140849,"byte_end":11140856,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140857,"byte_end":11140879,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140880,"byte_end":11140904,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140905,"byte_end":11140932,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140933,"byte_end":11140938,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140939,"byte_end":11140942,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140943,"byte_end":11140975,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11140976,"byte_end":11141012,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141013,"byte_end":11141026,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141027,"byte_end":11141030,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141031,"byte_end":11141063,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141064,"byte_end":11141100,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141101,"byte_end":11141104,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141105,"byte_end":11141141,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141142,"byte_end":11141182,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141183,"byte_end":11141200,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141201,"byte_end":11141214,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141215,"byte_end":11141222,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141223,"byte_end":11141230,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141231,"byte_end":11141290,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141398,"byte_end":11141403,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141931,"byte_end":11141936,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141481,"byte_end":11141545,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141550,"byte_end":11141553,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141558,"byte_end":11141619,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141624,"byte_end":11141627,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141632,"byte_end":11141648,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141653,"byte_end":11141656,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141661,"byte_end":11141668,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141673,"byte_end":11141695,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141700,"byte_end":11141724,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141729,"byte_end":11141756,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141761,"byte_end":11141766,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141771,"byte_end":11141774,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141779,"byte_end":11141811,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141816,"byte_end":11141871,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141876,"byte_end":11141889,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141894,"byte_end":11141901,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141906,"byte_end":11141913,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142597,"byte_end":11142607,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142161,"byte_end":11142226,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142231,"byte_end":11142234,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142239,"byte_end":11142300,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142305,"byte_end":11142308,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142313,"byte_end":11142329,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142334,"byte_end":11142337,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142342,"byte_end":11142349,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142354,"byte_end":11142376,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142381,"byte_end":11142405,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142410,"byte_end":11142437,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142442,"byte_end":11142447,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142452,"byte_end":11142455,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142460,"byte_end":11142489,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142494,"byte_end":11142549,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142554,"byte_end":11142561,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142566,"byte_end":11142573,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142578,"byte_end":11142585,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143134,"byte_end":11143138,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142885,"byte_end":11142951,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142956,"byte_end":11142959,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142964,"byte_end":11142976,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142981,"byte_end":11142984,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11142989,"byte_end":11143050,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143055,"byte_end":11143122,"line_start":164,"line_end":164,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7131},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143626,"byte_end":11143634,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143379,"byte_end":11143445,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143450,"byte_end":11143453,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143458,"byte_end":11143524,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143529,"byte_end":11143594,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143599,"byte_end":11143614,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144094,"byte_end":11144097,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143989,"byte_end":11144031,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144036,"byte_end":11144082,"line_start":196,"line_end":196,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145758,"byte_end":11145769,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7219}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145633,"byte_end":11145708,"line_start":259,"line_end":259,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8125},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11146459,"byte_end":11146472,"line_start":10,"line_end":10,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":8127}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7184},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147386,"byte_end":11147399,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147043,"byte_end":11147136,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147137,"byte_end":11147234,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147235,"byte_end":11147249,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147250,"byte_end":11147253,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11147254,"byte_end":11147332,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":7233},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7523},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7582},{"krate":0,"index":7583},{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7617}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147466,"byte_end":11147498,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147499,"byte_end":11147502,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147503,"byte_end":11147583,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147584,"byte_end":11147596,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147597,"byte_end":11147600,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147601,"byte_end":11147682,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147683,"byte_end":11147697,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147698,"byte_end":11147701,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147702,"byte_end":11147772,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147773,"byte_end":11147853,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147854,"byte_end":11147868,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147869,"byte_end":11147872,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147873,"byte_end":11147952,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11147953,"byte_end":11148025,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148026,"byte_end":11148095,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148096,"byte_end":11148099,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148100,"byte_end":11148171,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148172,"byte_end":11148191,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148192,"byte_end":11148195,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148196,"byte_end":11148266,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148267,"byte_end":11148270,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148271,"byte_end":11148285,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148286,"byte_end":11148289,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148290,"byte_end":11148336,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148337,"byte_end":11148340,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148341,"byte_end":11148348,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148349,"byte_end":11148377,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148378,"byte_end":11148405,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148406,"byte_end":11148409,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148410,"byte_end":11148428,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148429,"byte_end":11148450,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148451,"byte_end":11148499,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148500,"byte_end":11148540,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148541,"byte_end":11148546,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148547,"byte_end":11148554,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148555,"byte_end":11148558,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 1s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148559,"byte_end":11148611,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148612,"byte_end":11148615,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148616,"byte_end":11148623,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148624,"byte_end":11148665,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148666,"byte_end":11148669,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148670,"byte_end":11148698,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148699,"byte_end":11148722,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148723,"byte_end":11148728,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148729,"byte_end":11148732,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148733,"byte_end":11148755,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148756,"byte_end":11148823,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148824,"byte_end":11148827,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148828,"byte_end":11148849,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148850,"byte_end":11148890,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148891,"byte_end":11148896,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148897,"byte_end":11148904,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148905,"byte_end":11148912,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148913,"byte_end":11148916,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148917,"byte_end":11148993,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148994,"byte_end":11148997,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an [`interval`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11148998,"byte_end":11149075,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149076,"byte_end":11149151,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149152,"byte_end":11149228,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149229,"byte_end":11149290,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149291,"byte_end":11149294,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149295,"byte_end":11149369,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149370,"byte_end":11149440,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149441,"byte_end":11149453,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149454,"byte_end":11149457,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149458,"byte_end":11149465,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149466,"byte_end":11149486,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149487,"byte_end":11149490,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149491,"byte_end":11149532,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149533,"byte_end":11149559,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149560,"byte_end":11149615,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149616,"byte_end":11149621,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149622,"byte_end":11149625,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149626,"byte_end":11149644,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149645,"byte_end":11149666,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149667,"byte_end":11149739,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149740,"byte_end":11149764,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149765,"byte_end":11149799,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149800,"byte_end":11149845,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149846,"byte_end":11149855,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149856,"byte_end":11149861,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149862,"byte_end":11149869,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149870,"byte_end":11149873,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149874,"byte_end":11149909,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11149910,"byte_end":11149951,"line_start":85,"line_end":85,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7413},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218349,"byte_end":11218360,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11217884,"byte_end":11217922,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11217923,"byte_end":11217926,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11217927,"byte_end":11218007,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218008,"byte_end":11218085,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218086,"byte_end":11218121,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218122,"byte_end":11218125,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218126,"byte_end":11218144,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218145,"byte_end":11218148,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218149,"byte_end":11218234,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218235,"byte_end":11218264,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7414},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219489,"byte_end":11219494,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218427,"byte_end":11218466,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218467,"byte_end":11218470,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218471,"byte_end":11218546,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218547,"byte_end":11218582,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218583,"byte_end":11218586,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218587,"byte_end":11218667,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218668,"byte_end":11218745,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218746,"byte_end":11218781,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218782,"byte_end":11218785,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218786,"byte_end":11218849,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218850,"byte_end":11218853,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218854,"byte_end":11218945,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218946,"byte_end":11218949,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218950,"byte_end":11218968,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218969,"byte_end":11218972,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11218973,"byte_end":11219058,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219059,"byte_end":11219088,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219089,"byte_end":11219092,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219093,"byte_end":11219107,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219108,"byte_end":11219111,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219112,"byte_end":11219159,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219160,"byte_end":11219163,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219164,"byte_end":11219171,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219172,"byte_end":11219211,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219212,"byte_end":11219215,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219216,"byte_end":11219234,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219235,"byte_end":11219256,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219257,"byte_end":11219305,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219306,"byte_end":11219346,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219347,"byte_end":11219352,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219353,"byte_end":11219360,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219361,"byte_end":11219364,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11219365,"byte_end":11219406,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8097},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11222642,"byte_end":11222647,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":8098},{"krate":0,"index":8099}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223191,"byte_end":11223199,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223121,"byte_end":11223179,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7419},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223394,"byte_end":11223404,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223253,"byte_end":11223295,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223300,"byte_end":11223303,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223308,"byte_end":11223382,"line_start":187,"line_end":187,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7420},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224403,"byte_end":11224408,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223465,"byte_end":11223515,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223520,"byte_end":11223523,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223528,"byte_end":11223602,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223607,"byte_end":11223674,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223679,"byte_end":11223682,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223687,"byte_end":11223755,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223760,"byte_end":11223774,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223779,"byte_end":11223782,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223787,"byte_end":11223850,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method without consuming the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223855,"byte_end":11223928,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `Sleep` itself.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223933,"byte_end":11223952,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223957,"byte_end":11223960,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223965,"byte_end":11223978,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223983,"byte_end":11223986,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11223991,"byte_end":11223998,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224003,"byte_end":11224044,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224049,"byte_end":11224052,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224057,"byte_end":11224104,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224109,"byte_end":11224132,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224137,"byte_end":11224199,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224204,"byte_end":11224227,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224232,"byte_end":11224235,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224240,"byte_end":11224309,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224314,"byte_end":11224321,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224326,"byte_end":11224333,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224338,"byte_end":11224341,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224346,"byte_end":11224391,"line_start":218,"line_end":218,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":7499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7694},{"krate":0,"index":7700},{"krate":0,"index":7699},{"krate":0,"index":7697},{"krate":0,"index":7702},{"krate":0,"index":7721},{"krate":0,"index":7719},{"krate":0,"index":7718},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7503},{"krate":0,"index":7723},{"krate":0,"index":7730},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7732},{"krate":0,"index":7735},{"krate":0,"index":7505},{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":7516},{"krate":0,"index":7518},{"krate":0,"index":7520},{"krate":0,"index":7521}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225697,"byte_end":11225718,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7694},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226905,"byte_end":11226910,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225770,"byte_end":11225821,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225822,"byte_end":11225825,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225826,"byte_end":11225887,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225888,"byte_end":11225891,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225892,"byte_end":11225966,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11225967,"byte_end":11226046,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226047,"byte_end":11226122,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226123,"byte_end":11226198,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226199,"byte_end":11226227,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226228,"byte_end":11226231,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226232,"byte_end":11226309,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226310,"byte_end":11226397,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226398,"byte_end":11226474,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226475,"byte_end":11226555,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226556,"byte_end":11226633,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226634,"byte_end":11226715,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226716,"byte_end":11226798,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226799,"byte_end":11226802,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11226803,"byte_end":11226863,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227214,"byte_end":11227221,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227142,"byte_end":11227174,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7506},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227398,"byte_end":11227406,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227335,"byte_end":11227386,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7507},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227538,"byte_end":11227549,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227455,"byte_end":11227526,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227685,"byte_end":11227696,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227619,"byte_end":11227673,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227833,"byte_end":11227847,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227747,"byte_end":11227821,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7510},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227986,"byte_end":11227993,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227919,"byte_end":11227974,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228129,"byte_end":11228139,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228041,"byte_end":11228117,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7737},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230517,"byte_end":11230524,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7738}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229226,"byte_end":11229283,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229284,"byte_end":11229327,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229328,"byte_end":11229331,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229332,"byte_end":11229409,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229410,"byte_end":11229484,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229485,"byte_end":11229538,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229539,"byte_end":11229542,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229543,"byte_end":11229621,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229622,"byte_end":11229699,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229700,"byte_end":11229776,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229777,"byte_end":11229851,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229852,"byte_end":11229866,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229867,"byte_end":11229870,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229871,"byte_end":11229951,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11229952,"byte_end":11230030,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230031,"byte_end":11230103,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230104,"byte_end":11230118,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230119,"byte_end":11230122,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230123,"byte_end":11230201,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230202,"byte_end":11230213,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230214,"byte_end":11230217,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230218,"byte_end":11230228,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230229,"byte_end":11230232,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230233,"byte_end":11230307,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230308,"byte_end":11230383,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230384,"byte_end":11230444,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7528},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230771,"byte_end":11230774,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230578,"byte_end":11230624,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230629,"byte_end":11230632,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230637,"byte_end":11230651,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230656,"byte_end":11230659,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230664,"byte_end":11230671,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230676,"byte_end":11230705,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230710,"byte_end":11230713,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230718,"byte_end":11230747,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230752,"byte_end":11230759,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7529},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230900,"byte_end":11230908,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230824,"byte_end":11230888,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231391,"byte_end":11231399,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231329,"byte_end":11231379,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231643,"byte_end":11231657,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231458,"byte_end":11231530,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231535,"byte_end":11231538,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231543,"byte_end":11231555,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231560,"byte_end":11231563,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231568,"byte_end":11231631,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7533},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232340,"byte_end":11232362,"line_start":96,"line_end":96,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231753,"byte_end":11231828,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231833,"byte_end":11231881,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231886,"byte_end":11231889,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231894,"byte_end":11231908,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231913,"byte_end":11231916,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231921,"byte_end":11231928,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231933,"byte_end":11231981,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231986,"byte_end":11231989,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11231994,"byte_end":11232012,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232017,"byte_end":11232038,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232043,"byte_end":11232076,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232081,"byte_end":11232122,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232127,"byte_end":11232164,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232169,"byte_end":11232231,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232236,"byte_end":11232306,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232311,"byte_end":11232316,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232321,"byte_end":11232328,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7534},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233077,"byte_end":11233102,"line_start":117,"line_end":117,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232474,"byte_end":11232549,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232554,"byte_end":11232613,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232618,"byte_end":11232621,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232626,"byte_end":11232640,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232645,"byte_end":11232648,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232653,"byte_end":11232660,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232665,"byte_end":11232713,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232718,"byte_end":11232721,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232726,"byte_end":11232744,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232749,"byte_end":11232770,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232775,"byte_end":11232808,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232813,"byte_end":11232854,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232859,"byte_end":11232896,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232901,"byte_end":11232966,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11232971,"byte_end":11233043,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233048,"byte_end":11233053,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233058,"byte_end":11233065,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233865,"byte_end":11233872,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233209,"byte_end":11233279,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233284,"byte_end":11233287,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233292,"byte_end":11233304,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233309,"byte_end":11233312,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233317,"byte_end":11233385,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233390,"byte_end":11233456,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233461,"byte_end":11233488,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233493,"byte_end":11233496,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233501,"byte_end":11233515,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233520,"byte_end":11233523,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233528,"byte_end":11233535,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233540,"byte_end":11233588,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233593,"byte_end":11233596,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233601,"byte_end":11233619,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233624,"byte_end":11233645,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233650,"byte_end":11233687,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233692,"byte_end":11233740,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233745,"byte_end":11233777,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233782,"byte_end":11233831,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233836,"byte_end":11233841,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233846,"byte_end":11233853,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234153,"byte_end":11234164,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11233936,"byte_end":11234011,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234016,"byte_end":11234087,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234092,"byte_end":11234141,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234503,"byte_end":11234514,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234286,"byte_end":11234361,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234366,"byte_end":11234437,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234442,"byte_end":11234491,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7573},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237958,"byte_end":11237966,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236236,"byte_end":11236313,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236314,"byte_end":11236345,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236346,"byte_end":11236349,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236350,"byte_end":11236430,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236431,"byte_end":11236470,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236471,"byte_end":11236474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236475,"byte_end":11236548,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236549,"byte_end":11236552,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236553,"byte_end":11236565,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236566,"byte_end":11236569,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236570,"byte_end":11236615,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236616,"byte_end":11236619,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236620,"byte_end":11236634,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236635,"byte_end":11236638,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236639,"byte_end":11236646,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236647,"byte_end":11236685,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236686,"byte_end":11236689,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236690,"byte_end":11236708,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236709,"byte_end":11236730,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236731,"byte_end":11236800,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236801,"byte_end":11236804,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236805,"byte_end":11236835,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236836,"byte_end":11236866,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236867,"byte_end":11236897,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236898,"byte_end":11236901,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236902,"byte_end":11236945,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236946,"byte_end":11236951,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236952,"byte_end":11236959,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236960,"byte_end":11236963,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11236964,"byte_end":11237038,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237039,"byte_end":11237042,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237043,"byte_end":11237116,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237117,"byte_end":11237192,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237193,"byte_end":11237269,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237270,"byte_end":11237331,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237332,"byte_end":11237335,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237336,"byte_end":11237410,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237411,"byte_end":11237481,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237482,"byte_end":11237494,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237495,"byte_end":11237498,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237499,"byte_end":11237506,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237507,"byte_end":11237527,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237528,"byte_end":11237531,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237532,"byte_end":11237573,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237574,"byte_end":11237600,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237601,"byte_end":11237656,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237657,"byte_end":11237662,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237663,"byte_end":11237666,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237667,"byte_end":11237685,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237686,"byte_end":11237707,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237708,"byte_end":11237780,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237781,"byte_end":11237805,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237806,"byte_end":11237840,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237841,"byte_end":11237886,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237887,"byte_end":11237896,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237897,"byte_end":11237902,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237903,"byte_end":11237910,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237911,"byte_end":11237914,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11237915,"byte_end":11237950,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7574},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238855,"byte_end":11238866,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238116,"byte_end":11238189,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238190,"byte_end":11238227,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238228,"byte_end":11238231,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238232,"byte_end":11238312,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238313,"byte_end":11238352,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238353,"byte_end":11238356,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238357,"byte_end":11238369,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238370,"byte_end":11238373,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238374,"byte_end":11238419,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238420,"byte_end":11238423,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238424,"byte_end":11238438,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238439,"byte_end":11238442,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238443,"byte_end":11238450,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238451,"byte_end":11238505,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238506,"byte_end":11238509,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238510,"byte_end":11238528,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238529,"byte_end":11238550,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238551,"byte_end":11238614,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238615,"byte_end":11238688,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238689,"byte_end":11238692,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238693,"byte_end":11238723,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238724,"byte_end":11238754,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238755,"byte_end":11238785,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238786,"byte_end":11238789,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238790,"byte_end":11238833,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238834,"byte_end":11238839,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11238840,"byte_end":11238847,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239621,"byte_end":11239629,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239074,"byte_end":11239155,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239156,"byte_end":11239159,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239160,"byte_end":11239233,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239234,"byte_end":11239313,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239314,"byte_end":11239392,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239393,"byte_end":11239405,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239406,"byte_end":11239409,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239410,"byte_end":11239482,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239483,"byte_end":11239486,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239487,"byte_end":11239592,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7576},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240362,"byte_end":11240366,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239840,"byte_end":11239909,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239914,"byte_end":11239917,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239922,"byte_end":11239936,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239941,"byte_end":11239944,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239949,"byte_end":11239956,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239961,"byte_end":11239981,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239986,"byte_end":11239989,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239994,"byte_end":11240022,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240027,"byte_end":11240030,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240035,"byte_end":11240053,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240058,"byte_end":11240079,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240084,"byte_end":11240153,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240158,"byte_end":11240161,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240166,"byte_end":11240196,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240201,"byte_end":11240231,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240236,"byte_end":11240266,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240271,"byte_end":11240274,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240279,"byte_end":11240322,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240327,"byte_end":11240332,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240337,"byte_end":11240344,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7580},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11241042,"byte_end":11241051,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240449,"byte_end":11240509,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240514,"byte_end":11240517,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240522,"byte_end":11240570,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240575,"byte_end":11240578,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240583,"byte_end":11240651,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240656,"byte_end":11240723,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240728,"byte_end":11240731,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240736,"byte_end":11240811,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240816,"byte_end":11240891,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240896,"byte_end":11240971,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11240976,"byte_end":11241030,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11241598,"byte_end":11241604,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"period","qualname":"<Interval>::period","value":"pub fn period(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the period of the interval.\n","sig":null,"attributes":[{"value":"/ Returns the period of the interval.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11241547,"byte_end":11241586,"line_start":180,"line_end":180,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7599},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243008,"byte_end":11243015,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11241993,"byte_end":11242070,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242071,"byte_end":11242074,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242075,"byte_end":11242154,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242155,"byte_end":11242227,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242228,"byte_end":11242241,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242242,"byte_end":11242245,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242246,"byte_end":11242263,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242264,"byte_end":11242267,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242268,"byte_end":11242346,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242347,"byte_end":11242377,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242378,"byte_end":11242381,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242382,"byte_end":11242462,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242463,"byte_end":11242490,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242491,"byte_end":11242494,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242495,"byte_end":11242509,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242510,"byte_end":11242513,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242514,"byte_end":11242574,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242575,"byte_end":11242578,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242579,"byte_end":11242590,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242591,"byte_end":11242620,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242621,"byte_end":11242650,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242651,"byte_end":11242654,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242655,"byte_end":11242683,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242684,"byte_end":11242687,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242688,"byte_end":11242710,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242711,"byte_end":11242749,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242750,"byte_end":11242777,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242778,"byte_end":11242781,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242782,"byte_end":11242855,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242856,"byte_end":11242922,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242923,"byte_end":11242978,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242979,"byte_end":11242984,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242985,"byte_end":11242992,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11242993,"byte_end":11243000,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7601},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244354,"byte_end":11244364,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243323,"byte_end":11243395,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243396,"byte_end":11243399,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243400,"byte_end":11243477,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243478,"byte_end":11243533,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243534,"byte_end":11243537,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243538,"byte_end":11243555,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243556,"byte_end":11243559,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243560,"byte_end":11243638,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243639,"byte_end":11243669,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243670,"byte_end":11243673,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243674,"byte_end":11243754,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243755,"byte_end":11243782,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243783,"byte_end":11243786,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243787,"byte_end":11243801,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243802,"byte_end":11243805,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243806,"byte_end":11243866,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243867,"byte_end":11243870,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243871,"byte_end":11243882,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243883,"byte_end":11243926,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243927,"byte_end":11243956,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243957,"byte_end":11243960,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243961,"byte_end":11243989,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243990,"byte_end":11243993,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11243994,"byte_end":11244016,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244017,"byte_end":11244055,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244056,"byte_end":11244083,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244084,"byte_end":11244087,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244088,"byte_end":11244166,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244167,"byte_end":11244181,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244182,"byte_end":11244268,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244269,"byte_end":11244324,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244325,"byte_end":11244330,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244331,"byte_end":11244338,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244339,"byte_end":11244346,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244739,"byte_end":11244746,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.6\\src\\lib.rs","byte_start":11509020,"byte_end":11509029,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245042,"byte_end":11245049,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244969,"byte_end":11245030,"line_start":123,"line_end":123,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245177,"byte_end":11245184,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245096,"byte_end":11245165,"line_start":128,"line_end":128,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245313,"byte_end":11245323,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245243,"byte_end":11245301,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141799,"byte_end":141805,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141708,"byte_end":141737,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141742,"byte_end":141745,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141750,"byte_end":141789,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141835,"byte_end":141841,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141812,"byte_end":141825,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16395,"byte_end":16401,"line_start":443,"line_end":443,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14899,"byte_end":14980,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14981,"byte_end":15070,"line_start":407,"line_end":407,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15071,"byte_end":15081,"line_start":408,"line_end":408,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15082,"byte_end":15085,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15086,"byte_end":15135,"line_start":410,"line_end":410,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15136,"byte_end":15139,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15140,"byte_end":15216,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15217,"byte_end":15292,"line_start":413,"line_end":413,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15293,"byte_end":15371,"line_start":414,"line_end":414,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15372,"byte_end":15449,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15450,"byte_end":15529,"line_start":416,"line_end":416,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15530,"byte_end":15612,"line_start":417,"line_end":417,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15613,"byte_end":15648,"line_start":418,"line_end":418,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15649,"byte_end":15652,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15653,"byte_end":15732,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15733,"byte_end":15815,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15816,"byte_end":15895,"line_start":422,"line_end":422,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15896,"byte_end":15899,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15900,"byte_end":15950,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":15951,"byte_end":16001,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16002,"byte_end":16056,"line_start":426,"line_end":426,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16057,"byte_end":16060,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16061,"byte_end":16074,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16075,"byte_end":16078,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16079,"byte_end":16138,"line_start":430,"line_end":430,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16139,"byte_end":16142,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16143,"byte_end":16161,"line_start":432,"line_end":432,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16162,"byte_end":16188,"line_start":433,"line_end":433,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16189,"byte_end":16192,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16193,"byte_end":16243,"line_start":435,"line_end":435,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16244,"byte_end":16247,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16248,"byte_end":16288,"line_start":437,"line_end":437,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16289,"byte_end":16337,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16338,"byte_end":16361,"line_start":439,"line_end":439,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16362,"byte_end":16371,"line_start":440,"line_end":440,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16372,"byte_end":16378,"line_start":441,"line_end":441,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":16379,"byte_end":16386,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089667,"byte_end":10089672,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089699,"byte_end":10089704,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100770,"byte_end":10100778,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102919,"byte_end":10102927,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10103070,"byte_end":10103078,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10103206,"byte_end":10103214,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103799,"byte_end":10103804,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10108221,"byte_end":10108226,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10108970,"byte_end":10108975,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109136,"byte_end":10109141,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109269,"byte_end":10109274,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109428,"byte_end":10109433,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109580,"byte_end":10109585,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112170,"byte_end":10112182,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112207,"byte_end":10112219,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112263,"byte_end":10112275,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10117703,"byte_end":10117715,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10118314,"byte_end":10118326,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10121832,"byte_end":10121843,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10122103,"byte_end":10122114,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10122294,"byte_end":10122305,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130488,"byte_end":10130499,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130588,"byte_end":10130599,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130624,"byte_end":10130635,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130669,"byte_end":10130680,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10131603,"byte_end":10131609,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132104,"byte_end":10132113,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10136787,"byte_end":10136796,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10137161,"byte_end":10137170,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10137203,"byte_end":10137212,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10093342,"byte_end":10093348,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096154,"byte_end":10096160,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096275,"byte_end":10096280,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096724,"byte_end":10096730,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10097129,"byte_end":10097135,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10097285,"byte_end":10097291,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10098122,"byte_end":10098128,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10098945,"byte_end":10098951,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10099029,"byte_end":10099035,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10099170,"byte_end":10099175,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10100132,"byte_end":10100141,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10140435,"byte_end":10140446,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10143208,"byte_end":10143219,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10144762,"byte_end":10144773,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10144916,"byte_end":10144927,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10145099,"byte_end":10145110,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146861,"byte_end":10146869,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147786,"byte_end":10147795,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10148045,"byte_end":10148053,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10148348,"byte_end":10148357,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149036,"byte_end":10149041,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149497,"byte_end":10149502,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149755,"byte_end":10149760,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149883,"byte_end":10149891,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149928,"byte_end":10149937,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149974,"byte_end":10149982,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150019,"byte_end":10150028,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150071,"byte_end":10150079,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150247,"byte_end":10150256,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\seek.rs","byte_start":10151213,"byte_end":10151217,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10163347,"byte_end":10163348,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10202675,"byte_end":10202676,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10205141,"byte_end":10205142,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10243746,"byte_end":10243747,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245191,"byte_end":10245200,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10247098,"byte_end":10247107,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10247917,"byte_end":10247926,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10250119,"byte_end":10250128,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10254168,"byte_end":10254177,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10254688,"byte_end":10254697,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256186,"byte_end":10256195,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10258032,"byte_end":10258041,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10258183,"byte_end":10258192,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259072,"byte_end":10259081,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259611,"byte_end":10259620,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259875,"byte_end":10259884,"line_start":149,"line_end":149,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10261883,"byte_end":10261892,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10264211,"byte_end":10264220,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10265513,"byte_end":10265522,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267063,"byte_end":10267072,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267326,"byte_end":10267335,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267622,"byte_end":10267631,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10268809,"byte_end":10268814,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269954,"byte_end":10269959,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10270238,"byte_end":10270243,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10270829,"byte_end":10270834,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy.rs","byte_start":10271961,"byte_end":10271971,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy.rs","byte_start":10275568,"byte_end":10275572,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10277152,"byte_end":10277169,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_buf.rs","byte_start":10281655,"byte_end":10281662,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10283929,"byte_end":10283934,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10284148,"byte_end":10284153,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10284386,"byte_end":10284391,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\flush.rs","byte_start":10285518,"byte_end":10285523,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286854,"byte_end":10286859,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288111,"byte_end":10288116,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292874,"byte_end":10292886,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10293430,"byte_end":10293442,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10294140,"byte_end":10294152,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10294348,"byte_end":10294352,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10295054,"byte_end":10295058,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10295924,"byte_end":10295928,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read.rs","byte_start":10298115,"byte_end":10298119,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_buf.rs","byte_start":10299253,"byte_end":10299260,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_exact.rs","byte_start":10301641,"byte_end":10301650,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_line.rs","byte_start":10310707,"byte_end":10310715,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_end.rs","byte_start":10314368,"byte_end":10314377,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1915},{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10314772,"byte_end":10314775,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315064,"byte_end":10315067,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315767,"byte_end":10315785,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315965,"byte_end":10315983,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_string.rs","byte_start":10321335,"byte_end":10321347,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_until.rs","byte_start":10323651,"byte_end":10323660,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\repeat.rs","byte_start":10325238,"byte_end":10325244,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\shutdown.rs","byte_start":10326623,"byte_end":10326631,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10328271,"byte_end":10328275,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10328785,"byte_end":10328789,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10329946,"byte_end":10329951,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330690,"byte_end":10330695,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10332993,"byte_end":10332997,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334625,"byte_end":10334629,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10335273,"byte_end":10335277,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write.rs","byte_start":10337076,"byte_end":10337081,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_vectored.rs","byte_start":10338246,"byte_end":10338259,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all.rs","byte_start":10339308,"byte_end":10339316,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_buf.rs","byte_start":10340801,"byte_end":10340809,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all_buf.rs","byte_start":10342136,"byte_end":10342147,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350095,"byte_end":10350106,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359881,"byte_end":10359892,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10360218,"byte_end":10360229,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10360657,"byte_end":10360668,"line_start":385,"line_end":385,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10363969,"byte_end":10363978,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376618,"byte_end":10376627,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377374,"byte_end":10377383,"line_start":522,"line_end":522,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377513,"byte_end":10377522,"line_start":529,"line_end":529,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377651,"byte_end":10377660,"line_start":536,"line_end":536,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379716,"byte_end":10379724,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382527,"byte_end":10382535,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382751,"byte_end":10382760,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10383677,"byte_end":10383685,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10383779,"byte_end":10383788,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386674,"byte_end":10386686,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386889,"byte_end":10386901,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386911,"byte_end":10386924,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390106,"byte_end":10390119,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390320,"byte_end":10390334,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10391017,"byte_end":10391031,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10391195,"byte_end":10391209,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10392256,"byte_end":10392269,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10392365,"byte_end":10392379,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394909,"byte_end":10394918,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3224},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10433516,"byte_end":10433525,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10433883,"byte_end":10433892,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10434102,"byte_end":10434111,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10434937,"byte_end":10434946,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10435368,"byte_end":10435377,"line_start":1261,"line_end":1261,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440318,"byte_end":10440327,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3084},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3104},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3121},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3128},{"krate":0,"index":3132},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3140},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484402,"byte_end":10484411,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484736,"byte_end":10484745,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10485172,"byte_end":10485181,"line_start":1432,"line_end":1432,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":102094,"byte_end":102099,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":102874,"byte_end":102880,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":103196,"byte_end":103203,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":104178,"byte_end":104188,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10485489,"byte_end":10485495,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10486452,"byte_end":10486458,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10486672,"byte_end":10486678,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":109380,"byte_end":109390,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":109655,"byte_end":109665,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":110191,"byte_end":110196,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":114961,"byte_end":114971,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":115080,"byte_end":115092,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":115447,"byte_end":115463,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":116726,"byte_end":116742,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":117337,"byte_end":117349,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":117529,"byte_end":117534,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":108427,"byte_end":108430,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":108519,"byte_end":108522,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10507171,"byte_end":10507183,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10508934,"byte_end":10508939,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10510129,"byte_end":10510150,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10510866,"byte_end":10510871,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3872}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10512511,"byte_end":10512516,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10512646,"byte_end":10512651,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520473,"byte_end":10520479,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520504,"byte_end":10520510,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520869,"byte_end":10520873,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10521760,"byte_end":10521769,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416},{"krate":0,"index":3418},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10524923,"byte_end":10524932,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10527621,"byte_end":10527627,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3883}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10527983,"byte_end":10527990,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10528921,"byte_end":10528930,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531656,"byte_end":10531665,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3465}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531908,"byte_end":10531917,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10532194,"byte_end":10532203,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10532237,"byte_end":10532242,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10532995,"byte_end":10533002,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10533657,"byte_end":10533664,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10539037,"byte_end":10539050,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10546031,"byte_end":10546036,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3567}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551509,"byte_end":10551519,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551556,"byte_end":10551566,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551582,"byte_end":10551592,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552827,"byte_end":10552837,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552864,"byte_end":10552874,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3590},{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10554100,"byte_end":10554110,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10554376,"byte_end":10554386,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10555633,"byte_end":10555640,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10557171,"byte_end":10557178,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10557268,"byte_end":10557275,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10559957,"byte_end":10559962,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3703}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10568818,"byte_end":10568826,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10570703,"byte_end":10570708,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10570867,"byte_end":10570875,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3728}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\waker.rs","byte_start":10572693,"byte_end":10572701,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10574449,"byte_end":10574462,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3919}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10575620,"byte_end":10575624,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10576024,"byte_end":10576028,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513646,"byte_end":10513650,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513681,"byte_end":10513685,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513822,"byte_end":10513830,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513871,"byte_end":10513879,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10515866,"byte_end":10515870,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516171,"byte_end":10516179,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516430,"byte_end":10516434,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516627,"byte_end":10516635,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516766,"byte_end":10516770,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516939,"byte_end":10516947,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3811}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517233,"byte_end":10517237,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517477,"byte_end":10517481,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517633,"byte_end":10517641,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517857,"byte_end":10517861,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10578756,"byte_end":10578761,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10579584,"byte_end":10579598,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10581883,"byte_end":10581888,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10586168,"byte_end":10586173,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10586866,"byte_end":10586880,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10588430,"byte_end":10588444,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4054}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10588610,"byte_end":10588617,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10589284,"byte_end":10589291,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4062}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10589459,"byte_end":10589462,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10590872,"byte_end":10590878,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10591385,"byte_end":10591395,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10591670,"byte_end":10591680,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4084}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10596165,"byte_end":10596177,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10598733,"byte_end":10598745,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4148}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10598831,"byte_end":10598843,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10599004,"byte_end":10599011,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4152},{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10601443,"byte_end":10601448,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10604687,"byte_end":10604694,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10605197,"byte_end":10605209,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10606082,"byte_end":10606090,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10607839,"byte_end":10607851,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4192}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10608077,"byte_end":10608089,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10608119,"byte_end":10608131,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611325,"byte_end":10611332,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10622962,"byte_end":10622969,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4365}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10623531,"byte_end":10623538,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10624781,"byte_end":10624788,"line_start":539,"line_end":539,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10626226,"byte_end":10626233,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4259}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\context.rs","byte_start":10628625,"byte_end":10628635,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4271}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\driver.rs","byte_start":10633148,"byte_end":10633154,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\driver.rs","byte_start":10633738,"byte_end":10633744,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635551,"byte_end":10635557,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644310,"byte_end":10644325,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644473,"byte_end":10644488,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644628,"byte_end":10644643,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\spawner.rs","byte_start":10645028,"byte_end":10645035,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\spawner.rs","byte_start":10645277,"byte_end":10645284,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4445}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10646878,"byte_end":10646884,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4478}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10647347,"byte_end":10647353,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4480}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10647669,"byte_end":10647675,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4488}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10648394,"byte_end":10648402,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10648471,"byte_end":10648476,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655684,"byte_end":10655689,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655720,"byte_end":10655725,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655756,"byte_end":10655762,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655793,"byte_end":10655799,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10656658,"byte_end":10656663,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10663244,"byte_end":10663249,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4567},{"krate":0,"index":4568},{"krate":0,"index":4570}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668417,"byte_end":10668422,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4575}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668518,"byte_end":10668523,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668682,"byte_end":10668687,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668875,"byte_end":10668881,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10672342,"byte_end":10672348,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676307,"byte_end":10676317,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676354,"byte_end":10676364,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676380,"byte_end":10676390,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10677144,"byte_end":10677154,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10677960,"byte_end":10677964,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10681802,"byte_end":10681807,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10683285,"byte_end":10683290,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10683463,"byte_end":10683468,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4663}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10689263,"byte_end":10689268,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10692599,"byte_end":10692605,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10693380,"byte_end":10693387,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10697674,"byte_end":10697678,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10702789,"byte_end":10702795,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10703235,"byte_end":10703238,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4780},{"krate":0,"index":4781}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10706542,"byte_end":10706548,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":4786},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10674354,"byte_end":10674364,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675298,"byte_end":10675308,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675447,"byte_end":10675457,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675560,"byte_end":10675567,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4814},{"krate":0,"index":4816}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675988,"byte_end":10675995,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10496731,"byte_end":10496738,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4844},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":121187,"byte_end":121193,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":121965,"byte_end":121971,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":122840,"byte_end":122850,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":123821,"byte_end":123837,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4895}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":123969,"byte_end":123985,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4897}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":125725,"byte_end":125731,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10714866,"byte_end":10714875,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10715433,"byte_end":10715436,"line_start":44,"line_end":44,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4937},{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10716158,"byte_end":10716166,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4945}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10716256,"byte_end":10716264,"line_start":78,"line_end":78,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4950},{"krate":0,"index":4951}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10717626,"byte_end":10717633,"line_start":122,"line_end":122,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10717741,"byte_end":10717748,"line_start":130,"line_end":130,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737935,"byte_end":10737944,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10738110,"byte_end":10738119,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4996},{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10738592,"byte_end":10738603,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5001}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10739477,"byte_end":10739482,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741935,"byte_end":10741940,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5012},{"krate":0,"index":5015}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744247,"byte_end":10744256,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5017},{"krate":0,"index":5020}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10748436,"byte_end":10748453,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10751862,"byte_end":10751879,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752169,"byte_end":10752186,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752404,"byte_end":10752421,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752517,"byte_end":10752534,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752559,"byte_end":10752576,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752720,"byte_end":10752737,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711903,"byte_end":10711911,"line_start":79,"line_end":79,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773056,"byte_end":10773063,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5121},{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776328,"byte_end":10776345,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5126}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783776,"byte_end":10783785,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783961,"byte_end":10783970,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784618,"byte_end":10784627,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5167}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784932,"byte_end":10784941,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785864,"byte_end":10785876,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5170}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10786254,"byte_end":10786266,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788229,"byte_end":10788233,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788278,"byte_end":10788282,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791056,"byte_end":10791062,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791099,"byte_end":10791105,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791143,"byte_end":10791151,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791188,"byte_end":10791196,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791212,"byte_end":10791218,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10796828,"byte_end":10796832,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797224,"byte_end":10797230,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797410,"byte_end":10797416,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5239}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797570,"byte_end":10797578,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802441,"byte_end":10802449,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5246},{"krate":0,"index":5249}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806625,"byte_end":10806633,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10807259,"byte_end":10807263,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10808042,"byte_end":10808046,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5261},{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10808707,"byte_end":10808711,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5266}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10809459,"byte_end":10809465,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10809880,"byte_end":10809886,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5277}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810030,"byte_end":10810038,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810173,"byte_end":10810182,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810355,"byte_end":10810364,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10817259,"byte_end":10817264,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5339},{"krate":0,"index":5340},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5344},{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10827363,"byte_end":10827369,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5363}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10827851,"byte_end":10827857,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831902,"byte_end":10831910,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838245,"byte_end":10838253,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838449,"byte_end":10838457,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838473,"byte_end":10838479,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858842,"byte_end":10858848,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858980,"byte_end":10858986,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859198,"byte_end":10859204,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860454,"byte_end":10860460,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5452}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860927,"byte_end":10860933,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861149,"byte_end":10861160,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5459},{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863942,"byte_end":10863953,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864616,"byte_end":10864627,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5470}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10865289,"byte_end":10865291,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10865584,"byte_end":10865586,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5510}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10866523,"byte_end":10866527,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867160,"byte_end":10867168,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5535}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867434,"byte_end":10867438,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867487,"byte_end":10867491,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867998,"byte_end":10868000,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10868610,"byte_end":10868612,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5556},{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869162,"byte_end":10869164,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869503,"byte_end":10869505,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5567}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869828,"byte_end":10869830,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872385,"byte_end":10872387,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5581}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872799,"byte_end":10872803,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5587}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872988,"byte_end":10872992,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5591}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10873993,"byte_end":10874004,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10875745,"byte_end":10875747,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5640}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10881460,"byte_end":10881462,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5643}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10881739,"byte_end":10881741,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10885140,"byte_end":10885142,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5652}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885800,"byte_end":10885815,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5666}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885956,"byte_end":10885971,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886644,"byte_end":10886661,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887660,"byte_end":10887677,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890975,"byte_end":10890990,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5699},{"krate":0,"index":5702},{"krate":0,"index":5703}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895168,"byte_end":10895177,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895337,"byte_end":10895346,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895832,"byte_end":10895844,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895877,"byte_end":10895889,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896229,"byte_end":10896241,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5723}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896470,"byte_end":10896479,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896609,"byte_end":10896618,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10897122,"byte_end":10897138,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10897175,"byte_end":10897191,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6800}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904547,"byte_end":10904552,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904606,"byte_end":10904611,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904665,"byte_end":10904675,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904740,"byte_end":10904755,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904820,"byte_end":10904836,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904903,"byte_end":10904919,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905600,"byte_end":10905612,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905749,"byte_end":10905761,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906569,"byte_end":10906574,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912327,"byte_end":10912332,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912416,"byte_end":10912421,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5797}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912545,"byte_end":10912550,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912940,"byte_end":10912950,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5804},{"krate":0,"index":5807}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915885,"byte_end":10915895,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915996,"byte_end":10916006,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5815},{"krate":0,"index":5816}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916153,"byte_end":10916163,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5819}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916320,"byte_end":10916330,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916496,"byte_end":10916506,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5825}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916684,"byte_end":10916699,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5828}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916796,"byte_end":10916811,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5832}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916954,"byte_end":10916969,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5835}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917122,"byte_end":10917137,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917299,"byte_end":10917314,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5841}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917484,"byte_end":10917500,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919338,"byte_end":10919354,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5854}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919454,"byte_end":10919470,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5858},{"krate":0,"index":5859}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919613,"byte_end":10919629,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919782,"byte_end":10919798,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919968,"byte_end":10919984,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924851,"byte_end":10924859,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924892,"byte_end":10924900,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925849,"byte_end":10925855,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10934382,"byte_end":10934388,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10936298,"byte_end":10936306,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10936819,"byte_end":10936827,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10942523,"byte_end":10942531,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5928}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10944394,"byte_end":10944400,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948553,"byte_end":10948562,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5961}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948724,"byte_end":10948733,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948802,"byte_end":10948814,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10949113,"byte_end":10949125,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10949619,"byte_end":10949623,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5977},{"krate":0,"index":5979},{"krate":0,"index":5983},{"krate":0,"index":5985}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951659,"byte_end":10951665,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5993},{"krate":0,"index":5998},{"krate":0,"index":5999}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959292,"byte_end":10959298,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959437,"byte_end":10959445,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6006}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963952,"byte_end":10963960,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10964107,"byte_end":10964115,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6012},{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10964578,"byte_end":10964583,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967689,"byte_end":10967694,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967731,"byte_end":10967736,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967837,"byte_end":10967842,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6029}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10968219,"byte_end":10968224,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6032}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10968619,"byte_end":10968624,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10970337,"byte_end":10970342,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6053}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10974401,"byte_end":10974410,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6110}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10985490,"byte_end":10985499,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6114}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10985698,"byte_end":10985704,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6116},{"krate":0,"index":6117}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10986570,"byte_end":10986577,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6119},{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10987255,"byte_end":10987262,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6124}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10988061,"byte_end":10988068,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989318,"byte_end":10989325,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989372,"byte_end":10989384,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989477,"byte_end":10989489,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989633,"byte_end":10989645,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989692,"byte_end":10989707,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6136},{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990225,"byte_end":10990240,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990526,"byte_end":10990541,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990634,"byte_end":10990640,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6142},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993932,"byte_end":10993941,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6164},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6172},{"krate":0,"index":6175},{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002145,"byte_end":11002160,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6181}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002405,"byte_end":11002425,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002679,"byte_end":11002694,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002802,"byte_end":11002822,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6188}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027412,"byte_end":11027432,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030504,"byte_end":11030524,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6229},{"krate":0,"index":6230}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030665,"byte_end":11030685,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030871,"byte_end":11030891,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11031073,"byte_end":11031093,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032114,"byte_end":11032135,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037806,"byte_end":11037827,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037957,"byte_end":11037978,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6277}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038099,"byte_end":11038120,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6280}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038292,"byte_end":11038313,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6283}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038481,"byte_end":11038502,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6286}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039605,"byte_end":11039632,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6306},{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043179,"byte_end":11043206,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6315},{"krate":0,"index":6316}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043350,"byte_end":11043377,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6320}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043512,"byte_end":11043539,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6324}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043725,"byte_end":11043752,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6328}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043934,"byte_end":11043961,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044663,"byte_end":11044678,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048092,"byte_end":11048107,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6356},{"krate":0,"index":6357}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048242,"byte_end":11048257,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6361}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048437,"byte_end":11048452,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048628,"byte_end":11048643,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049428,"byte_end":11049444,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6388},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055442,"byte_end":11055458,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6399},{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055592,"byte_end":11055608,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6403}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055737,"byte_end":11055753,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6407}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055933,"byte_end":11055949,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11056125,"byte_end":11056141,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057000,"byte_end":11057022,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6432},{"krate":0,"index":6435}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060862,"byte_end":11060884,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6440},{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061018,"byte_end":11061040,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6444}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061169,"byte_end":11061191,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061371,"byte_end":11061393,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6452}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061569,"byte_end":11061591,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008269,"byte_end":11008275,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008329,"byte_end":11008335,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008569,"byte_end":11008584,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008642,"byte_end":11008657,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008864,"byte_end":11008884,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008979,"byte_end":11008999,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009098,"byte_end":11009114,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009179,"byte_end":11009200,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009261,"byte_end":11009283,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009351,"byte_end":11009378,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009725,"byte_end":11009741,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009806,"byte_end":11009827,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009888,"byte_end":11009910,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009978,"byte_end":11010005,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010097,"byte_end":11010103,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6506},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512},{"krate":0,"index":6516},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026478,"byte_end":11026484,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6526}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026576,"byte_end":11026582,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11067870,"byte_end":11067881,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6563},{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11073903,"byte_end":11073914,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6567}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074000,"byte_end":11074011,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074144,"byte_end":11074155,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074180,"byte_end":11074191,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074287,"byte_end":11074292,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6576},{"krate":0,"index":6577}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075580,"byte_end":11075588,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6602}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075696,"byte_end":11075704,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6605}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075909,"byte_end":11075917,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076050,"byte_end":11076058,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076174,"byte_end":11076182,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076207,"byte_end":11076215,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076451,"byte_end":11076459,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6620},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6626},{"krate":0,"index":6628},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6638},{"krate":0,"index":6644},{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088152,"byte_end":11088160,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088377,"byte_end":11088385,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088997,"byte_end":11089005,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089312,"byte_end":11089320,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089336,"byte_end":11089344,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093929,"byte_end":11093938,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6678}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094118,"byte_end":11094127,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094320,"byte_end":11094329,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094491,"byte_end":11094500,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095706,"byte_end":11095714,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11098709,"byte_end":11098717,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6698}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11098901,"byte_end":11098909,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099279,"byte_end":11099285,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6998}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11102122,"byte_end":11102128,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6712}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11102318,"byte_end":11102321,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\yield_now.rs","byte_start":11115488,"byte_end":11115496,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7204},{"krate":0,"index":7205}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11126418,"byte_end":11126426,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":7058},{"krate":0,"index":7062},{"krate":0,"index":7064},{"krate":0,"index":7067}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11134419,"byte_end":11134427,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7071}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11134566,"byte_end":11134574,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7073},{"krate":0,"index":7074}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11135539,"byte_end":11135547,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7077}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11135628,"byte_end":11135636,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11136503,"byte_end":11136511,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11137396,"byte_end":11137402,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7088},{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11137953,"byte_end":11137956,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7092},{"krate":0,"index":7094},{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141463,"byte_end":11141471,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7124},{"krate":0,"index":7128},{"krate":0,"index":7131}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143971,"byte_end":11143979,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7137}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144187,"byte_end":11144195,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7141}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144497,"byte_end":11144512,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7145}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144789,"byte_end":11144794,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145335,"byte_end":11145350,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145627,"byte_end":11145628,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145813,"byte_end":11145824,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7169}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145968,"byte_end":11145979,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7171}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11146126,"byte_end":11146137,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11146539,"byte_end":11146552,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7183},{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\clock.rs","byte_start":11150977,"byte_end":11150982,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7623},{"krate":0,"index":7624},{"krate":0,"index":7625},{"krate":0,"index":7626}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11175877,"byte_end":11175886,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7263}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11175970,"byte_end":11175979,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7265}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11176125,"byte_end":11176134,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":7268},{"krate":0,"index":7269},{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7276},{"krate":0,"index":7277},{"krate":0,"index":7278}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11183152,"byte_end":11183162,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11183187,"byte_end":11183197,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11184638,"byte_end":11184649,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7283},{"krate":0,"index":7284},{"krate":0,"index":7285},{"krate":0,"index":7286},{"krate":0,"index":7287},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7291}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188172,"byte_end":11188189,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7297}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188490,"byte_end":11188507,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7299}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188746,"byte_end":11188757,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188782,"byte_end":11188793,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188832,"byte_end":11188843,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7303},{"krate":0,"index":7304},{"krate":0,"index":7305},{"krate":0,"index":7306},{"krate":0,"index":7307}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11189361,"byte_end":11189371,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7309},{"krate":0,"index":7310},{"krate":0,"index":7311},{"krate":0,"index":7312},{"krate":0,"index":7313},{"krate":0,"index":7314}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11192372,"byte_end":11192383,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11194774,"byte_end":11194784,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11195273,"byte_end":11195279,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7334},{"krate":0,"index":7335},{"krate":0,"index":7336},{"krate":0,"index":7337}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11195947,"byte_end":11195953,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7665}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11197997,"byte_end":11198003,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11210601,"byte_end":11210606,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7361},{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11216674,"byte_end":11216679,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":11199624,"byte_end":11199629,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11222813,"byte_end":11222818,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7416},{"krate":0,"index":7417},{"krate":0,"index":7418},{"krate":0,"index":7419},{"krate":0,"index":7420},{"krate":0,"index":7421}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224921,"byte_end":11224926,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7424},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11160207,"byte_end":11160216,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7451},{"krate":0,"index":7452}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11161852,"byte_end":11161858,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7464},{"krate":0,"index":7465},{"krate":0,"index":7466}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11164877,"byte_end":11164883,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7475},{"krate":0,"index":7476}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11169603,"byte_end":11169609,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7480},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11170322,"byte_end":11170328,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7488}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11170454,"byte_end":11170459,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11171172,"byte_end":11171177,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7494}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227077,"byte_end":11227082,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227323,"byte_end":11227328,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228228,"byte_end":11228233,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228260,"byte_end":11228265,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7514}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228727,"byte_end":11228734,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7517}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228822,"byte_end":11228829,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7519}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228973,"byte_end":11228980,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11229017,"byte_end":11229022,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7522}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230564,"byte_end":11230571,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7532},{"krate":0,"index":7533},{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234668,"byte_end":11234675,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7539}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234804,"byte_end":11234811,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7541}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234926,"byte_end":11234933,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7543},{"krate":0,"index":7544}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235098,"byte_end":11235105,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235210,"byte_end":11235217,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7548},{"krate":0,"index":7549}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235358,"byte_end":11235365,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7551},{"krate":0,"index":7552}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235526,"byte_end":11235533,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235640,"byte_end":11235647,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7556}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239825,"byte_end":11239833,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7576},{"krate":0,"index":7580},{"krate":0,"index":7581}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244839,"byte_end":11244846,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245384,"byte_end":11245391,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7611},{"krate":0,"index":7612}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\bit.rs","byte_start":11246036,"byte_end":11246040,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7772},{"krate":0,"index":7773},{"krate":0,"index":7774}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\bit.rs","byte_start":11247468,"byte_end":11247472,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7776}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252622,"byte_end":11252626,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252663,"byte_end":11252667,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252704,"byte_end":11252714,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252751,"byte_end":11252761,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252798,"byte_end":11252801,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252838,"byte_end":11252841,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11253457,"byte_end":11253461,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7850},{"krate":0,"index":7851},{"krate":0,"index":7852},{"krate":0,"index":7853},{"krate":0,"index":7855}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259056,"byte_end":11259060,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259199,"byte_end":11259208,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7861}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259775,"byte_end":11259784,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7864}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259942,"byte_end":11259945,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7867},{"krate":0,"index":7868}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260207,"byte_end":11260210,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7871}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260477,"byte_end":11260480,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7874}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260601,"byte_end":11260605,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7877}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263112,"byte_end":11263116,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7881},{"krate":0,"index":7882}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263460,"byte_end":11263464,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7885}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263812,"byte_end":11263816,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11264178,"byte_end":11264188,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7891},{"krate":0,"index":7892}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11265125,"byte_end":11265135,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7895}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11265278,"byte_end":11265283,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7898}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11266166,"byte_end":11266170,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7902}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11266730,"byte_end":11266735,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11267061,"byte_end":11267068,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7907},{"krate":0,"index":7908},{"krate":0,"index":7909}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141135,"byte_end":141145,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141215,"byte_end":141225,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143803,"byte_end":143811,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143848,"byte_end":143856,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143907,"byte_end":143917,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":144152,"byte_end":144162,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147168,"byte_end":147178,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147535,"byte_end":147545,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147732,"byte_end":147742,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148019,"byte_end":148029,"line_start":246,"line_end":246,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148262,"byte_end":148266,"line_start":255,"line_end":255,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7948},{"krate":0,"index":7949}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148920,"byte_end":148930,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":149299,"byte_end":149310,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":149990,"byte_end":149998,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":151581,"byte_end":151589,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\rand.rs","byte_start":162113,"byte_end":162121,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\wake.rs","byte_start":11274671,"byte_end":11274679,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7985},{"krate":0,"index":7986}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276767,"byte_end":11276774,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276811,"byte_end":11276818,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276856,"byte_end":11276865,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277051,"byte_end":11277058,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8039},{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277692,"byte_end":11277701,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8043},{"krate":0,"index":8044}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277833,"byte_end":11277842,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8047}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277964,"byte_end":11277973,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8050}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14285,"byte_end":14291,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\mod.rs","byte_start":17961,"byte_end":17968,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14344,"byte_end":14346,"line_start":358,"line_end":358,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14356,"byte_end":14359,"line_start":359,"line_end":359,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\mod.rs","byte_start":80358,"byte_end":80361,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2769}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14524,"byte_end":14531,"line_start":372,"line_end":372,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3331}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14584,"byte_end":14590,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4904}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711568,"byte_end":10711575,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4970}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14762,"byte_end":14766,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5116}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770197,"byte_end":10770206,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5130}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770221,"byte_end":10770225,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5293}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\mod.rs","byte_start":10814659,"byte_end":10814664,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5708}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10770401,"byte_end":10770408,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5939}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mod.rs","byte_start":10771147,"byte_end":10771152,"line_start":467,"line_end":467,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6663}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14811,"byte_end":14815,"line_start":395,"line_end":395,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":650}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\lib.rs","byte_start":14879,"byte_end":14883,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7233}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\mod.rs","byte_start":11150171,"byte_end":11150176,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7499}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\macros\\scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089667,"byte_end":10089672,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\future\\ready.rs","byte_start":10089699,"byte_end":10089704,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":43558,"byte_end":43567,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":167}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":167}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":167}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":34793},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":7110},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10100770,"byte_end":10100778,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10102919,"byte_end":10102927,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2207}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10103070,"byte_end":10103078,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":2233}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\interest.rs","byte_start":10103206,"byte_end":10103214,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10103799,"byte_end":10103804,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10108221,"byte_end":10108226,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10108970,"byte_end":10108975,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2207}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109136,"byte_end":10109141,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2233}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109269,"byte_end":10109274,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2202}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109428,"byte_end":10109433,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":2151}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\ready.rs","byte_start":10109580,"byte_end":10109585,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1043},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112170,"byte_end":10112182,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1064},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112207,"byte_end":10112219,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1064},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10112263,"byte_end":10112275,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10117703,"byte_end":10117715,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1064},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\registration.rs","byte_start":10118314,"byte_end":10118326,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10121832,"byte_end":10121843,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":7804}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10122103,"byte_end":10122114,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10122294,"byte_end":10122305,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130488,"byte_end":10130499,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130588,"byte_end":10130599,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130624,"byte_end":10130635,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10130669,"byte_end":10130680,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10131603,"byte_end":10131609,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1116},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10132104,"byte_end":10132113,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10136787,"byte_end":10136796,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10137161,"byte_end":10137170,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\scheduled_io.rs","byte_start":10137203,"byte_end":10137212,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10093342,"byte_end":10093348,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096154,"byte_end":10096160,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096275,"byte_end":10096280,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10096724,"byte_end":10096730,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":940},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10097129,"byte_end":10097135,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10097285,"byte_end":10097291,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10098122,"byte_end":10098128,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10098945,"byte_end":10098951,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1143},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10099029,"byte_end":10099035,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10099170,"byte_end":10099175,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\driver\\mod.rs","byte_start":10100132,"byte_end":10100141,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10140435,"byte_end":10140446,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10143208,"byte_end":10143219,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10144762,"byte_end":10144773,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10144916,"byte_end":10144927,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\poll_evented.rs","byte_start":10145099,"byte_end":10145110,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10146861,"byte_end":10146869,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10147786,"byte_end":10147795,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10148045,"byte_end":10148053,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1298},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10148348,"byte_end":10148357,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149036,"byte_end":10149041,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149497,"byte_end":10149502,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149755,"byte_end":10149760,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149883,"byte_end":10149891,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149928,"byte_end":10149937,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10149974,"byte_end":10149982,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150019,"byte_end":10150028,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150071,"byte_end":10150079,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\split.rs","byte_start":10150247,"byte_end":10150256,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\seek.rs","byte_start":10151213,"byte_end":10151217,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":11100},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10154228,"byte_end":10154240,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":2197}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":10163347,"byte_end":10163348,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1321},"to":{"krate":0,"index":2197}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10165269,"byte_end":10165278,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":2205}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_read_ext.rs","byte_start":10202675,"byte_end":10202676,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1368},"to":{"krate":0,"index":2205}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10203601,"byte_end":10203610,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":167},"to":{"krate":0,"index":2256}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_seek_ext.rs","byte_start":10205141,"byte_end":10205142,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":2256}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10207252,"byte_end":10207262,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":193},"to":{"krate":0,"index":2260}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\async_write_ext.rs","byte_start":10243746,"byte_end":10243747,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":2260}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10245191,"byte_end":10245200,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10247098,"byte_end":10247107,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10247917,"byte_end":10247926,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10250119,"byte_end":10250128,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":167}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10254168,"byte_end":10254177,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_reader.rs","byte_start":10254688,"byte_end":10254697,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11044},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10256186,"byte_end":10256195,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10258032,"byte_end":10258041,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11013},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10258183,"byte_end":10258192,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11013},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259072,"byte_end":10259081,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11013},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259611,"byte_end":10259620,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11013},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_stream.rs","byte_start":10259875,"byte_end":10259884,"line_start":149,"line_end":149,"column_start":51,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11013},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10261883,"byte_end":10261892,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10264211,"byte_end":10264220,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10265513,"byte_end":10265522,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":167}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267063,"byte_end":10267072,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267326,"byte_end":10267335,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10963},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\buf_writer.rs","byte_start":10267622,"byte_end":10267631,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10963},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10268809,"byte_end":10268814,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10269954,"byte_end":10269959,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10914},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10270238,"byte_end":10270243,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10914},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\chain.rs","byte_start":10270829,"byte_end":10270834,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10914},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy.rs","byte_start":10271961,"byte_end":10271971,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy.rs","byte_start":10275568,"byte_end":10275572,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_bidirectional.rs","byte_start":10277152,"byte_end":10277169,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1645},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\copy_buf.rs","byte_start":10281655,"byte_end":10281662,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2373},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10283929,"byte_end":10283934,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2385},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10284148,"byte_end":10284153,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2385},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\empty.rs","byte_start":10284386,"byte_end":10284391,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\flush.rs","byte_start":10285518,"byte_end":10285523,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10872},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10286854,"byte_end":10286859,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\lines.rs","byte_start":10288111,"byte_end":10288116,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10292874,"byte_end":10292886,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2388},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10293430,"byte_end":10293442,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2388},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10294140,"byte_end":10294152,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10294348,"byte_end":10294352,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10295054,"byte_end":10295058,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\mem.rs","byte_start":10295924,"byte_end":10295928,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read.rs","byte_start":10298115,"byte_end":10298119,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":10771},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_buf.rs","byte_start":10299253,"byte_end":10299260,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":10711},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_exact.rs","byte_start":10301641,"byte_end":10301650,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":10656},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_line.rs","byte_start":10310707,"byte_end":10310715,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":9737},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_end.rs","byte_start":10314368,"byte_end":10314377,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9680},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10314772,"byte_end":10314775,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315012,"byte_end":10315017,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1991},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315038,"byte_end":10315044,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1921},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315064,"byte_end":10315067,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1924}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315767,"byte_end":10315785,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":10315965,"byte_end":10315983,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_to_string.rs","byte_start":10321335,"byte_end":10321347,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9619},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\read_until.rs","byte_start":10323651,"byte_end":10323660,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9558},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\repeat.rs","byte_start":10325238,"byte_end":10325244,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2553},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\shutdown.rs","byte_start":10326623,"byte_end":10326631,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9509},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10328271,"byte_end":10328275,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2557},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\sink.rs","byte_start":10328785,"byte_end":10328789,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10329946,"byte_end":10329951,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\split.rs","byte_start":10330690,"byte_end":10330695,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10332993,"byte_end":10332997,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10334625,"byte_end":10334629,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9419},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\take.rs","byte_start":10335273,"byte_end":10335277,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9419},"to":{"krate":0,"index":114}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write.rs","byte_start":10337076,"byte_end":10337081,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":9368},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_vectored.rs","byte_start":10338246,"byte_end":10338259,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":9308},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all.rs","byte_start":10339308,"byte_end":10339316,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":9253},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_buf.rs","byte_start":10340801,"byte_end":10340809,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":9193},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\io\\util\\write_all_buf.rs","byte_start":10342136,"byte_end":10342147,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":9131},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":81416,"byte_end":81433,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":342},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":7260},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":7260},"to":{"krate":0,"index":342}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":7288},"to":{"krate":0,"index":342}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":1,"index":7291},"to":{"krate":0,"index":342}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":342}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2744},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2758},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10350095,"byte_end":10350106,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10359881,"byte_end":10359892,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10360218,"byte_end":10360229,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\listener.rs","byte_start":10360657,"byte_end":10360668,"line_start":385,"line_end":385,"column_start":26,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3188},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10363969,"byte_end":10363978,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10376618,"byte_end":10376627,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3190},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377374,"byte_end":10377383,"line_start":522,"line_end":522,"column_start":24,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3190},"to":{"krate":1,"index":9295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377513,"byte_end":10377522,"line_start":529,"line_end":529,"column_start":22,"column_end":31},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3190},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\socket.rs","byte_start":10377651,"byte_end":10377660,"line_start":536,"line_end":536,"column_start":24,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3190},"to":{"krate":1,"index":9293}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10379716,"byte_end":10379724,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382527,"byte_end":10382535,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10382751,"byte_end":10382760,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3199},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10383677,"byte_end":10383685,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3192},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split.rs","byte_start":10383779,"byte_end":10383788,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3199},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386674,"byte_end":10386686,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3215},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386889,"byte_end":10386901,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3215},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10386911,"byte_end":10386924,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390106,"byte_end":10390119,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3206},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10390320,"byte_end":10390334,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10391017,"byte_end":10391031,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10391195,"byte_end":10391209,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3210},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10392256,"byte_end":10392269,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\split_owned.rs","byte_start":10392365,"byte_end":10392379,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10394909,"byte_end":10394918,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10433516,"byte_end":10433525,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10433883,"byte_end":10433892,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10434102,"byte_end":10434111,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3222},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10434937,"byte_end":10434946,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3222},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\tcp\\stream.rs","byte_start":10435368,"byte_end":10435377,"line_start":1261,"line_end":1261,"column_start":26,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3222},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10440318,"byte_end":10440327,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484402,"byte_end":10484411,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":2004}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10484736,"byte_end":10484745,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\net\\udp.rs","byte_start":10485172,"byte_end":10485181,"line_start":1432,"line_end":1432,"column_start":26,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3229},"to":{"krate":1,"index":9291}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":102094,"byte_end":102099,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":102874,"byte_end":102880,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\parking_lot.rs","byte_start":103196,"byte_end":103203,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":104178,"byte_end":104188,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10485489,"byte_end":10485495,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3279},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10486452,"byte_end":10486458,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3279},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\either.rs","byte_start":10486672,"byte_end":10486678,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":109380,"byte_end":109390,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":109655,"byte_end":109665,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3305},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":110191,"byte_end":110196,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":114961,"byte_end":114971,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3305},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":115080,"byte_end":115092,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3309},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":115447,"byte_end":115463,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":116726,"byte_end":116742,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3325},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":117337,"byte_end":117349,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\thread.rs","byte_start":117529,"byte_end":117534,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":107947,"byte_end":107951,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":107954,"byte_end":107958,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":108427,"byte_end":108430,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":238}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\park\\mod.rs","byte_start":108519,"byte_end":108522,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10507171,"byte_end":10507183,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10508934,"byte_end":10508939,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3851},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10510129,"byte_end":10510150,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3860},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10510866,"byte_end":10510871,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10512511,"byte_end":10512516,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\enter.rs","byte_start":10512646,"byte_end":10512651,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520473,"byte_end":10520479,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3383},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520504,"byte_end":10520510,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3383},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10520869,"byte_end":10520873,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10521760,"byte_end":10521769,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10524923,"byte_end":10524932,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10527621,"byte_end":10527627,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\core.rs","byte_start":10527983,"byte_end":10527990,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10528921,"byte_end":10528930,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531656,"byte_end":10531665,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3885},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10531908,"byte_end":10531917,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3885},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10532194,"byte_end":10532203,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3885},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\error.rs","byte_start":10532237,"byte_end":10532242,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10532995,"byte_end":10533002,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10533657,"byte_end":10533664,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10539037,"byte_end":10539050,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\harness.rs","byte_start":10546031,"byte_end":10546036,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551509,"byte_end":10551519,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551556,"byte_end":10551566,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10551582,"byte_end":10551592,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552827,"byte_end":10552837,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10552864,"byte_end":10552874,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10554100,"byte_end":10554110,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\join.rs","byte_start":10554376,"byte_end":10554386,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3887},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10555633,"byte_end":10555640,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10557171,"byte_end":10557178,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3611},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\raw.rs","byte_start":10557268,"byte_end":10557275,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3611},"to":{"krate":2,"index":2091}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10559957,"byte_end":10559962,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10568818,"byte_end":10568826,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10570703,"byte_end":10570708,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3660},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\state.rs","byte_start":10570867,"byte_end":10570875,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3891},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\waker.rs","byte_start":10572693,"byte_end":10572701,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3744},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10574449,"byte_end":10574462,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10575620,"byte_end":10575624,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3921},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\stack.rs","byte_start":10576024,"byte_end":10576028,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3921},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513646,"byte_end":10513650,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513681,"byte_end":10513685,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513822,"byte_end":10513830,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3786},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10513871,"byte_end":10513879,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3786},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10514004,"byte_end":10514008,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10514011,"byte_end":10514016,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10515866,"byte_end":10515870,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516171,"byte_end":10516179,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516430,"byte_end":10516434,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516627,"byte_end":10516635,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516766,"byte_end":10516770,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10516939,"byte_end":10516947,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517233,"byte_end":10517237,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517477,"byte_end":10517481,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517633,"byte_end":10517641,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3786},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\task\\mod.rs","byte_start":10517857,"byte_end":10517861,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3778},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10578756,"byte_end":10578761,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4000},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10579584,"byte_end":10579598,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10581883,"byte_end":10581888,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10586168,"byte_end":10586173,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10586866,"byte_end":10586880,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3986},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10588430,"byte_end":10588444,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3986},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10588610,"byte_end":10588617,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10589284,"byte_end":10589291,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4341},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10589459,"byte_end":10589462,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"kind":{"Impl":{"id":302}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10590872,"byte_end":10590878,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4008},"to":{"krate":0,"index":7981}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10591385,"byte_end":10591395,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\basic_scheduler.rs","byte_start":10591670,"byte_end":10591680,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4073},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10596165,"byte_end":10596177,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10598733,"byte_end":10598745,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4111},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10598831,"byte_end":10598843,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4111},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10599004,"byte_end":10599011,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10601443,"byte_end":10601448,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\pool.rs","byte_start":10604687,"byte_end":10604694,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\schedule.rs","byte_start":10605197,"byte_end":10605209,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4167},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":10606082,"byte_end":10606090,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10607839,"byte_end":10607851,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10608077,"byte_end":10608089,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4187},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\blocking\\task.rs","byte_start":10608119,"byte_end":10608131,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4187},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10611325,"byte_end":10611332,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10622962,"byte_end":10622969,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10623531,"byte_end":10623538,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10624781,"byte_end":10624788,"line_start":539,"line_end":539,"column_start":10,"column_end":17},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\builder.rs","byte_start":10626226,"byte_end":10626233,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4215},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\context.rs","byte_start":10628625,"byte_end":10628635,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4386},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\driver.rs","byte_start":10633148,"byte_end":10633154,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\driver.rs","byte_start":10633738,"byte_end":10633744,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4407},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10635551,"byte_end":10635557,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644310,"byte_end":10644325,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644473,"byte_end":10644488,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\handle.rs","byte_start":10644628,"byte_end":10644643,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4326},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\spawner.rs","byte_start":10645028,"byte_end":10645035,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\spawner.rs","byte_start":10645277,"byte_end":10645284,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10646878,"byte_end":10646884,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10647347,"byte_end":10647353,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10647669,"byte_end":10647675,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4461},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10648394,"byte_end":10648402,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4463},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\park.rs","byte_start":10648471,"byte_end":10648476,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655684,"byte_end":10655689,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4532},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655720,"byte_end":10655725,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4532},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655756,"byte_end":10655762,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4527},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10655793,"byte_end":10655799,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4527},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10656658,"byte_end":10656663,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10663244,"byte_end":10663249,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668417,"byte_end":10668422,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668518,"byte_end":10668523,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4520},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668682,"byte_end":10668687,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10668875,"byte_end":10668881,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\queue.rs","byte_start":10672342,"byte_end":10672348,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4527},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676307,"byte_end":10676317,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4605},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676354,"byte_end":10676364,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4605},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10676380,"byte_end":10676390,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":10677144,"byte_end":10677154,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4605},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10677960,"byte_end":10677964,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10681802,"byte_end":10681807,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10683285,"byte_end":10683290,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4820},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":10683463,"byte_end":10683468,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4820},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10689263,"byte_end":10689268,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4726},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10692599,"byte_end":10692605,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10693380,"byte_end":10693387,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10697674,"byte_end":10697678,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10702789,"byte_end":10702795,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10703235,"byte_end":10703238,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"kind":{"Impl":{"id":361}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":10706542,"byte_end":10706548,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10674354,"byte_end":10674364,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675298,"byte_end":10675308,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4802},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675447,"byte_end":10675457,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4802},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675560,"byte_end":10675567,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":10675988,"byte_end":10675995,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4831},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\runtime\\mod.rs","byte_start":10496731,"byte_end":10496738,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":121187,"byte_end":121193,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":121965,"byte_end":121971,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":122840,"byte_end":122850,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":642},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":123821,"byte_end":123837,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":123969,"byte_end":123985,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4891},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\coop.rs","byte_start":125725,"byte_end":125731,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10714866,"byte_end":10714875,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5081},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10715433,"byte_end":10715436,"line_start":44,"line_end":44,"column_start":18,"column_end":21},"kind":{"Impl":{"id":376}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":4931}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10716158,"byte_end":10716166,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10716256,"byte_end":10716264,"line_start":78,"line_end":78,"column_start":18,"column_end":26},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10717626,"byte_end":10717633,"line_start":122,"line_end":122,"column_start":21,"column_end":28},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4953},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\registry.rs","byte_start":10717741,"byte_end":10717748,"line_start":130,"line_end":130,"column_start":6,"column_end":13},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10737935,"byte_end":10737944,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5092},"to":{"krate":0,"index":4941}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10738110,"byte_end":10738119,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5092},"to":{"krate":0,"index":4931}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10738592,"byte_end":10738603,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5097},"to":{"krate":0,"index":4941}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10739477,"byte_end":10739482,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10741935,"byte_end":10741940,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\windows.rs","byte_start":10744247,"byte_end":10744256,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10748436,"byte_end":10748453,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10751862,"byte_end":10751879,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752169,"byte_end":10752186,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752404,"byte_end":10752421,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752517,"byte_end":10752534,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752559,"byte_end":10752576,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\reusable_box.rs","byte_start":10752720,"byte_end":10752737,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5037},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\signal\\mod.rs","byte_start":10711903,"byte_end":10711911,"line_start":79,"line_end":79,"column_start":6,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10773056,"byte_end":10773063,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\barrier.rs","byte_start":10776328,"byte_end":10776345,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783776,"byte_end":10783785,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6736},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10783961,"byte_end":10783970,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6736},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784618,"byte_end":10784627,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6743},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10784932,"byte_end":10784941,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6743},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10785864,"byte_end":10785876,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6755},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10786254,"byte_end":10786266,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6755},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788229,"byte_end":10788233,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5199},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10788278,"byte_end":10788282,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5199},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791056,"byte_end":10791062,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5152},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791099,"byte_end":10791105,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5152},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791143,"byte_end":10791151,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5155},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791188,"byte_end":10791196,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5155},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10791212,"byte_end":10791218,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10796828,"byte_end":10796832,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797224,"byte_end":10797230,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5152},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797410,"byte_end":10797416,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5152},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10797570,"byte_end":10797578,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10802441,"byte_end":10802449,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10806625,"byte_end":10806633,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5155},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10807259,"byte_end":10807263,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10808042,"byte_end":10808046,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5199},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10808707,"byte_end":10808711,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5199},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10809459,"byte_end":10809465,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5190},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10809880,"byte_end":10809886,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5152},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810030,"byte_end":10810038,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5155},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810173,"byte_end":10810182,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\broadcast.rs","byte_start":10810355,"byte_end":10810364,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5195},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10817259,"byte_end":10817264,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10827363,"byte_end":10827369,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\block.rs","byte_start":10827851,"byte_end":10827857,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5324},"to":{"krate":2,"index":2362}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10831902,"byte_end":10831910,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838245,"byte_end":10838253,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5390},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838449,"byte_end":10838457,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5390},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10838473,"byte_end":10838479,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858842,"byte_end":10858848,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5380},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10858980,"byte_end":10858986,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5380},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10859198,"byte_end":10859204,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860454,"byte_end":10860460,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5383},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10860927,"byte_end":10860933,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5383},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10861149,"byte_end":10861160,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10863942,"byte_end":10863953,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\bounded.rs","byte_start":10864616,"byte_end":10864627,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10865289,"byte_end":10865291,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10865584,"byte_end":10865586,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5503},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10866523,"byte_end":10866527,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867160,"byte_end":10867168,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5529},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867434,"byte_end":10867438,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867487,"byte_end":10867491,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10867998,"byte_end":10868000,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10868610,"byte_end":10868612,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869162,"byte_end":10869164,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869503,"byte_end":10869505,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10869828,"byte_end":10869830,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872385,"byte_end":10872387,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5503},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872799,"byte_end":10872803,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10872988,"byte_end":10872992,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\chan.rs","byte_start":10873993,"byte_end":10874004,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":427},"to":{"krate":0,"index":5511}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10875745,"byte_end":10875747,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10881460,"byte_end":10881462,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5623},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10881739,"byte_end":10881741,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\list.rs","byte_start":10885140,"byte_end":10885142,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5627},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885800,"byte_end":10885815,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10885956,"byte_end":10885971,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5661},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10886644,"byte_end":10886661,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5670},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10887660,"byte_end":10887677,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":10890975,"byte_end":10890990,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895168,"byte_end":10895177,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6773},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895337,"byte_end":10895346,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6773},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895832,"byte_end":10895844,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6780},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10895877,"byte_end":10895889,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6780},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896229,"byte_end":10896241,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6780},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896470,"byte_end":10896479,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6791},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10896609,"byte_end":10896618,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6791},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10897122,"byte_end":10897138,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6801},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mpsc\\error.rs","byte_start":10897175,"byte_end":10897191,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6801},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904547,"byte_end":10904552,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904606,"byte_end":10904611,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904665,"byte_end":10904675,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904740,"byte_end":10904755,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904820,"byte_end":10904836,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10904903,"byte_end":10904919,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905600,"byte_end":10905612,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6812},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10905749,"byte_end":10905761,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6812},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10906569,"byte_end":10906574,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912327,"byte_end":10912332,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912416,"byte_end":10912421,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912545,"byte_end":10912550,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5740},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10912940,"byte_end":10912950,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915885,"byte_end":10915895,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10915996,"byte_end":10916006,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916153,"byte_end":10916163,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916320,"byte_end":10916330,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916496,"byte_end":10916506,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5744},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916684,"byte_end":10916699,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916796,"byte_end":10916811,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10916954,"byte_end":10916969,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917122,"byte_end":10917137,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917299,"byte_end":10917314,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10917484,"byte_end":10917500,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919338,"byte_end":10919354,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919454,"byte_end":10919470,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919613,"byte_end":10919629,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919782,"byte_end":10919798,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\mutex.rs","byte_start":10919968,"byte_end":10919984,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5751},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924851,"byte_end":10924859,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10924892,"byte_end":10924900,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10925849,"byte_end":10925855,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10934382,"byte_end":10934388,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6817},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10936298,"byte_end":10936306,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10936819,"byte_end":10936827,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10942523,"byte_end":10942531,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6839},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\notify.rs","byte_start":10944394,"byte_end":10944400,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6832},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948553,"byte_end":10948562,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948724,"byte_end":10948733,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6869},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10948802,"byte_end":10948814,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6881},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10949113,"byte_end":10949125,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6881},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10949619,"byte_end":10949623,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":5973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10951659,"byte_end":10951665,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959292,"byte_end":10959298,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6857},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10959437,"byte_end":10959445,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10963952,"byte_end":10963960,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10964107,"byte_end":10964115,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10964578,"byte_end":10964583,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":5967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967689,"byte_end":10967694,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":5967},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967731,"byte_end":10967736,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":5967},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10967837,"byte_end":10967842,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":5967},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10968219,"byte_end":10968224,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5967},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10968619,"byte_end":10968624,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\oneshot.rs","byte_start":10970337,"byte_end":10970342,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6894},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10974401,"byte_end":10974410,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10985490,"byte_end":10985499,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6076},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10985698,"byte_end":10985704,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10986570,"byte_end":10986577,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10987255,"byte_end":10987262,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10988061,"byte_end":10988068,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989318,"byte_end":10989325,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989372,"byte_end":10989384,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989477,"byte_end":10989489,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6910},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989633,"byte_end":10989645,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6910},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10989692,"byte_end":10989707,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990225,"byte_end":10990240,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6900},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990526,"byte_end":10990541,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6900},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\batch_semaphore.rs","byte_start":10990634,"byte_end":10990640,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6088},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":10993932,"byte_end":10993941,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002145,"byte_end":11002160,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002405,"byte_end":11002425,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002679,"byte_end":11002694,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6919},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\semaphore.rs","byte_start":11002802,"byte_end":11002822,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6926},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11027412,"byte_end":11027432,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030504,"byte_end":11030524,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030665,"byte_end":11030685,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11030871,"byte_end":11030891,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_read_guard.rs","byte_start":11031073,"byte_end":11031093,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11032114,"byte_end":11032135,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037806,"byte_end":11037827,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11037957,"byte_end":11037978,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038099,"byte_end":11038120,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038292,"byte_end":11038313,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard.rs","byte_start":11038481,"byte_end":11038502,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11039605,"byte_end":11039632,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043179,"byte_end":11043206,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043350,"byte_end":11043377,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043512,"byte_end":11043539,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043725,"byte_end":11043752,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\owned_write_guard_mapped.rs","byte_start":11043934,"byte_end":11043961,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11044663,"byte_end":11044678,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048092,"byte_end":11048107,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048242,"byte_end":11048257,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048437,"byte_end":11048452,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\read_guard.rs","byte_start":11048628,"byte_end":11048643,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11049428,"byte_end":11049444,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055442,"byte_end":11055458,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055592,"byte_end":11055608,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055737,"byte_end":11055753,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11055933,"byte_end":11055949,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard.rs","byte_start":11056125,"byte_end":11056141,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11057000,"byte_end":11057022,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11060862,"byte_end":11060884,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061018,"byte_end":11061040,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061169,"byte_end":11061191,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061371,"byte_end":11061393,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock\\write_guard_mapped.rs","byte_start":11061569,"byte_end":11061591,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008269,"byte_end":11008275,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6931},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008329,"byte_end":11008335,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6931},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008569,"byte_end":11008584,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008642,"byte_end":11008657,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6339},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008864,"byte_end":11008884,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11008979,"byte_end":11008999,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6211},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009098,"byte_end":11009114,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009179,"byte_end":11009200,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009261,"byte_end":11009283,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009351,"byte_end":11009378,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009725,"byte_end":11009741,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6378},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009806,"byte_end":11009827,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009888,"byte_end":11009910,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11009978,"byte_end":11010005,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6296},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11010097,"byte_end":11010103,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026478,"byte_end":11026484,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6931},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\rwlock.rs","byte_start":11026576,"byte_end":11026582,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6931},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11067870,"byte_end":11067881,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":6549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11073903,"byte_end":11073914,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074000,"byte_end":11074011,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074144,"byte_end":11074155,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074180,"byte_end":11074191,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\task\\atomic_waker.rs","byte_start":11074287,"byte_end":11074292,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":601}},"from":{"krate":2,"index":9770},"to":{"krate":0,"index":6572}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075580,"byte_end":11075588,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075696,"byte_end":11075704,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11075909,"byte_end":11075917,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076050,"byte_end":11076058,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076174,"byte_end":11076182,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":1803}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076207,"byte_end":11076215,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11076451,"byte_end":11076459,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":6595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088152,"byte_end":11088160,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088377,"byte_end":11088385,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":6595},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11088997,"byte_end":11089005,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":6939},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089312,"byte_end":11089320,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":6939},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\once_cell.rs","byte_start":11089336,"byte_end":11089344,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":6939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11093929,"byte_end":11093938,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":6987},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094118,"byte_end":11094127,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":6987},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094320,"byte_end":11094329,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":6993},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11094491,"byte_end":11094500,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":6993},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11095706,"byte_end":11095714,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":6956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11098709,"byte_end":11098717,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":6956},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11098901,"byte_end":11098909,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":6956},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11099279,"byte_end":11099285,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":6963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11102122,"byte_end":11102128,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":6963},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\sync\\watch.rs","byte_start":11102318,"byte_end":11102321,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":6969},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\yield_now.rs","byte_start":11115488,"byte_end":11115496,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7201},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11126418,"byte_end":11126426,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11134419,"byte_end":11134427,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7206},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11134566,"byte_end":11134574,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7206},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11135539,"byte_end":11135547,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7206},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11135628,"byte_end":11135636,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7206},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11136503,"byte_end":11136511,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8214},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11137396,"byte_end":11137402,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\local.rs","byte_start":11137953,"byte_end":11137956,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":632}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":3796}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11141463,"byte_end":11141471,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11143971,"byte_end":11143979,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144187,"byte_end":11144195,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7115},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144497,"byte_end":11144512,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11144789,"byte_end":11144794,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7148},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145335,"byte_end":11145350,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":8158},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145627,"byte_end":11145628,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7167},"to":{"krate":0,"index":7165}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145813,"byte_end":11145824,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11145968,"byte_end":11145979,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\task_local.rs","byte_start":11146126,"byte_end":11146137,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7218},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\task\\unconstrained.rs","byte_start":11146539,"byte_end":11146552,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":8125},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\clock.rs","byte_start":11150977,"byte_end":11150982,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11175877,"byte_end":11175886,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7258},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11175970,"byte_end":11175979,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7258},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11176125,"byte_end":11176134,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11183152,"byte_end":11183162,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7632},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11183187,"byte_end":11183197,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7632},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11184638,"byte_end":11184649,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188172,"byte_end":11188189,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7292},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188490,"byte_end":11188507,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188746,"byte_end":11188757,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7643},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188782,"byte_end":11188793,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7643},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11188832,"byte_end":11188843,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7643},"to":{"krate":0,"index":672}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11189361,"byte_end":11189371,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11192372,"byte_end":11192383,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\entry.rs","byte_start":11194774,"byte_end":11194784,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7632},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11195273,"byte_end":11195279,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11195947,"byte_end":11195953,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\handle.rs","byte_start":11197997,"byte_end":11198003,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7659},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11210601,"byte_end":11210606,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\level.rs","byte_start":11216674,"byte_end":11216679,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7354},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":11199624,"byte_end":11199629,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11222813,"byte_end":11222818,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\sleep.rs","byte_start":11224921,"byte_end":11224926,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8097},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11160207,"byte_end":11160216,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11161852,"byte_end":11161858,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11164877,"byte_end":11164883,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11169603,"byte_end":11169609,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7679},"to":{"krate":0,"index":614}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11170322,"byte_end":11170328,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7679},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11170454,"byte_end":11170459,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\driver\\mod.rs","byte_start":11171172,"byte_end":11171177,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7453},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227077,"byte_end":11227082,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7694},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11227323,"byte_end":11227328,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228228,"byte_end":11228233,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7694},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228260,"byte_end":11228265,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7694},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228727,"byte_end":11228734,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228822,"byte_end":11228829,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7723},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11228973,"byte_end":11228980,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7723},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\error.rs","byte_start":11229017,"byte_end":11229022,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":681}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11230564,"byte_end":11230571,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":7737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234668,"byte_end":11234675,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234804,"byte_end":11234811,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"kind":{"Impl":{"id":684}},"from":{"krate":1,"index":8172},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11234926,"byte_end":11234933,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":2146}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235098,"byte_end":11235105,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":2177}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235210,"byte_end":11235217,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":2151}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235358,"byte_end":11235365,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":2151}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235526,"byte_end":11235533,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":2181}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\instant.rs","byte_start":11235640,"byte_end":11235647,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7737},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\interval.rs","byte_start":11239825,"byte_end":11239833,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11244839,"byte_end":11244846,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\time\\timeout.rs","byte_start":11245384,"byte_end":11245391,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":8059},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\bit.rs","byte_start":11246036,"byte_end":11246040,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\bit.rs","byte_start":11247468,"byte_end":11247472,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7912},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11251415,"byte_end":11251422,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":7804}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252622,"byte_end":11252626,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7812},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252663,"byte_end":11252667,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7812},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252704,"byte_end":11252714,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":7819},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252751,"byte_end":11252761,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":7819},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252798,"byte_end":11252801,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11252838,"byte_end":11252841,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11253457,"byte_end":11253461,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":7794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259056,"byte_end":11259060,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":7794},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259199,"byte_end":11259208,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":7800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259775,"byte_end":11259784,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":7800},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11259942,"byte_end":11259945,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260207,"byte_end":11260210,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260477,"byte_end":11260480,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":7806},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11260601,"byte_end":11260605,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":7812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263112,"byte_end":11263116,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":7812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263460,"byte_end":11263464,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":7812},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11263812,"byte_end":11263816,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":7812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11264178,"byte_end":11264188,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":7819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11265125,"byte_end":11265135,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":7819},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11265278,"byte_end":11265283,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":7823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11266166,"byte_end":11266170,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":7840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11266730,"byte_end":11266735,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":7844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\slab.rs","byte_start":11267061,"byte_end":11267068,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":7922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141135,"byte_end":141145,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":141215,"byte_end":141225,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143803,"byte_end":143811,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143848,"byte_end":143856,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":143907,"byte_end":143917,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":144152,"byte_end":144162,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147168,"byte_end":147178,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147535,"byte_end":147545,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":147732,"byte_end":147742,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148019,"byte_end":148029,"line_start":246,"line_end":246,"column_start":19,"column_end":29},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148262,"byte_end":148266,"line_start":255,"line_end":255,"column_start":36,"column_end":40},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":7937},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":148920,"byte_end":148930,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":149299,"byte_end":149310,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":7950},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":149990,"byte_end":149998,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\linked_list.rs","byte_start":151581,"byte_end":151589,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\rand.rs","byte_start":162113,"byte_end":162121,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":7967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\wake.rs","byte_start":11274349,"byte_end":11274353,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":7981}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\wake.rs","byte_start":11274356,"byte_end":11274360,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":7981}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\wake.rs","byte_start":11274671,"byte_end":11274679,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":8005},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276767,"byte_end":11276774,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":8021},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276811,"byte_end":11276818,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":8021},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11276856,"byte_end":11276865,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":8025},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277051,"byte_end":11277058,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":8021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277692,"byte_end":11277701,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":8025},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277833,"byte_end":11277842,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":8025},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.6.0\\src\\util\\try_lock.rs","byte_start":11277964,"byte_end":11277973,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":8025},"to":{"krate":2,"index":2305}}]}