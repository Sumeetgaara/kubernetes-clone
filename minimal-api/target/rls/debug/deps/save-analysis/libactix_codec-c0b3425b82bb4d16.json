{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","actix_codec","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c0b3425b82bb4d16","-C","extra-filename=-c0b3425b82bb4d16","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libbitflags-84862d17cf3fde2a.rmeta","--extern","bytes=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libbytes-73309e1d71596ccc.rmeta","--extern","futures_core=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_core-fea1f369c965b980.rmeta","--extern","futures_sink=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_sink-dddb01dae31d0637.rmeta","--extern","log=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\liblog-ed5c7f46bce7543e.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","tokio=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio-6c62e3f9383d26d1.rmeta","--extern","tokio_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio_util-443beee595dea061.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libactix_codec-c0b3425b82bb4d16.rmeta"},"prelude":{"crate_id":{"name":"actix_codec","disambiguator":[8990754410211704460,12877137111493302719]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","num":13,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","num":14,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","num":15,"id":{"name":"futures_sink","disambiguator":[515912780452359249,12260783340991913177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":16,"id":{"name":"tokio","disambiguator":[15777653144183176769,4693441693860258843]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":17,"id":{"name":"parking_lot","disambiguator":[1224731206818607947,8274570389156333617]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":18,"id":{"name":"instant","disambiguator":[10972160104268623451,38161244861932589]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":20,"id":{"name":"lock_api","disambiguator":[15484776610555560225,15771875980741458219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":21,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":22,"id":{"name":"parking_lot_core","disambiguator":[12147149162451523530,17445122813354820842]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":23,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":24,"id":{"name":"winapi","disambiguator":[17139452019433532343,10675329208674910202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":25,"id":{"name":"mio","disambiguator":[7585860473837607364,4113253111412003378]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","num":26,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":27,"id":{"name":"ntapi","disambiguator":[8332894067688972475,3623011014639684307]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":28,"id":{"name":"miow","disambiguator":[10688051237561102895,17093109702316105309]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":30,"id":{"name":"once_cell","disambiguator":[15770301717060747651,17430418598302640687]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":31,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":32,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","num":33,"id":{"name":"tokio_util","disambiguator":[1105334072777583550,5455173661179889109]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","num":34,"id":{"name":"bitflags","disambiguator":[5710033096448610905,11540835774118402762]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":0,"byte_end":780,"line_start":1,"line_end":23,"column_start":1,"column_end":39}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":584,"byte_end":594,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":584,"byte_end":594,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":619,"byte_end":625,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":627,"byte_end":638,"line_start":19,"line_end":19,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":142},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":662,"byte_end":671,"line_start":21,"line_end":21,"column_start":21,"column_end":30},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":193},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":673,"byte_end":683,"line_start":21,"line_end":21,"column_start":32,"column_end":42},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":685,"byte_end":692,"line_start":21,"line_end":21,"column_start":44,"column_end":51},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":372},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":723,"byte_end":730,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":732,"byte_end":739,"line_start":22,"line_end":22,"column_start":38,"column_end":45},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":338},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":766,"byte_end":779,"line_start":23,"line_end":23,"column_start":25,"column_end":38},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":0,"byte_end":780,"line_start":1,"line_end":23,"column_start":1,"column_end":39},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":103},{"krate":0,"index":322},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Codec utilities for working with framed protocols.","sig":null,"attributes":[{"value":"/ Codec utilities for working with framed protocols.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":59,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":128,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as `transports`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":204,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":259,"byte_end":291,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":292,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"deny(rust_2018_idioms, nonstandard_style, future_incompatible)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":330,"byte_end":396,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src/lib.rs","byte_start":397,"byte_end":419,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":973,"byte_end":983,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::bcodec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bytes codec.","sig":null,"attributes":[{"value":"/ Bytes codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":863,"byte_end":879,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":880,"byte_end":883,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Reads/Writes chunks of bytes from a stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":884,"byte_end":931,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2531,"byte_end":2537,"line_start":32,"line_end":32,"column_start":16,"column_end":22},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3034,"byte_end":3037,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and\n `Sink`; grouping this into a single object is often useful for layering\n things like gzip or TLS, which require both read and write access to the\n underlying object.\n","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2765,"byte_end":2834,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2839,"byte_end":2914,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2919,"byte_end":2995,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3000,"byte_end":3022,"line_start":50,"line_end":50,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3372,"byte_end":3381,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"codec_ref","qualname":"<Framed<T, U>>::codec_ref","value":"pub fn codec_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3312,"byte_end":3360,"line_start":63,"line_end":63,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3496,"byte_end":3505,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3428,"byte_end":3484,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3846,"byte_end":3852,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"io_ref","qualname":"<Framed<T, U>>::io_ref","value":"pub fn io_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3564,"byte_end":3627,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3632,"byte_end":3644,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3649,"byte_end":3652,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3657,"byte_end":3732,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3737,"byte_end":3807,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3812,"byte_end":3834,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4159,"byte_end":4165,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"io_mut","qualname":"<Framed<T, U>>::io_mut","value":"pub fn io_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3896,"byte_end":3957,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3962,"byte_end":3965,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3970,"byte_end":4045,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4050,"byte_end":4120,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4125,"byte_end":4147,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4305,"byte_end":4311,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"io_pin","qualname":"<Framed<T, U>>::io_pin","value":"pub fn io_pin(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Pin` of a mutable reference to the underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Returns a `Pin` of a mutable reference to the underlying I/O stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4221,"byte_end":4293,"line_start":92,"line_end":92,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4434,"byte_end":4451,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"is_read_buf_empty","qualname":"<Framed<T, U>>::is_read_buf_empty","value":"pub fn is_read_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if read buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if read buffer is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4388,"byte_end":4422,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4560,"byte_end":4578,"line_start":103,"line_end":103,"column_start":12,"column_end":30},"name":"is_write_buf_empty","qualname":"<Framed<T, U>>::is_write_buf_empty","value":"pub fn is_write_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4513,"byte_end":4548,"line_start":102,"line_end":102,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4687,"byte_end":4704,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"is_write_buf_full","qualname":"<Framed<T, U>>::is_write_buf_full","value":"pub fn is_write_buf_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is full.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is full.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4641,"byte_end":4675,"line_start":107,"line_end":107,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4915,"byte_end":4929,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"is_write_ready","qualname":"<Framed<T, U>>::is_write_ready","value":"pub fn is_write_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if framed is able to write more data.","sig":null,"attributes":[{"value":"/ Check if framed is able to write more data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4768,"byte_end":4815,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4820,"byte_end":4823,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ `Framed` object considers ready if there is free space in write buffer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4828,"byte_end":4903,"line_start":114,"line_end":114,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":5068,"byte_end":5081,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"replace_codec","qualname":"<Framed<T, U>>::replace_codec","value":"pub fn replace_codec<U2>(Self, U2) -> Framed<T, U2>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":4992,"byte_end":5056,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":5384,"byte_end":5395,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"into_map_io","qualname":"<Framed<T, U>>::into_map_io","value":"pub fn into_map_io<F, T2>(Self, F) -> Framed<T2, U> where F: Fn(T) -> T2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different io.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different io.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":5311,"byte_end":5372,"line_start":130,"line_end":130,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":5752,"byte_end":5766,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"into_map_codec","qualname":"<Framed<T, U>>::into_map_codec","value":"pub fn into_map_codec<F, U2>(Self, F) -> Framed<T, U2> where F: Fn(U) -> U2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":5676,"byte_end":5740,"line_start":144,"line_end":144,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6135,"byte_end":6140,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"write","qualname":"<Framed<T, U>>::write","value":"pub fn write<I>(Pin<&mut Self>, I) -> Result<(), <U as Encoder<I>>::Error>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Serialize item and Write to the inner buffer\n","sig":null,"attributes":[{"value":"/ Serialize item and Write to the inner buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6075,"byte_end":6123,"line_start":160,"line_end":160,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6632,"byte_end":6641,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"next_item","qualname":"<Framed<T, U>>::next_item","value":"pub fn next_item(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<<U as Decoder>::Item, U::Error>>> where T: AsyncRead,\nU: Decoder","parent":null,"children":[],"decl_id":null,"docs":" Try to read underlying I/O stream and decode item.\n","sig":null,"attributes":[{"value":"/ Try to read underlying I/O stream and decode item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6566,"byte_end":6620,"line_start":176,"line_end":176,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":9040,"byte_end":9045,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"flush","qualname":"<Framed<T, U>>::flush","value":"pub fn flush<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer to underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer to underlying I/O stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":8980,"byte_end":9028,"line_start":237,"line_end":237,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10076,"byte_end":10081,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"close","qualname":"<Framed<T, U>>::close","value":"pub fn close<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer and shutdown underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer and shutdown underlying I/O stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10006,"byte_end":10064,"line_start":273,"line_end":273,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12176,"byte_end":12186,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and\n `Sink`; grouping this into a single object is often useful for layering\n things like gzip or TLS, which require both read and write access to the\n underlying object.","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11735,"byte_end":11804,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11809,"byte_end":11884,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11889,"byte_end":11965,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11970,"byte_end":11992,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11997,"byte_end":12000,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ These objects take a stream, a read buffer and a write buffer. These","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12005,"byte_end":12077,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ fields can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12082,"byte_end":12164,"line_start":350,"line_end":350,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12758,"byte_end":12768,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12437,"byte_end":12510,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12515,"byte_end":12556,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12561,"byte_end":12564,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12569,"byte_end":12644,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12649,"byte_end":12719,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":12724,"byte_end":12746,"line_start":366,"line_end":366,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13234,"byte_end":13245,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13002,"byte_end":13073,"line_start":378,"line_end":378,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13074,"byte_end":13144,"line_start":379,"line_end":379,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13145,"byte_end":13205,"line_start":380,"line_end":380,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13331,"byte_end":13333,"line_start":384,"line_end":384,"column_start":9,"column_end":11},"name":"io","qualname":"::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13258,"byte_end":13322,"line_start":383,"line_end":383,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13365,"byte_end":13370,"line_start":387,"line_end":387,"column_start":9,"column_end":14},"name":"codec","qualname":"::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13343,"byte_end":13356,"line_start":386,"line_end":386,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13435,"byte_end":13443,"line_start":390,"line_end":390,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13380,"byte_end":13426,"line_start":389,"line_end":389,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13530,"byte_end":13539,"line_start":393,"line_end":393,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13460,"byte_end":13521,"line_start":392,"line_end":392,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13660,"byte_end":13663,"line_start":400,"line_end":400,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13608,"byte_end":13648,"line_start":399,"line_end":399,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13955,"byte_end":13968,"line_start":411,"line_end":411,"column_start":12,"column_end":25},"name":"with_read_buf","qualname":"<FramedParts<T, U>>::with_read_buf","value":"pub fn with_read_buf(T, U, BytesMut) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FramedParts` with read buffer\n","sig":null,"attributes":[{"value":"/ Create a new `FramedParts` with read buffer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13896,"byte_end":13943,"line_start":410,"line_end":410,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":1010,"byte_end":1020,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":1239,"byte_end":1249,"line_start":22,"line_end":22,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2693,"byte_end":2699,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3293,"byte_end":3299,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6056,"byte_end":6062,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10458,"byte_end":10464,"line_start":289,"line_end":289,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10710,"byte_end":10716,"line_start":301,"line_end":301,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11443,"byte_end":11449,"line_start":330,"line_end":330,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11716,"byte_end":11722,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13584,"byte_end":13595,"line_start":398,"line_end":398,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":1010,"byte_end":1020,"line_start":12,"line_end":12,"column_start":25,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":115},"to":{"krate":33,"index":383}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\bcodec.rs","byte_start":1239,"byte_end":1249,"line_start":22,"line_end":22,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":115},"to":{"krate":33,"index":372}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":2693,"byte_end":2699,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":3293,"byte_end":3299,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":6056,"byte_end":6062,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10458,"byte_end":10464,"line_start":289,"line_end":289,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":213},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":10710,"byte_end":10716,"line_start":301,"line_end":301,"column_start":27,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":213},"to":{"krate":15,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11443,"byte_end":11449,"line_start":330,"line_end":330,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":213},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":11716,"byte_end":11722,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\actix-codec-0.4.0\\src\\framed.rs","byte_start":13584,"byte_end":13595,"line_start":398,"line_end":398,"column_start":12,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}}]}