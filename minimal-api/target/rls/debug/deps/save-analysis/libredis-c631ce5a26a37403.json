{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0","program":"C:\\Users\\sumba\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","redis","--edition=2018","C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"acl\"","--cfg","feature=\"aio\"","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"geospatial\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"script\"","--cfg","feature=\"sha1\"","--cfg","feature=\"streams\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-comp\"","--cfg","feature=\"tokio-util\"","-C","metadata=c631ce5a26a37403","-C","extra-filename=-c631ce5a26a37403","--out-dir","c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps","--extern","async_trait=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\async_trait-478ba8dcee91ea12.dll","--extern","bytes=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libbytes-73309e1d71596ccc.rmeta","--extern","combine=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libcombine-c979140fcfdfbcd4.rmeta","--extern","dtoa=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libdtoa-5ce207036d3814b5.rmeta","--extern","futures_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libfutures_util-c80da42cdb000663.rmeta","--extern","itoa=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libitoa-0e160a860a213415.rmeta","--extern","percent_encoding=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpercent_encoding-b723eb148ddbf608.rmeta","--extern","pin_project_lite=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","sha1=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libsha1-4368b15c28404adb.rmeta","--extern","tokio=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio-6c62e3f9383d26d1.rmeta","--extern","tokio_util=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libtokio_util-443beee595dea061.rmeta","--extern","url=c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\liburl-b9ad97e29326a6ab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sumba\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\sumba\\OneDrive\\Documents\\Rust Projects\\minimal-api\\target\\rls\\debug\\deps\\libredis-c631ce5a26a37403.rmeta"},"prelude":{"crate_id":{"name":"redis","disambiguator":[11569468760878561646,6145702727345171134]},"crate_root":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src","external_crates":[{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":13,"id":{"name":"async_trait","disambiguator":[4490671840251934393,4339927374632084438]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":14,"id":{"name":"combine","disambiguator":[4119427876424468827,6971008847720636335]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","num":15,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":17,"id":{"name":"tokio","disambiguator":[15777653144183176769,4693441693860258843]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":18,"id":{"name":"parking_lot","disambiguator":[1224731206818607947,8274570389156333617]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":19,"id":{"name":"instant","disambiguator":[10972160104268623451,38161244861932589]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":20,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":21,"id":{"name":"lock_api","disambiguator":[15484776610555560225,15771875980741458219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":22,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":23,"id":{"name":"parking_lot_core","disambiguator":[12147149162451523530,17445122813354820842]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":24,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":25,"id":{"name":"winapi","disambiguator":[17139452019433532343,10675329208674910202]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":26,"id":{"name":"mio","disambiguator":[7585860473837607364,4113253111412003378]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":27,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":28,"id":{"name":"ntapi","disambiguator":[8332894067688972475,3623011014639684307]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":29,"id":{"name":"miow","disambiguator":[10688051237561102895,17093109702316105309]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":30,"id":{"name":"once_cell","disambiguator":[15770301717060747651,17430418598302640687]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":31,"id":{"name":"memchr","disambiguator":[10376916603583829576,13535672077133078675]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":32,"id":{"name":"num_cpus","disambiguator":[2787027942999916424,4053049493363749538]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":33,"id":{"name":"futures_util","disambiguator":[15412685905520555047,12957580911016733995]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":34,"id":{"name":"futures_core","disambiguator":[9608591567283742507,14385650956686405177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":35,"id":{"name":"pin_utils","disambiguator":[16300649773639005160,2183150147065103287]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":36,"id":{"name":"futures_macro","disambiguator":[7720451070280873958,8835195757274450142]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":37,"id":{"name":"futures_task","disambiguator":[7711611736422884463,430324380527108256]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":38,"id":{"name":"futures_sink","disambiguator":[515912780452359249,12260783340991913177]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":39,"id":{"name":"slab","disambiguator":[6325241530448311626,10372903147419273267]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":40,"id":{"name":"futures_io","disambiguator":[342809477498788530,10410540121957329431]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","num":41,"id":{"name":"tokio_util","disambiguator":[1105334072777583550,5455173661179889109]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","num":42,"id":{"name":"sha1","disambiguator":[16888322545950089269,13281797537102794219]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","num":43,"id":{"name":"itoa","disambiguator":[11741280253805075010,2704109228158362469]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":44,"id":{"name":"url","disambiguator":[2420765382997054495,8338742729553175312]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":45,"id":{"name":"matches","disambiguator":[14949904096307642766,2517617068080244165]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":46,"id":{"name":"form_urlencoded","disambiguator":[2131293899114811763,2003199335985441037]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":47,"id":{"name":"percent_encoding","disambiguator":[14612011609199210034,10334071456787701777]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":48,"id":{"name":"idna","disambiguator":[14159155932121851321,10807165729459225254]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":49,"id":{"name":"unicode_bidi","disambiguator":[6484047981150100831,10192420418295851794]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":50,"id":{"name":"unicode_normalization","disambiguator":[10835524218481899114,6821307144502876620]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":51,"id":{"name":"tinyvec","disambiguator":[6300920138310372466,16795190105106960142]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","num":52,"id":{"name":"tinyvec_macros","disambiguator":[2754611380552878541,774889871944910723]}},{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","num":53,"id":{"name":"dtoa","disambiguator":[1272589908937130907,17307579483981711092]}}],"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":14495,"line_start":1,"line_end":435,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12810,"byte_end":12816,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12839,"byte_end":12842,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"alias_span":null,"name":"cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12844,"byte_end":12856,"line_start":362,"line_end":362,"column_start":27,"column_end":39},"alias_span":null,"name":"pack_command","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12858,"byte_end":12862,"line_start":362,"line_end":362,"column_start":41,"column_end":45},"alias_span":null,"name":"pipe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12864,"byte_end":12867,"line_start":362,"line_end":362,"column_start":47,"column_end":50},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12869,"byte_end":12872,"line_start":362,"line_end":362,"column_start":52,"column_end":55},"alias_span":null,"name":"Cmd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12874,"byte_end":12878,"line_start":362,"line_end":362,"column_start":57,"column_end":61},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12880,"byte_end":12888,"line_start":362,"line_end":362,"column_start":63,"column_end":71},"alias_span":null,"name":"Pipeline","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12917,"byte_end":12925,"line_start":363,"line_end":363,"column_start":27,"column_end":35},"alias_span":null,"name":"Commands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12927,"byte_end":12938,"line_start":363,"line_end":363,"column_start":37,"column_end":48},"alias_span":null,"name":"ControlFlow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12940,"byte_end":12951,"line_start":363,"line_end":363,"column_start":50,"column_end":61},"alias_span":null,"name":"LposOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12953,"byte_end":12967,"line_start":363,"line_end":363,"column_start":63,"column_end":77},"alias_span":null,"name":"PubSubCommands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13003,"byte_end":13018,"line_start":365,"line_end":365,"column_start":5,"column_end":20},"alias_span":null,"name":"parse_redis_url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13020,"byte_end":13031,"line_start":365,"line_end":365,"column_start":22,"column_end":33},"alias_span":null,"name":"transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13033,"byte_end":13043,"line_start":365,"line_end":365,"column_start":35,"column_end":45},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13045,"byte_end":13059,"line_start":365,"line_end":365,"column_start":47,"column_end":61},"alias_span":null,"name":"ConnectionAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13061,"byte_end":13075,"line_start":365,"line_end":365,"column_start":63,"column_end":77},"alias_span":null,"name":"ConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13077,"byte_end":13091,"line_start":365,"line_end":365,"column_start":79,"column_end":93},"alias_span":null,"name":"ConnectionLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13097,"byte_end":13115,"line_start":366,"line_end":366,"column_start":5,"column_end":23},"alias_span":null,"name":"IntoConnectionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13117,"byte_end":13120,"line_start":366,"line_end":366,"column_start":25,"column_end":28},"alias_span":null,"name":"Msg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13122,"byte_end":13128,"line_start":366,"line_end":366,"column_start":30,"column_end":36},"alias_span":null,"name":"PubSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13157,"byte_end":13174,"line_start":368,"line_end":368,"column_start":25,"column_end":42},"alias_span":null,"name":"parse_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13176,"byte_end":13182,"line_start":368,"line_end":368,"column_start":44,"column_end":50},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13286,"byte_end":13292,"line_start":371,"line_end":371,"column_start":25,"column_end":31},"alias_span":null,"name":"Script","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13294,"byte_end":13310,"line_start":371,"line_end":371,"column_start":33,"column_end":49},"alias_span":null,"name":"ScriptInvocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13367,"byte_end":13383,"line_start":375,"line_end":375,"column_start":5,"column_end":21},"alias_span":null,"name":"from_redis_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13409,"byte_end":13418,"line_start":378,"line_end":378,"column_start":5,"column_end":14},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13450,"byte_end":13464,"line_start":381,"line_end":381,"column_start":5,"column_end":19},"alias_span":null,"name":"FromRedisValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13492,"byte_end":13500,"line_start":384,"line_end":384,"column_start":5,"column_end":13},"alias_span":null,"name":"InfoDict","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13506,"byte_end":13521,"line_start":385,"line_end":385,"column_start":5,"column_end":20},"alias_span":null,"name":"NumericBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13558,"byte_end":13568,"line_start":388,"line_end":388,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13574,"byte_end":13585,"line_start":389,"line_end":389,"column_start":5,"column_end":16},"alias_span":null,"name":"RedisResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13591,"byte_end":13601,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"alias_span":null,"name":"RedisWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13607,"byte_end":13618,"line_start":391,"line_end":391,"column_start":5,"column_end":16},"alias_span":null,"name":"ToRedisArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13649,"byte_end":13654,"line_start":394,"line_end":394,"column_start":5,"column_end":10},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13757,"byte_end":13766,"line_start":400,"line_end":400,"column_start":10,"column_end":19},"alias_span":null,"name":"AsyncIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13778,"byte_end":13791,"line_start":400,"line_end":400,"column_start":31,"column_end":44},"alias_span":null,"name":"AsyncCommands","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13801,"byte_end":13824,"line_start":400,"line_end":400,"column_start":54,"column_end":77},"alias_span":null,"name":"parse_redis_value_async","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13833,"byte_end":13844,"line_start":400,"line_end":400,"column_start":86,"column_end":97},"alias_span":null,"name":"RedisFuture","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":14495,"line_start":1,"line_end":435,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":76},{"krate":0,"index":345},{"krate":0,"index":408},{"krate":0,"index":483},{"krate":0,"index":539},{"krate":0,"index":670},{"krate":0,"index":727},{"krate":0,"index":856},{"krate":0,"index":945},{"krate":0,"index":984}],"decl_id":null,"docs":" redis-rs is a rust implementation of a Redis client library.  It exposes\n a general purpose interface to Redis and also provides specific helpers for\n commonly used functionality.","sig":null,"attributes":[{"value":"/ redis-rs is a rust implementation of a Redis client library.  It exposes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ a general purpose interface to Redis and also provides specific helpers for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ commonly used functionality.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":157,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":190,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The crate is called `redis` and you can depend on it via cargo:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":194,"byte_end":261,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":262,"byte_end":265,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":266,"byte_end":276,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":277,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ version = \"*\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":302,"byte_end":319,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":320,"byte_end":327,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":328,"byte_end":331,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to use the git version:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":332,"byte_end":371,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":372,"byte_end":375,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```ini","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":376,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ [dependencies.redis]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":387,"byte_end":411,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/ git = \"https://github.com/mitsuhiko/redis-rs.git\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":412,"byte_end":465,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":466,"byte_end":473,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":474,"byte_end":477,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Basic Operation","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":478,"byte_end":499,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":500,"byte_end":503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ redis-rs exposes two API levels: a low- and a high-level part.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":504,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ The high-level part does not expose all the functionality of redis and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":571,"byte_end":645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ might take some liberties in how it speaks the protocol.  The low-level","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":646,"byte_end":721,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ part of the API allows you to express any request on the redis level.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":722,"byte_end":795,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ You can fluently switch between both API levels at any point.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":796,"byte_end":861,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":862,"byte_end":865,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Connection Handling","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":866,"byte_end":892,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":893,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For connecting to redis you can use a client object which then can produce","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":897,"byte_end":975,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ actual connections.  Connections and clients as well as results of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":976,"byte_end":1046,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ connections and clients are considered `ConnectionLike` objects and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1047,"byte_end":1118,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ can be used anywhere a request is made.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1119,"byte_end":1162,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1163,"byte_end":1166,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The full canonical way to get a connection is to create a client and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1167,"byte_end":1239,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ to ask for a connection from it:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1240,"byte_end":1276,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1277,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1281,"byte_end":1299,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1300,"byte_end":1323,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1324,"byte_end":1327,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1328,"byte_end":1377,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/     let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1378,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/     let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1443,"byte_end":1490,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1491,"byte_end":1494,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     /* do something here */","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1495,"byte_end":1526,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1527,"byte_end":1530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1531,"byte_end":1545,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1546,"byte_end":1551,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1552,"byte_end":1559,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1560,"byte_end":1563,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1564,"byte_end":1588,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1589,"byte_end":1592,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ There are a few features defined that can enable additional functionality","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1593,"byte_end":1670,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ if so desired.  Some of them are turned on by default.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1671,"byte_end":1729,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1730,"byte_end":1733,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * `acl`: enables acl support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1734,"byte_end":1787,"line_start":55,"line_end":55,"column_start":1,"column_end":54}},{"value":"/ * `aio`: enables async IO support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1788,"byte_end":1846,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ * `geospatial`: enables geospatial support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1847,"byte_end":1914,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ * `script`: enables script support (enabled by default)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1915,"byte_end":1974,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/ * `r2d2`: enables r2d2 connection pool support (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":1975,"byte_end":2036,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ * `cluster`: enables redis cluster support (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2037,"byte_end":2094,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ * `tokio-comp`: enables support for tokio (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2095,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ * `connection-manager`: enables support for automatic reconnection (optional)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2152,"byte_end":2233,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2234,"byte_end":2237,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Connection Parameters","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2238,"byte_end":2266,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2267,"byte_end":2270,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ redis-rs knows different ways to define where a connection should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2271,"byte_end":2340,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ go.  The parameter to `Client::open` needs to implement the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2341,"byte_end":2404,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ `IntoConnectionInfo` trait of which there are three implementations:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2405,"byte_end":2477,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2478,"byte_end":2481,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * string slices in `redis://` URL format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2482,"byte_end":2527,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ * URL objects from the redis-url crate.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2528,"byte_end":2571,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ * `ConnectionInfo` objects.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2572,"byte_end":2603,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2604,"byte_end":2607,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The URL format is `redis://[<username>][:<passwd>@]<hostname>[:port][/<db>]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2608,"byte_end":2688,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2689,"byte_end":2692,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If Unix socket support is available you can use a unix URL in this format:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2693,"byte_end":2771,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2772,"byte_end":2775,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `redis+unix:///<path>[?db=<db>[&pass=<password>][&user=<username>]]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2776,"byte_end":2848,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2849,"byte_end":2852,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ For compatibility with some other redis libraries, the \"unix\" scheme","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2853,"byte_end":2925,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ is also supported:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2926,"byte_end":2948,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2949,"byte_end":2952,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ `unix:///<path>[?db=<db>][&pass=<password>][&user=<username>]]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":2953,"byte_end":3020,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3021,"byte_end":3024,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Executing Low-Level Commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3025,"byte_end":3060,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3061,"byte_end":3064,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ To execute low-level commands you can use the `cmd` function which allows","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3065,"byte_end":3142,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ you to build redis requests.  Once you have configured a command object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3143,"byte_end":3218,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ to your liking you can send a query into any `ConnectionLike` object:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3219,"byte_end":3292,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3293,"byte_end":3296,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3297,"byte_end":3315,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3316,"byte_end":3392,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/     let _ : () = redis::cmd(\"SET\").arg(\"my_key\").arg(42).query(con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3393,"byte_end":3466,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3467,"byte_end":3481,"line_start":94,"line_end":94,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3482,"byte_end":3487,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3488,"byte_end":3495,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3496,"byte_end":3499,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Upon querying the return value is a result object.  If you do not care","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3500,"byte_end":3574,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ about the actual return value (other than that it is not a failure)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3575,"byte_end":3646,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ you can always type annotate it to the unit type `()`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3647,"byte_end":3705,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3706,"byte_end":3709,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that commands with a sub-command (like \"MEMORY USAGE\", \"ACL WHOAMI\",","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3710,"byte_end":3787,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ \"LATENCY HISTORY\", etc) must specify the sub-command as a separate `arg`:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3788,"byte_end":3865,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3866,"byte_end":3869,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3870,"byte_end":3888,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<usize> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3889,"byte_end":3968,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/     // This will result in a server error: \"unknown command `MEMORY USAGE`\"","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":3969,"byte_end":4048,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/     // because \"USAGE\" is technically a sub-command of \"MEMORY\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4049,"byte_end":4117,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/     redis::cmd(\"MEMORY USAGE\").arg(\"my_key\").query(con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4118,"byte_end":4179,"line_start":109,"line_end":109,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4180,"byte_end":4183,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     // However, this will work as you'd expect","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4184,"byte_end":4234,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/     redis::cmd(\"MEMORY\").arg(\"USAGE\").arg(\"my_key\").query(con)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4235,"byte_end":4301,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4302,"byte_end":4307,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4308,"byte_end":4315,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4316,"byte_end":4319,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Executing High-Level Commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4320,"byte_end":4356,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4357,"byte_end":4360,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The high-level interface is similar.  For it to become available you","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4361,"byte_end":4433,"line_start":118,"line_end":118,"column_start":1,"column_end":73}},{"value":"/ need to use the `Commands` trait in which case all `ConnectionLike`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4434,"byte_end":4505,"line_start":119,"line_end":119,"column_start":1,"column_end":72}},{"value":"/ objects the library provides will also have high-level methods which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4506,"byte_end":4578,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ make working with the protocol easier:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4579,"byte_end":4621,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4622,"byte_end":4625,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4626,"byte_end":4644,"line_start":123,"line_end":123,"column_start":1,"column_end":19}},{"value":"/ extern crate redis;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4645,"byte_end":4668,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4669,"byte_end":4693,"line_start":125,"line_end":125,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4694,"byte_end":4697,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ fn do_something(con: &mut redis::Connection) -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4698,"byte_end":4774,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/     let _ : () = con.set(\"my_key\", 42)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4775,"byte_end":4819,"line_start":128,"line_end":128,"column_start":1,"column_end":45}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4820,"byte_end":4834,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4835,"byte_end":4840,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4841,"byte_end":4848,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4849,"byte_end":4852,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Note that high-level commands are work in progress and many are still","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4853,"byte_end":4926,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ missing!","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4927,"byte_end":4939,"line_start":134,"line_end":134,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4940,"byte_end":4943,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ## Type Conversions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4944,"byte_end":4967,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4968,"byte_end":4971,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Because redis inherently is mostly type-less and the protocol is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":4972,"byte_end":5044,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ exactly friendly to developers, this library provides flexible support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5045,"byte_end":5119,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ for casting values to the intended results.  This is driven through the `FromRedisValue` and `ToRedisArgs` traits.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5120,"byte_end":5238,"line_start":140,"line_end":140,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5239,"byte_end":5242,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The `arg` method of the command will accept a wide range of types through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5243,"byte_end":5320,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ the `ToRedisArgs` trait and the `query` method of a command can convert the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5321,"byte_end":5400,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ value to what you expect the function to return through the `FromRedisValue`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5401,"byte_end":5481,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ trait.  This is quite flexible and allows vectors, tuples, hashsets, hashmaps","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5482,"byte_end":5563,"line_start":145,"line_end":145,"column_start":1,"column_end":82}},{"value":"/ as well as optional values:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5564,"byte_end":5595,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5596,"byte_end":5599,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5600,"byte_end":5618,"line_start":148,"line_end":148,"column_start":1,"column_end":19}},{"value":"/ # use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5619,"byte_end":5645,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/ # use std::collections::{HashMap, HashSet};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5646,"byte_end":5693,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5694,"byte_end":5745,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5746,"byte_end":5816,"line_start":152,"line_end":152,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5817,"byte_end":5870,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/ let count : i32 = con.get(\"my_counter\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5871,"byte_end":5916,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/ let count = con.get(\"my_counter\").unwrap_or(0i32);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5917,"byte_end":5971,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/ let k : Option<String> = con.get(\"missing_key\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":5972,"byte_end":6025,"line_start":156,"line_end":156,"column_start":1,"column_end":54}},{"value":"/ let name : String = con.get(\"my_name\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6026,"byte_end":6070,"line_start":157,"line_end":157,"column_start":1,"column_end":45}},{"value":"/ let bin : Vec<u8> = con.get(\"my_binary\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6071,"byte_end":6117,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/ let map : HashMap<String, i32> = con.hgetall(\"my_hash\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6118,"byte_end":6179,"line_start":159,"line_end":159,"column_start":1,"column_end":62}},{"value":"/ let keys : Vec<String> = con.hkeys(\"my_hash\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6180,"byte_end":6231,"line_start":160,"line_end":160,"column_start":1,"column_end":52}},{"value":"/ let mems : HashSet<i32> = con.smembers(\"my_set\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6232,"byte_end":6286,"line_start":161,"line_end":161,"column_start":1,"column_end":55}},{"value":"/ let (k1, k2) : (String, String) = con.get(&[\"k1\", \"k2\"])?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6287,"byte_end":6349,"line_start":162,"line_end":162,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6350,"byte_end":6362,"line_start":163,"line_end":163,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6363,"byte_end":6370,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6371,"byte_end":6378,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6379,"byte_end":6382,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ # Iteration Protocol","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6383,"byte_end":6407,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6408,"byte_end":6411,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ In addition to sending a single query, iterators are also supported.  When","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6412,"byte_end":6490,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ used with regular bulk responses they don't give you much over querying and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6491,"byte_end":6570,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ converting into a vector (both use a vector internally) but they can also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6571,"byte_end":6648,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"/ be used with `SCAN` like commands in which case iteration will send more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6649,"byte_end":6725,"line_start":172,"line_end":172,"column_start":1,"column_end":77}},{"value":"/ queries until the cursor is exhausted:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6726,"byte_end":6768,"line_start":173,"line_end":173,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6769,"byte_end":6772,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6773,"byte_end":6791,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6792,"byte_end":6843,"line_start":176,"line_end":176,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6844,"byte_end":6914,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6915,"byte_end":6968,"line_start":178,"line_end":178,"column_start":1,"column_end":54}},{"value":"/ let mut iter : redis::Iter<isize> = redis::cmd(\"SSCAN\").arg(\"my_set\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":6969,"byte_end":7042,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/     .cursor_arg(0).clone().iter(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7043,"byte_end":7090,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7091,"byte_end":7110,"line_start":181,"line_end":181,"column_start":1,"column_end":20}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7111,"byte_end":7148,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7149,"byte_end":7154,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7155,"byte_end":7169,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7170,"byte_end":7177,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7178,"byte_end":7181,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ As you can see the cursor argument needs to be defined with `cursor_arg`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7182,"byte_end":7258,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ instead of `arg` so that the library knows which argument needs updating","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7259,"byte_end":7335,"line_start":188,"line_end":188,"column_start":1,"column_end":77}},{"value":"/ as the query is run for more items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7336,"byte_end":7375,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7376,"byte_end":7379,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Pipelining","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7380,"byte_end":7396,"line_start":191,"line_end":191,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7397,"byte_end":7400,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ In addition to simple queries you can also send command pipelines.  This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7401,"byte_end":7477,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ is provided through the `pipe` function.  It works very similar to sending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7478,"byte_end":7556,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/ individual commands but you can send more than one in one go.  This also","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7557,"byte_end":7633,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ allows you to ignore individual results so that matching on the end result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7634,"byte_end":7712,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ is easier:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7713,"byte_end":7727,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7728,"byte_end":7731,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7732,"byte_end":7750,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7751,"byte_end":7802,"line_start":200,"line_end":200,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7803,"byte_end":7873,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7874,"byte_end":7927,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7928,"byte_end":7973,"line_start":203,"line_end":203,"column_start":1,"column_end":46}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":7974,"byte_end":8023,"line_start":204,"line_end":204,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8024,"byte_end":8073,"line_start":205,"line_end":205,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8074,"byte_end":8106,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8107,"byte_end":8157,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8158,"byte_end":8172,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8173,"byte_end":8180,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8181,"byte_end":8184,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ If you want the pipeline to be wrapped in a `MULTI`/`EXEC` block you can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8185,"byte_end":8261,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/ easily do that by switching the pipeline into `atomic` mode.  From the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8262,"byte_end":8336,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ caller's point of view nothing changes, the pipeline itself will take","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8337,"byte_end":8410,"line_start":213,"line_end":213,"column_start":1,"column_end":74}},{"value":"/ care of the rest for you:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8411,"byte_end":8440,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8441,"byte_end":8444,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8445,"byte_end":8463,"line_start":216,"line_end":216,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8464,"byte_end":8515,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8516,"byte_end":8586,"line_start":218,"line_end":218,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8587,"byte_end":8640,"line_start":219,"line_end":219,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8641,"byte_end":8686,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8687,"byte_end":8704,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8705,"byte_end":8754,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8755,"byte_end":8804,"line_start":223,"line_end":223,"column_start":1,"column_end":50}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8805,"byte_end":8837,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8838,"byte_end":8888,"line_start":225,"line_end":225,"column_start":1,"column_end":51}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8889,"byte_end":8903,"line_start":226,"line_end":226,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8904,"byte_end":8911,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8912,"byte_end":8915,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ You can also use high-level commands on pipelines:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8916,"byte_end":8970,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8971,"byte_end":8974,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8975,"byte_end":8993,"line_start":231,"line_end":231,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":8994,"byte_end":9045,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9046,"byte_end":9116,"line_start":233,"line_end":233,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9117,"byte_end":9170,"line_start":234,"line_end":234,"column_start":1,"column_end":54}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9171,"byte_end":9216,"line_start":235,"line_end":235,"column_start":1,"column_end":46}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9217,"byte_end":9234,"line_start":236,"line_end":236,"column_start":1,"column_end":18}},{"value":"/     .set(\"key_1\", 42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9235,"byte_end":9269,"line_start":237,"line_end":237,"column_start":1,"column_end":35}},{"value":"/     .set(\"key_2\", 43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9270,"byte_end":9304,"line_start":238,"line_end":238,"column_start":1,"column_end":35}},{"value":"/     .get(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9305,"byte_end":9326,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/     .get(\"key_2\").query(&mut con)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9327,"byte_end":9366,"line_start":240,"line_end":240,"column_start":1,"column_end":40}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9367,"byte_end":9381,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9382,"byte_end":9389,"line_start":242,"line_end":242,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9390,"byte_end":9393,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Transactions","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9394,"byte_end":9412,"line_start":244,"line_end":244,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9413,"byte_end":9416,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Transactions are available through atomic pipelines.  In order to use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9417,"byte_end":9490,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ them in a more simple way you can use the `transaction` function of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9491,"byte_end":9564,"line_start":247,"line_end":247,"column_start":1,"column_end":74}},{"value":"/ connection:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9565,"byte_end":9580,"line_start":248,"line_end":248,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9581,"byte_end":9584,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9585,"byte_end":9603,"line_start":250,"line_end":250,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9604,"byte_end":9655,"line_start":251,"line_end":251,"column_start":1,"column_end":52}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9656,"byte_end":9680,"line_start":252,"line_end":252,"column_start":1,"column_end":25}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9681,"byte_end":9751,"line_start":253,"line_end":253,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9752,"byte_end":9805,"line_start":254,"line_end":254,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9806,"byte_end":9830,"line_start":255,"line_end":255,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9831,"byte_end":9913,"line_start":256,"line_end":256,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9914,"byte_end":9958,"line_start":257,"line_end":257,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9959,"byte_end":9971,"line_start":258,"line_end":258,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":9972,"byte_end":10015,"line_start":259,"line_end":259,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10016,"byte_end":10048,"line_start":260,"line_end":260,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10049,"byte_end":10057,"line_start":261,"line_end":261,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10058,"byte_end":10113,"line_start":262,"line_end":262,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10114,"byte_end":10128,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10129,"byte_end":10136,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10137,"byte_end":10140,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ For more information see the `transaction` function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10141,"byte_end":10197,"line_start":266,"line_end":266,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10198,"byte_end":10201,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # PubSub","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10202,"byte_end":10214,"line_start":268,"line_end":268,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10215,"byte_end":10218,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Pubsub is currently work in progress but provided through the `PubSub`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10219,"byte_end":10293,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"/ connection object.  Due to the fact that Rust does not have support","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10294,"byte_end":10365,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ for async IO in libnative yet, the API does not provide a way to","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10366,"byte_end":10434,"line_start":272,"line_end":272,"column_start":1,"column_end":69}},{"value":"/ read messages with any form of timeout yet.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10435,"byte_end":10482,"line_start":273,"line_end":273,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10483,"byte_end":10486,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Example usage:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10487,"byte_end":10505,"line_start":275,"line_end":275,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10506,"byte_end":10509,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10510,"byte_end":10528,"line_start":277,"line_end":277,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10529,"byte_end":10580,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10581,"byte_end":10641,"line_start":279,"line_end":279,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10642,"byte_end":10685,"line_start":280,"line_end":280,"column_start":1,"column_end":44}},{"value":"/ let mut pubsub = con.as_pubsub();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10686,"byte_end":10723,"line_start":281,"line_end":281,"column_start":1,"column_end":38}},{"value":"/ pubsub.subscribe(\"channel_1\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10724,"byte_end":10759,"line_start":282,"line_end":282,"column_start":1,"column_end":36}},{"value":"/ pubsub.subscribe(\"channel_2\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10760,"byte_end":10795,"line_start":283,"line_end":283,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10796,"byte_end":10799,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10800,"byte_end":10810,"line_start":285,"line_end":285,"column_start":1,"column_end":11}},{"value":"/     let msg = pubsub.get_message()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10811,"byte_end":10851,"line_start":286,"line_end":286,"column_start":1,"column_end":41}},{"value":"/     let payload : String = msg.get_payload()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10852,"byte_end":10902,"line_start":287,"line_end":287,"column_start":1,"column_end":51}},{"value":"/     println!(\"channel '{}': {}\", msg.get_channel_name(), payload);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10903,"byte_end":10973,"line_start":288,"line_end":288,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10974,"byte_end":10979,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10980,"byte_end":10987,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10988,"byte_end":10995,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":10996,"byte_end":10999,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":11640,"byte_end":11643,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12543,"byte_end":12546,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ [`futures`]:https://crates.io/crates/futures","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12547,"byte_end":12595,"line_start":352,"line_end":352,"column_start":1,"column_end":49}},{"value":"/ [`tokio`]:https://tokio.rs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12596,"byte_end":12626,"line_start":353,"line_end":353,"column_start":1,"column_end":31}},{"value":"deny(non_camel_case_types)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12628,"byte_end":12658,"line_start":355,"line_end":355,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":12659,"byte_end":12681,"line_start":356,"line_end":356,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"acl","qualname":"::acl","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":1204},{"krate":0,"index":1257},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":62},{"krate":0,"index":1259},{"krate":0,"index":1271},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":66}],"decl_id":null,"docs":" Defines types to use with the ACL commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13863,"byte_end":13886,"line_start":405,"line_end":405,"column_start":1,"column_end":24}},{"value":"/ Defines types to use with the ACL commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":14801,"byte_end":14848,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15493,"byte_end":15495,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"On","qualname":"::acl::Rule::On","value":"Rule::On","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Enable the user: it is possible to authenticate as this user.\n","sig":null,"attributes":[{"value":"/ Enable the user: it is possible to authenticate as this user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15423,"byte_end":15488,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15654,"byte_end":15657,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Off","qualname":"::acl::Rule::Off","value":"Rule::Off","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Disable the user: it's no longer possible to authenticate with this\n user, however the already authenticated connections will still work.\n","sig":null,"attributes":[{"value":"/ Disable the user: it's no longer possible to authenticate with this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15501,"byte_end":15572,"line_start":23,"line_end":23,"column_start":5,"column_end":76}},{"value":"/ user, however the already authenticated connections will still work.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15577,"byte_end":15649,"line_start":24,"line_end":24,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15731,"byte_end":15741,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"AddCommand","qualname":"::acl::Rule::AddCommand","value":"Rule::AddCommand(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Add the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Add the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15664,"byte_end":15726,"line_start":27,"line_end":27,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15825,"byte_end":15838,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"RemoveCommand","qualname":"::acl::Rule::RemoveCommand","value":"Rule::RemoveCommand(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Remove the command to the list of commands the user can call.\n","sig":null,"attributes":[{"value":"/ Remove the command to the list of commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15755,"byte_end":15820,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15924,"byte_end":15935,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"AddCategory","qualname":"::acl::Rule::AddCategory","value":"Rule::AddCategory(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Add all the commands in such category to be called by the user.\n","sig":null,"attributes":[{"value":"/ Add all the commands in such category to be called by the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15852,"byte_end":15919,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16017,"byte_end":16031,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"RemoveCategory","qualname":"::acl::Rule::RemoveCategory","value":"Rule::RemoveCategory(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Remove the commands from such category the client can call.\n","sig":null,"attributes":[{"value":"/ Remove the commands from such category the client can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15949,"byte_end":16012,"line_start":33,"line_end":33,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16179,"byte_end":16190,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"AllCommands","qualname":"::acl::Rule::AllCommands","value":"Rule::AllCommands","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Alias for `+@all`. Note that it implies the ability to execute all the\n future commands loaded via the modules system.\n","sig":null,"attributes":[{"value":"/ Alias for `+@all`. Note that it implies the ability to execute all the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16045,"byte_end":16119,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ future commands loaded via the modules system.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16124,"byte_end":16174,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16223,"byte_end":16233,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"NoCommands","qualname":"::acl::Rule::NoCommands","value":"Rule::NoCommands","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Alias for `-@all`.\n","sig":null,"attributes":[{"value":"/ Alias for `-@all`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16196,"byte_end":16218,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16310,"byte_end":16317,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"AddPass","qualname":"::acl::Rule::AddPass","value":"Rule::AddPass(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Add this password to the list of valid password for the user.\n","sig":null,"attributes":[{"value":"/ Add this password to the list of valid password for the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16240,"byte_end":16305,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16394,"byte_end":16404,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"RemovePass","qualname":"::acl::Rule::RemovePass","value":"Rule::RemovePass(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Remove this password from the list of valid passwords.\n","sig":null,"attributes":[{"value":"/ Remove this password from the list of valid passwords.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16331,"byte_end":16389,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16499,"byte_end":16512,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"AddHashedPass","qualname":"::acl::Rule::AddHashedPass","value":"Rule::AddHashedPass(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Add this SHA-256 hash value to the list of valid passwords for the user.\n","sig":null,"attributes":[{"value":"/ Add this SHA-256 hash value to the list of valid passwords for the user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16418,"byte_end":16494,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16595,"byte_end":16611,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"RemoveHashedPass","qualname":"::acl::Rule::RemoveHashedPass","value":"Rule::RemoveHashedPass(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Remove this hash value from from the list of valid passwords\n","sig":null,"attributes":[{"value":"/ Remove this hash value from from the list of valid passwords","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16526,"byte_end":16590,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16804,"byte_end":16810,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"NoPass","qualname":"::acl::Rule::NoPass","value":"Rule::NoPass","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" All the set passwords of the user are removed, and the user is flagged\n as requiring no password: it means that every password will work\n against this user.\n","sig":null,"attributes":[{"value":"/ All the set passwords of the user are removed, and the user is flagged","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16625,"byte_end":16699,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ as requiring no password: it means that every password will work","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16704,"byte_end":16772,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ against this user.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16777,"byte_end":16799,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16899,"byte_end":16908,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"ResetPass","qualname":"::acl::Rule::ResetPass","value":"Rule::ResetPass","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Flush the list of allowed passwords. Moreover removes the _nopass_ status.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed passwords. Moreover removes the _nopass_ status.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16816,"byte_end":16894,"line_start":53,"line_end":53,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16988,"byte_end":16995,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Pattern","qualname":"::acl::Rule::Pattern","value":"Rule::Pattern(String)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Add a pattern of keys that can be mentioned as part of commands.\n","sig":null,"attributes":[{"value":"/ Add a pattern of keys that can be mentioned as part of commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":16915,"byte_end":16983,"line_start":56,"line_end":56,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17033,"byte_end":17040,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"AllKeys","qualname":"::acl::Rule::AllKeys","value":"Rule::AllKeys","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Alias for `~*`.\n","sig":null,"attributes":[{"value":"/ Alias for `~*`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17009,"byte_end":17028,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17095,"byte_end":17104,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"ResetKeys","qualname":"::acl::Rule::ResetKeys","value":"Rule::ResetKeys","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Flush the list of allowed keys patterns.\n","sig":null,"attributes":[{"value":"/ Flush the list of allowed keys patterns.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17046,"byte_end":17090,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17275,"byte_end":17280,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Reset","qualname":"::acl::Rule::Reset","value":"Rule::Reset","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.\n The user returns to the same state it has immediately after its creation.\n","sig":null,"attributes":[{"value":"/ Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17111,"byte_end":17188,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"/ The user returns to the same state it has immediately after its creation.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17193,"byte_end":17270,"line_start":64,"line_end":64,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15412,"byte_end":15416,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Rule","qualname":"::acl::Rule","value":"pub enum Rule {\n\n    /// Enable the user: it is possible to authenticate as this user.\n    On,\n\n    /// Disable the user: it's no longer possible to authenticate with this\n    /// user, however the already authenticated connections will still work.\n    Off,\n\n    /// Add the command to the list of commands the user can call.\n    AddCommand(String),\n\n    /// Remove the command to the list of commands the user can call.\n    RemoveCommand(String),\n\n    /// Add all the commands in such category to be called by the user.\n    AddCategory(String),\n\n    /// Remove the commands from such category the client can call.\n    RemoveCategory(String),\n\n    /// Alias for `+@all`. Note that it implies the ability to execute all the\n    /// future commands loaded via the modules system.\n    AllCommands,\n\n    /// Alias for `-@all`.\n    NoCommands,\n\n    /// Add this password to the list of valid password for the user.\n    AddPass(String),\n\n    /// Remove this password from the list of valid passwords.\n    RemovePass(String),\n\n    /// Add this SHA-256 hash value to the list of valid passwords for the user.\n    AddHashedPass(String),\n\n    /// Remove this hash value from from the list of valid passwords\n    RemoveHashedPass(String),\n\n    /// All the set passwords of the user are removed, and the user is flagged\n    /// as requiring no password: it means that every password will work\n    /// against this user.\n    NoPass,\n\n    /// Flush the list of allowed passwords. Moreover removes the _nopass_ status.\n    ResetPass,\n\n    /// Add a pattern of keys that can be mentioned as part of commands.\n    Pattern(String),\n\n    /// Alias for `~*`.\n    AllKeys,\n\n    /// Flush the list of allowed keys patterns.\n    ResetKeys,\n\n    /// Performs the following actions: `resetpass`, `resetkeys`, `off`, `-@all`.\n    /// The user returns to the same state it has immediately after its creation.\n    Reset,\n}","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248}],"decl_id":null,"docs":" ACL rules are used in order to activate or remove a flag, or to perform a\n given change to the user ACL, which under the hood are just single words.\n","sig":null,"attributes":[{"value":"/ ACL rules are used in order to activate or remove a flag, or to perform a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15215,"byte_end":15292,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ given change to the user ACL, which under the hood are just single words.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":15293,"byte_end":15370,"line_start":18,"line_end":18,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18888,"byte_end":18895,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"AclInfo","qualname":"::acl::AclInfo","value":"AclInfo { flags, passwords, commands, keys }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":" An info dictionary type storing Redis ACL information as multiple `Rule`.\n This type collects key/value data returned by the [`ACL GETUSER`][1] command.","sig":null,"attributes":[{"value":"/ An info dictionary type storing Redis ACL information as multiple `Rule`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18634,"byte_end":18711,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ This type collects key/value data returned by the [`ACL GETUSER`][1] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18712,"byte_end":18793,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18794,"byte_end":18797,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/acl-getuser","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18798,"byte_end":18844,"line_start":105,"line_end":105,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19319,"byte_end":19324,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"flags","qualname":"::acl::AclInfo::flags","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Describes flag rules for the user. Represented by [`Rule::On`][1],\n [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and\n [`Rule::NoPass`][5].","sig":null,"attributes":[{"value":"/ Describes flag rules for the user. Represented by [`Rule::On`][1],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18902,"byte_end":18972,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ [`Rule::Off`][2], [`Rule::AllKeys`][3], [`Rule::AllCommands`][4] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":18977,"byte_end":19049,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ [`Rule::NoPass`][5].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19054,"byte_end":19078,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19083,"byte_end":19086,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.On","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19091,"byte_end":19127,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ [2]: ./enum.Rule.html#variant.Off","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19132,"byte_end":19169,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ [3]: ./enum.Rule.html#variant.AllKeys","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19174,"byte_end":19215,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ [4]: ./enum.Rule.html#variant.AllCommands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19220,"byte_end":19265,"line_start":115,"line_end":115,"column_start":5,"column_end":50}},{"value":"/ [5]: ./enum.Rule.html#variant.NoPass","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19270,"byte_end":19310,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19488,"byte_end":19497,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"name":"passwords","qualname":"::acl::AclInfo::passwords","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","sig":null,"attributes":[{"value":"/ Describes the user's passwords. Represented by [`Rule::AddHashedPass`][1].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19341,"byte_end":19419,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19424,"byte_end":19427,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddHashedPass","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19432,"byte_end":19479,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1262},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19940,"byte_end":19948,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"commands","qualname":"::acl::AclInfo::commands","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Describes capabilities of which commands the user can call.\n Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],\n [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","sig":null,"attributes":[{"value":"/ Describes capabilities of which commands the user can call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19514,"byte_end":19577,"line_start":122,"line_end":122,"column_start":5,"column_end":68}},{"value":"/ Represented by [`Rule::AddCommand`][1], [`Rule::AddCategory`][2],","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19582,"byte_end":19651,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ [`Rule::RemoveCommand`][3] and [`Rule::RemoveCategory`][4].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19656,"byte_end":19719,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19724,"byte_end":19727,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.AddCommand","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19732,"byte_end":19776,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/ [2]: ./enum.Rule.html#variant.AddCategory","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19781,"byte_end":19826,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"/ [3]: ./enum.Rule.html#variant.RemoveCommand","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19831,"byte_end":19878,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ [4]: ./enum.Rule.html#variant.RemoveCategory","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19883,"byte_end":19931,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20130,"byte_end":20134,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"keys","qualname":"::acl::AclInfo::keys","value":"std::vec::Vec<acl::Rule>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Describes patterns of keys which the user can access. Represented by\n [`Rule::Pattern`][1].","sig":null,"attributes":[{"value":"/ Describes patterns of keys which the user can access. Represented by","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":19965,"byte_end":20037,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ [`Rule::Pattern`][1].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20042,"byte_end":20067,"line_start":132,"line_end":132,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20072,"byte_end":20075,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [1]: ./enum.Rule.html#variant.Pattern","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20080,"byte_end":20121,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aio","qualname":"::aio","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":1280},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":1289},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":201},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":216},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":275},{"krate":0,"index":281},{"krate":0,"index":1293},{"krate":0,"index":1300},{"krate":0,"index":286},{"krate":0,"index":294},{"krate":0,"index":305},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":325},{"krate":0,"index":333}],"decl_id":null,"docs":" Adds experimental async IO support to redis.\n","sig":null,"attributes":[{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13948,"byte_end":13971,"line_start":409,"line_end":409,"column_start":1,"column_end":24}},{"value":"/ Adds experimental async IO support to redis.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":26390,"byte_end":26438,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tokio","qualname":"::aio::tokio","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":1273}],"decl_id":null,"docs":" Enables the tokio compatibility\n","sig":null,"attributes":[{"value":"/ Enables the tokio compatibility","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27671,"byte_end":27706,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27707,"byte_end":27737,"line_start":50,"line_end":50,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29885,"byte_end":29896,"line_start":126,"line_end":126,"column_start":11,"column_end":22},"name":"AsyncStream","qualname":"::aio::AsyncStream","value":"AsyncStream: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Trait for objects that implements `AsyncRead` and `AsyncWrite`\n","sig":null,"attributes":[{"value":"/ Trait for objects that implements `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29808,"byte_end":29874,"line_start":125,"line_end":125,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30035,"byte_end":30041,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"PubSub","qualname":"::aio::PubSub","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a `PubSub` connection.\n","sig":null,"attributes":[{"value":"/ Represents a `PubSub` connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29986,"byte_end":30023,"line_start":129,"line_end":129,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30296,"byte_end":30305,"line_start":141,"line_end":141,"column_start":18,"column_end":27},"name":"subscribe","qualname":"<PubSub<C>>::subscribe","value":"pub async fn subscribe<T: ToRedisArgs, '_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30246,"byte_end":30278,"line_start":140,"line_end":140,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30555,"byte_end":30565,"line_start":149,"line_end":149,"column_start":18,"column_end":28},"name":"psubscribe","qualname":"<PubSub<C>>::psubscribe","value":"pub async fn psubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30490,"byte_end":30537,"line_start":148,"line_end":148,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30803,"byte_end":30814,"line_start":157,"line_end":157,"column_start":18,"column_end":29},"name":"unsubscribe","qualname":"<PubSub<C>>::unsubscribe","value":"pub async fn unsubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30753,"byte_end":30785,"line_start":156,"line_end":156,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31066,"byte_end":31078,"line_start":165,"line_end":165,"column_start":18,"column_end":30},"name":"punsubscribe","qualname":"<PubSub<C>>::punsubscribe","value":"pub async fn punsubscribe<T: ToRedisArgs, '_>(&'_ mut Self, T)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31001,"byte_end":31048,"line_start":164,"line_end":164,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31491,"byte_end":31501,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"on_message","qualname":"<PubSub<C>>::on_message","value":"pub fn on_message<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions.","sig":null,"attributes":[{"value":"/ Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31268,"byte_end":31339,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31344,"byte_end":31347,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an appropriate type through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31352,"byte_end":31445,"line_start":174,"line_end":174,"column_start":5,"column_end":98}},{"value":"/ the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31450,"byte_end":31479,"line_start":175,"line_end":175,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":32109,"byte_end":32124,"line_start":189,"line_end":189,"column_start":12,"column_end":27},"name":"into_on_message","qualname":"<PubSub<C>>::into_on_message","value":"pub fn into_on_message(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions consuming it.","sig":null,"attributes":[{"value":"/ Returns [`Stream`] of [`Msg`]s from this [`PubSub`]s subscriptions consuming it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31743,"byte_end":31827,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31832,"byte_end":31835,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an appropriate type through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31840,"byte_end":31933,"line_start":185,"line_end":185,"column_start":5,"column_end":98}},{"value":"/ the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31938,"byte_end":31967,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/ This can be useful in cases where the stream needs to be returned or held by something other","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":31972,"byte_end":32068,"line_start":187,"line_end":187,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":32435,"byte_end":32450,"line_start":197,"line_end":197,"column_start":18,"column_end":33},"name":"into_connection","qualname":"<PubSub<C>>::into_connection","value":"pub async fn into_connection(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Exits from `PubSub` mode and converts [`PubSub`] into [`Connection`].\n","sig":null,"attributes":[{"value":"/ Exits from `PubSub` mode and converts [`PubSub`] into [`Connection`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":32344,"byte_end":32417,"line_start":196,"line_end":196,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":32605,"byte_end":32615,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"Connection","qualname":"::aio::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"decl_id":null,"docs":" Represents a stateful redis TCP connection.\n","sig":null,"attributes":[{"value":"/ Represents a stateful redis TCP connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":32546,"byte_end":32593,"line_start":204,"line_end":204,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":34059,"byte_end":34070,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"into_pubsub","qualname":"<Connection<C>>::into_pubsub","value":"pub fn into_pubsub(Self) -> PubSub<C>","parent":null,"children":[],"decl_id":null,"docs":" Converts this [`Connection`] into [`PubSub`].\n","sig":null,"attributes":[{"value":"/ Converts this [`Connection`] into [`PubSub`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":33998,"byte_end":34047,"line_start":260,"line_end":260,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40727,"byte_end":40741,"line_start":454,"line_end":454,"column_start":11,"column_end":25},"name":"ConnectionLike","qualname":"::aio::ConnectionLike","value":"ConnectionLike","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" An async abstraction over connections.\n","sig":null,"attributes":[{"value":"/ An async abstraction over connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40674,"byte_end":40716,"line_start":453,"line_end":453,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40868,"byte_end":40886,"line_start":457,"line_end":457,"column_start":8,"column_end":26},"name":"req_packed_command","qualname":"::aio::ConnectionLike::req_packed_command","value":"pub fn req_packed_command<'a>(&'a mut Self, &'a Cmd) -> RedisFuture","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n reads the single response from it.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40748,"byte_end":40817,"line_start":455,"line_end":455,"column_start":5,"column_end":74}},{"value":"/ reads the single response from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40822,"byte_end":40860,"line_start":456,"line_end":456,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41122,"byte_end":41141,"line_start":462,"line_end":462,"column_start":8,"column_end":27},"name":"req_packed_commands","qualname":"::aio::ConnectionLike::req_packed_commands","value":"pub fn req_packed_commands<'a>(&'a mut Self, &'a crate::Pipeline, usize,\n                               usize) -> RedisFuture","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Sends multiple already encoded (packed) command into the TCP socket\n and reads `count` responses from it.  This is used to implement\n pipelining.\n","sig":null,"attributes":[{"value":"/ Sends multiple already encoded (packed) command into the TCP socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":40951,"byte_end":41022,"line_start":459,"line_end":459,"column_start":5,"column_end":76}},{"value":"/ and reads `count` responses from it.  This is used to implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41027,"byte_end":41094,"line_start":460,"line_end":460,"column_start":5,"column_end":72}},{"value":"/ pipelining.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41099,"byte_end":41114,"line_start":461,"line_end":461,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41539,"byte_end":41545,"line_start":473,"line_end":473,"column_start":8,"column_end":14},"name":"get_db","qualname":"::aio::ConnectionLike::get_db","value":"pub fn get_db(&Self) -> i64","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Returns the database this connection is bound to.  Note that this\n information might be unreliable because it's initially cached and\n also might be incorrect if the connection like object is not\n actually connected.\n","sig":null,"attributes":[{"value":"/ Returns the database this connection is bound to.  Note that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41291,"byte_end":41360,"line_start":469,"line_end":469,"column_start":5,"column_end":74}},{"value":"/ information might be unreliable because it's initially cached and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41365,"byte_end":41434,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ also might be incorrect if the connection like object is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41439,"byte_end":41503,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41508,"byte_end":41531,"line_start":472,"line_end":472,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":50483,"byte_end":50504,"line_start":766,"line_end":766,"column_start":12,"column_end":33},"name":"MultiplexedConnection","qualname":"::aio::MultiplexedConnection","value":"MultiplexedConnection {  }","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"decl_id":null,"docs":" A connection object which can be cloned, allowing requests to be be sent concurrently\n on the same underlying connection (tcp/unix socket).\n","sig":null,"attributes":[{"value":"/ A connection object which can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":50308,"byte_end":50397,"line_start":763,"line_end":763,"column_start":1,"column_end":90}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":50398,"byte_end":50454,"line_start":764,"line_end":764,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geo","qualname":"::geo","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":364},{"krate":0,"index":1356},{"krate":0,"index":1366},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":385},{"krate":0,"index":1369},{"krate":0,"index":1376},{"krate":0,"index":387},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":406}],"decl_id":null,"docs":" Defines types to use with the geospatial commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":14033,"byte_end":14063,"line_start":413,"line_end":413,"column_start":1,"column_end":31}},{"value":"/ Defines types to use with the geospatial commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":64475,"byte_end":64529,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65088,"byte_end":65094,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Meters","qualname":"::geo::Unit::Meters","value":"Unit::Meters","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Represents meters.\n","sig":null,"attributes":[{"value":"/ Represents meters.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65061,"byte_end":65083,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65131,"byte_end":65141,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"Kilometers","qualname":"::geo::Unit::Kilometers","value":"Unit::Kilometers","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Represents kilometers.\n","sig":null,"attributes":[{"value":"/ Represents kilometers.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65100,"byte_end":65126,"line_start":23,"line_end":23,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65173,"byte_end":65178,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Miles","qualname":"::geo::Unit::Miles","value":"Unit::Miles","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Represents miles.\n","sig":null,"attributes":[{"value":"/ Represents miles.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65147,"byte_end":65168,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65209,"byte_end":65213,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Feet","qualname":"::geo::Unit::Feet","value":"Unit::Feet","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Represents feed.\n","sig":null,"attributes":[{"value":"/ Represents feed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65184,"byte_end":65204,"line_start":27,"line_end":27,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65050,"byte_end":65054,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Unit","qualname":"::geo::Unit","value":"pub enum Unit {\n\n    /// Represents meters.\n    Meters,\n\n    /// Represents kilometers.\n    Kilometers,\n\n    /// Represents miles.\n    Miles,\n\n    /// Represents feed.\n    Feet,\n}","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362}],"decl_id":null,"docs":" Units used by [`geo_dist`][1] and [`geo_radius`][2].","sig":null,"attributes":[{"value":"/ Units used by [`geo_dist`][1] and [`geo_radius`][2].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":64882,"byte_end":64938,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":64939,"byte_end":64942,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_dist","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":64943,"byte_end":64990,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":64991,"byte_end":65040,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65964,"byte_end":65969,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"Coord","qualname":"::geo::Coord","value":"Coord { longitude, latitude }","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":" A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]\n to parse response from Redis.","sig":null,"attributes":[{"value":"/ A coordinate (longitude, latitude). Can be used with [`geo_pos`][1]","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65570,"byte_end":65641,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ to parse response from Redis.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65642,"byte_end":65675,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65676,"byte_end":65679,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_pos","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65680,"byte_end":65726,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65727,"byte_end":65730,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `T` is the type of the every value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65731,"byte_end":65770,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65771,"byte_end":65774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * You may want to use either `f64` or `f32` if you want to perform mathematical operations.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65775,"byte_end":65870,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ * To keep the raw value from Redis, use `String`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65871,"byte_end":65924,"line_start":54,"line_end":54,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66001,"byte_end":66010,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"longitude","qualname":"::geo::Coord::longitude","value":"T","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Longitude\n","sig":null,"attributes":[{"value":"/ Longitude","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65979,"byte_end":65992,"line_start":57,"line_end":57,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66040,"byte_end":66048,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"latitude","qualname":"::geo::Coord::latitude","value":"T","parent":{"krate":0,"index":1356},"children":[],"decl_id":null,"docs":" Latitude\n","sig":null,"attributes":[{"value":"/ Latitude","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66019,"byte_end":66031,"line_start":59,"line_end":59,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66144,"byte_end":66151,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"lon_lat","qualname":"<Coord<T>>::lon_lat","value":"pub fn lon_lat(T, T) -> Coord<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Coord with the (longitude, latitude)\n","sig":null,"attributes":[{"value":"/ Create a new Coord with the (longitude, latitude)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66079,"byte_end":66132,"line_start":64,"line_end":64,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67405,"byte_end":67413,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"Unsorted","qualname":"::geo::RadiusOrder::Unsorted","value":"RadiusOrder::Unsorted","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Don't sort the results\n","sig":null,"attributes":[{"value":"/ Don't sort the results","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67374,"byte_end":67400,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67506,"byte_end":67509,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"Asc","qualname":"::geo::RadiusOrder::Asc","value":"RadiusOrder::Asc","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Sort returned items from the nearest to the farthest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the nearest to the farthest, relative to the center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67420,"byte_end":67501,"line_start":110,"line_end":110,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67602,"byte_end":67606,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Desc","qualname":"::geo::RadiusOrder::Desc","value":"RadiusOrder::Desc","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Sort returned items from the farthest to the nearest, relative to the center.\n","sig":null,"attributes":[{"value":"/ Sort returned items from the farthest to the nearest, relative to the center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67516,"byte_end":67597,"line_start":113,"line_end":113,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67356,"byte_end":67367,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"name":"RadiusOrder","qualname":"::geo::RadiusOrder","value":"pub enum RadiusOrder {\n\n    /// Don't sort the results\n    Unsorted,\n\n    /// Sort returned items from the nearest to the farthest, relative to the center.\n    Asc,\n\n    /// Sort returned items from the farthest to the nearest, relative to the center.\n    Desc,\n}","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383}],"decl_id":null,"docs":" Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options to sort results from [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67161,"byte_end":67244,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67245,"byte_end":67248,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67249,"byte_end":67293,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67294,"byte_end":67346,"line_start":105,"line_end":105,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68494,"byte_end":68507,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"RadiusOptions","qualname":"::geo::RadiusOptions","value":"RadiusOptions {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"decl_id":null,"docs":" Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","sig":null,"attributes":[{"value":"/ Options for the [GEORADIUS][1] and [GEORADIUSBYMEMBER][2] commands","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67715,"byte_end":67785,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67786,"byte_end":67789,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [1]: https://redis.io/commands/georadius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67790,"byte_end":67834,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/ [2]: https://redis.io/commands/georadiusbymember","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67835,"byte_end":67887,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67888,"byte_end":67891,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67892,"byte_end":67905,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67906,"byte_end":67909,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67910,"byte_end":67928,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ use redis::{Commands, RedisResult};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67929,"byte_end":67968,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ use redis::geo::{RadiusSearchResult, RadiusOptions, RadiusOrder, Unit};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67969,"byte_end":68044,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ fn nearest_in_radius(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68045,"byte_end":68070,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/     con: &mut redis::Connection,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68071,"byte_end":68107,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/     key: &str,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68108,"byte_end":68126,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/     longitude: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68127,"byte_end":68150,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/     latitude: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68151,"byte_end":68173,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/     meters: f64,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68174,"byte_end":68194,"line_start":138,"line_end":138,"column_start":1,"column_end":21}},{"value":"/     limit: usize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68195,"byte_end":68216,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ ) -> RedisResult<Vec<RadiusSearchResult>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68217,"byte_end":68264,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     let opts = RadiusOptions::default()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68265,"byte_end":68308,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/         .order(RadiusOrder::Asc)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68309,"byte_end":68345,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/         .limit(limit);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68346,"byte_end":68372,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/     con.geo_radius(key, longitude, latitude, meters, Unit::Meters, opts)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68373,"byte_end":68449,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68450,"byte_end":68455,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68456,"byte_end":68463,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68766,"byte_end":68771,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"limit","qualname":"<RadiusOptions>::limit","value":"pub fn limit(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the results to the first N matching items.\n","sig":null,"attributes":[{"value":"/ Limit the results to the first N matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68702,"byte_end":68754,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69059,"byte_end":69068,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"with_dist","qualname":"<RadiusOptions>::with_dist","value":"pub fn with_dist(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance of the returned items from the specified center.\n The distance is returned in the same unit as the unit specified as the\n radius argument of the command.\n","sig":null,"attributes":[{"value":"/ Return the distance of the returned items from the specified center.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68856,"byte_end":68928,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ The distance is returned in the same unit as the unit specified as the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68933,"byte_end":69007,"line_start":165,"line_end":165,"column_start":5,"column_end":79}},{"value":"/ radius argument of the command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69012,"byte_end":69047,"line_start":166,"line_end":166,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69227,"byte_end":69237,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"with_coord","qualname":"<RadiusOptions>::with_coord","value":"pub fn with_coord(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the `longitude, latitude` coordinates of the matching items.\n","sig":null,"attributes":[{"value":"/ Return the `longitude, latitude` coordinates of the matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69144,"byte_end":69215,"line_start":172,"line_end":172,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69353,"byte_end":69358,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"order","qualname":"<RadiusOptions>::order","value":"pub fn order(Self, RadiusOrder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sort the returned items\n","sig":null,"attributes":[{"value":"/ Sort the returned items","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69314,"byte_end":69341,"line_start":178,"line_end":178,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69598,"byte_end":69603,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"store","qualname":"<RadiusOptions>::store","value":"pub fn store<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, instead of returning them.","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, instead of returning them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69443,"byte_end":69517,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69522,"byte_end":69525,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69530,"byte_end":69586,"line_start":186,"line_end":186,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69901,"byte_end":69911,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"store_dist","qualname":"<RadiusOptions>::store_dist","value":"pub fn store_dist<K: ToRedisArgs>(Self, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Store the results in a sorted set at `key`, with the distance from the\n center as its score. This feature can't be used with any `with_*` method.\n","sig":null,"attributes":[{"value":"/ Store the results in a sorted set at `key`, with the distance from the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69733,"byte_end":69807,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ center as its score. This feature can't be used with any `with_*` method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":69812,"byte_end":69889,"line_start":193,"line_end":193,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71264,"byte_end":71282,"line_start":248,"line_end":248,"column_start":12,"column_end":30},"name":"RadiusSearchResult","qualname":"::geo::RadiusSearchResult","value":"RadiusSearchResult { name, coord, dist }","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","sig":null,"attributes":[{"value":"/ Contain an item returned by [`geo_radius`][1] and [`geo_radius_by_member`][2].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71056,"byte_end":71138,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71139,"byte_end":71142,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ [1]: ../trait.Commands.html#method.geo_radius","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71143,"byte_end":71192,"line_start":246,"line_end":246,"column_start":1,"column_end":50}},{"value":"/ [2]: ../trait.Commands.html#method.geo_radius_by_member","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71193,"byte_end":71252,"line_start":247,"line_end":247,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71326,"byte_end":71330,"line_start":250,"line_end":250,"column_start":9,"column_end":13},"name":"name","qualname":"::geo::RadiusSearchResult::name","value":"std::string::String","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" The name that was found.\n","sig":null,"attributes":[{"value":"/ The name that was found.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71289,"byte_end":71317,"line_start":249,"line_end":249,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71385,"byte_end":71390,"line_start":252,"line_end":252,"column_start":9,"column_end":14},"name":"coord","qualname":"::geo::RadiusSearchResult::coord","value":"std::option::Option<geo::Coord<f64>>","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" The coordinate if available.\n","sig":null,"attributes":[{"value":"/ The coordinate if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71344,"byte_end":71376,"line_start":251,"line_end":251,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71455,"byte_end":71459,"line_start":254,"line_end":254,"column_start":9,"column_end":13},"name":"dist","qualname":"::geo::RadiusSearchResult::dist","value":"std::option::Option<f64>","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" The distance if available.\n","sig":null,"attributes":[{"value":"/ The distance if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71416,"byte_end":71446,"line_start":253,"line_end":253,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"streams","qualname":"::streams","value":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":1378},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1388},{"krate":0,"index":1386},{"krate":0,"index":1385},{"krate":0,"index":420},{"krate":0,"index":1397},{"krate":0,"index":1405},{"krate":0,"index":1403},{"krate":0,"index":423},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":1407},{"krate":0,"index":1414},{"krate":0,"index":1412},{"krate":0,"index":433},{"krate":0,"index":441},{"krate":0,"index":1416},{"krate":0,"index":1422},{"krate":0,"index":1420},{"krate":0,"index":1418},{"krate":0,"index":1424},{"krate":0,"index":1430},{"krate":0,"index":1428},{"krate":0,"index":1426},{"krate":0,"index":1432},{"krate":0,"index":1438},{"krate":0,"index":1436},{"krate":0,"index":1434},{"krate":0,"index":1440},{"krate":0,"index":1448},{"krate":0,"index":1446},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":1450},{"krate":0,"index":1459},{"krate":0,"index":1457},{"krate":0,"index":1455},{"krate":0,"index":1461},{"krate":0,"index":1467},{"krate":0,"index":1465},{"krate":0,"index":1463},{"krate":0,"index":1469},{"krate":0,"index":1480},{"krate":0,"index":1478},{"krate":0,"index":1476},{"krate":0,"index":1482},{"krate":0,"index":1488},{"krate":0,"index":1486},{"krate":0,"index":1484},{"krate":0,"index":1490},{"krate":0,"index":1496},{"krate":0,"index":1494},{"krate":0,"index":1492},{"krate":0,"index":1498},{"krate":0,"index":1506},{"krate":0,"index":1504},{"krate":0,"index":1502},{"krate":0,"index":1508},{"krate":0,"index":1517},{"krate":0,"index":1515},{"krate":0,"index":1513},{"krate":0,"index":1519},{"krate":0,"index":1528},{"krate":0,"index":1526},{"krate":0,"index":1524},{"krate":0,"index":1530},{"krate":0,"index":1537},{"krate":0,"index":1535},{"krate":0,"index":1533},{"krate":0,"index":1539},{"krate":0,"index":1546},{"krate":0,"index":1544},{"krate":0,"index":1542},{"krate":0,"index":448},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481}],"decl_id":null,"docs":" Defines types to use with the streams commands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":14313,"byte_end":14340,"line_start":425,"line_end":425,"column_start":1,"column_end":28}},{"value":"/ Defines types to use with the streams commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":74685,"byte_end":74736,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75154,"byte_end":75160,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Equals","qualname":"::streams::StreamMaxlen::Equals","value":"StreamMaxlen::Equals(usize)","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":" Match an exact count\n","sig":null,"attributes":[{"value":"/ Match an exact count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75125,"byte_end":75149,"line_start":15,"line_end":15,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75208,"byte_end":75214,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Approx","qualname":"::streams::StreamMaxlen::Approx","value":"StreamMaxlen::Approx(usize)","parent":{"krate":0,"index":1378},"children":[],"decl_id":null,"docs":" Match an approximate count\n","sig":null,"attributes":[{"value":"/ Match an approximate count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75173,"byte_end":75203,"line_start":17,"line_end":17,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75106,"byte_end":75118,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"StreamMaxlen","qualname":"::streams::StreamMaxlen","value":"pub enum StreamMaxlen {\n\n    /// Match an exact count\n    Equals(usize),\n\n    /// Match an approximate count\n    Approx(usize),\n}","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Utility enum for passing `MAXLEN [= or ~] [COUNT]`\n arguments into `StreamCommands`.\n The enum value represents the count.\n","sig":null,"attributes":[{"value":"/ Utility enum for passing `MAXLEN [= or ~] [COUNT]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":74919,"byte_end":74973,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/ arguments into `StreamCommands`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":74974,"byte_end":75010,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ The enum value represents the count.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75011,"byte_end":75051,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75786,"byte_end":75804,"line_start":41,"line_end":41,"column_start":12,"column_end":30},"name":"StreamClaimOptions","qualname":"::streams::StreamClaimOptions","value":"StreamClaimOptions {  }","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"decl_id":null,"docs":" Builder options for [`xclaim_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xclaim_options`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75620,"byte_end":75671,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75672,"byte_end":75675,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`xclaim_options`]: ../trait.Commands.html#method.xclaim_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75676,"byte_end":75744,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75745,"byte_end":75748,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76234,"byte_end":76238,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"idle","qualname":"<StreamClaimOptions>::idle","value":"pub fn idle(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set IDLE <milliseconds> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set IDLE <milliseconds> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76186,"byte_end":76222,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76366,"byte_end":76370,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"time","qualname":"<StreamClaimOptions>::time","value":"pub fn time(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set TIME <mstime> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set TIME <mstime> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76324,"byte_end":76354,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76513,"byte_end":76518,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"retry","qualname":"<StreamClaimOptions>::retry","value":"pub fn retry(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set RETRYCOUNT <count> cmd arg.\n","sig":null,"attributes":[{"value":"/ Set RETRYCOUNT <count> cmd arg.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76466,"byte_end":76501,"line_start":68,"line_end":68,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76653,"byte_end":76663,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"with_force","qualname":"<StreamClaimOptions>::with_force","value":"pub fn with_force(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set FORCE cmd arg to true.\n","sig":null,"attributes":[{"value":"/ Set FORCE cmd arg to true.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76611,"byte_end":76641,"line_start":74,"line_end":74,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76842,"byte_end":76853,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"with_justid","qualname":"<StreamClaimOptions>::with_justid","value":"pub fn with_justid(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set JUSTID cmd arg to true. Be advised: the response\n type changes with this option.\n","sig":null,"attributes":[{"value":"/ Set JUSTID cmd arg to true. Be advised: the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76735,"byte_end":76791,"line_start":80,"line_end":80,"column_start":5,"column_end":61}},{"value":"/ type changes with this option.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76796,"byte_end":76830,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78052,"byte_end":78069,"line_start":123,"line_end":123,"column_start":12,"column_end":29},"name":"StreamReadOptions","qualname":"::streams::StreamReadOptions","value":"StreamReadOptions {  }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"decl_id":null,"docs":" Builder options for [`xread_options`] command.","sig":null,"attributes":[{"value":"/ Builder options for [`xread_options`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":77889,"byte_end":77939,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":77940,"byte_end":77943,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":77944,"byte_end":78010,"line_start":120,"line_end":120,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78011,"byte_end":78014,"line_start":121,"line_end":121,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78542,"byte_end":78551,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"read_only","qualname":"<StreamReadOptions>::read_only","value":"pub fn read_only(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the command is participating in a group\n and generating ACKs\n","sig":null,"attributes":[{"value":"/ Indicates whether the command is participating in a group","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78441,"byte_end":78502,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ and generating ACKs","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78507,"byte_end":78530,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78800,"byte_end":78805,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"noack","qualname":"<StreamReadOptions>::noack","value":"pub fn noack(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the command so that it avoids adding the message\n to the PEL in cases where reliability is not a requirement\n and the occasional message loss is acceptable.\n","sig":null,"attributes":[{"value":"/ Sets the command so that it avoids adding the message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78609,"byte_end":78666,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ to the PEL in cases where reliability is not a requirement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78671,"byte_end":78733,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ and the occasional message loss is acceptable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78738,"byte_end":78788,"line_start":144,"line_end":144,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78935,"byte_end":78940,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"block","qualname":"<StreamReadOptions>::block","value":"pub fn block(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the block time in milliseconds.\n","sig":null,"attributes":[{"value":"/ Sets the block time in milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78883,"byte_end":78923,"line_start":150,"line_end":150,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79100,"byte_end":79105,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamReadOptions>::count","value":"pub fn count(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of elements to return per stream.\n","sig":null,"attributes":[{"value":"/ Sets the maximum number of elements to return per stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79027,"byte_end":79088,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79265,"byte_end":79270,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"group","qualname":"<StreamReadOptions>::group","value":"pub fn group<GN: ToRedisArgs, CN: ToRedisArgs>(Self, GN, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of a consumer group associated to the stream.\n","sig":null,"attributes":[{"value":"/ Sets the name of a consumer group associated to the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79190,"byte_end":79253,"line_start":162,"line_end":162,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80644,"byte_end":80659,"line_start":214,"line_end":214,"column_start":12,"column_end":27},"name":"StreamReadReply","qualname":"::streams::StreamReadReply","value":"StreamReadReply { keys }","parent":null,"children":[{"krate":0,"index":1417}],"decl_id":null,"docs":" Reply type used with [`xread`] or [`xread_options`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xread`] or [`xread_options`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80408,"byte_end":80473,"line_start":208,"line_end":208,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80474,"byte_end":80477,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`xread`]: ../trait.Commands.html#method.xread","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80478,"byte_end":80528,"line_start":210,"line_end":210,"column_start":1,"column_end":51}},{"value":"/ [`xread_options`]: ../trait.Commands.html#method.xread_options","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80529,"byte_end":80595,"line_start":211,"line_end":211,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80596,"byte_end":80599,"line_start":212,"line_end":212,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80749,"byte_end":80753,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"keys","qualname":"::streams::StreamReadReply::keys","value":"std::vec::Vec<streams::StreamKey>","parent":{"krate":0,"index":1416},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each key in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each key in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80666,"byte_end":80740,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81405,"byte_end":81421,"line_start":231,"line_end":231,"column_start":12,"column_end":28},"name":"StreamRangeReply","qualname":"::streams::StreamRangeReply","value":"StreamRangeReply { ids }","parent":null,"children":[{"krate":0,"index":1425}],"decl_id":null,"docs":" Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xrange`], [`xrange_count`], [`xrange_all`], [`xrevrange`], [`xrevrange_count`], [`xrevrange_all`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80774,"byte_end":80908,"line_start":219,"line_end":219,"column_start":1,"column_end":135}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80909,"byte_end":80912,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ Represents stream entries matching a given range of `id`'s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80913,"byte_end":80976,"line_start":221,"line_end":221,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80977,"byte_end":80980,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`xrange`]: ../trait.Commands.html#method.xrange","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":80981,"byte_end":81033,"line_start":223,"line_end":223,"column_start":1,"column_end":53}},{"value":"/ [`xrange_count`]: ../trait.Commands.html#method.xrange_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81034,"byte_end":81098,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/ [`xrange_all`]: ../trait.Commands.html#method.xrange_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81099,"byte_end":81159,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/ [`xrevrange`]: ../trait.Commands.html#method.xrevrange","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81160,"byte_end":81218,"line_start":226,"line_end":226,"column_start":1,"column_end":59}},{"value":"/ [`xrevrange_count`]: ../trait.Commands.html#method.xrevrange_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81219,"byte_end":81289,"line_start":227,"line_end":227,"column_start":1,"column_end":71}},{"value":"/ [`xrevrange_all`]: ../trait.Commands.html#method.xrevrange_all","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81290,"byte_end":81356,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81357,"byte_end":81360,"line_start":229,"line_end":229,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81510,"byte_end":81513,"line_start":233,"line_end":233,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamRangeReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81428,"byte_end":81501,"line_start":232,"line_end":232,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81756,"byte_end":81772,"line_start":243,"line_end":243,"column_start":12,"column_end":28},"name":"StreamClaimReply","qualname":"::streams::StreamClaimReply","value":"StreamClaimReply { ids }","parent":null,"children":[{"krate":0,"index":1433}],"decl_id":null,"docs":" Reply type used with [`xclaim`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xclaim`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81533,"byte_end":81577,"line_start":236,"line_end":236,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81578,"byte_end":81581,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Represents that ownership of the specified messages was changed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81582,"byte_end":81650,"line_start":238,"line_end":238,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81651,"byte_end":81654,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`xclaim`]: ../trait.Commands.html#method.xclaim","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81655,"byte_end":81707,"line_start":240,"line_end":240,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81708,"byte_end":81711,"line_start":241,"line_end":241,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81861,"byte_end":81864,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamClaimReply::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":" Complex data structure containing a payload for each ID in this array\n","sig":null,"attributes":[{"value":"/ Complex data structure containing a payload for each ID in this array","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81779,"byte_end":81852,"line_start":244,"line_end":244,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82177,"byte_end":82182,"line_start":258,"line_end":258,"column_start":5,"column_end":10},"name":"Empty","qualname":"::streams::StreamPendingReply::Empty","value":"StreamPendingReply::Empty","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" The stream is empty.\n","sig":null,"attributes":[{"value":"/ The stream is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82148,"byte_end":82172,"line_start":257,"line_end":257,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82236,"byte_end":82240,"line_start":260,"line_end":260,"column_start":5,"column_end":9},"name":"Data","qualname":"::streams::StreamPendingReply::Data","value":"StreamPendingReply::Data(StreamPendingData)","parent":{"krate":0,"index":1440},"children":[],"decl_id":null,"docs":" Data with payload exists in the stream.\n","sig":null,"attributes":[{"value":"/ Data with payload exists in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82188,"byte_end":82231,"line_start":259,"line_end":259,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82123,"byte_end":82141,"line_start":256,"line_end":256,"column_start":10,"column_end":28},"name":"StreamPendingReply","qualname":"::streams::StreamPendingReply","value":"pub enum StreamPendingReply {\n\n    /// The stream is empty.\n    Empty,\n\n    /// Data with payload exists in the stream.\n    Data(StreamPendingData),\n}","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1443}],"decl_id":null,"docs":" Reply type used with [`xpending`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81884,"byte_end":81930,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81931,"byte_end":81934,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Data returned here were fetched from the stream without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81935,"byte_end":81994,"line_start":250,"line_end":250,"column_start":1,"column_end":60}},{"value":"/ having been acknowledged.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":81995,"byte_end":82024,"line_start":251,"line_end":251,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82025,"byte_end":82028,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82029,"byte_end":82085,"line_start":253,"line_end":253,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82086,"byte_end":82089,"line_start":254,"line_end":254,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82474,"byte_end":82479,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"count","qualname":"<StreamPendingReply>::count","value":"pub fn count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many records are in the reply.\n","sig":null,"attributes":[{"value":"/ Returns how many records are in the reply.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82416,"byte_end":82462,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82799,"byte_end":82816,"line_start":283,"line_end":283,"column_start":12,"column_end":29},"name":"StreamPendingData","qualname":"::streams::StreamPendingData","value":"StreamPendingData { count, start_id, end_id, consumers }","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454}],"decl_id":null,"docs":" Inner reply type when an [`xpending`] command has data.","sig":null,"attributes":[{"value":"/ Inner reply type when an [`xpending`] command has data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82634,"byte_end":82693,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82694,"byte_end":82697,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82698,"byte_end":82754,"line_start":281,"line_end":281,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82887,"byte_end":82892,"line_start":285,"line_end":285,"column_start":9,"column_end":14},"name":"count","qualname":"::streams::StreamPendingData::count","value":"usize","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Limit on the number of messages to return per call.\n","sig":null,"attributes":[{"value":"/ Limit on the number of messages to return per call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82823,"byte_end":82878,"line_start":284,"line_end":284,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82950,"byte_end":82958,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"name":"start_id","qualname":"::streams::StreamPendingData::start_id","value":"std::string::String","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" ID for the first pending record.\n","sig":null,"attributes":[{"value":"/ ID for the first pending record.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82905,"byte_end":82941,"line_start":286,"line_end":286,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83017,"byte_end":83023,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"name":"end_id","qualname":"::streams::StreamPendingData::end_id","value":"std::string::String","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" ID for the final pending record.\n","sig":null,"attributes":[{"value":"/ ID for the final pending record.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82972,"byte_end":83008,"line_start":288,"line_end":288,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83180,"byte_end":83189,"line_start":293,"line_end":293,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamPendingData::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":" Every consumer in the consumer group with at\n least one pending message,\n and the number of pending messages it has.\n","sig":null,"attributes":[{"value":"/ Every consumer in the consumer group with at","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83037,"byte_end":83085,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ least one pending message,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83090,"byte_end":83120,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ and the number of pending messages it has.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83125,"byte_end":83171,"line_start":292,"line_end":292,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83611,"byte_end":83634,"line_start":306,"line_end":306,"column_start":12,"column_end":35},"name":"StreamPendingCountReply","qualname":"::streams::StreamPendingCountReply","value":"StreamPendingCountReply { ids }","parent":null,"children":[{"krate":0,"index":1462}],"decl_id":null,"docs":" Reply type used with [`xpending_count`] and\n [`xpending_consumer_count`] commands.","sig":null,"attributes":[{"value":"/ Reply type used with [`xpending_count`] and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83219,"byte_end":83266,"line_start":296,"line_end":296,"column_start":1,"column_end":48}},{"value":"/ [`xpending_consumer_count`] commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83267,"byte_end":83308,"line_start":297,"line_end":297,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83309,"byte_end":83312,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Data returned here have been fetched from the stream without","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83313,"byte_end":83377,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"/ any acknowledgement.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83378,"byte_end":83402,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83403,"byte_end":83406,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [`xpending_count`]: ../trait.Commands.html#method.xpending_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83407,"byte_end":83475,"line_start":302,"line_end":302,"column_start":1,"column_end":69}},{"value":"/ [`xpending_consumer_count`]: ../trait.Commands.html#method.xpending_consumer_count","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83476,"byte_end":83562,"line_start":303,"line_end":303,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83563,"byte_end":83566,"line_start":304,"line_end":304,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83839,"byte_end":83842,"line_start":310,"line_end":310,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamPendingCountReply::ids","value":"std::vec::Vec<streams::StreamPendingId>","parent":{"krate":0,"index":1461},"children":[],"decl_id":null,"docs":" An array of structs containing information about\n message IDs yet to be acknowledged by various consumers,\n time since last ack, and total number of acks by that consumer.\n","sig":null,"attributes":[{"value":"/ An array of structs containing information about","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83641,"byte_end":83693,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ message IDs yet to be acknowledged by various consumers,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83698,"byte_end":83758,"line_start":308,"line_end":308,"column_start":5,"column_end":65}},{"value":"/ time since last ack, and total number of acks by that consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83763,"byte_end":83830,"line_start":309,"line_end":309,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84245,"byte_end":84266,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"StreamInfoStreamReply","qualname":"::streams::StreamInfoStreamReply","value":"StreamInfoStreamReply { last_generated_id, radix_tree_keys, groups, length, first_entry, last_entry }","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475}],"decl_id":null,"docs":" Reply type used with [`xinfo_stream`] command, containing\n general information about the stream stored at the specified key.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_stream`] command, containing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83869,"byte_end":83930,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/ general information about the stream stored at the specified key.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":83931,"byte_end":84000,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84001,"byte_end":84004,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The very first and last IDs in the stream are shown,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84005,"byte_end":84061,"line_start":316,"line_end":316,"column_start":1,"column_end":57}},{"value":"/ in order to give some sense about what is the stream content.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84062,"byte_end":84127,"line_start":317,"line_end":317,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84128,"byte_end":84131,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_stream`]: ../trait.Commands.html#method.xinfo_stream","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84132,"byte_end":84196,"line_start":319,"line_end":319,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84197,"byte_end":84200,"line_start":320,"line_end":320,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84393,"byte_end":84410,"line_start":325,"line_end":325,"column_start":9,"column_end":26},"name":"last_generated_id","qualname":"::streams::StreamInfoStreamReply::last_generated_id","value":"std::string::String","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" The last generated ID that may not be the same as the last\n entry ID in case some entry was deleted.\n","sig":null,"attributes":[{"value":"/ The last generated ID that may not be the same as the last","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84273,"byte_end":84335,"line_start":323,"line_end":323,"column_start":5,"column_end":67}},{"value":"/ entry ID in case some entry was deleted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84340,"byte_end":84384,"line_start":324,"line_end":324,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84549,"byte_end":84564,"line_start":328,"line_end":328,"column_start":9,"column_end":24},"name":"radix_tree_keys","qualname":"::streams::StreamInfoStreamReply::radix_tree_keys","value":"usize","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Details about the radix tree representing the stream mostly\n useful for optimization and debugging tasks.\n","sig":null,"attributes":[{"value":"/ Details about the radix tree representing the stream mostly","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84424,"byte_end":84487,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ useful for optimization and debugging tasks.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84492,"byte_end":84540,"line_start":327,"line_end":327,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84647,"byte_end":84653,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoStreamReply::groups","value":"usize","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" The number of consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ The number of consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84577,"byte_end":84638,"line_start":329,"line_end":329,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84712,"byte_end":84718,"line_start":332,"line_end":332,"column_start":9,"column_end":15},"name":"length","qualname":"::streams::StreamInfoStreamReply::length","value":"usize","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Number of elements of the stream.\n","sig":null,"attributes":[{"value":"/ Number of elements of the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84666,"byte_end":84703,"line_start":331,"line_end":331,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84779,"byte_end":84790,"line_start":334,"line_end":334,"column_start":9,"column_end":20},"name":"first_entry","qualname":"::streams::StreamInfoStreamReply::first_entry","value":"streams::StreamId","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" The very first entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very first entry in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84731,"byte_end":84770,"line_start":333,"line_end":333,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84853,"byte_end":84863,"line_start":336,"line_end":336,"column_start":9,"column_end":19},"name":"last_entry","qualname":"::streams::StreamInfoStreamReply::last_entry","value":"streams::StreamId","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" The very last entry in the stream.\n","sig":null,"attributes":[{"value":"/ The very last entry in the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84806,"byte_end":84844,"line_start":335,"line_end":335,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85113,"byte_end":85137,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"StreamInfoConsumersReply","qualname":"::streams::StreamInfoConsumersReply","value":"StreamInfoConsumersReply { consumers }","parent":null,"children":[{"krate":0,"index":1483}],"decl_id":null,"docs":" Reply type used with [`xinfo_consumer`] command, an array of every\n consumer in a specific consumer group.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_consumer`] command, an array of every","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84878,"byte_end":84948,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84949,"byte_end":84991,"line_start":340,"line_end":340,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84992,"byte_end":84995,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumer`]: ../trait.Commands.html#method.xinfo_consumer","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":84996,"byte_end":85064,"line_start":342,"line_end":342,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85065,"byte_end":85068,"line_start":343,"line_end":343,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1483},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85213,"byte_end":85222,"line_start":347,"line_end":347,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoConsumersReply::consumers","value":"std::vec::Vec<streams::StreamInfoConsumer>","parent":{"krate":0,"index":1482},"children":[],"decl_id":null,"docs":" An array of every consumer in a specific consumer group.\n","sig":null,"attributes":[{"value":"/ An array of every consumer in a specific consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85144,"byte_end":85204,"line_start":346,"line_end":346,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85507,"byte_end":85528,"line_start":358,"line_end":358,"column_start":12,"column_end":33},"name":"StreamInfoGroupsReply","qualname":"::streams::StreamInfoGroupsReply","value":"StreamInfoGroupsReply { groups }","parent":null,"children":[{"krate":0,"index":1491}],"decl_id":null,"docs":" Reply type used with [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ Reply type used with [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85252,"byte_end":85302,"line_start":350,"line_end":350,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85303,"byte_end":85306,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ This output represents all the consumer groups associated with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85307,"byte_end":85373,"line_start":352,"line_end":352,"column_start":1,"column_end":67}},{"value":"/ the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85374,"byte_end":85389,"line_start":353,"line_end":353,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85390,"byte_end":85393,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85394,"byte_end":85458,"line_start":355,"line_end":355,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85459,"byte_end":85462,"line_start":356,"line_end":356,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85599,"byte_end":85605,"line_start":360,"line_end":360,"column_start":9,"column_end":15},"name":"groups","qualname":"::streams::StreamInfoGroupsReply::groups","value":"std::vec::Vec<streams::StreamInfoGroup>","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":" All the consumer groups associated with the stream.\n","sig":null,"attributes":[{"value":"/ All the consumer groups associated with the stream.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85535,"byte_end":85590,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85811,"byte_end":85829,"line_start":368,"line_end":368,"column_start":12,"column_end":30},"name":"StreamInfoConsumer","qualname":"::streams::StreamInfoConsumer","value":"StreamInfoConsumer { name, pending, idle }","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501}],"decl_id":null,"docs":" A consumer parsed from [`xinfo_consumers`] command.","sig":null,"attributes":[{"value":"/ A consumer parsed from [`xinfo_consumers`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85632,"byte_end":85687,"line_start":363,"line_end":363,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85688,"byte_end":85691,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_consumers`]: ../trait.Commands.html#method.xinfo_consumers","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85692,"byte_end":85762,"line_start":365,"line_end":365,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85763,"byte_end":85766,"line_start":366,"line_end":366,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85876,"byte_end":85880,"line_start":370,"line_end":370,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoConsumer::name","value":"std::string::String","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" Name of the consumer group.\n","sig":null,"attributes":[{"value":"/ Name of the consumer group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85836,"byte_end":85867,"line_start":369,"line_end":369,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85961,"byte_end":85968,"line_start":372,"line_end":372,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoConsumer::pending","value":"usize","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" Number of pending messages for this specific consumer.\n","sig":null,"attributes":[{"value":"/ Number of pending messages for this specific consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85894,"byte_end":85952,"line_start":371,"line_end":371,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86036,"byte_end":86040,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"name":"idle","qualname":"::streams::StreamInfoConsumer::idle","value":"usize","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" This consumer's idle time in milliseconds.\n","sig":null,"attributes":[{"value":"/ This consumer's idle time in milliseconds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":85981,"byte_end":86027,"line_start":373,"line_end":373,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86219,"byte_end":86234,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"StreamInfoGroup","qualname":"::streams::StreamInfoGroup","value":"StreamInfoGroup { name, consumers, pending, last_delivered_id }","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" A group parsed from [`xinfo_groups`] command.","sig":null,"attributes":[{"value":"/ A group parsed from [`xinfo_groups`] command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86052,"byte_end":86101,"line_start":377,"line_end":377,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86102,"byte_end":86105,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ [`xinfo_groups`]: ../trait.Commands.html#method.xinfo_groups","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86106,"byte_end":86170,"line_start":379,"line_end":379,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86171,"byte_end":86174,"line_start":380,"line_end":380,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86269,"byte_end":86273,"line_start":384,"line_end":384,"column_start":9,"column_end":13},"name":"name","qualname":"::streams::StreamInfoGroup::name","value":"std::string::String","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":" The group name.\n","sig":null,"attributes":[{"value":"/ The group name.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86241,"byte_end":86260,"line_start":383,"line_end":383,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86339,"byte_end":86348,"line_start":386,"line_end":386,"column_start":9,"column_end":18},"name":"consumers","qualname":"::streams::StreamInfoGroup::consumers","value":"usize","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":" Number of consumers known in the group.\n","sig":null,"attributes":[{"value":"/ Number of consumers known in the group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86287,"byte_end":86330,"line_start":385,"line_end":385,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86451,"byte_end":86458,"line_start":388,"line_end":388,"column_start":9,"column_end":16},"name":"pending","qualname":"::streams::StreamInfoGroup::pending","value":"usize","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":" Number of pending messages (delivered but not yet acknowledged) in the group.\n","sig":null,"attributes":[{"value":"/ Number of pending messages (delivered but not yet acknowledged) in the group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86361,"byte_end":86442,"line_start":387,"line_end":387,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86516,"byte_end":86533,"line_start":390,"line_end":390,"column_start":9,"column_end":26},"name":"last_delivered_id","qualname":"::streams::StreamInfoGroup::last_delivered_id","value":"std::string::String","parent":{"krate":0,"index":1508},"children":[],"decl_id":null,"docs":" Last ID delivered to this group.\n","sig":null,"attributes":[{"value":"/ Last ID delivered to this group.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86471,"byte_end":86507,"line_start":389,"line_end":389,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1519},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86718,"byte_end":86733,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"StreamPendingId","qualname":"::streams::StreamPendingId","value":"StreamPendingId { id, consumer, last_delivered_ms, times_delivered }","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"decl_id":null,"docs":" Represents a pending message parsed from [`xpending`] methods.","sig":null,"attributes":[{"value":"/ Represents a pending message parsed from [`xpending`] methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86546,"byte_end":86612,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86613,"byte_end":86616,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ [`xpending`]: ../trait.Commands.html#method.xpending","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86617,"byte_end":86673,"line_start":395,"line_end":395,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86775,"byte_end":86777,"line_start":399,"line_end":399,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamPendingId::id","value":"std::string::String","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" The ID of the message.\n","sig":null,"attributes":[{"value":"/ The ID of the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86740,"byte_end":86766,"line_start":398,"line_end":398,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86947,"byte_end":86955,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"name":"consumer","qualname":"::streams::StreamPendingId::consumer","value":"std::string::String","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" The name of the consumer that fetched the message and has\n still to acknowledge it. We call it the current owner\n of the message.\n","sig":null,"attributes":[{"value":"/ The name of the consumer that fetched the message and has","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86791,"byte_end":86852,"line_start":400,"line_end":400,"column_start":5,"column_end":66}},{"value":"/ still to acknowledge it. We call it the current owner","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86857,"byte_end":86914,"line_start":401,"line_end":401,"column_start":5,"column_end":62}},{"value":"/ of the message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86919,"byte_end":86938,"line_start":402,"line_end":402,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87094,"byte_end":87111,"line_start":406,"line_end":406,"column_start":9,"column_end":26},"name":"last_delivered_ms","qualname":"::streams::StreamPendingId::last_delivered_ms","value":"usize","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" The number of milliseconds that elapsed since the\n last time this message was delivered to this consumer.\n","sig":null,"attributes":[{"value":"/ The number of milliseconds that elapsed since the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":86969,"byte_end":87022,"line_start":404,"line_end":404,"column_start":5,"column_end":58}},{"value":"/ last time this message was delivered to this consumer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87027,"byte_end":87085,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87184,"byte_end":87199,"line_start":408,"line_end":408,"column_start":9,"column_end":24},"name":"times_delivered","qualname":"::streams::StreamPendingId::times_delivered","value":"usize","parent":{"krate":0,"index":1519},"children":[],"decl_id":null,"docs":" The number of times this message was delivered.\n","sig":null,"attributes":[{"value":"/ The number of times this message was delivered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87124,"byte_end":87175,"line_start":407,"line_end":407,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87329,"byte_end":87338,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"StreamKey","qualname":"::streams::StreamKey","value":"StreamKey { key, ids }","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":" Represents a stream `key` and its `id`'s parsed from `xread` methods.\n","sig":null,"attributes":[{"value":"/ Represents a stream `key` and its `id`'s parsed from `xread` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87211,"byte_end":87284,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87375,"byte_end":87378,"line_start":415,"line_end":415,"column_start":9,"column_end":12},"name":"key","qualname":"::streams::StreamKey::key","value":"std::string::String","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" The stream `key`.\n","sig":null,"attributes":[{"value":"/ The stream `key`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87345,"byte_end":87366,"line_start":414,"line_end":414,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87430,"byte_end":87433,"line_start":417,"line_end":417,"column_start":9,"column_end":12},"name":"ids","qualname":"::streams::StreamKey::ids","value":"std::vec::Vec<streams::StreamId>","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" The parsed stream `id`'s.\n","sig":null,"attributes":[{"value":"/ The parsed stream `id`'s.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87392,"byte_end":87421,"line_start":416,"line_end":416,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87562,"byte_end":87570,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::streams::StreamId","value":"StreamId { id, map }","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"decl_id":null,"docs":" Represents a stream `id` and its field/values as a `HashMap`\n","sig":null,"attributes":[{"value":"/ Represents a stream `id` and its field/values as a `HashMap`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87453,"byte_end":87517,"line_start":420,"line_end":420,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87644,"byte_end":87646,"line_start":424,"line_end":424,"column_start":9,"column_end":11},"name":"id","qualname":"::streams::StreamId::id","value":"std::string::String","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":" The stream `id` (entry ID) of this particular message.\n","sig":null,"attributes":[{"value":"/ The stream `id` (entry ID) of this particular message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87577,"byte_end":87635,"line_start":423,"line_end":423,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87741,"byte_end":87744,"line_start":426,"line_end":426,"column_start":9,"column_end":12},"name":"map","qualname":"::streams::StreamId::map","value":"std::collections::HashMap<std::string::String, types::Value>","parent":{"krate":0,"index":1539},"children":[],"decl_id":null,"docs":" All fields in this message, associated with their respective values.\n","sig":null,"attributes":[{"value":"/ All fields in this message, associated with their respective values.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87660,"byte_end":87732,"line_start":425,"line_end":425,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88357,"byte_end":88360,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"get","qualname":"<StreamId>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches value of a given field and converts it to the specified\n type.\n","sig":null,"attributes":[{"value":"/ Fetches value of a given field and converts it to the specified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88264,"byte_end":88331,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88336,"byte_end":88345,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88608,"byte_end":88620,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamId>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does the message contain a particular field?\n","sig":null,"attributes":[{"value":"/ Does the message contain a particular field?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88548,"byte_end":88596,"line_start":454,"line_end":454,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88771,"byte_end":88774,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamId>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns how many field/value pairs exist in this message.\n","sig":null,"attributes":[{"value":"/ Returns how many field/value pairs exist in this message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88698,"byte_end":88759,"line_start":459,"line_end":459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88906,"byte_end":88914,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamId>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no field/value pairs in this message.\n","sig":null,"attributes":[{"value":"/ Returns true if there are no field/value pairs in this message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":88827,"byte_end":88894,"line_start":464,"line_end":464,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":96663,"byte_end":96669,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":1549}],"decl_id":null,"docs":" The client type.\n","sig":null,"attributes":[{"value":"/ The client type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":96607,"byte_end":96627,"line_start":11,"line_end":11,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97472,"byte_end":97476,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"open","qualname":"<Client>::open","value":"pub fn open<T: IntoConnectionInfo>(T) -> RedisResult<Client>","parent":null,"children":[],"decl_id":null,"docs":" Connects to a redis server and returns a client.  This does not\n actually open a connection yet but it does perform some basic\n checks on the URL that might make the operation fail.\n","sig":null,"attributes":[{"value":"/ Connects to a redis server and returns a client.  This does not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97261,"byte_end":97328,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/ actually open a connection yet but it does perform some basic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97333,"byte_end":97398,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ checks on the URL that might make the operation fail.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97403,"byte_end":97460,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97948,"byte_end":97962,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"get_connection","qualname":"<Client>::get_connection","value":"pub fn get_connection(&Self) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis and returns a\n connection object.  The connection object can be used to send\n commands to the server.  This can fail with a variety of errors\n (like unreachable host) so it's important that you handle those\n errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis and returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97639,"byte_end":97706,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ connection object.  The connection object can be used to send","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97711,"byte_end":97776,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"/ commands to the server.  This can fail with a variety of errors","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97781,"byte_end":97848,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ (like unreachable host) so it's important that you handle those","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97853,"byte_end":97920,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ errors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97925,"byte_end":97936,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98392,"byte_end":98419,"line_start":57,"line_end":57,"column_start":12,"column_end":39},"name":"get_connection_with_timeout","qualname":"<Client>::get_connection_with_timeout","value":"pub fn get_connection_with_timeout(&Self, Duration) -> RedisResult<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Instructs the client to actually connect to redis with specified\n timeout and returns a connection object.  The connection object\n can be used to send commands to the server.  This can fail with\n a variety of errors (like unreachable host) so it's important\n that you handle those errors.\n","sig":null,"attributes":[{"value":"/ Instructs the client to actually connect to redis with specified","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98060,"byte_end":98128,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ timeout and returns a connection object.  The connection object","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98133,"byte_end":98200,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ can be used to send commands to the server.  This can fail with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98205,"byte_end":98272,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ a variety of errors (like unreachable host) so it's important","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98277,"byte_end":98342,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ that you handle those errors.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98347,"byte_end":98380,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98917,"byte_end":98937,"line_start":69,"line_end":69,"column_start":18,"column_end":38},"name":"get_async_connection","qualname":"<Client>::get_async_connection","value":"pub async fn get_async_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98783,"byte_end":98831,"line_start":67,"line_end":67,"column_start":5,"column_end":53}},{"value":"cfg(any(feature = \"tokio-comp\", feature = \"async-std-comp\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98836,"byte_end":98899,"line_start":68,"line_end":68,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":99688,"byte_end":99708,"line_start":89,"line_end":89,"column_start":18,"column_end":38},"name":"get_tokio_connection","qualname":"<Client>::get_tokio_connection","value":"pub async fn get_tokio_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":99529,"byte_end":99577,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":99582,"byte_end":99612,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":100693,"byte_end":100725,"line_start":116,"line_end":116,"column_start":18,"column_end":50},"name":"get_multiplexed_async_connection","qualname":"<Client>::get_multiplexed_async_connection","value":"pub async fn get_multiplexed_async_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async connection from the client.\n","sig":null,"attributes":[{"value":"/ Returns an async connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":100446,"byte_end":100494,"line_start":110,"line_end":110,"column_start":5,"column_end":53}},{"value":"cfg(any(feature = \"tokio-comp\", feature = \"async-std-comp\"))","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":100499,"byte_end":100562,"line_start":111,"line_end":111,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101439,"byte_end":101471,"line_start":133,"line_end":133,"column_start":18,"column_end":50},"name":"get_multiplexed_tokio_connection","qualname":"<Client>::get_multiplexed_tokio_connection","value":"pub async fn get_multiplexed_tokio_connection<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async multiplexed connection from the client.","sig":null,"attributes":[{"value":"/ Returns an async multiplexed connection from the client.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101106,"byte_end":101166,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101171,"byte_end":101174,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ A multiplexed connection can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101179,"byte_end":101267,"line_start":129,"line_end":129,"column_start":5,"column_end":93}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101272,"byte_end":101328,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":101333,"byte_end":101363,"line_start":131,"line_end":131,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102683,"byte_end":102718,"line_start":160,"line_end":160,"column_start":18,"column_end":53},"name":"create_multiplexed_tokio_connection","qualname":"<Client>::create_multiplexed_tokio_connection","value":"pub async fn create_multiplexed_tokio_connection<'_>(&'_ Self)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an async multiplexed connection from the client and a future which must be polled\n to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","sig":null,"attributes":[{"value":"/ Returns an async multiplexed connection from the client and a future which must be polled","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102229,"byte_end":102322,"line_start":153,"line_end":153,"column_start":5,"column_end":98}},{"value":"/ to drive any requests submitted to it (see `get_multiplexed_tokio_connection`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102327,"byte_end":102410,"line_start":154,"line_end":154,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102415,"byte_end":102418,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ A multiplexed connection can be cloned, allowing requests to be be sent concurrently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102423,"byte_end":102511,"line_start":156,"line_end":156,"column_start":5,"column_end":93}},{"value":"/ on the same underlying connection (tcp/unix socket).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102516,"byte_end":102572,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"tokio-comp\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":102577,"byte_end":102607,"line_start":158,"line_end":158,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107507,"byte_end":107513,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Simple","qualname":"::cmd::Arg::Simple","value":"Arg::Simple(D)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" A normal argument\n","sig":null,"attributes":[{"value":"/ A normal argument","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107481,"byte_end":107502,"line_start":11,"line_end":11,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107576,"byte_end":107582,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Cursor","qualname":"::cmd::Arg::Cursor","value":"Arg::Cursor","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":" A cursor argument created from `cursor_arg()`\n","sig":null,"attributes":[{"value":"/ A cursor argument created from `cursor_arg()`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107522,"byte_end":107571,"line_start":13,"line_end":13,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107468,"byte_end":107471,"line_start":10,"line_end":10,"column_start":10,"column_end":13},"name":"Arg","qualname":"::cmd::Arg","value":"pub enum Arg<D> {\n\n    /// A normal argument\n    Simple(D),\n\n    /// A cursor argument created from `cursor_arg()`\n    Cursor,\n}","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1559}],"decl_id":null,"docs":" An argument to a redis command\n","sig":null,"attributes":[{"value":"/ An argument to a redis command","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107407,"byte_end":107441,"line_start":8,"line_end":8,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107646,"byte_end":107649,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Cmd","qualname":"::cmd::Cmd","value":"Cmd {  }","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" Represents redis commands.\n","sig":null,"attributes":[{"value":"/ Represents redis commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107587,"byte_end":107617,"line_start":17,"line_end":17,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107891,"byte_end":107899,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Pipeline","qualname":"::cmd::Pipeline","value":"Pipeline {  }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"decl_id":null,"docs":" Represents a redis command pipeline.\n","sig":null,"attributes":[{"value":"/ Represents a redis command pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107822,"byte_end":107862,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":108001,"byte_end":108005,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Iter","qualname":"::cmd::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" Represents a redis iterator.\n","sig":null,"attributes":[{"value":"/ Represents a redis iterator.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":107957,"byte_end":107989,"line_start":34,"line_end":34,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109373,"byte_end":109382,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"AsyncIter","qualname":"::cmd::AsyncIter","value":"AsyncIter {  }","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"decl_id":null,"docs":" Represents a redis iterator that can be used with async connections.\n","sig":null,"attributes":[{"value":"/ Represents a redis iterator that can be used with async connections.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109265,"byte_end":109337,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109338,"byte_end":109361,"line_start":76,"line_end":76,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110190,"byte_end":110199,"line_start":100,"line_end":100,"column_start":18,"column_end":27},"name":"next_item","qualname":"<AsyncIter>::next_item","value":"pub async fn next_item<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" ```rust,no_run\n # use redis::AsyncCommands;\n # async fn scan_set() -> redis::RedisResult<()> {\n # let client = redis::Client::open(\"redis://127.0.0.1/\")?;\n # let mut con = client.get_async_connection().await?;\n con.sadd(\"my_set\", 42i32).await?;\n con.sadd(\"my_set\", 43i32).await?;\n let mut iter: redis::AsyncIter<i32> = con.sscan(\"my_set\").await?;\n while let Some(element) = iter.next_item().await {\n     assert!(element == 42 || element == 43);\n }\n # Ok(())\n # }\n ```\n","sig":null,"attributes":[{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109596,"byte_end":109614,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ # use redis::AsyncCommands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109619,"byte_end":109650,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/ # async fn scan_set() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109655,"byte_end":109708,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109713,"byte_end":109775,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/ # let mut con = client.get_async_connection().await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109780,"byte_end":109837,"line_start":89,"line_end":89,"column_start":5,"column_end":62}},{"value":"/ con.sadd(\"my_set\", 42i32).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109842,"byte_end":109879,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/ con.sadd(\"my_set\", 43i32).await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109884,"byte_end":109921,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ let mut iter: redis::AsyncIter<i32> = con.sscan(\"my_set\").await?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109926,"byte_end":109995,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/ while let Some(element) = iter.next_item().await {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110000,"byte_end":110054,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"/     assert!(element == 42 || element == 43);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110059,"byte_end":110107,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110112,"byte_end":110117,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110122,"byte_end":110134,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110139,"byte_end":110146,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110151,"byte_end":110158,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":110163,"byte_end":110172,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115448,"byte_end":115451,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"new","qualname":"<Cmd>::new","value":"pub fn new() -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty command.\n","sig":null,"attributes":[{"value":"/ Creates a new empty command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115404,"byte_end":115436,"line_start":293,"line_end":293,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116229,"byte_end":116232,"line_start":317,"line_end":317,"column_start":12,"column_end":15},"name":"arg","qualname":"<Cmd>::arg","value":"pub fn arg<T: ToRedisArgs>(&mut Self, T) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Appends an argument to the command.  The argument passed must\n be a type that implements `ToRedisArgs`.  Most primitive types as\n well as vectors of primitive types implement it.","sig":null,"attributes":[{"value":"/ Appends an argument to the command.  The argument passed must","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115607,"byte_end":115672,"line_start":303,"line_end":303,"column_start":5,"column_end":70}},{"value":"/ be a type that implements `ToRedisArgs`.  Most primitive types as","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115677,"byte_end":115746,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ well as vectors of primitive types implement it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115751,"byte_end":115803,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115808,"byte_end":115811,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ For instance all of the following are valid:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115816,"byte_end":115864,"line_start":307,"line_end":307,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115869,"byte_end":115872,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115877,"byte_end":115895,"line_start":309,"line_end":309,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115900,"byte_end":115970,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115975,"byte_end":116028,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/ redis::cmd(\"SET\").arg(&[\"my_key\", \"my_value\"]);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116033,"byte_end":116084,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(42);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116089,"byte_end":116133,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/ redis::cmd(\"SET\").arg(\"my_key\").arg(b\"my_value\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116138,"byte_end":116191,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116196,"byte_end":116203,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116208,"byte_end":116217,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117066,"byte_end":117076,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"name":"cursor_arg","qualname":"<Cmd>::cursor_arg","value":"pub fn cursor_arg(&mut Self, u64) -> &mut Cmd","parent":null,"children":[],"decl_id":null,"docs":" Works similar to `arg` but adds a cursor argument.  This is always\n an integer and also flips the command implementation to support a\n different mode for the iterators where the iterator will ask for\n another batch of items when the local data is exhausted.","sig":null,"attributes":[{"value":"/ Works similar to `arg` but adds a cursor argument.  This is always","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116342,"byte_end":116412,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ an integer and also flips the command implementation to support a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116417,"byte_end":116486,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ different mode for the iterators where the iterator will ask for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116491,"byte_end":116559,"line_start":324,"line_end":324,"column_start":5,"column_end":73}},{"value":"/ another batch of items when the local data is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116564,"byte_end":116624,"line_start":325,"line_end":325,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116629,"byte_end":116632,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116637,"byte_end":116655,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116660,"byte_end":116730,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116735,"byte_end":116788,"line_start":329,"line_end":329,"column_start":5,"column_end":58}},{"value":"/ let mut cmd = redis::cmd(\"SSCAN\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116793,"byte_end":116831,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ let mut iter : redis::Iter<isize> =","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116836,"byte_end":116875,"line_start":331,"line_end":331,"column_start":5,"column_end":44}},{"value":"/     cmd.arg(\"my_set\").cursor_arg(0).clone().iter(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116880,"byte_end":116952,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ for x in iter {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116957,"byte_end":116976,"line_start":333,"line_end":333,"column_start":5,"column_end":24}},{"value":"/     // do something with the item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":116981,"byte_end":117018,"line_start":334,"line_end":334,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117023,"byte_end":117028,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117033,"byte_end":117040,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117045,"byte_end":117054,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117325,"byte_end":117343,"line_start":347,"line_end":347,"column_start":12,"column_end":30},"name":"get_packed_command","qualname":"<Cmd>::get_packed_command","value":"pub fn get_packed_command(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the packed command as a byte vector.\n","sig":null,"attributes":[{"value":"/ Returns the packed command as a byte vector.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117251,"byte_end":117299,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":117304,"byte_end":117313,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118241,"byte_end":118253,"line_start":375,"line_end":375,"column_start":12,"column_end":24},"name":"in_scan_mode","qualname":"<Cmd>::in_scan_mode","value":"pub fn in_scan_mode(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the command is in scan mode.\n","sig":null,"attributes":[{"value":"/ Returns true if the command is in scan mode.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118167,"byte_end":118215,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118220,"byte_end":118229,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118505,"byte_end":118510,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"query","qualname":"<Cmd>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends the command as query to the connection and converts the\n result to the target redis value.  This is the general way how\n you can retrieve data.\n","sig":null,"attributes":[{"value":"/ Sends the command as query to the connection and converts the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118312,"byte_end":118377,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/ result to the target redis value.  This is the general way how","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118382,"byte_end":118448,"line_start":380,"line_end":380,"column_start":5,"column_end":71}},{"value":"/ you can retrieve data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118453,"byte_end":118479,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118484,"byte_end":118493,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118866,"byte_end":118877,"line_start":394,"line_end":394,"column_start":18,"column_end":29},"name":"query_async","qualname":"<Cmd>::query_async","value":"pub async fn query_async<C, T: FromRedisValue, '_, '_>(&'_ Self, &'_ mut C)\n-> /*impl Trait*/ where C: crate::aio::ConnectionLike","parent":null,"children":[],"decl_id":null,"docs":" Async version of `query`.\n","sig":null,"attributes":[{"value":"/ Async version of `query`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118777,"byte_end":118806,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118811,"byte_end":118820,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":118825,"byte_end":118848,"line_start":393,"line_end":393,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119967,"byte_end":119971,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"iter","qualname":"<Cmd>::iter","value":"pub fn iter<T: FromRedisValue>(Self, &mut ConnectionLike)\n-> RedisResult<Iter<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Similar to `query()` but returns an iterator over the items of the\n bulk result or iterator.  In normal mode this is not in any way more\n efficient than just querying into a `Vec<T>` as it's internally\n implemented as buffering into a vector.  This however is useful when\n `cursor_arg` was used in which case the iterator will query for more\n items until the server side cursor is exhausted.","sig":null,"attributes":[{"value":"/ Similar to `query()` but returns an iterator over the items of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119090,"byte_end":119160,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ bulk result or iterator.  In normal mode this is not in any way more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119165,"byte_end":119237,"line_start":403,"line_end":403,"column_start":5,"column_end":77}},{"value":"/ efficient than just querying into a `Vec<T>` as it's internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119242,"byte_end":119309,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/ implemented as buffering into a vector.  This however is useful when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119314,"byte_end":119386,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/ `cursor_arg` was used in which case the iterator will query for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119391,"byte_end":119463,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/ items until the server side cursor is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119468,"byte_end":119520,"line_start":407,"line_end":407,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119525,"byte_end":119528,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This is useful for commands such as `SSCAN`, `SCAN` and others.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119533,"byte_end":119600,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119605,"byte_end":119608,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ One speciality of this function is that it will check if the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119613,"byte_end":119686,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ looks like a cursor or not and always just looks at the payload.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119691,"byte_end":119759,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/ This way you can use the function the same for responses in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119764,"byte_end":119831,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ format of `KEYS` (just a list) as well as `SSCAN` (which returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119836,"byte_end":119906,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/ tuple of cursor and list).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119911,"byte_end":119941,"line_start":415,"line_end":415,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":119946,"byte_end":119955,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121546,"byte_end":121556,"line_start":452,"line_end":452,"column_start":18,"column_end":28},"name":"iter_async","qualname":"<Cmd>::iter_async","value":"pub async fn iter_async<'a, T: FromRedisValue +\n                        'a>(Self, &'a mut AsyncConnection + Send)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Similar to `iter()` but returns an AsyncIter over the items of the\n bulk result or iterator.  A [futures::Stream](https://docs.rs/futures/0.3.3/futures/stream/trait.Stream.html)\n can be obtained by calling `stream()` on the AsyncIter.  In normal mode this is not in any way more\n efficient than just querying into a `Vec<T>` as it's internally\n implemented as buffering into a vector.  This however is useful when\n `cursor_arg` was used in which case the stream will query for more\n items until the server side cursor is exhausted.","sig":null,"attributes":[{"value":"/ Similar to `iter()` but returns an AsyncIter over the items of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120470,"byte_end":120540,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ bulk result or iterator.  A [futures::Stream](https://docs.rs/futures/0.3.3/futures/stream/trait.Stream.html)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120545,"byte_end":120658,"line_start":436,"line_end":436,"column_start":5,"column_end":118}},{"value":"/ can be obtained by calling `stream()` on the AsyncIter.  In normal mode this is not in any way more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120663,"byte_end":120766,"line_start":437,"line_end":437,"column_start":5,"column_end":108}},{"value":"/ efficient than just querying into a `Vec<T>` as it's internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120771,"byte_end":120838,"line_start":438,"line_end":438,"column_start":5,"column_end":72}},{"value":"/ implemented as buffering into a vector.  This however is useful when","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120843,"byte_end":120915,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ `cursor_arg` was used in which case the stream will query for more","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120920,"byte_end":120990,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ items until the server side cursor is exhausted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":120995,"byte_end":121047,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121052,"byte_end":121055,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This is useful for commands such as `SSCAN`, `SCAN` and others in async contexts.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121060,"byte_end":121145,"line_start":443,"line_end":443,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121150,"byte_end":121153,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ One speciality of this function is that it will check if the response","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121158,"byte_end":121231,"line_start":445,"line_end":445,"column_start":5,"column_end":78}},{"value":"/ looks like a cursor or not and always just looks at the payload.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121236,"byte_end":121304,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/ This way you can use the function the same for responses in the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121309,"byte_end":121376,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ format of `KEYS` (just a list) as well as `SSCAN` (which returns a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121381,"byte_end":121451,"line_start":448,"line_end":448,"column_start":5,"column_end":75}},{"value":"/ tuple of cursor and list).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121456,"byte_end":121486,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121491,"byte_end":121514,"line_start":450,"line_end":450,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":121519,"byte_end":121528,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122740,"byte_end":122747,"line_start":489,"line_end":489,"column_start":12,"column_end":19},"name":"execute","qualname":"<Cmd>::execute","value":"pub fn execute(&Self, &mut ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query fails because of an error.  This is\n mainly useful in examples and for simple commands like setting\n keys.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122178,"byte_end":122246,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query fails because of an error.  This is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122251,"byte_end":122322,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/ mainly useful in examples and for simple commands like setting","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122327,"byte_end":122393,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ keys.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122398,"byte_end":122407,"line_start":479,"line_end":479,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122412,"byte_end":122415,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122420,"byte_end":122472,"line_start":481,"line_end":481,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122477,"byte_end":122480,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122485,"byte_end":122503,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122508,"byte_end":122578,"line_start":484,"line_end":484,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122583,"byte_end":122636,"line_start":485,"line_end":485,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122641,"byte_end":122702,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122707,"byte_end":122714,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122719,"byte_end":122728,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122944,"byte_end":122953,"line_start":494,"line_end":494,"column_start":12,"column_end":21},"name":"args_iter","qualname":"<Cmd>::args_iter","value":"pub fn args_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the arguments in this command (including the command name itself)\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the arguments in this command (including the command name itself)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":122838,"byte_end":122932,"line_start":493,"line_end":493,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124535,"byte_end":124538,"line_start":538,"line_end":538,"column_start":12,"column_end":15},"name":"new","qualname":"<Pipeline>::new","value":"pub fn new() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline.  For consistency with the `cmd`\n api a `pipe` function is provided as alias.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline.  For consistency with the `cmd`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124409,"byte_end":124471,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/ api a `pipe` function is provided as alias.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124476,"byte_end":124523,"line_start":537,"line_end":537,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124667,"byte_end":124680,"line_start":543,"line_end":543,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Pipeline>::with_capacity","value":"pub fn with_capacity(usize) -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty pipeline with pre-allocated capacity.\n","sig":null,"attributes":[{"value":"/ Creates an empty pipeline with pre-allocated capacity.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124597,"byte_end":124655,"line_start":542,"line_end":542,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124986,"byte_end":124989,"line_start":553,"line_end":553,"column_start":12,"column_end":15},"name":"cmd","qualname":"<Pipeline>::cmd","value":"pub fn cmd(&mut Self, &str) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Starts a new command.  Functions such as `arg` then become\n available to add more arguments to that command.\n","sig":null,"attributes":[{"value":"/ Starts a new command.  Functions such as `arg` then become","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124841,"byte_end":124903,"line_start":550,"line_end":550,"column_start":5,"column_end":67}},{"value":"/ available to add more arguments to that command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124908,"byte_end":124960,"line_start":551,"line_end":551,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124965,"byte_end":124974,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125156,"byte_end":125167,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"add_command","qualname":"<Pipeline>::add_command","value":"pub fn add_command(&mut Self, Cmd) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Adds a command to the pipeline.\n","sig":null,"attributes":[{"value":"/ Adds a command to the pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125095,"byte_end":125130,"line_start":558,"line_end":558,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125135,"byte_end":125144,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125729,"byte_end":125732,"line_start":579,"line_end":579,"column_start":12,"column_end":15},"name":"arg","qualname":"<Pipeline>::arg","value":"pub fn arg<T: ToRedisArgs>(&mut Self, T) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to the last started command.  This works similar\n to the `arg` method of the `Cmd` object.","sig":null,"attributes":[{"value":"/ Adds an argument to the last started command.  This works similar","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125496,"byte_end":125565,"line_start":574,"line_end":574,"column_start":5,"column_end":74}},{"value":"/ to the `arg` method of the `Cmd` object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125570,"byte_end":125614,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125619,"byte_end":125622,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Note that this function fails the task if executed on an empty pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125627,"byte_end":125703,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125708,"byte_end":125717,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126346,"byte_end":126352,"line_start":595,"line_end":595,"column_start":12,"column_end":18},"name":"ignore","qualname":"<Pipeline>::ignore","value":"pub fn ignore(&mut Self) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Instructs the pipeline to ignore the return value of this command.\n It will still be ensured that it is not an error, but any successful\n result is just thrown away.  This makes result processing through\n tuples much easier because you do not need to handle all the items\n you do not care about.","sig":null,"attributes":[{"value":"/ Instructs the pipeline to ignore the return value of this command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125904,"byte_end":125974,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ It will still be ensured that it is not an error, but any successful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":125979,"byte_end":126051,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ result is just thrown away.  This makes result processing through","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126056,"byte_end":126125,"line_start":589,"line_end":589,"column_start":5,"column_end":74}},{"value":"/ tuples much easier because you do not need to handle all the items","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126130,"byte_end":126200,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ you do not care about.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126205,"byte_end":126231,"line_start":591,"line_end":591,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126236,"byte_end":126239,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that this function fails the task if executed on an empty pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126244,"byte_end":126320,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126325,"byte_end":126334,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127140,"byte_end":127146,"line_start":617,"line_end":617,"column_start":12,"column_end":18},"name":"atomic","qualname":"<Pipeline>::atomic","value":"pub fn atomic(&mut Self) -> &mut Pipeline","parent":null,"children":[],"decl_id":null,"docs":" This enables atomic mode.  In atomic mode the whole pipeline is\n enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing\n changes however.  This is easier than using `MULTI`/`EXEC` yourself\n as the format does not change.","sig":null,"attributes":[{"value":"/ This enables atomic mode.  In atomic mode the whole pipeline is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126509,"byte_end":126576,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ enclosed in `MULTI`/`EXEC`.  From the user's point of view nothing","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126581,"byte_end":126651,"line_start":604,"line_end":604,"column_start":5,"column_end":75}},{"value":"/ changes however.  This is easier than using `MULTI`/`EXEC` yourself","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126656,"byte_end":126727,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ as the format does not change.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126732,"byte_end":126766,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126771,"byte_end":126774,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126779,"byte_end":126797,"line_start":608,"line_end":608,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126802,"byte_end":126872,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126877,"byte_end":126930,"line_start":610,"line_end":610,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126935,"byte_end":126980,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/     .atomic()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":126985,"byte_end":127002,"line_start":612,"line_end":612,"column_start":5,"column_end":22}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127007,"byte_end":127039,"line_start":613,"line_end":613,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127044,"byte_end":127102,"line_start":614,"line_end":614,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127107,"byte_end":127114,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127119,"byte_end":127128,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127323,"byte_end":127331,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"cmd_iter","qualname":"<Pipeline>::cmd_iter","value":"pub fn cmd_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the commands currently in this pipeline\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the commands currently in this pipeline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127239,"byte_end":127311,"line_start":622,"line_end":622,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127755,"byte_end":127774,"line_start":638,"line_end":638,"column_start":12,"column_end":31},"name":"get_packed_pipeline","qualname":"<Pipeline>::get_packed_pipeline","value":"pub fn get_packed_pipeline(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded pipeline commands.\n","sig":null,"attributes":[{"value":"/ Returns the encoded pipeline commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":127701,"byte_end":127743,"line_start":637,"line_end":637,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129809,"byte_end":129814,"line_start":689,"line_end":689,"column_start":12,"column_end":17},"name":"query","qualname":"<Pipeline>::query","value":"pub fn query<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the pipeline and fetches the return values.  Since most\n pipelines return different types it's recommended to use tuple\n matching to process the results:","sig":null,"attributes":[{"value":"/ Executes the pipeline and fetches the return values.  Since most","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":128878,"byte_end":128946,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ pipelines return different types it's recommended to use tuple","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":128951,"byte_end":129017,"line_start":672,"line_end":672,"column_start":5,"column_end":71}},{"value":"/ matching to process the results:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129022,"byte_end":129058,"line_start":673,"line_end":673,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129063,"byte_end":129066,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129071,"byte_end":129089,"line_start":675,"line_end":675,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129094,"byte_end":129164,"line_start":676,"line_end":676,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129169,"byte_end":129222,"line_start":677,"line_end":677,"column_start":5,"column_end":58}},{"value":"/ let (k1, k2) : (i32, i32) = redis::pipe()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129227,"byte_end":129272,"line_start":678,"line_end":678,"column_start":5,"column_end":50}},{"value":"/     .cmd(\"SET\").arg(\"key_1\").arg(42).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129277,"byte_end":129326,"line_start":679,"line_end":679,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"SET\").arg(\"key_2\").arg(43).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129331,"byte_end":129380,"line_start":680,"line_end":680,"column_start":5,"column_end":54}},{"value":"/     .cmd(\"GET\").arg(\"key_1\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129385,"byte_end":129417,"line_start":681,"line_end":681,"column_start":5,"column_end":37}},{"value":"/     .cmd(\"GET\").arg(\"key_2\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129422,"byte_end":129480,"line_start":682,"line_end":682,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129485,"byte_end":129492,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129497,"byte_end":129500,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129505,"byte_end":129601,"line_start":685,"line_end":685,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129606,"byte_end":129700,"line_start":686,"line_end":686,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129705,"byte_end":129783,"line_start":687,"line_end":687,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":129788,"byte_end":129797,"line_start":688,"line_end":688,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130608,"byte_end":130613,"line_start":712,"line_end":712,"column_start":12,"column_end":17},"name":"clear","qualname":"<Pipeline>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear a Pipeline object internal data structure.","sig":null,"attributes":[{"value":"/ Clear a Pipeline object internal data structure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130384,"byte_end":130436,"line_start":707,"line_end":707,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130441,"byte_end":130444,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This allows reusing a Pipeline object as a clear object while performing a minimal amount of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130449,"byte_end":130545,"line_start":709,"line_end":709,"column_start":5,"column_end":101}},{"value":"/ memory released/reallocated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130550,"byte_end":130582,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":130587,"byte_end":130596,"line_start":711,"line_end":711,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":131706,"byte_end":131717,"line_start":749,"line_end":749,"column_start":18,"column_end":29},"name":"query_async","qualname":"<Pipeline>::query_async","value":"pub async fn query_async<C, T: FromRedisValue, '_, '_>(&'_ Self, &'_ mut C)\n-> /*impl Trait*/ where C: crate::aio::ConnectionLike","parent":null,"children":[],"decl_id":null,"docs":" Async version of `query`.\n","sig":null,"attributes":[{"value":"/ Async version of `query`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":131617,"byte_end":131646,"line_start":746,"line_end":746,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":131651,"byte_end":131660,"line_start":747,"line_end":747,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":131665,"byte_end":131688,"line_start":748,"line_end":748,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132918,"byte_end":132925,"line_start":778,"line_end":778,"column_start":12,"column_end":19},"name":"execute","qualname":"<Pipeline>::execute","value":"pub fn execute(&Self, &mut ConnectionLike)","parent":null,"children":[],"decl_id":null,"docs":" This is a shortcut to `query()` that does not return a value and\n will fail the task if the query of the pipeline fails.","sig":null,"attributes":[{"value":"/ This is a shortcut to `query()` that does not return a value and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132156,"byte_end":132224,"line_start":763,"line_end":763,"column_start":5,"column_end":73}},{"value":"/ will fail the task if the query of the pipeline fails.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132229,"byte_end":132287,"line_start":764,"line_end":764,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132292,"byte_end":132295,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to a call of query like this:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132300,"byte_end":132352,"line_start":766,"line_end":766,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132357,"byte_end":132360,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132365,"byte_end":132383,"line_start":768,"line_end":768,"column_start":5,"column_end":23}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132388,"byte_end":132458,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132463,"byte_end":132516,"line_start":770,"line_end":770,"column_start":5,"column_end":58}},{"value":"/ let _ : () = redis::pipe().cmd(\"PING\").query(&mut con).unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132521,"byte_end":132589,"line_start":771,"line_end":771,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132594,"byte_end":132601,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132606,"byte_end":132609,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ NOTE: A Pipeline object may be reused after `query()` with all the commands as were inserted","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132614,"byte_end":132710,"line_start":774,"line_end":774,"column_start":5,"column_end":101}},{"value":"/       to them. In order to clear a Pipeline object with minimal memory released/allocated,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132715,"byte_end":132809,"line_start":775,"line_end":775,"column_start":5,"column_end":99}},{"value":"/       it is necessary to call the `clear()` before inserting new commands.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132814,"byte_end":132892,"line_start":776,"line_end":776,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":132897,"byte_end":132906,"line_start":777,"line_end":777,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133307,"byte_end":133310,"line_start":792,"line_end":792,"column_start":8,"column_end":11},"name":"cmd","qualname":"::cmd::cmd","value":"pub fn cmd(&str) -> Cmd","parent":null,"children":[],"decl_id":null,"docs":" Shortcut function to creating a command with a single argument.","sig":null,"attributes":[{"value":"/ Shortcut function to creating a command with a single argument.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133014,"byte_end":133081,"line_start":783,"line_end":783,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133082,"byte_end":133085,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ The first argument of a redis command is always the name of the command","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133086,"byte_end":133161,"line_start":785,"line_end":785,"column_start":1,"column_end":76}},{"value":"/ which needs to be a string.  This is the recommended way to start a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133162,"byte_end":133233,"line_start":786,"line_end":786,"column_start":1,"column_end":72}},{"value":"/ command pipe.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133234,"byte_end":133251,"line_start":787,"line_end":787,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133252,"byte_end":133255,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133256,"byte_end":133267,"line_start":789,"line_end":789,"column_start":1,"column_end":12}},{"value":"/ redis::cmd(\"PING\");","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133268,"byte_end":133291,"line_start":790,"line_end":790,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133292,"byte_end":133299,"line_start":791,"line_end":791,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":134028,"byte_end":134040,"line_start":814,"line_end":814,"column_start":8,"column_end":20},"name":"pack_command","qualname":"::cmd::pack_command","value":"pub fn pack_command(&[Vec<u8>]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Packs a bunch of commands into a request.  This is generally a quite\n useless function as this functionality is nicely wrapped through the\n `Cmd` object, but in some cases it can be useful.  The return value\n of this can then be send to the low level `ConnectionLike` methods.","sig":null,"attributes":[{"value":"/ Packs a bunch of commands into a request.  This is generally a quite","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133389,"byte_end":133461,"line_start":798,"line_end":798,"column_start":1,"column_end":73}},{"value":"/ useless function as this functionality is nicely wrapped through the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133462,"byte_end":133534,"line_start":799,"line_end":799,"column_start":1,"column_end":73}},{"value":"/ `Cmd` object, but in some cases it can be useful.  The return value","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133535,"byte_end":133606,"line_start":800,"line_end":800,"column_start":1,"column_end":72}},{"value":"/ of this can then be send to the low level `ConnectionLike` methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133607,"byte_end":133678,"line_start":801,"line_end":801,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133679,"byte_end":133682,"line_start":802,"line_end":802,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133683,"byte_end":133695,"line_start":803,"line_end":803,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133696,"byte_end":133699,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133700,"byte_end":133711,"line_start":805,"line_end":805,"column_start":1,"column_end":12}},{"value":"/ # use redis::ToRedisArgs;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133712,"byte_end":133741,"line_start":806,"line_end":806,"column_start":1,"column_end":30}},{"value":"/ let mut args = vec![];","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133742,"byte_end":133768,"line_start":807,"line_end":807,"column_start":1,"column_end":27}},{"value":"/ args.extend(\"SET\".to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133769,"byte_end":133808,"line_start":808,"line_end":808,"column_start":1,"column_end":40}},{"value":"/ args.extend(\"my_key\".to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133809,"byte_end":133851,"line_start":809,"line_end":809,"column_start":1,"column_end":43}},{"value":"/ args.extend(42.to_redis_args());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133852,"byte_end":133888,"line_start":810,"line_end":810,"column_start":1,"column_end":37}},{"value":"/ let cmd = redis::pack_command(&args);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133889,"byte_end":133930,"line_start":811,"line_end":811,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(cmd, b\"*3\\r\\n$3\\r\\nSET\\r\\n$6\\r\\nmy_key\\r\\n$2\\r\\n42\\r\\n\".to_vec());","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":133931,"byte_end":134012,"line_start":812,"line_end":812,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":134013,"byte_end":134020,"line_start":813,"line_end":813,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":134188,"byte_end":134192,"line_start":819,"line_end":819,"column_start":8,"column_end":12},"name":"pipe","qualname":"::cmd::pipe","value":"pub fn pipe() -> Pipeline","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for creating a new pipeline.\n","sig":null,"attributes":[{"value":"/ Shortcut for creating a new pipeline.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":134139,"byte_end":134180,"line_start":818,"line_end":818,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146081,"byte_end":146084,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"::commands::Commands::get","value":"pub fn get<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146235,"byte_end":146239,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"::commands::Commands::keys","value":"pub fn keys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146348,"byte_end":146351,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"::commands::Commands::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs,\n           RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146501,"byte_end":146513,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"::commands::Commands::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, &'a [(K, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146661,"byte_end":146667,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"::commands::Commands::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146867,"byte_end":146874,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"::commands::Commands::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, V, usize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147085,"byte_end":147091,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"::commands::Commands::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147282,"byte_end":147289,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"::commands::Commands::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, &'a [(K, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147456,"byte_end":147462,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"::commands::Commands::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147696,"byte_end":147704,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"::commands::Commands::getrange","value":"pub fn getrange<'a, K: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147899,"byte_end":147907,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"::commands::Commands::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148078,"byte_end":148081,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"::commands::Commands::del","value":"pub fn del<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148185,"byte_end":148191,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"::commands::Commands::exists","value":"pub fn exists<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148308,"byte_end":148314,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"::commands::Commands::expire","value":"pub fn expire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148473,"byte_end":148482,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"::commands::Commands::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148625,"byte_end":148632,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"::commands::Commands::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148798,"byte_end":148808,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"::commands::Commands::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148944,"byte_end":148951,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"::commands::Commands::persist","value":"pub fn persist<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149066,"byte_end":149069,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"::commands::Commands::ttl","value":"pub fn ttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149196,"byte_end":149200,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"::commands::Commands::pttl","value":"pub fn pttl<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149292,"byte_end":149298,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"::commands::Commands::rename","value":"pub fn rename<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149453,"byte_end":149462,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"::commands::Commands::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149594,"byte_end":149600,"line_start":390,"line_end":390,"column_start":8,"column_end":14},"name":"unlink","qualname":"::commands::Commands::unlink","value":"pub fn unlink<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149738,"byte_end":149744,"line_start":397,"line_end":397,"column_start":8,"column_end":14},"name":"append","qualname":"::commands::Commands::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149991,"byte_end":149995,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"incr","qualname":"::commands::Commands::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150312,"byte_end":150316,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"decr","qualname":"::commands::Commands::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150501,"byte_end":150507,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"setbit","qualname":"::commands::Commands::setbit","value":"pub fn setbit<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, usize, bool)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150721,"byte_end":150727,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"getbit","qualname":"::commands::Commands::getbit","value":"pub fn getbit<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150862,"byte_end":150870,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"bitcount","qualname":"::commands::Commands::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150991,"byte_end":151005,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"::commands::Commands::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, usize, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151257,"byte_end":151264,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"bit_and","qualname":"::commands::Commands::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151508,"byte_end":151514,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"bit_or","qualname":"::commands::Commands::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151758,"byte_end":151765,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"::commands::Commands::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151999,"byte_end":152006,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"bit_not","qualname":"::commands::Commands::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152170,"byte_end":152176,"line_start":461,"line_end":461,"column_start":8,"column_end":14},"name":"strlen","qualname":"::commands::Commands::strlen","value":"pub fn strlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152328,"byte_end":152332,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hget","qualname":"::commands::Commands::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152544,"byte_end":152548,"line_start":473,"line_end":473,"column_start":8,"column_end":12},"name":"hdel","qualname":"::commands::Commands::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152694,"byte_end":152698,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"hset","qualname":"::commands::Commands::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152902,"byte_end":152909,"line_start":483,"line_end":483,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"::commands::Commands::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153097,"byte_end":153110,"line_start":488,"line_end":488,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"::commands::Commands::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153273,"byte_end":153278,"line_start":493,"line_end":493,"column_start":8,"column_end":13},"name":"hincr","qualname":"::commands::Commands::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, F, D) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153608,"byte_end":153615,"line_start":502,"line_end":502,"column_start":8,"column_end":15},"name":"hexists","qualname":"::commands::Commands::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, F) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153762,"byte_end":153767,"line_start":507,"line_end":507,"column_start":8,"column_end":13},"name":"hkeys","qualname":"::commands::Commands::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153877,"byte_end":153882,"line_start":512,"line_end":512,"column_start":8,"column_end":13},"name":"hvals","qualname":"::commands::Commands::hvals","value":"pub fn hvals<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154003,"byte_end":154010,"line_start":517,"line_end":517,"column_start":8,"column_end":15},"name":"hgetall","qualname":"::commands::Commands::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154118,"byte_end":154122,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"hlen","qualname":"::commands::Commands::hlen","value":"pub fn hlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154301,"byte_end":154306,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"blpop","qualname":"::commands::Commands::blpop","value":"pub fn blpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154490,"byte_end":154495,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"brpop","qualname":"::commands::Commands::brpop","value":"pub fn brpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154708,"byte_end":154718,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"::commands::Commands::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154901,"byte_end":154907,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"lindex","qualname":"::commands::Commands::lindex","value":"pub fn lindex<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155064,"byte_end":155078,"line_start":550,"line_end":550,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"::commands::Commands::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155311,"byte_end":155324,"line_start":556,"line_end":556,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"::commands::Commands::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs, V: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, P, V)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155551,"byte_end":155555,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"llen","qualname":"::commands::Commands::llen","value":"pub fn llen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155698,"byte_end":155702,"line_start":567,"line_end":567,"column_start":8,"column_end":12},"name":"lpop","qualname":"::commands::Commands::lpop","value":"pub fn lpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155853,"byte_end":155857,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"lpos","qualname":"::commands::Commands::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, V, LposOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156078,"byte_end":156083,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"lpush","qualname":"::commands::Commands::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156307,"byte_end":156319,"line_start":583,"line_end":583,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"::commands::Commands::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156494,"byte_end":156500,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"lrange","qualname":"::commands::Commands::lrange","value":"pub fn lrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156728,"byte_end":156732,"line_start":594,"line_end":594,"column_start":8,"column_end":12},"name":"lrem","qualname":"::commands::Commands::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156974,"byte_end":156979,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"ltrim","qualname":"::commands::Commands::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157146,"byte_end":157150,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"lset","qualname":"::commands::Commands::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, isize, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157354,"byte_end":157358,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"rpop","qualname":"::commands::Commands::rpop","value":"pub fn rpop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157500,"byte_end":157509,"line_start":615,"line_end":615,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"::commands::Commands::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157686,"byte_end":157691,"line_start":620,"line_end":620,"column_start":8,"column_end":13},"name":"rpush","qualname":"::commands::Commands::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157913,"byte_end":157925,"line_start":626,"line_end":626,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"::commands::Commands::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, V) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158097,"byte_end":158101,"line_start":633,"line_end":633,"column_start":8,"column_end":12},"name":"sadd","qualname":"::commands::Commands::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158254,"byte_end":158259,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"scard","qualname":"::commands::Commands::scard","value":"pub fn scard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158362,"byte_end":158367,"line_start":643,"line_end":643,"column_start":8,"column_end":13},"name":"sdiff","qualname":"::commands::Commands::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158509,"byte_end":158519,"line_start":648,"line_end":648,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"::commands::Commands::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158653,"byte_end":158659,"line_start":653,"line_end":653,"column_start":8,"column_end":14},"name":"sinter","qualname":"::commands::Commands::sinter","value":"pub fn sinter<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158803,"byte_end":158814,"line_start":658,"line_end":658,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"::commands::Commands::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158973,"byte_end":158982,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"sismember","qualname":"::commands::Commands::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159134,"byte_end":159142,"line_start":668,"line_end":668,"column_start":8,"column_end":16},"name":"smembers","qualname":"::commands::Commands::smembers","value":"pub fn smembers<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159263,"byte_end":159268,"line_start":673,"line_end":673,"column_start":8,"column_end":13},"name":"smove","qualname":"::commands::Commands::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159461,"byte_end":159465,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"spop","qualname":"::commands::Commands::spop","value":"pub fn spop<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159577,"byte_end":159588,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"srandmember","qualname":"::commands::Commands::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159713,"byte_end":159733,"line_start":688,"line_end":688,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"::commands::Commands::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, usize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159882,"byte_end":159886,"line_start":693,"line_end":693,"column_start":8,"column_end":12},"name":"srem","qualname":"::commands::Commands::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160022,"byte_end":160028,"line_start":698,"line_end":698,"column_start":8,"column_end":14},"name":"sunion","qualname":"::commands::Commands::sunion","value":"pub fn sunion<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160166,"byte_end":160177,"line_start":703,"line_end":703,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"::commands::Commands::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160389,"byte_end":160393,"line_start":710,"line_end":710,"column_start":8,"column_end":12},"name":"zadd","qualname":"::commands::Commands::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M, S) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160627,"byte_end":160640,"line_start":715,"line_end":715,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"::commands::Commands::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, &'a [(S, M)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160825,"byte_end":160830,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"zcard","qualname":"::commands::Commands::zcard","value":"pub fn zcard<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160980,"byte_end":160986,"line_start":725,"line_end":725,"column_start":8,"column_end":14},"name":"zcount","qualname":"::commands::Commands::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161264,"byte_end":161269,"line_start":731,"line_end":731,"column_start":8,"column_end":13},"name":"zincr","qualname":"::commands::Commands::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M, D) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161548,"byte_end":161559,"line_start":737,"line_end":737,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"::commands::Commands::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161813,"byte_end":161828,"line_start":743,"line_end":743,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"::commands::Commands::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162110,"byte_end":162125,"line_start":749,"line_end":749,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"::commands::Commands::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162368,"byte_end":162377,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"::commands::Commands::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, L, L) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162590,"byte_end":162597,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"::commands::Commands::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162782,"byte_end":162789,"line_start":764,"line_end":764,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"::commands::Commands::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162947,"byte_end":162953,"line_start":769,"line_end":769,"column_start":8,"column_end":14},"name":"zrange","qualname":"::commands::Commands::zrange","value":"pub fn zrange<'a, K: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163146,"byte_end":163163,"line_start":774,"line_end":774,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"::commands::Commands::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163378,"byte_end":163389,"line_start":779,"line_end":779,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"::commands::Commands::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163641,"byte_end":163658,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"::commands::Commands::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                             isize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163958,"byte_end":163972,"line_start":791,"line_end":791,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"::commands::Commands::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164227,"byte_end":164247,"line_start":797,"line_end":797,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"::commands::Commands::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                isize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164534,"byte_end":164547,"line_start":803,"line_end":803,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"::commands::Commands::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164767,"byte_end":164791,"line_start":808,"line_end":808,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"::commands::Commands::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs,\n                                RV: FromRedisValue>(&mut Self, K, M, MM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165028,"byte_end":165047,"line_start":813,"line_end":813,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"::commands::Commands::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs,\n                           RV: FromRedisValue>(&mut Self, K, M, MM, isize,\n                                               isize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165356,"byte_end":165386,"line_start":819,"line_end":819,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"::commands::Commands::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs,\n                                      RV: FromRedisValue>(&mut Self, K, M, MM,\n                                                          isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165699,"byte_end":165704,"line_start":826,"line_end":826,"column_start":8,"column_end":13},"name":"zrank","qualname":"::commands::Commands::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165868,"byte_end":165872,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"zrem","qualname":"::commands::Commands::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166067,"byte_end":166076,"line_start":836,"line_end":836,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"::commands::Commands::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166288,"byte_end":166303,"line_start":841,"line_end":841,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"::commands::Commands::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166500,"byte_end":166511,"line_start":846,"line_end":846,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"::commands::Commands::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, M, MM) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166768,"byte_end":166777,"line_start":852,"line_end":852,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"::commands::Commands::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167007,"byte_end":167027,"line_start":858,"line_end":858,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"::commands::Commands::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167229,"byte_end":167245,"line_start":863,"line_end":863,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"::commands::Commands::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs, M: ToRedisArgs,\n                        RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167468,"byte_end":167495,"line_start":868,"line_end":868,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"::commands::Commands::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs,\n                                   RV: FromRedisValue>(&mut Self, K, MM, M)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167735,"byte_end":167757,"line_start":873,"line_end":873,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"::commands::Commands::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, MM, M, isize,\n                                                  isize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168069,"byte_end":168102,"line_start":879,"line_end":879,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"::commands::Commands::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs,\n                                         RV: FromRedisValue>(&mut Self, K, MM,\n                                                             M, isize, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168456,"byte_end":168464,"line_start":886,"line_end":886,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"::commands::Commands::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168649,"byte_end":168655,"line_start":891,"line_end":891,"column_start":8,"column_end":14},"name":"zscore","qualname":"::commands::Commands::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168893,"byte_end":168904,"line_start":897,"line_end":897,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"::commands::Commands::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169155,"byte_end":169170,"line_start":903,"line_end":903,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"::commands::Commands::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169449,"byte_end":169464,"line_start":909,"line_end":909,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"::commands::Commands::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169711,"byte_end":169716,"line_start":916,"line_end":916,"column_start":8,"column_end":13},"name":"pfadd","qualname":"::commands::Commands::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169933,"byte_end":169940,"line_start":922,"line_end":922,"column_start":8,"column_end":15},"name":"pfcount","qualname":"::commands::Commands::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170071,"byte_end":170078,"line_start":927,"line_end":927,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"::commands::Commands::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170228,"byte_end":170235,"line_start":932,"line_end":932,"column_start":8,"column_end":15},"name":"publish","qualname":"::commands::Commands::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, E) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170686,"byte_end":170694,"line_start":943,"line_end":943,"column_start":8,"column_end":16},"name":"acl_load","qualname":"::commands::Commands::acl_load","value":"pub fn acl_load<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171024,"byte_end":171032,"line_start":952,"line_end":952,"column_start":8,"column_end":16},"name":"acl_save","qualname":"::commands::Commands::acl_save","value":"pub fn acl_save<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171229,"byte_end":171237,"line_start":959,"line_end":959,"column_start":8,"column_end":16},"name":"acl_list","qualname":"::commands::Commands::acl_list","value":"pub fn acl_list<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171477,"byte_end":171486,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"acl_users","qualname":"::commands::Commands::acl_users","value":"pub fn acl_users<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171682,"byte_end":171693,"line_start":974,"line_end":974,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"::commands::Commands::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171917,"byte_end":171928,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"::commands::Commands::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172203,"byte_end":172220,"line_start":989,"line_end":989,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"::commands::Commands::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs,\n                         RV: FromRedisValue>(&mut Self, K, &'a [acl::Rule])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172553,"byte_end":172564,"line_start":997,"line_end":997,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"::commands::Commands::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, &'a [K])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172789,"byte_end":172796,"line_start":1004,"line_end":1004,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"::commands::Commands::acl_cat","value":"pub fn acl_cat<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172990,"byte_end":173010,"line_start":1011,"line_end":1011,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"::commands::Commands::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173266,"byte_end":173277,"line_start":1018,"line_end":1018,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"::commands::Commands::acl_genpass","value":"pub fn acl_genpass<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173496,"byte_end":173512,"line_start":1025,"line_end":1025,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"::commands::Commands::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a, RV: FromRedisValue>(&mut Self, isize)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173742,"byte_end":173752,"line_start":1032,"line_end":1032,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"::commands::Commands::acl_whoami","value":"pub fn acl_whoami<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173936,"byte_end":173943,"line_start":1039,"line_end":1039,"column_start":8,"column_end":15},"name":"acl_log","qualname":"::commands::Commands::acl_log","value":"pub fn acl_log<'a, RV: FromRedisValue>(&mut Self, isize) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174125,"byte_end":174138,"line_start":1047,"line_end":1047,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"::commands::Commands::acl_log_reset","value":"pub fn acl_log_reset<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174350,"byte_end":174358,"line_start":1054,"line_end":1054,"column_start":8,"column_end":16},"name":"acl_help","qualname":"::commands::Commands::acl_help","value":"pub fn acl_help<'a, RV: FromRedisValue>(&mut Self) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":175794,"byte_end":175801,"line_start":1097,"line_end":1097,"column_start":8,"column_end":15},"name":"geo_add","qualname":"::commands::Commands::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":176955,"byte_end":176963,"line_start":1134,"line_end":1134,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"::commands::Commands::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs, M2: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M1, M2, geo::Unit)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":178021,"byte_end":178029,"line_start":1168,"line_end":1168,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"::commands::Commands::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":179121,"byte_end":179128,"line_start":1197,"line_end":1197,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"::commands::Commands::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs,\n               RV: FromRedisValue>(&mut Self, K, M) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180266,"byte_end":180276,"line_start":1222,"line_end":1222,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"::commands::Commands::geo_radius","value":"pub fn geo_radius<'a, K: ToRedisArgs,\n                  RV: FromRedisValue>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                      geo::RadiusOptions) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180867,"byte_end":180887,"line_start":1243,"line_end":1243,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"::commands::Commands::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs, M: ToRedisArgs,\n                            RV: FromRedisValue>(&mut Self, K, M, f64,\n                                                geo::Unit, geo::RadiusOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181485,"byte_end":181489,"line_start":1269,"line_end":1269,"column_start":8,"column_end":12},"name":"xack","qualname":"::commands::Commands::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, G, &'a [I]) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181968,"byte_end":181972,"line_start":1287,"line_end":1287,"column_start":8,"column_end":12},"name":"xadd","qualname":"::commands::Commands::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, ID, &'a [(F, V)])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182458,"byte_end":182466,"line_start":1304,"line_end":1304,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"::commands::Commands::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, ID, BTM) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182911,"byte_end":182922,"line_start":1319,"line_end":1319,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"::commands::Commands::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs,\n                   RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen,\n                                       ID, &'a [(F, V)]) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":183548,"byte_end":183563,"line_start":1345,"line_end":1345,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"::commands::Commands::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs, BTM: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K,\n                                           streams::StreamMaxlen, ID, BTM)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":184312,"byte_end":184318,"line_start":1371,"line_end":1371,"column_start":8,"column_end":14},"name":"xclaim","qualname":"::commands::Commands::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186185,"byte_end":186199,"line_start":1421,"line_end":1421,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"::commands::Commands::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs, ID: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, C, MIT, &'a [ID],\n                                          streams::StreamClaimOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186903,"byte_end":186907,"line_start":1452,"line_end":1452,"column_start":8,"column_end":12},"name":"xdel","qualname":"::commands::Commands::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs,\n            RV: FromRedisValue>(&mut Self, K, &'a [ID]) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":187548,"byte_end":187561,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"::commands::Commands::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188106,"byte_end":188128,"line_start":1491,"line_end":1491,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"::commands::Commands::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs,\n                              RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188702,"byte_end":188714,"line_start":1517,"line_end":1517,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"::commands::Commands::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs, ID: ToRedisArgs,\n                    RV: FromRedisValue>(&mut Self, K, G, ID)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189194,"byte_end":189208,"line_start":1537,"line_end":1537,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"::commands::Commands::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189636,"byte_end":189654,"line_start":1552,"line_end":1552,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"::commands::Commands::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                          RV: FromRedisValue>(&mut Self, K, G, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190369,"byte_end":190384,"line_start":1577,"line_end":1577,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"::commands::Commands::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190975,"byte_end":190987,"line_start":1599,"line_end":1599,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"::commands::Commands::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191526,"byte_end":191538,"line_start":1616,"line_end":1616,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"::commands::Commands::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191830,"byte_end":191834,"line_start":1627,"line_end":1627,"column_start":8,"column_end":12},"name":"xlen","qualname":"::commands::Commands::xlen","value":"pub fn xlen<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":192544,"byte_end":192552,"line_start":1648,"line_end":1648,"column_start":8,"column_end":16},"name":"xpending","qualname":"::commands::Commands::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs,\n                RV: FromRedisValue>(&mut Self, K, G) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":193233,"byte_end":193247,"line_start":1669,"line_end":1669,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"::commands::Commands::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs,\n                      RV: FromRedisValue>(&mut Self, K, G, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":194095,"byte_end":194118,"line_start":1703,"line_end":1703,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"::commands::Commands::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs,\n                               RV: FromRedisValue>(&mut Self, K, G, S, E, C,\n                                                   CN) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195027,"byte_end":195033,"line_start":1740,"line_end":1740,"column_start":8,"column_end":14},"name":"xrange","qualname":"::commands::Commands::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n              RV: FromRedisValue>(&mut Self, K, S, E) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195470,"byte_end":195480,"line_start":1757,"line_end":1757,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"::commands::Commands::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195787,"byte_end":195799,"line_start":1769,"line_end":1769,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"::commands::Commands::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs, RV: FromRedisValue>(&mut Self, K, S, E, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":196506,"byte_end":196511,"line_start":1794,"line_end":1794,"column_start":8,"column_end":13},"name":"xread","qualname":"::commands::Commands::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID])\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198262,"byte_end":198275,"line_start":1839,"line_end":1839,"column_start":8,"column_end":21},"name":"xread_options","qualname":"::commands::Commands::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                     RV: FromRedisValue>(&mut Self, &'a [K], &'a [ID],\n                                         streams::StreamReadOptions)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198876,"byte_end":198885,"line_start":1863,"line_end":1863,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"::commands::Commands::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                 RV: FromRedisValue>(&mut Self, K, E, S) -> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199232,"byte_end":199245,"line_start":1877,"line_end":1877,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"::commands::Commands::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs, RV: FromRedisValue>(&mut Self, K)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199617,"byte_end":199632,"line_start":1889,"line_end":1889,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"::commands::Commands::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs,\n                       RV: FromRedisValue>(&mut Self, K, E, S, C)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200172,"byte_end":200177,"line_start":1911,"line_end":1911,"column_start":8,"column_end":13},"name":"xtrim","qualname":"::commands::Commands::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs,\n             RV: FromRedisValue>(&mut Self, K, streams::StreamMaxlen)\n-> RedisResult<RV>","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136246,"byte_end":136254,"line_start":56,"line_end":56,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136273,"byte_end":136282,"line_start":57,"line_end":57,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":136299,"byte_end":136367,"line_start":58,"line_end":58,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146081,"byte_end":146084,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"<Cmd>::get","value":"pub fn get<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146235,"byte_end":146239,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"<Cmd>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146348,"byte_end":146351,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"<Cmd>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146501,"byte_end":146513,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Cmd>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146661,"byte_end":146667,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Cmd>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146867,"byte_end":146874,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Cmd>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147085,"byte_end":147091,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Cmd>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147282,"byte_end":147289,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Cmd>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&'a [(K, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147456,"byte_end":147462,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"<Cmd>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147696,"byte_end":147704,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Cmd>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147899,"byte_end":147907,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Cmd>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148078,"byte_end":148081,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"<Cmd>::del","value":"pub fn del<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148185,"byte_end":148191,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"<Cmd>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148308,"byte_end":148314,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"<Cmd>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148473,"byte_end":148482,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Cmd>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148625,"byte_end":148632,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Cmd>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148798,"byte_end":148808,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Cmd>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148944,"byte_end":148951,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"<Cmd>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149066,"byte_end":149069,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Cmd>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149196,"byte_end":149200,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Cmd>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149292,"byte_end":149298,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"<Cmd>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149453,"byte_end":149462,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Cmd>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149594,"byte_end":149600,"line_start":390,"line_end":390,"column_start":8,"column_end":14},"name":"unlink","qualname":"<Cmd>::unlink","value":"pub fn unlink<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149738,"byte_end":149744,"line_start":397,"line_end":397,"column_start":8,"column_end":14},"name":"append","qualname":"<Cmd>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149991,"byte_end":149995,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"incr","qualname":"<Cmd>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150312,"byte_end":150316,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"decr","qualname":"<Cmd>::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150501,"byte_end":150507,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Cmd>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(K, usize, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150721,"byte_end":150727,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Cmd>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150862,"byte_end":150870,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Cmd>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150991,"byte_end":151005,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Cmd>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(K, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151257,"byte_end":151264,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Cmd>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151508,"byte_end":151514,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Cmd>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151758,"byte_end":151765,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Cmd>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151999,"byte_end":152006,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Cmd>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152170,"byte_end":152176,"line_start":461,"line_end":461,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Cmd>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152328,"byte_end":152332,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hget","qualname":"<Cmd>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152544,"byte_end":152548,"line_start":473,"line_end":473,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Cmd>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152694,"byte_end":152698,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"hset","qualname":"<Cmd>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152902,"byte_end":152909,"line_start":483,"line_end":483,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Cmd>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs, V: ToRedisArgs>(K, F, V)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153097,"byte_end":153110,"line_start":488,"line_end":488,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Cmd>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(K, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153273,"byte_end":153278,"line_start":493,"line_end":493,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Cmd>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs, D: ToRedisArgs>(K, F, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153608,"byte_end":153615,"line_start":502,"line_end":502,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Cmd>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(K, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153762,"byte_end":153767,"line_start":507,"line_end":507,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Cmd>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153877,"byte_end":153882,"line_start":512,"line_end":512,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Cmd>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154003,"byte_end":154010,"line_start":517,"line_end":517,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Cmd>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154118,"byte_end":154122,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Cmd>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154301,"byte_end":154306,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Cmd>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154490,"byte_end":154495,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Cmd>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154708,"byte_end":154718,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Cmd>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(K, K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154901,"byte_end":154907,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Cmd>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155064,"byte_end":155078,"line_start":550,"line_end":550,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Cmd>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155311,"byte_end":155324,"line_start":556,"line_end":556,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Cmd>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(K, P, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155551,"byte_end":155555,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"llen","qualname":"<Cmd>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155698,"byte_end":155702,"line_start":567,"line_end":567,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Cmd>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155853,"byte_end":155857,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"lpos","qualname":"<Cmd>::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V, LposOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156078,"byte_end":156083,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Cmd>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156307,"byte_end":156319,"line_start":583,"line_end":583,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Cmd>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156494,"byte_end":156500,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Cmd>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156728,"byte_end":156732,"line_start":594,"line_end":594,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Cmd>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156974,"byte_end":156979,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Cmd>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157146,"byte_end":157150,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"lset","qualname":"<Cmd>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(K, isize, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157354,"byte_end":157358,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Cmd>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157500,"byte_end":157509,"line_start":615,"line_end":615,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Cmd>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157686,"byte_end":157691,"line_start":620,"line_end":620,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Cmd>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157913,"byte_end":157925,"line_start":626,"line_end":626,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Cmd>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158097,"byte_end":158101,"line_start":633,"line_end":633,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Cmd>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158254,"byte_end":158259,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"scard","qualname":"<Cmd>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158362,"byte_end":158367,"line_start":643,"line_end":643,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Cmd>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158509,"byte_end":158519,"line_start":648,"line_end":648,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Cmd>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158653,"byte_end":158659,"line_start":653,"line_end":653,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Cmd>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158803,"byte_end":158814,"line_start":658,"line_end":658,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Cmd>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158973,"byte_end":158982,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Cmd>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159134,"byte_end":159142,"line_start":668,"line_end":668,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Cmd>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159263,"byte_end":159268,"line_start":673,"line_end":673,"column_start":8,"column_end":13},"name":"smove","qualname":"<Cmd>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(K, K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159461,"byte_end":159465,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"spop","qualname":"<Cmd>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159577,"byte_end":159588,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Cmd>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159713,"byte_end":159733,"line_start":688,"line_end":688,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Cmd>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(K, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159882,"byte_end":159886,"line_start":693,"line_end":693,"column_start":8,"column_end":12},"name":"srem","qualname":"<Cmd>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160022,"byte_end":160028,"line_start":698,"line_end":698,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Cmd>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160166,"byte_end":160177,"line_start":703,"line_end":703,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Cmd>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160389,"byte_end":160393,"line_start":710,"line_end":710,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Cmd>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs, M: ToRedisArgs>(K, M, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160627,"byte_end":160640,"line_start":715,"line_end":715,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Cmd>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(K, &'a [(S, M)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160825,"byte_end":160830,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Cmd>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160980,"byte_end":160986,"line_start":725,"line_end":725,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Cmd>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs, MM: ToRedisArgs>(K, M, MM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161264,"byte_end":161269,"line_start":731,"line_end":731,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Cmd>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs, D: ToRedisArgs>(K, M, D)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161548,"byte_end":161559,"line_start":737,"line_end":737,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Cmd>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161813,"byte_end":161828,"line_start":743,"line_end":743,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Cmd>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162110,"byte_end":162125,"line_start":749,"line_end":749,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Cmd>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162368,"byte_end":162377,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Cmd>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(K, L, L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162590,"byte_end":162597,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Cmd>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162782,"byte_end":162789,"line_start":764,"line_end":764,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Cmd>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(K, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162947,"byte_end":162953,"line_start":769,"line_end":769,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Cmd>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163146,"byte_end":163163,"line_start":774,"line_end":774,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Cmd>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163378,"byte_end":163389,"line_start":779,"line_end":779,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Cmd>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163641,"byte_end":163658,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Cmd>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163958,"byte_end":163972,"line_start":791,"line_end":791,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Cmd>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164227,"byte_end":164247,"line_start":797,"line_end":797,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Cmd>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164534,"byte_end":164547,"line_start":803,"line_end":803,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Cmd>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164767,"byte_end":164791,"line_start":808,"line_end":808,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Cmd>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165028,"byte_end":165047,"line_start":813,"line_end":813,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Cmd>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(K, M, MM, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165356,"byte_end":165386,"line_start":819,"line_end":819,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Cmd>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(K, M, MM, isize, isize)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165699,"byte_end":165704,"line_start":826,"line_end":826,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Cmd>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165868,"byte_end":165872,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Cmd>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166067,"byte_end":166076,"line_start":836,"line_end":836,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Cmd>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166288,"byte_end":166303,"line_start":841,"line_end":841,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Cmd>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166500,"byte_end":166511,"line_start":846,"line_end":846,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Cmd>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(K, M, MM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166768,"byte_end":166777,"line_start":852,"line_end":852,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Cmd>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167007,"byte_end":167027,"line_start":858,"line_end":858,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Cmd>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(K, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167229,"byte_end":167245,"line_start":863,"line_end":863,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Cmd>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167468,"byte_end":167495,"line_start":868,"line_end":868,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Cmd>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(K, MM, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167735,"byte_end":167757,"line_start":873,"line_end":873,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Cmd>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(K, MM, M, isize, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168069,"byte_end":168102,"line_start":879,"line_end":879,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Cmd>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(K, MM, M, isize,\n                                                         isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168456,"byte_end":168464,"line_start":886,"line_end":886,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Cmd>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168649,"byte_end":168655,"line_start":891,"line_end":891,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Cmd>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168893,"byte_end":168904,"line_start":897,"line_end":897,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Cmd>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169155,"byte_end":169170,"line_start":903,"line_end":903,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Cmd>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169449,"byte_end":169464,"line_start":909,"line_end":909,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Cmd>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(K, &'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169711,"byte_end":169716,"line_start":916,"line_end":916,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Cmd>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169933,"byte_end":169940,"line_start":922,"line_end":922,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Cmd>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170071,"byte_end":170078,"line_start":927,"line_end":927,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Cmd>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(K, K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170228,"byte_end":170235,"line_start":932,"line_end":932,"column_start":8,"column_end":15},"name":"publish","qualname":"<Cmd>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(K, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170686,"byte_end":170694,"line_start":943,"line_end":943,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Cmd>::acl_load","value":"pub fn acl_load<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171024,"byte_end":171032,"line_start":952,"line_end":952,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Cmd>::acl_save","value":"pub fn acl_save<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171229,"byte_end":171237,"line_start":959,"line_end":959,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Cmd>::acl_list","value":"pub fn acl_list<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171477,"byte_end":171486,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Cmd>::acl_users","value":"pub fn acl_users<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171682,"byte_end":171693,"line_start":974,"line_end":974,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Cmd>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171917,"byte_end":171928,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Cmd>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172203,"byte_end":172220,"line_start":989,"line_end":989,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Cmd>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(K, &'a [acl::Rule]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172553,"byte_end":172564,"line_start":997,"line_end":997,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Cmd>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&'a [K]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172789,"byte_end":172796,"line_start":1004,"line_end":1004,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Cmd>::acl_cat","value":"pub fn acl_cat<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172990,"byte_end":173010,"line_start":1011,"line_end":1011,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Cmd>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173266,"byte_end":173277,"line_start":1018,"line_end":1018,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Cmd>::acl_genpass","value":"pub fn acl_genpass<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173496,"byte_end":173512,"line_start":1025,"line_end":1025,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Cmd>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173742,"byte_end":173752,"line_start":1032,"line_end":1032,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Cmd>::acl_whoami","value":"pub fn acl_whoami<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173936,"byte_end":173943,"line_start":1039,"line_end":1039,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Cmd>::acl_log","value":"pub fn acl_log<'a>(isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174125,"byte_end":174138,"line_start":1047,"line_end":1047,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Cmd>::acl_log_reset","value":"pub fn acl_log_reset<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174350,"byte_end":174358,"line_start":1054,"line_end":1054,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Cmd>::acl_help","value":"pub fn acl_help<'a>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":175794,"byte_end":175801,"line_start":1097,"line_end":1097,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Cmd>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":176955,"byte_end":176963,"line_start":1134,"line_end":1134,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Cmd>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(K, M1, M2, geo::Unit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":178021,"byte_end":178029,"line_start":1168,"line_end":1168,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Cmd>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":179121,"byte_end":179128,"line_start":1197,"line_end":1197,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Cmd>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(K, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180266,"byte_end":180276,"line_start":1222,"line_end":1222,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Cmd>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180867,"byte_end":180887,"line_start":1243,"line_end":1243,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Cmd>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181485,"byte_end":181489,"line_start":1269,"line_end":1269,"column_start":8,"column_end":12},"name":"xack","qualname":"<Cmd>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs, I: ToRedisArgs>(K, G, &'a [I])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181968,"byte_end":181972,"line_start":1287,"line_end":1287,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Cmd>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(K, ID, &'a [(F, V)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182458,"byte_end":182466,"line_start":1304,"line_end":1304,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Cmd>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(K, ID, BTM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182911,"byte_end":182922,"line_start":1319,"line_end":1319,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Cmd>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(K, streams::StreamMaxlen, ID, &'a [(F, V)])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":183548,"byte_end":183563,"line_start":1345,"line_end":1345,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Cmd>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(K, streams::StreamMaxlen, ID, BTM)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":184312,"byte_end":184318,"line_start":1371,"line_end":1371,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Cmd>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs, ID: ToRedisArgs>(K, G, C, MIT, &'a [ID])\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186185,"byte_end":186199,"line_start":1421,"line_end":1421,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Cmd>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186903,"byte_end":186907,"line_start":1452,"line_end":1452,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Cmd>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(K, &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":187548,"byte_end":187561,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Cmd>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188106,"byte_end":188128,"line_start":1491,"line_end":1491,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Cmd>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188702,"byte_end":188714,"line_start":1517,"line_end":1517,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Cmd>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(K, G, ID) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189194,"byte_end":189208,"line_start":1537,"line_end":1537,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Cmd>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189636,"byte_end":189654,"line_start":1552,"line_end":1552,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Cmd>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(K, G, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190369,"byte_end":190384,"line_start":1577,"line_end":1577,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Cmd>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190975,"byte_end":190987,"line_start":1599,"line_end":1599,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Cmd>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191526,"byte_end":191538,"line_start":1616,"line_end":1616,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Cmd>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191830,"byte_end":191834,"line_start":1627,"line_end":1627,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Cmd>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":192544,"byte_end":192552,"line_start":1648,"line_end":1648,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Cmd>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(K, G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":193233,"byte_end":193247,"line_start":1669,"line_end":1669,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Cmd>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs, C: ToRedisArgs>(K, G, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":194095,"byte_end":194118,"line_start":1703,"line_end":1703,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Cmd>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(K, G, S, E, C, CN) -> Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195027,"byte_end":195033,"line_start":1740,"line_end":1740,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Cmd>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs>(K, S, E)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195470,"byte_end":195480,"line_start":1757,"line_end":1757,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Cmd>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195787,"byte_end":195799,"line_start":1769,"line_end":1769,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Cmd>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(K, S, E, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":196506,"byte_end":196511,"line_start":1794,"line_end":1794,"column_start":8,"column_end":13},"name":"xread","qualname":"<Cmd>::xread","value":"pub fn xread<'a, K: ToRedisArgs, ID: ToRedisArgs>(&'a [K], &'a [ID]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198262,"byte_end":198275,"line_start":1839,"line_end":1839,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Cmd>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&'a [K], &'a [ID],\n                                      streams::StreamReadOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198876,"byte_end":198885,"line_start":1863,"line_end":1863,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Cmd>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs>(K, E, S)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199232,"byte_end":199245,"line_start":1877,"line_end":1877,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Cmd>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199617,"byte_end":199632,"line_start":1889,"line_end":1889,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Cmd>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(K, E, S, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200172,"byte_end":200177,"line_start":1911,"line_end":1911,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Cmd>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(K, streams::StreamMaxlen) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139565,"byte_end":139573,"line_start":135,"line_end":135,"column_start":19,"column_end":27}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":139592,"byte_end":139660,"line_start":136,"line_end":136,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146081,"byte_end":146084,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"::commands::AsyncCommands::get","value":"pub fn get<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146235,"byte_end":146239,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"::commands::AsyncCommands::keys","value":"pub fn keys<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146348,"byte_end":146351,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"::commands::AsyncCommands::set","value":"pub fn set<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n           Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146501,"byte_end":146513,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"::commands::AsyncCommands::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, &'a [(K, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146661,"byte_end":146667,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"::commands::AsyncCommands::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146867,"byte_end":146874,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"::commands::AsyncCommands::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, V, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147085,"byte_end":147091,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"::commands::AsyncCommands::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147282,"byte_end":147289,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"::commands::AsyncCommands::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, &'a [(K, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147456,"byte_end":147462,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"::commands::AsyncCommands::getset","value":"pub fn getset<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147696,"byte_end":147704,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"::commands::AsyncCommands::getrange","value":"pub fn getrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147899,"byte_end":147907,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"::commands::AsyncCommands::setrange","value":"pub fn setrange<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148078,"byte_end":148081,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"::commands::AsyncCommands::del","value":"pub fn del<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148185,"byte_end":148191,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"::commands::AsyncCommands::exists","value":"pub fn exists<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148308,"byte_end":148314,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"::commands::AsyncCommands::expire","value":"pub fn expire<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148473,"byte_end":148482,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"::commands::AsyncCommands::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148625,"byte_end":148632,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"::commands::AsyncCommands::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148798,"byte_end":148808,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"::commands::AsyncCommands::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148944,"byte_end":148951,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"::commands::AsyncCommands::persist","value":"pub fn persist<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149066,"byte_end":149069,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"::commands::AsyncCommands::ttl","value":"pub fn ttl<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149196,"byte_end":149200,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"::commands::AsyncCommands::pttl","value":"pub fn pttl<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149292,"byte_end":149298,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"::commands::AsyncCommands::rename","value":"pub fn rename<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149453,"byte_end":149462,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"::commands::AsyncCommands::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149594,"byte_end":149600,"line_start":390,"line_end":390,"column_start":8,"column_end":14},"name":"unlink","qualname":"::commands::AsyncCommands::unlink","value":"pub fn unlink<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149738,"byte_end":149744,"line_start":397,"line_end":397,"column_start":8,"column_end":14},"name":"append","qualname":"::commands::AsyncCommands::append","value":"pub fn append<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149991,"byte_end":149995,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"incr","qualname":"::commands::AsyncCommands::incr","value":"pub fn incr<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150312,"byte_end":150316,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"decr","qualname":"::commands::AsyncCommands::decr","value":"pub fn decr<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150501,"byte_end":150507,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"setbit","qualname":"::commands::AsyncCommands::setbit","value":"pub fn setbit<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize, bool) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150721,"byte_end":150727,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"getbit","qualname":"::commands::AsyncCommands::getbit","value":"pub fn getbit<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150862,"byte_end":150870,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"bitcount","qualname":"::commands::AsyncCommands::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150991,"byte_end":151005,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"::commands::AsyncCommands::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, usize, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151257,"byte_end":151264,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"bit_and","qualname":"::commands::AsyncCommands::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151508,"byte_end":151514,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"bit_or","qualname":"::commands::AsyncCommands::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151758,"byte_end":151765,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"::commands::AsyncCommands::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151999,"byte_end":152006,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"bit_not","qualname":"::commands::AsyncCommands::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152170,"byte_end":152176,"line_start":461,"line_end":461,"column_start":8,"column_end":14},"name":"strlen","qualname":"::commands::AsyncCommands::strlen","value":"pub fn strlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152328,"byte_end":152332,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hget","qualname":"::commands::AsyncCommands::hget","value":"pub fn hget<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152544,"byte_end":152548,"line_start":473,"line_end":473,"column_start":8,"column_end":12},"name":"hdel","qualname":"::commands::AsyncCommands::hdel","value":"pub fn hdel<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152694,"byte_end":152698,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"hset","qualname":"::commands::AsyncCommands::hset","value":"pub fn hset<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n            Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, F, V) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152902,"byte_end":152909,"line_start":483,"line_end":483,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"::commands::AsyncCommands::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n               Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, F, V) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153097,"byte_end":153110,"line_start":488,"line_end":488,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"::commands::AsyncCommands::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs +\n                     Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, &'a [(F, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153273,"byte_end":153278,"line_start":493,"line_end":493,"column_start":8,"column_end":13},"name":"hincr","qualname":"::commands::AsyncCommands::hincr","value":"pub fn hincr<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n             Sync + 'a, D: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, F, D) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153608,"byte_end":153615,"line_start":502,"line_end":502,"column_start":8,"column_end":15},"name":"hexists","qualname":"::commands::AsyncCommands::hexists","value":"pub fn hexists<'a, K: ToRedisArgs + Send + Sync + 'a, F: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, F) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153762,"byte_end":153767,"line_start":507,"line_end":507,"column_start":8,"column_end":13},"name":"hkeys","qualname":"::commands::AsyncCommands::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153877,"byte_end":153882,"line_start":512,"line_end":512,"column_start":8,"column_end":13},"name":"hvals","qualname":"::commands::AsyncCommands::hvals","value":"pub fn hvals<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154003,"byte_end":154010,"line_start":517,"line_end":517,"column_start":8,"column_end":15},"name":"hgetall","qualname":"::commands::AsyncCommands::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154118,"byte_end":154122,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"hlen","qualname":"::commands::AsyncCommands::hlen","value":"pub fn hlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154301,"byte_end":154306,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"blpop","qualname":"::commands::AsyncCommands::blpop","value":"pub fn blpop<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154490,"byte_end":154495,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"brpop","qualname":"::commands::AsyncCommands::brpop","value":"pub fn brpop<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, usize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154708,"byte_end":154718,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"::commands::AsyncCommands::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, K, usize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154901,"byte_end":154907,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"lindex","qualname":"::commands::AsyncCommands::lindex","value":"pub fn lindex<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155064,"byte_end":155078,"line_start":550,"line_end":550,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"::commands::AsyncCommands::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs + Send + Sync + 'a, P: ToRedisArgs +\n                      Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, P, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155311,"byte_end":155324,"line_start":556,"line_end":556,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"::commands::AsyncCommands::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs + Send + Sync + 'a, P: ToRedisArgs +\n                     Send + Sync + 'a, V: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, P, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155551,"byte_end":155555,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"llen","qualname":"::commands::AsyncCommands::llen","value":"pub fn llen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155698,"byte_end":155702,"line_start":567,"line_end":567,"column_start":8,"column_end":12},"name":"lpop","qualname":"::commands::AsyncCommands::lpop","value":"pub fn lpop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155853,"byte_end":155857,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"lpos","qualname":"::commands::AsyncCommands::lpos","value":"pub fn lpos<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, V, LposOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156078,"byte_end":156083,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"lpush","qualname":"::commands::AsyncCommands::lpush","value":"pub fn lpush<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156307,"byte_end":156319,"line_start":583,"line_end":583,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"::commands::AsyncCommands::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, K, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156494,"byte_end":156500,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"lrange","qualname":"::commands::AsyncCommands::lrange","value":"pub fn lrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156728,"byte_end":156732,"line_start":594,"line_end":594,"column_start":8,"column_end":12},"name":"lrem","qualname":"::commands::AsyncCommands::lrem","value":"pub fn lrem<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156974,"byte_end":156979,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"ltrim","qualname":"::commands::AsyncCommands::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157146,"byte_end":157150,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"lset","qualname":"::commands::AsyncCommands::lset","value":"pub fn lset<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, isize, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157354,"byte_end":157358,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"rpop","qualname":"::commands::AsyncCommands::rpop","value":"pub fn rpop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157500,"byte_end":157509,"line_start":615,"line_end":615,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"::commands::AsyncCommands::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157686,"byte_end":157691,"line_start":620,"line_end":620,"column_start":8,"column_end":13},"name":"rpush","qualname":"::commands::AsyncCommands::rpush","value":"pub fn rpush<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, V) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157913,"byte_end":157925,"line_start":626,"line_end":626,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"::commands::AsyncCommands::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n                    Send + Sync + 'a, RV>(&'a mut Self, K, V)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158097,"byte_end":158101,"line_start":633,"line_end":633,"column_start":8,"column_end":12},"name":"sadd","qualname":"::commands::AsyncCommands::sadd","value":"pub fn sadd<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158254,"byte_end":158259,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"scard","qualname":"::commands::AsyncCommands::scard","value":"pub fn scard<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158362,"byte_end":158367,"line_start":643,"line_end":643,"column_start":8,"column_end":13},"name":"sdiff","qualname":"::commands::AsyncCommands::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158509,"byte_end":158519,"line_start":648,"line_end":648,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"::commands::AsyncCommands::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158653,"byte_end":158659,"line_start":653,"line_end":653,"column_start":8,"column_end":14},"name":"sinter","qualname":"::commands::AsyncCommands::sinter","value":"pub fn sinter<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158803,"byte_end":158814,"line_start":658,"line_end":658,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"::commands::AsyncCommands::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158973,"byte_end":158982,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"sismember","qualname":"::commands::AsyncCommands::sismember","value":"pub fn sismember<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                 Send + Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159134,"byte_end":159142,"line_start":668,"line_end":668,"column_start":8,"column_end":16},"name":"smembers","qualname":"::commands::AsyncCommands::smembers","value":"pub fn smembers<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159263,"byte_end":159268,"line_start":673,"line_end":673,"column_start":8,"column_end":13},"name":"smove","qualname":"::commands::AsyncCommands::smove","value":"pub fn smove<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159461,"byte_end":159465,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"spop","qualname":"::commands::AsyncCommands::spop","value":"pub fn spop<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159577,"byte_end":159588,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"srandmember","qualname":"::commands::AsyncCommands::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159713,"byte_end":159733,"line_start":688,"line_end":688,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"::commands::AsyncCommands::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, usize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159882,"byte_end":159886,"line_start":693,"line_end":693,"column_start":8,"column_end":12},"name":"srem","qualname":"::commands::AsyncCommands::srem","value":"pub fn srem<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160022,"byte_end":160028,"line_start":698,"line_end":698,"column_start":8,"column_end":14},"name":"sunion","qualname":"::commands::AsyncCommands::sunion","value":"pub fn sunion<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160166,"byte_end":160177,"line_start":703,"line_end":703,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"::commands::AsyncCommands::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160389,"byte_end":160393,"line_start":710,"line_end":710,"column_start":8,"column_end":12},"name":"zadd","qualname":"::commands::AsyncCommands::zadd","value":"pub fn zadd<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs + Send +\n            Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, M, S) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160627,"byte_end":160640,"line_start":715,"line_end":715,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"::commands::AsyncCommands::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs +\n                     Send + Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, &'a [(S, M)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160825,"byte_end":160830,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"zcard","qualname":"::commands::AsyncCommands::zcard","value":"pub fn zcard<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160980,"byte_end":160986,"line_start":725,"line_end":725,"column_start":8,"column_end":14},"name":"zcount","qualname":"::commands::AsyncCommands::zcount","value":"pub fn zcount<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n              Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161264,"byte_end":161269,"line_start":731,"line_end":731,"column_start":8,"column_end":13},"name":"zincr","qualname":"::commands::AsyncCommands::zincr","value":"pub fn zincr<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, D: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, M, D) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161548,"byte_end":161559,"line_start":737,"line_end":737,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"::commands::AsyncCommands::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161813,"byte_end":161828,"line_start":743,"line_end":743,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"::commands::AsyncCommands::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162110,"byte_end":162125,"line_start":749,"line_end":749,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"::commands::AsyncCommands::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162368,"byte_end":162377,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"::commands::AsyncCommands::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs + Send + Sync + 'a, L: ToRedisArgs +\n                 Send + Sync + 'a, RV>(&'a mut Self, K, L, L)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162590,"byte_end":162597,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"::commands::AsyncCommands::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162782,"byte_end":162789,"line_start":764,"line_end":764,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"::commands::AsyncCommands::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs + Send + Sync + 'a,\n               RV>(&'a mut Self, K, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162947,"byte_end":162953,"line_start":769,"line_end":769,"column_start":8,"column_end":14},"name":"zrange","qualname":"::commands::AsyncCommands::zrange","value":"pub fn zrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, isize, isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163146,"byte_end":163163,"line_start":774,"line_end":774,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"::commands::AsyncCommands::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163378,"byte_end":163389,"line_start":779,"line_end":779,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"::commands::AsyncCommands::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                   Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163641,"byte_end":163658,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"::commands::AsyncCommands::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         M: ToRedisArgs + Send + Sync + 'a, MM: ToRedisArgs +\n                         Send + Sync + 'a,\n                         RV>(&'a mut Self, K, M, MM, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163958,"byte_end":163972,"line_start":791,"line_end":791,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"::commands::AsyncCommands::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs + Send + Sync + 'a, MM: ToRedisArgs +\n                      Send + Sync + 'a, M: ToRedisArgs + Send + Sync + 'a,\n                      RV>(&'a mut Self, K, MM, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164227,"byte_end":164247,"line_start":797,"line_end":797,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"::commands::AsyncCommands::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            MM: ToRedisArgs + Send + Sync + 'a,\n                            M: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, MM, M, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164534,"byte_end":164547,"line_start":803,"line_end":803,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"::commands::AsyncCommands::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                     Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164767,"byte_end":164791,"line_start":808,"line_end":808,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"::commands::AsyncCommands::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                M: ToRedisArgs + Send + Sync + 'a,\n                                MM: ToRedisArgs + Send + Sync + 'a,\n                                RV>(&'a mut Self, K, M, MM)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165028,"byte_end":165047,"line_start":813,"line_end":813,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"::commands::AsyncCommands::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                           M: ToRedisArgs + Send + Sync + 'a,\n                           MM: ToRedisArgs + Send + Sync + 'a,\n                           RV>(&'a mut Self, K, M, MM, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165356,"byte_end":165386,"line_start":819,"line_end":819,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"::commands::AsyncCommands::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                      M: ToRedisArgs + Send + Sync + 'a,\n                                      MM: ToRedisArgs + Send + Sync + 'a,\n                                      RV>(&'a mut Self, K, M, MM, isize,\n                                          isize) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165699,"byte_end":165704,"line_start":826,"line_end":826,"column_start":8,"column_end":13},"name":"zrank","qualname":"::commands::AsyncCommands::zrank","value":"pub fn zrank<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165868,"byte_end":165872,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"zrem","qualname":"::commands::AsyncCommands::zrem","value":"pub fn zrem<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166067,"byte_end":166076,"line_start":836,"line_end":836,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"::commands::AsyncCommands::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                 Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166288,"byte_end":166303,"line_start":841,"line_end":841,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"::commands::AsyncCommands::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166500,"byte_end":166511,"line_start":846,"line_end":846,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"::commands::AsyncCommands::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                   Send + Sync + 'a, MM: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, M, MM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166768,"byte_end":166777,"line_start":852,"line_end":852,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"::commands::AsyncCommands::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167007,"byte_end":167027,"line_start":858,"line_end":858,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"::commands::AsyncCommands::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167229,"byte_end":167245,"line_start":863,"line_end":863,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"::commands::AsyncCommands::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                        MM: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs +\n                        Send + Sync + 'a, RV>(&'a mut Self, K, MM, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167468,"byte_end":167495,"line_start":868,"line_end":868,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"::commands::AsyncCommands::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs + Send + Sync + 'a,\n                                   MM: ToRedisArgs + Send + Sync + 'a,\n                                   M: ToRedisArgs + Send + Sync + 'a,\n                                   RV>(&'a mut Self, K, MM, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167735,"byte_end":167757,"line_start":873,"line_end":873,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"::commands::AsyncCommands::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs + Send + Sync + 'a,\n                              MM: ToRedisArgs + Send + Sync + 'a,\n                              M: ToRedisArgs + Send + Sync + 'a,\n                              RV>(&'a mut Self, K, MM, M, isize, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168069,"byte_end":168102,"line_start":879,"line_end":879,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"::commands::AsyncCommands::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs + Send + Sync +\n                                         'a, MM: ToRedisArgs + Send + Sync +\n                                         'a, M: ToRedisArgs + Send + Sync +\n                                         'a,\n                                         RV>(&'a mut Self, K, MM, M, isize,\n                                             isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168456,"byte_end":168464,"line_start":886,"line_end":886,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"::commands::AsyncCommands::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168649,"byte_end":168655,"line_start":891,"line_end":891,"column_start":8,"column_end":14},"name":"zscore","qualname":"::commands::AsyncCommands::zscore","value":"pub fn zscore<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n              Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168893,"byte_end":168904,"line_start":897,"line_end":897,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"::commands::AsyncCommands::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169155,"byte_end":169170,"line_start":903,"line_end":903,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"::commands::AsyncCommands::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169449,"byte_end":169464,"line_start":909,"line_end":909,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"::commands::AsyncCommands::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, &'a [K])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3728},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169711,"byte_end":169716,"line_start":916,"line_end":916,"column_start":8,"column_end":13},"name":"pfadd","qualname":"::commands::AsyncCommands::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, K, E) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169933,"byte_end":169940,"line_start":922,"line_end":922,"column_start":8,"column_end":15},"name":"pfcount","qualname":"::commands::AsyncCommands::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170071,"byte_end":170078,"line_start":927,"line_end":927,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"::commands::AsyncCommands::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170228,"byte_end":170235,"line_start":932,"line_end":932,"column_start":8,"column_end":15},"name":"publish","qualname":"::commands::AsyncCommands::publish","value":"pub fn publish<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, E) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170686,"byte_end":170694,"line_start":943,"line_end":943,"column_start":8,"column_end":16},"name":"acl_load","qualname":"::commands::AsyncCommands::acl_load","value":"pub fn acl_load<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171024,"byte_end":171032,"line_start":952,"line_end":952,"column_start":8,"column_end":16},"name":"acl_save","qualname":"::commands::AsyncCommands::acl_save","value":"pub fn acl_save<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171229,"byte_end":171237,"line_start":959,"line_end":959,"column_start":8,"column_end":16},"name":"acl_list","qualname":"::commands::AsyncCommands::acl_list","value":"pub fn acl_list<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171477,"byte_end":171486,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"acl_users","qualname":"::commands::AsyncCommands::acl_users","value":"pub fn acl_users<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3766},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171682,"byte_end":171693,"line_start":974,"line_end":974,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"::commands::AsyncCommands::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171917,"byte_end":171928,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"::commands::AsyncCommands::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172203,"byte_end":172220,"line_start":989,"line_end":989,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"::commands::AsyncCommands::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs + Send + Sync + 'a,\n                         RV>(&'a mut Self, K, &'a [acl::Rule])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172553,"byte_end":172564,"line_start":997,"line_end":997,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"::commands::AsyncCommands::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, &'a [K]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172789,"byte_end":172796,"line_start":1004,"line_end":1004,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"::commands::AsyncCommands::acl_cat","value":"pub fn acl_cat<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172990,"byte_end":173010,"line_start":1011,"line_end":1011,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"::commands::AsyncCommands::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173266,"byte_end":173277,"line_start":1018,"line_end":1018,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"::commands::AsyncCommands::acl_genpass","value":"pub fn acl_genpass<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173496,"byte_end":173512,"line_start":1025,"line_end":1025,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"::commands::AsyncCommands::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a, RV>(&'a mut Self, isize)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173742,"byte_end":173752,"line_start":1032,"line_end":1032,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"::commands::AsyncCommands::acl_whoami","value":"pub fn acl_whoami<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173936,"byte_end":173943,"line_start":1039,"line_end":1039,"column_start":8,"column_end":15},"name":"acl_log","qualname":"::commands::AsyncCommands::acl_log","value":"pub fn acl_log<'a, RV>(&'a mut Self, isize) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174125,"byte_end":174138,"line_start":1047,"line_end":1047,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"::commands::AsyncCommands::acl_log_reset","value":"pub fn acl_log_reset<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174350,"byte_end":174358,"line_start":1054,"line_end":1054,"column_start":8,"column_end":16},"name":"acl_help","qualname":"::commands::AsyncCommands::acl_help","value":"pub fn acl_help<'a, RV>(&'a mut Self) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":175794,"byte_end":175801,"line_start":1097,"line_end":1097,"column_start":8,"column_end":15},"name":"geo_add","qualname":"::commands::AsyncCommands::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":176955,"byte_end":176963,"line_start":1134,"line_end":1134,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"::commands::AsyncCommands::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs + Send + Sync + 'a, M1: ToRedisArgs +\n                Send + Sync + 'a, M2: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, M1, M2, geo::Unit)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":178021,"byte_end":178029,"line_start":1168,"line_end":1168,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"::commands::AsyncCommands::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, M)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":179121,"byte_end":179128,"line_start":1197,"line_end":1197,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"::commands::AsyncCommands::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs + Send + Sync + 'a, M: ToRedisArgs + Send +\n               Sync + 'a, RV>(&'a mut Self, K, M) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180266,"byte_end":180276,"line_start":1222,"line_end":1222,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"::commands::AsyncCommands::geo_radius","value":"pub fn geo_radius<'a, K: ToRedisArgs + Send + Sync + 'a,\n                  RV>(&'a mut Self, K, f64, f64, f64, geo::Unit,\n                      geo::RadiusOptions) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180867,"byte_end":180887,"line_start":1243,"line_end":1243,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"::commands::AsyncCommands::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs + Send + Sync + 'a,\n                            M: ToRedisArgs + Send + Sync + 'a,\n                            RV>(&'a mut Self, K, M, f64, geo::Unit,\n                                geo::RadiusOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181485,"byte_end":181489,"line_start":1269,"line_end":1269,"column_start":8,"column_end":12},"name":"xack","qualname":"::commands::AsyncCommands::xack","value":"pub fn xack<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n            Sync + 'a, I: ToRedisArgs + Send + Sync + 'a,\n            RV>(&'a mut Self, K, G, &'a [I]) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181968,"byte_end":181972,"line_start":1287,"line_end":1287,"column_start":8,"column_end":12},"name":"xadd","qualname":"::commands::AsyncCommands::xadd","value":"pub fn xadd<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n            Sync + 'a, F: ToRedisArgs + Send + Sync + 'a, V: ToRedisArgs +\n            Send + Sync + 'a, RV>(&'a mut Self, K, ID, &'a [(F, V)])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182458,"byte_end":182466,"line_start":1304,"line_end":1304,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"::commands::AsyncCommands::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                Send + Sync + 'a, BTM: ToRedisArgs + Send + Sync + 'a,\n                RV>(&'a mut Self, K, ID, BTM) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182911,"byte_end":182922,"line_start":1319,"line_end":1319,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"::commands::AsyncCommands::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                   Send + Sync + 'a, F: ToRedisArgs + Send + Sync + 'a,\n                   V: ToRedisArgs + Send + Sync + 'a,\n                   RV>(&'a mut Self, K, streams::StreamMaxlen, ID,\n                       &'a [(F, V)]) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":183548,"byte_end":183563,"line_start":1345,"line_end":1345,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"::commands::AsyncCommands::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs + Send + Sync + 'a,\n                       ID: ToRedisArgs + Send + Sync + 'a, BTM: ToRedisArgs +\n                       Send + Sync + 'a,\n                       RV>(&'a mut Self, K, streams::StreamMaxlen, ID, BTM)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":184312,"byte_end":184318,"line_start":1371,"line_end":1371,"column_start":8,"column_end":14},"name":"xclaim","qualname":"::commands::AsyncCommands::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n              Sync + 'a, C: ToRedisArgs + Send + Sync + 'a, MIT: ToRedisArgs +\n              Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, G, C, MIT, &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186185,"byte_end":186199,"line_start":1421,"line_end":1421,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"::commands::AsyncCommands::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, C: ToRedisArgs + Send + Sync + 'a,\n                      MIT: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                      Send + Sync + 'a,\n                      RV>(&'a mut Self, K, G, C, MIT, &'a [ID],\n                          streams::StreamClaimOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186903,"byte_end":186907,"line_start":1452,"line_end":1452,"column_start":8,"column_end":12},"name":"xdel","qualname":"::commands::AsyncCommands::xdel","value":"pub fn xdel<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n            Sync + 'a, RV>(&'a mut Self, K, &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":187548,"byte_end":187561,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"::commands::AsyncCommands::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                     Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K, G, ID) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188106,"byte_end":188128,"line_start":1491,"line_end":1491,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"::commands::AsyncCommands::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs + Send + Sync + 'a,\n                              G: ToRedisArgs + Send + Sync + 'a,\n                              ID: ToRedisArgs + Send + Sync + 'a,\n                              RV>(&'a mut Self, K, G, ID)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188702,"byte_end":188714,"line_start":1517,"line_end":1517,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"::commands::AsyncCommands::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                    Send + Sync + 'a, ID: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K, G, ID) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189194,"byte_end":189208,"line_start":1537,"line_end":1537,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"::commands::AsyncCommands::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189636,"byte_end":189654,"line_start":1552,"line_end":1552,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"::commands::AsyncCommands::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs + Send + Sync + 'a,\n                          G: ToRedisArgs + Send + Sync + 'a, C: ToRedisArgs +\n                          Send + Sync + 'a, RV>(&'a mut Self, K, G, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190369,"byte_end":190384,"line_start":1577,"line_end":1577,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"::commands::AsyncCommands::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                       Send + Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190975,"byte_end":190987,"line_start":1599,"line_end":1599,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"::commands::AsyncCommands::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191526,"byte_end":191538,"line_start":1616,"line_end":1616,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"::commands::AsyncCommands::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191830,"byte_end":191834,"line_start":1627,"line_end":1627,"column_start":8,"column_end":12},"name":"xlen","qualname":"::commands::AsyncCommands::xlen","value":"pub fn xlen<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":192544,"byte_end":192552,"line_start":1648,"line_end":1648,"column_start":8,"column_end":16},"name":"xpending","qualname":"::commands::AsyncCommands::xpending","value":"pub fn xpending<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs + Send +\n                Sync + 'a, RV>(&'a mut Self, K, G)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":193233,"byte_end":193247,"line_start":1669,"line_end":1669,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"::commands::AsyncCommands::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs + Send + Sync + 'a, G: ToRedisArgs +\n                      Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                      E: ToRedisArgs + Send + Sync + 'a, C: ToRedisArgs +\n                      Send + Sync + 'a, RV>(&'a mut Self, K, G, S, E, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":194095,"byte_end":194118,"line_start":1703,"line_end":1703,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"::commands::AsyncCommands::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs + Send + Sync + 'a,\n                               G: ToRedisArgs + Send + Sync + 'a,\n                               S: ToRedisArgs + Send + Sync + 'a,\n                               E: ToRedisArgs + Send + Sync + 'a,\n                               C: ToRedisArgs + Send + Sync + 'a,\n                               CN: ToRedisArgs + Send + Sync + 'a,\n                               RV>(&'a mut Self, K, G, S, E, C, CN)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195027,"byte_end":195033,"line_start":1740,"line_end":1740,"column_start":8,"column_end":14},"name":"xrange","qualname":"::commands::AsyncCommands::xrange","value":"pub fn xrange<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs + Send +\n              Sync + 'a, E: ToRedisArgs + Send + Sync + 'a,\n              RV>(&'a mut Self, K, S, E) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195470,"byte_end":195480,"line_start":1757,"line_end":1757,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"::commands::AsyncCommands::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs + Send + Sync + 'a, RV>(&'a mut Self, K)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195787,"byte_end":195799,"line_start":1769,"line_end":1769,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"::commands::AsyncCommands::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs + Send + Sync + 'a, S: ToRedisArgs +\n                    Send + Sync + 'a, E: ToRedisArgs + Send + Sync + 'a,\n                    C: ToRedisArgs + Send + Sync + 'a,\n                    RV>(&'a mut Self, K, S, E, C) -> crate::types::RedisFuture\nwhere RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":196506,"byte_end":196511,"line_start":1794,"line_end":1794,"column_start":8,"column_end":13},"name":"xread","qualname":"::commands::AsyncCommands::xread","value":"pub fn xread<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs + Send +\n             Sync + 'a, RV>(&'a mut Self, &'a [K], &'a [ID])\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198262,"byte_end":198275,"line_start":1839,"line_end":1839,"column_start":8,"column_end":21},"name":"xread_options","qualname":"::commands::AsyncCommands::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs + Send + Sync + 'a, ID: ToRedisArgs +\n                     Send + Sync + 'a,\n                     RV>(&'a mut Self, &'a [K], &'a [ID],\n                         streams::StreamReadOptions)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198876,"byte_end":198885,"line_start":1863,"line_end":1863,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"::commands::AsyncCommands::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs +\n                 Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                 RV>(&'a mut Self, K, E, S) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4035},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199232,"byte_end":199245,"line_start":1877,"line_end":1877,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"::commands::AsyncCommands::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs + Send + Sync + 'a,\n                     RV>(&'a mut Self, K) -> crate::types::RedisFuture where\nRV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199617,"byte_end":199632,"line_start":1889,"line_end":1889,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"::commands::AsyncCommands::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs + Send + Sync + 'a, E: ToRedisArgs +\n                       Send + Sync + 'a, S: ToRedisArgs + Send + Sync + 'a,\n                       C: ToRedisArgs + Send + Sync + 'a,\n                       RV>(&'a mut Self, K, E, S, C)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200172,"byte_end":200177,"line_start":1911,"line_end":1911,"column_start":8,"column_end":13},"name":"xtrim","qualname":"::commands::AsyncCommands::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs + Send + Sync + 'a,\n             RV>(&'a mut Self, K, streams::StreamMaxlen)\n-> crate::types::RedisFuture where RV: FromRedisValue","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141271,"byte_end":141279,"line_start":174,"line_end":174,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141298,"byte_end":141307,"line_start":175,"line_end":175,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":141324,"byte_end":141392,"line_start":176,"line_end":176,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146081,"byte_end":146084,"line_start":280,"line_end":280,"column_start":8,"column_end":11},"name":"get","qualname":"<Pipeline>::get","value":"pub fn get<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a key.  If key is a vec this becomes an `MGET`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146235,"byte_end":146239,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"keys","qualname":"<Pipeline>::keys","value":"pub fn keys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all keys matching pattern\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146348,"byte_end":146351,"line_start":290,"line_end":290,"column_start":8,"column_end":11},"name":"set","qualname":"<Pipeline>::set","value":"pub fn set<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146501,"byte_end":146513,"line_start":295,"line_end":295,"column_start":8,"column_end":20},"name":"set_multiple","qualname":"<Pipeline>::set_multiple","value":"pub fn set_multiple<'a, K: ToRedisArgs,\n                    V: ToRedisArgs>(&mut Self, &'a [(K, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146661,"byte_end":146667,"line_start":300,"line_end":300,"column_start":8,"column_end":14},"name":"set_ex","qualname":"<Pipeline>::set_ex","value":"pub fn set_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":146867,"byte_end":146874,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"pset_ex","qualname":"<Pipeline>::pset_ex","value":"pub fn pset_ex<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value and expiration in milliseconds of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147085,"byte_end":147091,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"set_nx","qualname":"<Pipeline>::set_nx","value":"pub fn set_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of a key, only if the key does not exist\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147282,"byte_end":147289,"line_start":315,"line_end":315,"column_start":8,"column_end":15},"name":"mset_nx","qualname":"<Pipeline>::mset_nx","value":"pub fn mset_nx<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, &'a [(K, V)])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple keys to their values failing if at least one already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147456,"byte_end":147462,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"getset","qualname":"<Pipeline>::getset","value":"pub fn getset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the string value of a key and return its old value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147696,"byte_end":147704,"line_start":325,"line_end":325,"column_start":8,"column_end":16},"name":"getrange","qualname":"<Pipeline>::getrange","value":"pub fn getrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get a range of bytes/substring from the value of a key. Negative values provide an offset from the end of the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":147899,"byte_end":147907,"line_start":330,"line_end":330,"column_start":8,"column_end":16},"name":"setrange","qualname":"<Pipeline>::setrange","value":"pub fn setrange<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the part of the value stored in key at the specified offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148078,"byte_end":148081,"line_start":335,"line_end":335,"column_start":8,"column_end":11},"name":"del","qualname":"<Pipeline>::del","value":"pub fn del<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148185,"byte_end":148191,"line_start":340,"line_end":340,"column_start":8,"column_end":14},"name":"exists","qualname":"<Pipeline>::exists","value":"pub fn exists<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a key exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148308,"byte_end":148314,"line_start":345,"line_end":345,"column_start":8,"column_end":14},"name":"expire","qualname":"<Pipeline>::expire","value":"pub fn expire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in seconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148473,"byte_end":148482,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"expire_at","qualname":"<Pipeline>::expire_at","value":"pub fn expire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148625,"byte_end":148632,"line_start":355,"line_end":355,"column_start":8,"column_end":15},"name":"pexpire","qualname":"<Pipeline>::pexpire","value":"pub fn pexpire<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a key's time to live in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4144},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148798,"byte_end":148808,"line_start":360,"line_end":360,"column_start":8,"column_end":18},"name":"pexpire_at","qualname":"<Pipeline>::pexpire_at","value":"pub fn pexpire_at<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the expiration for a key as a UNIX timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":148944,"byte_end":148951,"line_start":365,"line_end":365,"column_start":8,"column_end":15},"name":"persist","qualname":"<Pipeline>::persist","value":"pub fn persist<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove the expiration from a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149066,"byte_end":149069,"line_start":370,"line_end":370,"column_start":8,"column_end":11},"name":"ttl","qualname":"<Pipeline>::ttl","value":"pub fn ttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149196,"byte_end":149200,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"pttl","qualname":"<Pipeline>::pttl","value":"pub fn pttl<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the expiration time of a key in milliseconds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149292,"byte_end":149298,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"rename","qualname":"<Pipeline>::rename","value":"pub fn rename<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149453,"byte_end":149462,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"rename_nx","qualname":"<Pipeline>::rename_nx","value":"pub fn rename_nx<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Rename a key, only if the new key does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149594,"byte_end":149600,"line_start":390,"line_end":390,"column_start":8,"column_end":14},"name":"unlink","qualname":"<Pipeline>::unlink","value":"pub fn unlink<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unlink one or more keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149738,"byte_end":149744,"line_start":397,"line_end":397,"column_start":8,"column_end":14},"name":"append","qualname":"<Pipeline>::append","value":"pub fn append<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Append a value to a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":149991,"byte_end":149995,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"incr","qualname":"<Pipeline>::incr","value":"pub fn incr<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increment the numeric value of a key by the given amount.  This\n issues a `INCRBY` or `INCRBYFLOAT` depending on the type.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150312,"byte_end":150316,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"decr","qualname":"<Pipeline>::decr","value":"pub fn decr<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Decrement the numeric value of a key by the given amount.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150501,"byte_end":150507,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"setbit","qualname":"<Pipeline>::setbit","value":"pub fn setbit<'a, K: ToRedisArgs>(&mut Self, K, usize, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150721,"byte_end":150727,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"getbit","qualname":"<Pipeline>::getbit","value":"pub fn getbit<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the bit value at offset in the string value stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150862,"byte_end":150870,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"bitcount","qualname":"<Pipeline>::bitcount","value":"pub fn bitcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":150991,"byte_end":151005,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"bitcount_range","qualname":"<Pipeline>::bitcount_range","value":"pub fn bitcount_range<'a, K: ToRedisArgs>(&mut Self, K, usize, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count set bits in a string in a range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151257,"byte_end":151264,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"bit_and","qualname":"<Pipeline>::bit_and","value":"pub fn bit_and<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise AND between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151508,"byte_end":151514,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"bit_or","qualname":"<Pipeline>::bit_or","value":"pub fn bit_or<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise OR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151758,"byte_end":151765,"line_start":450,"line_end":450,"column_start":8,"column_end":15},"name":"bit_xor","qualname":"<Pipeline>::bit_xor","value":"pub fn bit_xor<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise XOR between multiple keys (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":151999,"byte_end":152006,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"bit_not","qualname":"<Pipeline>::bit_not","value":"pub fn bit_not<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise NOT of the key (containing string values)\n and store the result in the destination key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152170,"byte_end":152176,"line_start":461,"line_end":461,"column_start":8,"column_end":14},"name":"strlen","qualname":"<Pipeline>::strlen","value":"pub fn strlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the value stored in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152328,"byte_end":152332,"line_start":468,"line_end":468,"column_start":8,"column_end":12},"name":"hget","qualname":"<Pipeline>::hget","value":"pub fn hget<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152544,"byte_end":152548,"line_start":473,"line_end":473,"column_start":8,"column_end":12},"name":"hdel","qualname":"<Pipeline>::hdel","value":"pub fn hdel<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a single (or multiple) fields from a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152694,"byte_end":152698,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"hset","qualname":"<Pipeline>::hset","value":"pub fn hset<'a, K: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":152902,"byte_end":152909,"line_start":483,"line_end":483,"column_start":8,"column_end":15},"name":"hset_nx","qualname":"<Pipeline>::hset_nx","value":"pub fn hset_nx<'a, K: ToRedisArgs, F: ToRedisArgs,\n               V: ToRedisArgs>(&mut Self, K, F, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a single field in a hash if it does not exist.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153097,"byte_end":153110,"line_start":488,"line_end":488,"column_start":8,"column_end":21},"name":"hset_multiple","qualname":"<Pipeline>::hset_multiple","value":"pub fn hset_multiple<'a, K: ToRedisArgs, F: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a multiple fields in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153273,"byte_end":153278,"line_start":493,"line_end":493,"column_start":8,"column_end":13},"name":"hincr","qualname":"<Pipeline>::hincr","value":"pub fn hincr<'a, K: ToRedisArgs, F: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, F, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments a value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153608,"byte_end":153615,"line_start":502,"line_end":502,"column_start":8,"column_end":15},"name":"hexists","qualname":"<Pipeline>::hexists","value":"pub fn hexists<'a, K: ToRedisArgs, F: ToRedisArgs>(&mut Self, K, F)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Checks if a field in a hash exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153762,"byte_end":153767,"line_start":507,"line_end":507,"column_start":8,"column_end":13},"name":"hkeys","qualname":"<Pipeline>::hkeys","value":"pub fn hkeys<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the keys in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":153877,"byte_end":153882,"line_start":512,"line_end":512,"column_start":8,"column_end":13},"name":"hvals","qualname":"<Pipeline>::hvals","value":"pub fn hvals<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154003,"byte_end":154010,"line_start":517,"line_end":517,"column_start":8,"column_end":15},"name":"hgetall","qualname":"<Pipeline>::hgetall","value":"pub fn hgetall<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets all the fields and values in a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154118,"byte_end":154122,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"hlen","qualname":"<Pipeline>::hlen","value":"pub fn hlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the length of a hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154301,"byte_end":154306,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"blpop","qualname":"<Pipeline>::blpop","value":"pub fn blpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the first element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154490,"byte_end":154495,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"brpop","qualname":"<Pipeline>::brpop","value":"pub fn brpop<'a, K: ToRedisArgs>(&mut Self, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and get the last element in a list, or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154708,"byte_end":154718,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"brpoplpush","qualname":"<Pipeline>::brpoplpush","value":"pub fn brpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it;\n or block until one is available.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":154901,"byte_end":154907,"line_start":545,"line_end":545,"column_start":8,"column_end":14},"name":"lindex","qualname":"<Pipeline>::lindex","value":"pub fn lindex<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get an element from a list by its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155064,"byte_end":155078,"line_start":550,"line_end":550,"column_start":8,"column_end":22},"name":"linsert_before","qualname":"<Pipeline>::linsert_before","value":"pub fn linsert_before<'a, K: ToRedisArgs, P: ToRedisArgs,\n                      V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element before another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4265},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155311,"byte_end":155324,"line_start":556,"line_end":556,"column_start":8,"column_end":21},"name":"linsert_after","qualname":"<Pipeline>::linsert_after","value":"pub fn linsert_after<'a, K: ToRedisArgs, P: ToRedisArgs,\n                     V: ToRedisArgs>(&mut Self, K, P, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert an element after another element in a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155551,"byte_end":155555,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"llen","qualname":"<Pipeline>::llen","value":"pub fn llen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155698,"byte_end":155702,"line_start":567,"line_end":567,"column_start":8,"column_end":12},"name":"lpop","qualname":"<Pipeline>::lpop","value":"pub fn lpop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the first element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":155853,"byte_end":155857,"line_start":572,"line_end":572,"column_start":8,"column_end":12},"name":"lpos","qualname":"<Pipeline>::lpos","value":"pub fn lpos<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V, LposOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first matching value of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156078,"byte_end":156083,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"lpush","qualname":"<Pipeline>::lpush","value":"pub fn lpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the head of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156307,"byte_end":156319,"line_start":583,"line_end":583,"column_start":8,"column_end":20},"name":"lpush_exists","qualname":"<Pipeline>::lpush_exists","value":"pub fn lpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value at the head of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156494,"byte_end":156500,"line_start":588,"line_end":588,"column_start":8,"column_end":14},"name":"lrange","qualname":"<Pipeline>::lrange","value":"pub fn lrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the specified elements of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156728,"byte_end":156732,"line_start":594,"line_end":594,"column_start":8,"column_end":12},"name":"lrem","qualname":"<Pipeline>::lrem","value":"pub fn lrem<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes the first count occurrences of elements equal to value\n from the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":156974,"byte_end":156979,"line_start":600,"line_end":600,"column_start":8,"column_end":13},"name":"ltrim","qualname":"<Pipeline>::ltrim","value":"pub fn ltrim<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim an existing list so that it will contain only the specified\n range of elements specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157146,"byte_end":157150,"line_start":605,"line_end":605,"column_start":8,"column_end":12},"name":"lset","qualname":"<Pipeline>::lset","value":"pub fn lset<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, isize, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the list element at index to value\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157354,"byte_end":157358,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"rpop","qualname":"<Pipeline>::rpop","value":"pub fn rpop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the last element of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157500,"byte_end":157509,"line_start":615,"line_end":615,"column_start":8,"column_end":17},"name":"rpoplpush","qualname":"<Pipeline>::rpoplpush","value":"pub fn rpoplpush<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Pop a value from a list, push it to another list and return it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157686,"byte_end":157691,"line_start":620,"line_end":620,"column_start":8,"column_end":13},"name":"rpush","qualname":"<Pipeline>::rpush","value":"pub fn rpush<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert all the specified values at the tail of the list stored at key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":157913,"byte_end":157925,"line_start":626,"line_end":626,"column_start":8,"column_end":20},"name":"rpush_exists","qualname":"<Pipeline>::rpush_exists","value":"pub fn rpush_exists<'a, K: ToRedisArgs, V: ToRedisArgs>(&mut Self, K, V)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts value at the tail of the list stored at key, only if key\n already exists and holds a list.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158097,"byte_end":158101,"line_start":633,"line_end":633,"column_start":8,"column_end":12},"name":"sadd","qualname":"<Pipeline>::sadd","value":"pub fn sadd<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one or more members to a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158254,"byte_end":158259,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"scard","qualname":"<Pipeline>::scard","value":"pub fn scard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158362,"byte_end":158367,"line_start":643,"line_end":643,"column_start":8,"column_end":13},"name":"sdiff","qualname":"<Pipeline>::sdiff","value":"pub fn sdiff<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158509,"byte_end":158519,"line_start":648,"line_end":648,"column_start":8,"column_end":18},"name":"sdiffstore","qualname":"<Pipeline>::sdiffstore","value":"pub fn sdiffstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Subtract multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158653,"byte_end":158659,"line_start":653,"line_end":653,"column_start":8,"column_end":14},"name":"sinter","qualname":"<Pipeline>::sinter","value":"pub fn sinter<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158803,"byte_end":158814,"line_start":658,"line_end":658,"column_start":8,"column_end":19},"name":"sinterstore","qualname":"<Pipeline>::sinterstore","value":"pub fn sinterstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":158973,"byte_end":158982,"line_start":663,"line_end":663,"column_start":8,"column_end":17},"name":"sismember","qualname":"<Pipeline>::sismember","value":"pub fn sismember<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine if a given value is a member of a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159134,"byte_end":159142,"line_start":668,"line_end":668,"column_start":8,"column_end":16},"name":"smembers","qualname":"<Pipeline>::smembers","value":"pub fn smembers<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get all the members in a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159263,"byte_end":159268,"line_start":673,"line_end":673,"column_start":8,"column_end":13},"name":"smove","qualname":"<Pipeline>::smove","value":"pub fn smove<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Move a member from one set to another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159461,"byte_end":159465,"line_start":678,"line_end":678,"column_start":8,"column_end":12},"name":"spop","qualname":"<Pipeline>::spop","value":"pub fn spop<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove and return a random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159577,"byte_end":159588,"line_start":683,"line_end":683,"column_start":8,"column_end":19},"name":"srandmember","qualname":"<Pipeline>::srandmember","value":"pub fn srandmember<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get one random member from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159713,"byte_end":159733,"line_start":688,"line_end":688,"column_start":8,"column_end":28},"name":"srandmember_multiple","qualname":"<Pipeline>::srandmember_multiple","value":"pub fn srandmember_multiple<'a, K: ToRedisArgs>(&mut Self, K, usize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get multiple random members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":159882,"byte_end":159886,"line_start":693,"line_end":693,"column_start":8,"column_end":12},"name":"srem","qualname":"<Pipeline>::srem","value":"pub fn srem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160022,"byte_end":160028,"line_start":698,"line_end":698,"column_start":8,"column_end":14},"name":"sunion","qualname":"<Pipeline>::sunion","value":"pub fn sunion<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160166,"byte_end":160177,"line_start":703,"line_end":703,"column_start":8,"column_end":19},"name":"sunionstore","qualname":"<Pipeline>::sunionstore","value":"pub fn sunionstore<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple sets and store the resulting set in a key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160389,"byte_end":160393,"line_start":710,"line_end":710,"column_start":8,"column_end":12},"name":"zadd","qualname":"<Pipeline>::zadd","value":"pub fn zadd<'a, K: ToRedisArgs, S: ToRedisArgs,\n            M: ToRedisArgs>(&mut Self, K, M, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add one member to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160627,"byte_end":160640,"line_start":715,"line_end":715,"column_start":8,"column_end":21},"name":"zadd_multiple","qualname":"<Pipeline>::zadd_multiple","value":"pub fn zadd_multiple<'a, K: ToRedisArgs, S: ToRedisArgs,\n                     M: ToRedisArgs>(&mut Self, K, &'a [(S, M)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add multiple members to a sorted set, or update its score if it already exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160825,"byte_end":160830,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"zcard","qualname":"<Pipeline>::zcard","value":"pub fn zcard<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the number of members in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":160980,"byte_end":160986,"line_start":725,"line_end":725,"column_start":8,"column_end":14},"name":"zcount","qualname":"<Pipeline>::zcount","value":"pub fn zcount<'a, K: ToRedisArgs, M: ToRedisArgs,\n              MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the members in a sorted set with scores within the given values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161264,"byte_end":161269,"line_start":731,"line_end":731,"column_start":8,"column_end":13},"name":"zincr","qualname":"<Pipeline>::zincr","value":"pub fn zincr<'a, K: ToRedisArgs, M: ToRedisArgs,\n             D: ToRedisArgs>(&mut Self, K, M, D) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Increments the member in a sorted set at key by delta.\n If the member does not exist, it is added with delta as its score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161548,"byte_end":161559,"line_start":737,"line_end":737,"column_start":8,"column_end":19},"name":"zinterstore","qualname":"<Pipeline>::zinterstore","value":"pub fn zinterstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":161813,"byte_end":161828,"line_start":743,"line_end":743,"column_start":8,"column_end":23},"name":"zinterstore_min","qualname":"<Pipeline>::zinterstore_min","value":"pub fn zinterstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162110,"byte_end":162125,"line_start":749,"line_end":749,"column_start":8,"column_end":23},"name":"zinterstore_max","qualname":"<Pipeline>::zinterstore_max","value":"pub fn zinterstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Intersect multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162368,"byte_end":162377,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"zlexcount","qualname":"<Pipeline>::zlexcount","value":"pub fn zlexcount<'a, K: ToRedisArgs, L: ToRedisArgs>(&mut Self, K, L, L)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Count the number of members in a sorted set between a given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162590,"byte_end":162597,"line_start":759,"line_end":759,"column_start":8,"column_end":15},"name":"zpopmax","qualname":"<Pipeline>::zpopmax","value":"pub fn zpopmax<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the highest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162782,"byte_end":162789,"line_start":764,"line_end":764,"column_start":8,"column_end":15},"name":"zpopmin","qualname":"<Pipeline>::zpopmin","value":"pub fn zpopmin<'a, K: ToRedisArgs>(&mut Self, K, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns up to count members with the lowest scores in a sorted set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":162947,"byte_end":162953,"line_start":769,"line_end":769,"column_start":8,"column_end":14},"name":"zrange","qualname":"<Pipeline>::zrange","value":"pub fn zrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163146,"byte_end":163163,"line_start":774,"line_end":774,"column_start":8,"column_end":25},"name":"zrange_withscores","qualname":"<Pipeline>::zrange_withscores","value":"pub fn zrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163378,"byte_end":163389,"line_start":779,"line_end":779,"column_start":8,"column_end":19},"name":"zrangebylex","qualname":"<Pipeline>::zrangebylex","value":"pub fn zrangebylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163641,"byte_end":163658,"line_start":785,"line_end":785,"column_start":8,"column_end":25},"name":"zrangebylex_limit","qualname":"<Pipeline>::zrangebylex_limit","value":"pub fn zrangebylex_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                         MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":163958,"byte_end":163972,"line_start":791,"line_end":791,"column_start":8,"column_end":22},"name":"zrevrangebylex","qualname":"<Pipeline>::zrevrangebylex","value":"pub fn zrevrangebylex<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                      M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164227,"byte_end":164247,"line_start":797,"line_end":797,"column_start":8,"column_end":28},"name":"zrevrangebylex_limit","qualname":"<Pipeline>::zrevrangebylex_limit","value":"pub fn zrevrangebylex_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, MM, M, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by lexicographical\n range with offset and limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4433},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164534,"byte_end":164547,"line_start":803,"line_end":803,"column_start":8,"column_end":21},"name":"zrangebyscore","qualname":"<Pipeline>::zrangebyscore","value":"pub fn zrangebyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                     MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":164767,"byte_end":164791,"line_start":808,"line_end":808,"column_start":8,"column_end":32},"name":"zrangebyscore_withscores","qualname":"<Pipeline>::zrangebyscore_withscores","value":"pub fn zrangebyscore_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                MM: ToRedisArgs>(&mut Self, K, M, MM)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165028,"byte_end":165047,"line_start":813,"line_end":813,"column_start":8,"column_end":27},"name":"zrangebyscore_limit","qualname":"<Pipeline>::zrangebyscore_limit","value":"pub fn zrangebyscore_limit<'a, K: ToRedisArgs, M: ToRedisArgs,\n                           MM: ToRedisArgs>(&mut Self, K, M, MM, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165356,"byte_end":165386,"line_start":819,"line_end":819,"column_start":8,"column_end":38},"name":"zrangebyscore_limit_withscores","qualname":"<Pipeline>::zrangebyscore_limit_withscores","value":"pub fn zrangebyscore_limit_withscores<'a, K: ToRedisArgs, M: ToRedisArgs,\n                                      MM: ToRedisArgs>(&mut Self, K, M, MM,\n                                                       isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165699,"byte_end":165704,"line_start":826,"line_end":826,"column_start":8,"column_end":13},"name":"zrank","qualname":"<Pipeline>::zrank","value":"pub fn zrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":165868,"byte_end":165872,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"zrem","qualname":"<Pipeline>::zrem","value":"pub fn zrem<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove one or more members from a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166067,"byte_end":166076,"line_start":836,"line_end":836,"column_start":8,"column_end":17},"name":"zrembylex","qualname":"<Pipeline>::zrembylex","value":"pub fn zrembylex<'a, K: ToRedisArgs, M: ToRedisArgs,\n                 MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set between the given lexicographical range.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166288,"byte_end":166303,"line_start":841,"line_end":841,"column_start":8,"column_end":23},"name":"zremrangebyrank","qualname":"<Pipeline>::zremrangebyrank","value":"pub fn zremrangebyrank<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given indexes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166500,"byte_end":166511,"line_start":846,"line_end":846,"column_start":8,"column_end":19},"name":"zrembyscore","qualname":"<Pipeline>::zrembyscore","value":"pub fn zrembyscore<'a, K: ToRedisArgs, M: ToRedisArgs,\n                   MM: ToRedisArgs>(&mut Self, K, M, MM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove all members in a sorted set within the given scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":166768,"byte_end":166777,"line_start":852,"line_end":852,"column_start":8,"column_end":17},"name":"zrevrange","qualname":"<Pipeline>::zrevrange","value":"pub fn zrevrange<'a, K: ToRedisArgs>(&mut Self, K, isize, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167007,"byte_end":167027,"line_start":858,"line_end":858,"column_start":8,"column_end":28},"name":"zrevrange_withscores","qualname":"<Pipeline>::zrevrange_withscores","value":"pub fn zrevrange_withscores<'a, K: ToRedisArgs>(&mut Self, K, isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by index, with scores\n ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167229,"byte_end":167245,"line_start":863,"line_end":863,"column_start":8,"column_end":24},"name":"zrevrangebyscore","qualname":"<Pipeline>::zrevrangebyscore","value":"pub fn zrevrangebyscore<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                        M: ToRedisArgs>(&mut Self, K, MM, M) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167468,"byte_end":167495,"line_start":868,"line_end":868,"column_start":8,"column_end":35},"name":"zrevrangebyscore_withscores","qualname":"<Pipeline>::zrevrangebyscore_withscores","value":"pub fn zrevrangebyscore_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                   M: ToRedisArgs>(&mut Self, K, MM, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4490},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":167735,"byte_end":167757,"line_start":873,"line_end":873,"column_start":8,"column_end":30},"name":"zrevrangebyscore_limit","qualname":"<Pipeline>::zrevrangebyscore_limit","value":"pub fn zrevrangebyscore_limit<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                              M: ToRedisArgs>(&mut Self, K, MM, M, isize,\n                                              isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4495},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168069,"byte_end":168102,"line_start":879,"line_end":879,"column_start":8,"column_end":41},"name":"zrevrangebyscore_limit_withscores","qualname":"<Pipeline>::zrevrangebyscore_limit_withscores","value":"pub fn zrevrangebyscore_limit_withscores<'a, K: ToRedisArgs, MM: ToRedisArgs,\n                                         M: ToRedisArgs>(&mut Self, K, MM, M,\n                                                         isize, isize)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return a range of members in a sorted set, by score with limit with scores.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168456,"byte_end":168464,"line_start":886,"line_end":886,"column_start":8,"column_end":16},"name":"zrevrank","qualname":"<Pipeline>::zrevrank","value":"pub fn zrevrank<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Determine the index of a member in a sorted set, with scores ordered from high to low.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168649,"byte_end":168655,"line_start":891,"line_end":891,"column_start":8,"column_end":14},"name":"zscore","qualname":"<Pipeline>::zscore","value":"pub fn zscore<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Get the score associated with the given member in a sorted set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":168893,"byte_end":168904,"line_start":897,"line_end":897,"column_start":8,"column_end":19},"name":"zunionstore","qualname":"<Pipeline>::zunionstore","value":"pub fn zunionstore<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using SUM as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169155,"byte_end":169170,"line_start":903,"line_end":903,"column_start":8,"column_end":23},"name":"zunionstore_min","qualname":"<Pipeline>::zunionstore_min","value":"pub fn zunionstore_min<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MIN as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169449,"byte_end":169464,"line_start":909,"line_end":909,"column_start":8,"column_end":23},"name":"zunionstore_max","qualname":"<Pipeline>::zunionstore_max","value":"pub fn zunionstore_max<'a, K: ToRedisArgs>(&mut Self, K, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Unions multiple sorted sets and store the resulting sorted set in\n a new key using MAX as aggregation function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169711,"byte_end":169716,"line_start":916,"line_end":916,"column_start":8,"column_end":13},"name":"pfadd","qualname":"<Pipeline>::pfadd","value":"pub fn pfadd<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified elements to the specified HyperLogLog.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4521},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":169933,"byte_end":169940,"line_start":922,"line_end":922,"column_start":8,"column_end":15},"name":"pfcount","qualname":"<Pipeline>::pfcount","value":"pub fn pfcount<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the approximated cardinality of the set(s) observed by the\n HyperLogLog at key(s).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4524},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170071,"byte_end":170078,"line_start":927,"line_end":927,"column_start":8,"column_end":15},"name":"pfmerge","qualname":"<Pipeline>::pfmerge","value":"pub fn pfmerge<'a, K: ToRedisArgs>(&mut Self, K, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Merge N different HyperLogLogs into a single one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4527},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170228,"byte_end":170235,"line_start":932,"line_end":932,"column_start":8,"column_end":15},"name":"publish","qualname":"<Pipeline>::publish","value":"pub fn publish<'a, K: ToRedisArgs, E: ToRedisArgs>(&mut Self, K, E)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Posts a message to the given channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":170686,"byte_end":170694,"line_start":943,"line_end":943,"column_start":8,"column_end":16},"name":"acl_load","qualname":"<Pipeline>::acl_load","value":"pub fn acl_load<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will reload the ACLs from the file,\n replacing all the current ACL rules with the ones defined in the file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171024,"byte_end":171032,"line_start":952,"line_end":952,"column_start":8,"column_end":16},"name":"acl_save","qualname":"<Pipeline>::acl_save","value":"pub fn acl_save<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" When Redis is configured to use an ACL file (with the aclfile\n configuration option), this command will save the currently defined\n ACLs from the server memory to the ACL file.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171229,"byte_end":171237,"line_start":959,"line_end":959,"column_start":8,"column_end":16},"name":"acl_list","qualname":"<Pipeline>::acl_list","value":"pub fn acl_list<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the currently active ACL rules in the Redis server.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171477,"byte_end":171486,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"acl_users","qualname":"<Pipeline>::acl_users","value":"pub fn acl_users<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of all the usernames of the currently configured users in\n the Redis ACL system.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171682,"byte_end":171693,"line_start":974,"line_end":974,"column_start":8,"column_end":19},"name":"acl_getuser","qualname":"<Pipeline>::acl_getuser","value":"pub fn acl_getuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all the rules defined for an existing ACL user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4542},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":171917,"byte_end":171928,"line_start":981,"line_end":981,"column_start":8,"column_end":19},"name":"acl_setuser","qualname":"<Pipeline>::acl_setuser","value":"pub fn acl_setuser<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user without any privilege.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172203,"byte_end":172220,"line_start":989,"line_end":989,"column_start":8,"column_end":25},"name":"acl_setuser_rules","qualname":"<Pipeline>::acl_setuser_rules","value":"pub fn acl_setuser_rules<'a, K: ToRedisArgs>(&mut Self, K, &'a [acl::Rule])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ACL user with the specified rules or modify the rules of\n an existing user.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172553,"byte_end":172564,"line_start":997,"line_end":997,"column_start":8,"column_end":19},"name":"acl_deluser","qualname":"<Pipeline>::acl_deluser","value":"pub fn acl_deluser<'a, K: ToRedisArgs>(&mut Self, &'a [K]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delete all the specified ACL users and terminate all the connections\n that are authenticated with such users.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172789,"byte_end":172796,"line_start":1004,"line_end":1004,"column_start":8,"column_end":15},"name":"acl_cat","qualname":"<Pipeline>::acl_cat","value":"pub fn acl_cat<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows the available ACL categories.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":172990,"byte_end":173010,"line_start":1011,"line_end":1011,"column_start":8,"column_end":28},"name":"acl_cat_categoryname","qualname":"<Pipeline>::acl_cat_categoryname","value":"pub fn acl_cat_categoryname<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows all the Redis commands in the specified category.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173266,"byte_end":173277,"line_start":1018,"line_end":1018,"column_start":8,"column_end":19},"name":"acl_genpass","qualname":"<Pipeline>::acl_genpass","value":"pub fn acl_genpass<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 256-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173496,"byte_end":173512,"line_start":1025,"line_end":1025,"column_start":8,"column_end":24},"name":"acl_genpass_bits","qualname":"<Pipeline>::acl_genpass_bits","value":"pub fn acl_genpass_bits<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a 1-to-1024-bits password starting from /dev/urandom if available.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173742,"byte_end":173752,"line_start":1032,"line_end":1032,"column_start":8,"column_end":18},"name":"acl_whoami","qualname":"<Pipeline>::acl_whoami","value":"pub fn acl_whoami<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the username the current connection is authenticated with.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":173936,"byte_end":173943,"line_start":1039,"line_end":1039,"column_start":8,"column_end":15},"name":"acl_log","qualname":"<Pipeline>::acl_log","value":"pub fn acl_log<'a>(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Shows a list of recent ACL security events\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174125,"byte_end":174138,"line_start":1047,"line_end":1047,"column_start":8,"column_end":21},"name":"acl_log_reset","qualname":"<Pipeline>::acl_log_reset","value":"pub fn acl_log_reset<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Clears the ACL log.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":174350,"byte_end":174358,"line_start":1054,"line_end":1054,"column_start":8,"column_end":16},"name":"acl_help","qualname":"<Pipeline>::acl_help","value":"pub fn acl_help<'a>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a helpful text describing the different subcommands.\n","sig":null,"attributes":[{"value":"cfg(feature = \"acl\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":175794,"byte_end":175801,"line_start":1097,"line_end":1097,"column_start":8,"column_end":15},"name":"geo_add","qualname":"<Pipeline>::geo_add","value":"pub fn geo_add<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds the specified geospatial items to the specified key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":176955,"byte_end":176963,"line_start":1134,"line_end":1134,"column_start":8,"column_end":16},"name":"geo_dist","qualname":"<Pipeline>::geo_dist","value":"pub fn geo_dist<'a, K: ToRedisArgs, M1: ToRedisArgs,\n                M2: ToRedisArgs>(&mut Self, K, M1, M2, geo::Unit) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the distance between two members in the geospatial index\n represented by the sorted set.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":178021,"byte_end":178029,"line_start":1168,"line_end":1168,"column_start":8,"column_end":16},"name":"geo_hash","qualname":"<Pipeline>::geo_hash","value":"pub fn geo_hash<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return valid [Geohash][1] strings representing the position of one or\n more members of the geospatial index represented by the sorted set at\n key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4581},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":179121,"byte_end":179128,"line_start":1197,"line_end":1197,"column_start":8,"column_end":15},"name":"geo_pos","qualname":"<Pipeline>::geo_pos","value":"pub fn geo_pos<'a, K: ToRedisArgs, M: ToRedisArgs>(&mut Self, K, M)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the positions of all the specified members of the geospatial\n index represented by the sorted set at key.","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180266,"byte_end":180276,"line_start":1222,"line_end":1222,"column_start":8,"column_end":18},"name":"geo_radius","qualname":"<Pipeline>::geo_radius","value":"pub fn geo_radius<'a,\n                  K: ToRedisArgs>(&mut Self, K, f64, f64, f64, geo::Unit,\n                                  geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Return the members of a sorted set populated with geospatial information\n using [`geo_add`](#method.geo_add), which are within the borders of the area\n specified with the center location and the maximum distance from the center\n (the radius).","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":180867,"byte_end":180887,"line_start":1243,"line_end":1243,"column_start":8,"column_end":28},"name":"geo_radius_by_member","qualname":"<Pipeline>::geo_radius_by_member","value":"pub fn geo_radius_by_member<'a, K: ToRedisArgs,\n                            M: ToRedisArgs>(&mut Self, K, M, f64, geo::Unit,\n                                            geo::RadiusOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Retrieve members selected by distance with the center of `member`. The\n member itself is always contained in the results.\n","sig":null,"attributes":[{"value":"cfg(feature = \"geospatial\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181485,"byte_end":181489,"line_start":1269,"line_end":1269,"column_start":8,"column_end":12},"name":"xack","qualname":"<Pipeline>::xack","value":"pub fn xack<'a, K: ToRedisArgs, G: ToRedisArgs,\n            I: ToRedisArgs>(&mut Self, K, G, &'a [I]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Ack pending stream messages checked out by a consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":181968,"byte_end":181972,"line_start":1287,"line_end":1287,"column_start":8,"column_end":12},"name":"xadd","qualname":"<Pipeline>::xadd","value":"pub fn xadd<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n            V: ToRedisArgs>(&mut Self, K, ID, &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message by `key`. Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182458,"byte_end":182466,"line_start":1304,"line_end":1304,"column_start":8,"column_end":16},"name":"xadd_map","qualname":"<Pipeline>::xadd_map","value":"pub fn xadd_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                BTM: ToRedisArgs>(&mut Self, K, ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message by `key`.\n Use `*` as the `id` for the current timestamp.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":182911,"byte_end":182922,"line_start":1319,"line_end":1319,"column_start":8,"column_end":19},"name":"xadd_maxlen","qualname":"<Pipeline>::xadd_maxlen","value":"pub fn xadd_maxlen<'a, K: ToRedisArgs, ID: ToRedisArgs, F: ToRedisArgs,\n                   V: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen, ID,\n                                   &'a [(F, V)]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4614},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":183548,"byte_end":183563,"line_start":1345,"line_end":1345,"column_start":8,"column_end":23},"name":"xadd_maxlen_map","qualname":"<Pipeline>::xadd_maxlen_map","value":"pub fn xadd_maxlen_map<'a, K: ToRedisArgs, ID: ToRedisArgs,\n                       BTM: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen,\n                                         ID, BTM) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" BTreeMap variant for adding a stream message while capping the stream at a maxlength.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4619},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":184312,"byte_end":184318,"line_start":1371,"line_end":1371,"column_start":8,"column_end":14},"name":"xclaim","qualname":"<Pipeline>::xclaim","value":"pub fn xclaim<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n              MIT: ToRedisArgs,\n              ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Claim pending, unacked messages, after some period of time,\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186185,"byte_end":186199,"line_start":1421,"line_end":1421,"column_start":8,"column_end":22},"name":"xclaim_options","qualname":"<Pipeline>::xclaim_options","value":"pub fn xclaim_options<'a, K: ToRedisArgs, G: ToRedisArgs, C: ToRedisArgs,\n                      MIT: ToRedisArgs,\n                      ID: ToRedisArgs>(&mut Self, K, G, C, MIT, &'a [ID],\n                                       streams::StreamClaimOptions)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the optional arguments version for claiming unacked, pending messages\n currently checked out by another consumer.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":186903,"byte_end":186907,"line_start":1452,"line_end":1452,"column_start":8,"column_end":12},"name":"xdel","qualname":"<Pipeline>::xdel","value":"pub fn xdel<'a, K: ToRedisArgs, ID: ToRedisArgs>(&mut Self, K, &'a [ID])\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Deletes a list of `id`s for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":187548,"byte_end":187561,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"xgroup_create","qualname":"<Pipeline>::xgroup_create","value":"pub fn xgroup_create<'a, K: ToRedisArgs, G: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This command is used for creating a consumer `group`. It expects the stream key\n to already exist. Otherwise, use `xgroup_create_mkstream` if it doesn't.\n The `id` is the starting message id all consumers should read from. Use `$` If you want\n all consumers to read from the last message added to stream.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188106,"byte_end":188128,"line_start":1491,"line_end":1491,"column_start":8,"column_end":30},"name":"xgroup_create_mkstream","qualname":"<Pipeline>::xgroup_create_mkstream","value":"pub fn xgroup_create_mkstream<'a, K: ToRedisArgs, G: ToRedisArgs,\n                              ID: ToRedisArgs>(&mut Self, K, G, ID)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the alternate version for creating a consumer `group`\n which makes the stream if it doesn't exist.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4647},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":188702,"byte_end":188714,"line_start":1517,"line_end":1517,"column_start":8,"column_end":20},"name":"xgroup_setid","qualname":"<Pipeline>::xgroup_setid","value":"pub fn xgroup_setid<'a, K: ToRedisArgs, G: ToRedisArgs,\n                    ID: ToRedisArgs>(&mut Self, K, G, ID) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Alter which `id` you want consumers to begin reading from an existing\n consumer `group`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189194,"byte_end":189208,"line_start":1537,"line_end":1537,"column_start":8,"column_end":22},"name":"xgroup_destroy","qualname":"<Pipeline>::xgroup_destroy","value":"pub fn xgroup_destroy<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Destroy an existing consumer `group` for a given stream `key`","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":189636,"byte_end":189654,"line_start":1552,"line_end":1552,"column_start":8,"column_end":26},"name":"xgroup_delconsumer","qualname":"<Pipeline>::xgroup_delconsumer","value":"pub fn xgroup_delconsumer<'a, K: ToRedisArgs, G: ToRedisArgs,\n                          C: ToRedisArgs>(&mut Self, K, G, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This deletes a `consumer` from an existing consumer `group`\n for given stream `key.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190369,"byte_end":190384,"line_start":1577,"line_end":1577,"column_start":8,"column_end":23},"name":"xinfo_consumers","qualname":"<Pipeline>::xinfo_consumers","value":"pub fn xinfo_consumers<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This returns all info details about\n which consumers have read messages for given consumer `group`.\n Take note of the StreamInfoConsumersReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":190975,"byte_end":190987,"line_start":1599,"line_end":1599,"column_start":8,"column_end":20},"name":"xinfo_groups","qualname":"<Pipeline>::xinfo_groups","value":"pub fn xinfo_groups<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns all consumer `group`s created for a given stream `key`.\n Take note of the StreamInfoGroupsReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191526,"byte_end":191538,"line_start":1616,"line_end":1616,"column_start":8,"column_end":20},"name":"xinfo_stream","qualname":"<Pipeline>::xinfo_stream","value":"pub fn xinfo_stream<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns info about high-level stream details\n (first & last message `id`, length, number of groups, etc.)\n Take note of the StreamInfoStreamReply return type.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":191830,"byte_end":191834,"line_start":1627,"line_end":1627,"column_start":8,"column_end":12},"name":"xlen","qualname":"<Pipeline>::xlen","value":"pub fn xlen<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages for a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":192544,"byte_end":192552,"line_start":1648,"line_end":1648,"column_start":8,"column_end":16},"name":"xpending","qualname":"<Pipeline>::xpending","value":"pub fn xpending<'a, K: ToRedisArgs, G: ToRedisArgs>(&mut Self, K, G)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is a basic version of making XPENDING command calls which only\n passes a stream `key` and consumer `group` and it\n returns details about which consumers have pending messages\n that haven't been acked.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":193233,"byte_end":193247,"line_start":1669,"line_end":1669,"column_start":8,"column_end":22},"name":"xpending_count","qualname":"<Pipeline>::xpending_count","value":"pub fn xpending_count<'a, K: ToRedisArgs, G: ToRedisArgs, S: ToRedisArgs,\n                      E: ToRedisArgs,\n                      C: ToRedisArgs>(&mut Self, K, G, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This XPENDING version returns a list of all messages over the range.\n You can use this for paginating pending messages (but without the message HashMap).","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":194095,"byte_end":194118,"line_start":1703,"line_end":1703,"column_start":8,"column_end":31},"name":"xpending_consumer_count","qualname":"<Pipeline>::xpending_consumer_count","value":"pub fn xpending_consumer_count<'a, K: ToRedisArgs, G: ToRedisArgs,\n                               S: ToRedisArgs, E: ToRedisArgs, C: ToRedisArgs,\n                               CN: ToRedisArgs>(&mut Self, K, G, S, E, C, CN)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" An alternate version of `xpending_count` which filters by `consumer` name.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195027,"byte_end":195033,"line_start":1740,"line_end":1740,"column_start":8,"column_end":14},"name":"xrange","qualname":"<Pipeline>::xrange","value":"pub fn xrange<'a, K: ToRedisArgs, S: ToRedisArgs,\n              E: ToRedisArgs>(&mut Self, K, S, E) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a range of messages in a given stream `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4698},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195470,"byte_end":195480,"line_start":1757,"line_end":1757,"column_start":8,"column_end":18},"name":"xrange_all","qualname":"<Pipeline>::xrange_all","value":"pub fn xrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A helper method for automatically returning all messages in a stream by `key`.\n **Use with caution!**","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":195787,"byte_end":195799,"line_start":1769,"line_end":1769,"column_start":8,"column_end":20},"name":"xrange_count","qualname":"<Pipeline>::xrange_count","value":"pub fn xrange_count<'a, K: ToRedisArgs, S: ToRedisArgs, E: ToRedisArgs,\n                    C: ToRedisArgs>(&mut Self, K, S, E, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A method for paginating a stream by `key`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":196506,"byte_end":196511,"line_start":1794,"line_end":1794,"column_start":8,"column_end":13},"name":"xread","qualname":"<Pipeline>::xread","value":"pub fn xread<'a, K: ToRedisArgs,\n             ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read a list of `id`s for each stream `key`.\n This is the basic form of reading streams.\n For more advanced control, like blocking, limiting, or reading by consumer `group`,\n see `xread_options`.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4711},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198262,"byte_end":198275,"line_start":1839,"line_end":1839,"column_start":8,"column_end":21},"name":"xread_options","qualname":"<Pipeline>::xread_options","value":"pub fn xread_options<'a, K: ToRedisArgs,\n                     ID: ToRedisArgs>(&mut Self, &'a [K], &'a [ID],\n                                      streams::StreamReadOptions) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This method handles setting optional arguments for\n `XREAD` or `XREADGROUP` Redis commands.\n ```no_run\n use redis::{Connection,RedisResult,Commands};\n use redis::streams::{StreamReadOptions,StreamReadReply};\n let client = redis::Client::open(\"redis://127.0.0.1/0\").unwrap();\n let mut con = client.get_connection().unwrap();","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":198876,"byte_end":198885,"line_start":1863,"line_end":1863,"column_start":8,"column_end":17},"name":"xrevrange","qualname":"<Pipeline>::xrevrange","value":"pub fn xrevrange<'a, K: ToRedisArgs, E: ToRedisArgs,\n                 S: ToRedisArgs>(&mut Self, K, E, S) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199232,"byte_end":199245,"line_start":1877,"line_end":1877,"column_start":8,"column_end":21},"name":"xrevrange_all","qualname":"<Pipeline>::xrevrange_all","value":"pub fn xrevrange_all<'a, K: ToRedisArgs>(&mut Self, K) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_all`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4723},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":199617,"byte_end":199632,"line_start":1889,"line_end":1889,"column_start":8,"column_end":23},"name":"xrevrange_count","qualname":"<Pipeline>::xrevrange_count","value":"pub fn xrevrange_count<'a, K: ToRedisArgs, E: ToRedisArgs, S: ToRedisArgs,\n                       C: ToRedisArgs>(&mut Self, K, E, S, C) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is the reverse version of `xrange_count`.\n The same rules apply for `start` and `end` here.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4729},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200172,"byte_end":200177,"line_start":1911,"line_end":1911,"column_start":8,"column_end":13},"name":"xtrim","qualname":"<Pipeline>::xtrim","value":"pub fn xtrim<'a, K: ToRedisArgs>(&mut Self, K, streams::StreamMaxlen)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Trim a stream `key` to a MAXLEN count.","sig":null,"attributes":[{"value":"cfg(feature = \"streams\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145544,"byte_end":145552,"line_start":262,"line_end":262,"column_start":19,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145571,"byte_end":145580,"line_start":263,"line_end":263,"column_start":17,"column_end":26}},{"value":"allow(clippy :: extra_unused_lifetimes, clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":145597,"byte_end":145665,"line_start":264,"line_end":264,"column_start":17,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200466,"byte_end":200474,"line_start":1924,"line_end":1924,"column_start":5,"column_end":13},"name":"Continue","qualname":"::commands::ControlFlow::Continue","value":"ControlFlow::Continue","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Continues.\n","sig":null,"attributes":[{"value":"/ Continues.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200447,"byte_end":200461,"line_start":1923,"line_end":1923,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200509,"byte_end":200514,"line_start":1926,"line_end":1926,"column_start":5,"column_end":10},"name":"Break","qualname":"::commands::ControlFlow::Break","value":"ControlFlow::Break(U)","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Breaks with a value.\n","sig":null,"attributes":[{"value":"/ Breaks with a value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200480,"byte_end":200504,"line_start":1925,"line_end":1925,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200426,"byte_end":200437,"line_start":1922,"line_end":1922,"column_start":10,"column_end":21},"name":"ControlFlow","qualname":"::commands::ControlFlow","value":"pub enum ControlFlow<U> {\n\n    /// Continues.\n    Continue,\n\n    /// Breaks with a value.\n    Break(U),\n}","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":694}],"decl_id":null,"docs":" Allows pubsub callbacks to stop receiving messages.","sig":null,"attributes":[{"value":"/ Allows pubsub callbacks to stop receiving messages.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200308,"byte_end":200363,"line_start":1919,"line_end":1919,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200364,"byte_end":200367,"line_start":1920,"line_end":1920,"column_start":1,"column_end":4}},{"value":"/ Arbitrary data may be returned from `Break`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200368,"byte_end":200416,"line_start":1921,"line_end":1921,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201717,"byte_end":201731,"line_start":1963,"line_end":1963,"column_start":11,"column_end":25},"name":"PubSubCommands","qualname":"::commands::PubSubCommands","value":"PubSubCommands: Sized","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":702}],"decl_id":null,"docs":" The PubSub trait allows subscribing to one or more channels\n and receiving a callback whenever a message arrives.","sig":null,"attributes":[{"value":"/ The PubSub trait allows subscribing to one or more channels","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200522,"byte_end":200585,"line_start":1929,"line_end":1929,"column_start":1,"column_end":64}},{"value":"/ and receiving a callback whenever a message arrives.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200586,"byte_end":200642,"line_start":1930,"line_end":1930,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200643,"byte_end":200646,"line_start":1931,"line_end":1931,"column_start":1,"column_end":4}},{"value":"/ Each method handles subscribing to the list of keys, waiting for","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200647,"byte_end":200715,"line_start":1932,"line_end":1932,"column_start":1,"column_end":69}},{"value":"/ messages, and unsubscribing from the same list of channels once","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200716,"byte_end":200783,"line_start":1933,"line_end":1933,"column_start":1,"column_end":68}},{"value":"/ a ControlFlow::Break is encountered.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200784,"byte_end":200824,"line_start":1934,"line_end":1934,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200825,"byte_end":200828,"line_start":1935,"line_end":1935,"column_start":1,"column_end":4}},{"value":"/ Once (p)subscribe returns Ok(U), the connection is again safe to use","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200829,"byte_end":200901,"line_start":1936,"line_end":1936,"column_start":1,"column_end":73}},{"value":"/ for calling other methods.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200902,"byte_end":200932,"line_start":1937,"line_end":1937,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200933,"byte_end":200936,"line_start":1938,"line_end":1938,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200937,"byte_end":200951,"line_start":1939,"line_end":1939,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200952,"byte_end":200955,"line_start":1940,"line_end":1940,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200956,"byte_end":200974,"line_start":1941,"line_end":1941,"column_start":1,"column_end":19}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":200975,"byte_end":201026,"line_start":1942,"line_end":1942,"column_start":1,"column_end":52}},{"value":"/ use redis::{PubSubCommands, ControlFlow};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201027,"byte_end":201072,"line_start":1943,"line_end":1943,"column_start":1,"column_end":46}},{"value":"/ let client = redis::Client::open(\"redis://127.0.0.1/\")?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201073,"byte_end":201133,"line_start":1944,"line_end":1944,"column_start":1,"column_end":61}},{"value":"/ let mut con = client.get_connection()?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201134,"byte_end":201177,"line_start":1945,"line_end":1945,"column_start":1,"column_end":44}},{"value":"/ let mut count = 0;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201178,"byte_end":201200,"line_start":1946,"line_end":1946,"column_start":1,"column_end":23}},{"value":"/ con.subscribe(&[\"foo\"], |msg| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201201,"byte_end":201236,"line_start":1947,"line_end":1947,"column_start":1,"column_end":36}},{"value":"/     // do something with message","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201237,"byte_end":201273,"line_start":1948,"line_end":1948,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(msg.get_channel(), Ok(String::from(\"foo\")));","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201274,"byte_end":201337,"line_start":1949,"line_end":1949,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201338,"byte_end":201341,"line_start":1950,"line_end":1950,"column_start":1,"column_end":4}},{"value":"/     // increment messages seen counter","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201342,"byte_end":201384,"line_start":1951,"line_end":1951,"column_start":1,"column_end":43}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201385,"byte_end":201404,"line_start":1952,"line_end":1952,"column_start":1,"column_end":20}},{"value":"/     match count {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201405,"byte_end":201426,"line_start":1953,"line_end":1953,"column_start":1,"column_end":22}},{"value":"/         // stop after receiving 10 messages","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201427,"byte_end":201474,"line_start":1954,"line_end":1954,"column_start":1,"column_end":48}},{"value":"/         10 => ControlFlow::Break(()),","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201475,"byte_end":201516,"line_start":1955,"line_end":1955,"column_start":1,"column_end":42}},{"value":"/         _ => ControlFlow::Continue,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201517,"byte_end":201556,"line_start":1956,"line_end":1956,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201557,"byte_end":201566,"line_start":1957,"line_end":1957,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201567,"byte_end":201574,"line_start":1958,"line_end":1958,"column_start":1,"column_end":8}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201575,"byte_end":201589,"line_start":1959,"line_end":1959,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201590,"byte_end":201597,"line_start":1960,"line_end":1960,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202089,"byte_end":202098,"line_start":1970,"line_end":1970,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::commands::PubSubCommands::subscribe","value":"pub fn subscribe<C, F, U>(&mut Self, C, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, C: ToRedisArgs","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using SUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using SUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201745,"byte_end":201817,"line_start":1964,"line_end":1964,"column_start":5,"column_end":77}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201822,"byte_end":201860,"line_start":1965,"line_end":1965,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201865,"byte_end":201868,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201873,"byte_end":201931,"line_start":1967,"line_end":1967,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201936,"byte_end":202010,"line_start":1968,"line_end":1968,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202015,"byte_end":202081,"line_start":1969,"line_end":1969,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202574,"byte_end":202584,"line_start":1981,"line_end":1981,"column_start":8,"column_end":18},"name":"psubscribe","qualname":"::commands::PubSubCommands::psubscribe","value":"pub fn psubscribe<P, F, U>(&mut Self, P, F) -> RedisResult<U> where\nF: FnMut(Msg) -> ControlFlow<U>, P: ToRedisArgs","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Subscribe to a list of channels using PSUBSCRIBE and run the provided\n closure for each message received.","sig":null,"attributes":[{"value":"/ Subscribe to a list of channels using PSUBSCRIBE and run the provided","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202229,"byte_end":202302,"line_start":1975,"line_end":1975,"column_start":5,"column_end":78}},{"value":"/ closure for each message received.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202307,"byte_end":202345,"line_start":1976,"line_end":1976,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202350,"byte_end":202353,"line_start":1977,"line_end":1977,"column_start":5,"column_end":8}},{"value":"/ For every `Msg` passed to the provided closure, either","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202358,"byte_end":202416,"line_start":1978,"line_end":1978,"column_start":5,"column_end":63}},{"value":"/ `ControlFlow::Break` or `ControlFlow::Continue` must be returned. This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202421,"byte_end":202495,"line_start":1979,"line_end":1979,"column_start":5,"column_end":79}},{"value":"/ method will not return until `ControlFlow::Break` is observed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202500,"byte_end":202566,"line_start":1980,"line_end":1980,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204442,"byte_end":204453,"line_start":2052,"line_end":2052,"column_start":12,"column_end":23},"name":"LposOptions","qualname":"::commands::LposOptions","value":"LposOptions {  }","parent":null,"children":[{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735}],"decl_id":null,"docs":" Options for the [LPOS] command","sig":null,"attributes":[{"value":"/ Options for the [LPOS] command","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203868,"byte_end":203902,"line_start":2028,"line_end":2028,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203903,"byte_end":203906,"line_start":2029,"line_end":2029,"column_start":1,"column_end":4}},{"value":"/ https://redis.io/commands/lpos","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203907,"byte_end":203941,"line_start":2030,"line_end":2030,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203942,"byte_end":203945,"line_start":2031,"line_end":2031,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203946,"byte_end":203959,"line_start":2032,"line_end":2032,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203960,"byte_end":203963,"line_start":2033,"line_end":2033,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203964,"byte_end":203982,"line_start":2034,"line_end":2034,"column_start":1,"column_end":19}},{"value":"/ use redis::{Commands, RedisResult, LposOptions};","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":203983,"byte_end":204035,"line_start":2035,"line_end":2035,"column_start":1,"column_end":53}},{"value":"/ fn fetch_list_position(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204036,"byte_end":204063,"line_start":2036,"line_end":2036,"column_start":1,"column_end":28}},{"value":"/     con: &mut redis::Connection,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204064,"byte_end":204100,"line_start":2037,"line_end":2037,"column_start":1,"column_end":37}},{"value":"/     key: &str,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204101,"byte_end":204119,"line_start":2038,"line_end":2038,"column_start":1,"column_end":19}},{"value":"/     value: &str,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204120,"byte_end":204140,"line_start":2039,"line_end":2039,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204141,"byte_end":204162,"line_start":2040,"line_end":2040,"column_start":1,"column_end":22}},{"value":"/     rank: isize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204163,"byte_end":204183,"line_start":2041,"line_end":2041,"column_start":1,"column_end":21}},{"value":"/     maxlen: usize,","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204184,"byte_end":204206,"line_start":2042,"line_end":2042,"column_start":1,"column_end":23}},{"value":"/ ) -> RedisResult<Vec<usize>> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204207,"byte_end":204241,"line_start":2043,"line_end":2043,"column_start":1,"column_end":35}},{"value":"/     let opts = LposOptions::default()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204242,"byte_end":204283,"line_start":2044,"line_end":2044,"column_start":1,"column_end":42}},{"value":"/         .count(count)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204284,"byte_end":204309,"line_start":2045,"line_end":2045,"column_start":1,"column_end":26}},{"value":"/         .rank(rank)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204310,"byte_end":204333,"line_start":2046,"line_end":2046,"column_start":1,"column_end":24}},{"value":"/         .maxlen(maxlen);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204334,"byte_end":204362,"line_start":2047,"line_end":2047,"column_start":1,"column_end":29}},{"value":"/     con.lpos(key, value, opts)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204363,"byte_end":204397,"line_start":2048,"line_end":2048,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204398,"byte_end":204403,"line_start":2049,"line_end":2049,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204404,"byte_end":204411,"line_start":2050,"line_end":2050,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204624,"byte_end":204629,"line_start":2060,"line_end":2060,"column_start":12,"column_end":17},"name":"count","qualname":"<LposOptions>::count","value":"pub fn count(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the results to the first N matching items.\n","sig":null,"attributes":[{"value":"/ Limit the results to the first N matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204560,"byte_end":204612,"line_start":2059,"line_end":2059,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204776,"byte_end":204780,"line_start":2066,"line_end":2066,"column_start":12,"column_end":16},"name":"rank","qualname":"<LposOptions>::rank","value":"pub fn rank(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the value of N from the matching items.\n","sig":null,"attributes":[{"value":"/ Return the value of N from the matching items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204714,"byte_end":204764,"line_start":2065,"line_end":2065,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204920,"byte_end":204926,"line_start":2072,"line_end":2072,"column_start":12,"column_end":18},"name":"maxlen","qualname":"<LposOptions>::maxlen","value":"pub fn maxlen(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Limit the search to N items in the list.\n","sig":null,"attributes":[{"value":"/ Limit the search to N items in the list.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204864,"byte_end":204908,"line_start":2071,"line_end":2071,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206269,"byte_end":206284,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"parse_redis_url","qualname":"::connection::parse_redis_url","value":"pub fn parse_redis_url(&str) -> Result<url::Url, ()>","parent":null,"children":[],"decl_id":null,"docs":" This function takes a redis URL string and parses it into a URL\n as used by rust-url.  This is necessary as the default parser does\n not understand how redis URLs function.\n","sig":null,"attributes":[{"value":"/ This function takes a redis URL string and parses it into a URL","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206079,"byte_end":206146,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ as used by rust-url.  This is necessary as the default parser does","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206147,"byte_end":206217,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ not understand how redis URLs function.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206218,"byte_end":206261,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4739},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206875,"byte_end":206878,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::connection::ConnectionAddr::Tcp","value":"ConnectionAddr::Tcp(String, u16)","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206832,"byte_end":206870,"line_start":42,"line_end":42,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":4743},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206940,"byte_end":206946,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"TcpTls","qualname":"::connection::ConnectionAddr::TcpTls","value":"ConnectionAddr::TcpTls { host, port, insecure }","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Format for this is `(host, port)`.\n","sig":null,"attributes":[{"value":"/ Format for this is `(host, port)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206897,"byte_end":206935,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4747},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207519,"byte_end":207523,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Unix","qualname":"::connection::ConnectionAddr::Unix","value":"ConnectionAddr::Unix(PathBuf)","parent":{"krate":0,"index":4738},"children":[],"decl_id":null,"docs":" Format for this is the path to the unix socket.\n","sig":null,"attributes":[{"value":"/ Format for this is the path to the unix socket.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207463,"byte_end":207514,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4738},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206811,"byte_end":206825,"line_start":41,"line_end":41,"column_start":10,"column_end":24},"name":"ConnectionAddr","qualname":"::connection::ConnectionAddr","value":"pub enum ConnectionAddr {\n\n    /// Format for this is `(host, port)`.\n    Tcp(String, u16),\n\n    /// Format for this is `(host, port)`.\n    TcpTls {\n        /// Hostname\n        host: String,\n        /// Port\n        port: u16,\n        /// Disable hostname verification when connecting.\n        ///\n        /// # Warning\n        ///\n        /// You should think very carefully before you use this method. If hostname\n        /// verification is not used, any valid certificate for any site will be\n        /// trusted for use from any other. This introduces a significant\n        /// vulnerability to man-in-the-middle attacks.\n        insecure: bool,\n    },\n\n    /// Format for this is the path to the unix socket.\n    Unix(PathBuf),\n}","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4743},{"krate":0,"index":4747}],"decl_id":null,"docs":" Defines the connection address.","sig":null,"attributes":[{"value":"/ Defines the connection address.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206548,"byte_end":206583,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206584,"byte_end":206587,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Not all connection addresses are supported on all platforms.  For instance","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206588,"byte_end":206666,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ to connect to a unix socket you need to run this on an operating system","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206667,"byte_end":206742,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ that supports them.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":206743,"byte_end":206766,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207960,"byte_end":207972,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"is_supported","qualname":"<ConnectionAddr>::is_supported","value":"pub fn is_supported(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this address is supported.","sig":null,"attributes":[{"value":"/ Checks if this address is supported.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207563,"byte_end":207603,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207608,"byte_end":207611,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Because not all platforms support all connection addresses this is a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207616,"byte_end":207688,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ quick way to figure out if a connection method is supported.  Currently","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207693,"byte_end":207768,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ this only affects unix connections which are only supported on unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207773,"byte_end":207844,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ platforms and on older versions of rust also require an explicit feature","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207849,"byte_end":207925,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ to be enabled.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207930,"byte_end":207948,"line_start":71,"line_end":71,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208701,"byte_end":208715,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"ConnectionInfo","qualname":"::connection::ConnectionInfo","value":"ConnectionInfo { addr, db, username, passwd }","parent":null,"children":[{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762}],"decl_id":null,"docs":" Holds the connection information that redis should use for connecting.\n","sig":null,"attributes":[{"value":"/ Holds the connection information that redis should use for connecting.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208591,"byte_end":208665,"line_start":91,"line_end":91,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208786,"byte_end":208790,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"addr","qualname":"::connection::ConnectionInfo::addr","value":"std::boxed::Box<connection::ConnectionAddr>","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" A boxed connection address for where to connect to.\n","sig":null,"attributes":[{"value":"/ A boxed connection address for where to connect to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208722,"byte_end":208777,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208879,"byte_end":208881,"line_start":97,"line_end":97,"column_start":9,"column_end":11},"name":"db","qualname":"::connection::ConnectionInfo::db","value":"i64","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" The database number to use.  This is usually `0`.\n","sig":null,"attributes":[{"value":"/ The database number to use.  This is usually `0`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208817,"byte_end":208870,"line_start":96,"line_end":96,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4761},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208962,"byte_end":208970,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"name":"username","qualname":"::connection::ConnectionInfo::username","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" Optionally a username that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a username that should be used for connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208892,"byte_end":208953,"line_start":98,"line_end":98,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4762},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209062,"byte_end":209068,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"passwd","qualname":"::connection::ConnectionInfo::passwd","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4758},"children":[],"decl_id":null,"docs":" Optionally a password that should be used for connection.\n","sig":null,"attributes":[{"value":"/ Optionally a password that should be used for connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208992,"byte_end":209053,"line_start":100,"line_end":100,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209428,"byte_end":209446,"line_start":115,"line_end":115,"column_start":11,"column_end":29},"name":"IntoConnectionInfo","qualname":"::connection::IntoConnectionInfo","value":"IntoConnectionInfo","parent":null,"children":[{"krate":0,"index":764}],"decl_id":null,"docs":" Converts an object into a connection info struct.  This allows the\n constructor of the client to accept connection information in a\n range of different formats.\n","sig":null,"attributes":[{"value":"/ Converts an object into a connection info struct.  This allows the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209247,"byte_end":209317,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ constructor of the client to accept connection information in a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209318,"byte_end":209385,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ range of different formats.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209386,"byte_end":209417,"line_start":114,"line_end":114,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209515,"byte_end":209535,"line_start":117,"line_end":117,"column_start":8,"column_end":28},"name":"into_connection_info","qualname":"::connection::IntoConnectionInfo::into_connection_info","value":"pub fn into_connection_info(Self) -> RedisResult<ConnectionInfo>","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":" Converts the object into a connection info object.\n","sig":null,"attributes":[{"value":"/ Converts the object into a connection info object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209453,"byte_end":209507,"line_start":116,"line_end":116,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":214833,"byte_end":214843,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"Connection","qualname":"::connection::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Represents a stateful redis TCP connection.\n","sig":null,"attributes":[{"value":"/ Represents a stateful redis TCP connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":214774,"byte_end":214821,"line_start":292,"line_end":292,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215246,"byte_end":215252,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"PubSub","qualname":"::connection::PubSub","value":"PubSub {  }","parent":null,"children":[{"krate":0,"index":793}],"decl_id":null,"docs":" Represents a pubsub connection.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215199,"byte_end":215234,"line_start":305,"line_end":305,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4767},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215352,"byte_end":215355,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"Msg","qualname":"::connection::Msg","value":"Msg {  }","parent":null,"children":[{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770}],"decl_id":null,"docs":" Represents a pubsub message.\n","sig":null,"attributes":[{"value":"/ Represents a pubsub message.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215291,"byte_end":215323,"line_start":310,"line_end":310,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226039,"byte_end":226053,"line_start":603,"line_end":603,"column_start":11,"column_end":25},"name":"ConnectionLike","qualname":"::connection::ConnectionLike","value":"ConnectionLike","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" Implements the \"stateless\" part of the connection interface that is used by the\n different objects in redis-rs.  Primarily it obviously applies to `Connection`\n object but also some other objects implement the interface (for instance\n whole clients or certain redis results).","sig":null,"attributes":[{"value":"/ Implements the \"stateless\" part of the connection interface that is used by the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225357,"byte_end":225440,"line_start":593,"line_end":593,"column_start":1,"column_end":84}},{"value":"/ different objects in redis-rs.  Primarily it obviously applies to `Connection`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225441,"byte_end":225523,"line_start":594,"line_end":594,"column_start":1,"column_end":83}},{"value":"/ object but also some other objects implement the interface (for instance","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225524,"byte_end":225600,"line_start":595,"line_end":595,"column_start":1,"column_end":77}},{"value":"/ whole clients or certain redis results).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225601,"byte_end":225645,"line_start":596,"line_end":596,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225646,"byte_end":225649,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ Generally clients and connections (as well as redis results of those) implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225650,"byte_end":225733,"line_start":598,"line_end":598,"column_start":1,"column_end":84}},{"value":"/ this trait.  Actual connections provide more functionality which can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225734,"byte_end":225814,"line_start":599,"line_end":599,"column_start":1,"column_end":81}},{"value":"/ to implement things like `PubSub` but they also can modify the intrinsic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225815,"byte_end":225891,"line_start":600,"line_end":600,"column_start":1,"column_end":77}},{"value":"/ state of the TCP connection.  This is not possible with `ConnectionLike`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225892,"byte_end":225968,"line_start":601,"line_end":601,"column_start":1,"column_end":77}},{"value":"/ implementors because that functionality is not exposed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":225969,"byte_end":226028,"line_start":602,"line_end":602,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226180,"byte_end":226198,"line_start":606,"line_end":606,"column_start":8,"column_end":26},"name":"req_packed_command","qualname":"::connection::ConnectionLike::req_packed_command","value":"pub fn req_packed_command(&mut Self, &[u8]) -> RedisResult<Value>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n reads the single response from it.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226060,"byte_end":226129,"line_start":604,"line_end":604,"column_start":5,"column_end":74}},{"value":"/ reads the single response from it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226134,"byte_end":226172,"line_start":605,"line_end":605,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226421,"byte_end":226440,"line_start":611,"line_end":611,"column_start":8,"column_end":27},"name":"req_packed_commands","qualname":"::connection::ConnectionLike::req_packed_commands","value":"pub fn req_packed_commands(&mut Self, &[u8], usize, usize)\n-> RedisResult<Vec<Value>>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Sends multiple already encoded (packed) command into the TCP socket\n and reads `count` responses from it.  This is used to implement\n pipelining.\n","sig":null,"attributes":[{"value":"/ Sends multiple already encoded (packed) command into the TCP socket","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226250,"byte_end":226321,"line_start":608,"line_end":608,"column_start":5,"column_end":76}},{"value":"/ and reads `count` responses from it.  This is used to implement","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226326,"byte_end":226393,"line_start":609,"line_end":609,"column_start":5,"column_end":72}},{"value":"/ pipelining.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226398,"byte_end":226413,"line_start":610,"line_end":610,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226813,"byte_end":226819,"line_start":622,"line_end":622,"column_start":8,"column_end":14},"name":"get_db","qualname":"::connection::ConnectionLike::get_db","value":"pub fn get_db(&Self) -> i64","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Returns the database this connection is bound to.  Note that this\n information might be unreliable because it's initially cached and\n also might be incorrect if the connection like object is not\n actually connected.\n","sig":null,"attributes":[{"value":"/ Returns the database this connection is bound to.  Note that this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226565,"byte_end":226634,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ information might be unreliable because it's initially cached and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226639,"byte_end":226708,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/ also might be incorrect if the connection like object is not","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226713,"byte_end":226777,"line_start":620,"line_end":620,"column_start":5,"column_end":69}},{"value":"/ actually connected.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226782,"byte_end":226805,"line_start":621,"line_end":621,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226911,"byte_end":226930,"line_start":626,"line_end":626,"column_start":8,"column_end":27},"name":"supports_pipelining","qualname":"::connection::ConnectionLike::supports_pipelining","value":"pub fn supports_pipelining(&Self) -> bool","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Does this connection support pipelining?\n","sig":null,"attributes":[{"value":"/ Does this connection support pipelining?","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226840,"byte_end":226884,"line_start":624,"line_end":624,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227052,"byte_end":227068,"line_start":631,"line_end":631,"column_start":8,"column_end":24},"name":"check_connection","qualname":"::connection::ConnectionLike::check_connection","value":"pub fn check_connection(&mut Self) -> bool","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Check that all connections it has are available (`PING` internally).\n","sig":null,"attributes":[{"value":"/ Check that all connections it has are available (`PING` internally).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":226972,"byte_end":227044,"line_start":630,"line_end":630,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227468,"byte_end":227475,"line_start":640,"line_end":640,"column_start":8,"column_end":15},"name":"is_open","qualname":"::connection::ConnectionLike::is_open","value":"pub fn is_open(&Self) -> bool","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Returns the connection status.","sig":null,"attributes":[{"value":"/ Returns the connection status.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227094,"byte_end":227128,"line_start":633,"line_end":633,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227133,"byte_end":227136,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ The connection is open until any `read_response` call recieved an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227141,"byte_end":227210,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/ invalid response from the server (most likely a closed or dropped","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227215,"byte_end":227284,"line_start":636,"line_end":636,"column_start":5,"column_end":74}},{"value":"/ connection, otherwise a Redis protocol error). When using unix","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227289,"byte_end":227355,"line_start":637,"line_end":637,"column_start":5,"column_end":71}},{"value":"/ sockets the connection is open until writing a command failed with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227360,"byte_end":227432,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/ `BrokenPipe` error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227437,"byte_end":227460,"line_start":639,"line_end":639,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228167,"byte_end":228186,"line_start":655,"line_end":655,"column_start":12,"column_end":31},"name":"send_packed_command","qualname":"<Connection>::send_packed_command","value":"pub fn send_packed_command(&mut Self, &[u8]) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends an already encoded (packed) command into the TCP socket and\n does not read a response.  This is useful for commands like\n `MONITOR` which yield multiple items.  This needs to be used with\n care because it changes the state of the connection.\n","sig":null,"attributes":[{"value":"/ Sends an already encoded (packed) command into the TCP socket and","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227883,"byte_end":227952,"line_start":651,"line_end":651,"column_start":5,"column_end":74}},{"value":"/ does not read a response.  This is useful for commands like","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227957,"byte_end":228020,"line_start":652,"line_end":652,"column_start":5,"column_end":68}},{"value":"/ `MONITOR` which yield multiple items.  This needs to be used with","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228025,"byte_end":228094,"line_start":653,"line_end":653,"column_start":5,"column_end":74}},{"value":"/ care because it changes the state of the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228099,"byte_end":228155,"line_start":654,"line_end":654,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228429,"byte_end":228442,"line_start":662,"line_end":662,"column_start":12,"column_end":25},"name":"recv_response","qualname":"<Connection>::recv_response","value":"pub fn recv_response(&mut Self) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a single response from the connection.  This is useful\n if used in combination with `send_packed_command`.\n","sig":null,"attributes":[{"value":"/ Fetches a single response from the connection.  This is useful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228292,"byte_end":228358,"line_start":660,"line_end":660,"column_start":5,"column_end":71}},{"value":"/ if used in combination with `send_packed_command`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228363,"byte_end":228417,"line_start":661,"line_end":661,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228757,"byte_end":228774,"line_start":671,"line_end":671,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Connection>::set_write_timeout","value":"pub fn set_write_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the write timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228518,"byte_end":228564,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228569,"byte_end":228572,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `send_packed_command` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228577,"byte_end":228650,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228655,"byte_end":228729,"line_start":669,"line_end":669,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228734,"byte_end":228745,"line_start":670,"line_end":670,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":229109,"byte_end":229125,"line_start":680,"line_end":680,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Connection>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228877,"byte_end":228922,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228927,"byte_end":228930,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `recv_response` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":228935,"byte_end":229002,"line_start":677,"line_end":677,"column_start":5,"column_end":72}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":229007,"byte_end":229081,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":229086,"byte_end":229097,"line_start":679,"line_end":679,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":229293,"byte_end":229302,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"as_pubsub","qualname":"<Connection>::as_pubsub","value":"pub fn as_pubsub(&mut Self) -> PubSub","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PubSub`] instance for this connection.\n","sig":null,"attributes":[{"value":"/ Creates a [`PubSub`] instance for this connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":229227,"byte_end":229281,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235565,"byte_end":235574,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<PubSub>::subscribe","value":"pub fn subscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235521,"byte_end":235553,"line_start":867,"line_end":867,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235764,"byte_end":235774,"line_start":873,"line_end":873,"column_start":12,"column_end":22},"name":"psubscribe","qualname":"<PubSub>::psubscribe","value":"pub fn psubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Subscribes to a new channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Subscribes to a new channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235705,"byte_end":235752,"line_start":872,"line_end":872,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235952,"byte_end":235963,"line_start":878,"line_end":878,"column_start":12,"column_end":23},"name":"unsubscribe","qualname":"<PubSub>::unsubscribe","value":"pub fn unsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235908,"byte_end":235940,"line_start":877,"line_end":877,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236155,"byte_end":236167,"line_start":883,"line_end":883,"column_start":12,"column_end":24},"name":"punsubscribe","qualname":"<PubSub>::punsubscribe","value":"pub fn punsubscribe<T: ToRedisArgs>(&mut Self, T) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from a channel with a pattern.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from a channel with a pattern.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236096,"byte_end":236143,"line_start":882,"line_end":882,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236626,"byte_end":236637,"line_start":893,"line_end":893,"column_start":12,"column_end":23},"name":"get_message","qualname":"<PubSub>::get_message","value":"pub fn get_message(&mut Self) -> RedisResult<Msg>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the next message from the pubsub connection.  Blocks until\n a message becomes available.  This currently does not provide a\n wait not to block :(","sig":null,"attributes":[{"value":"/ Fetches the next message from the pubsub connection.  Blocks until","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236303,"byte_end":236373,"line_start":887,"line_end":887,"column_start":5,"column_end":75}},{"value":"/ a message becomes available.  This currently does not provide a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236378,"byte_end":236445,"line_start":888,"line_end":888,"column_start":5,"column_end":72}},{"value":"/ wait not to block :(","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236450,"byte_end":236474,"line_start":889,"line_end":889,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236479,"byte_end":236482,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The message itself is still generic and can be converted into an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236487,"byte_end":236555,"line_start":891,"line_end":891,"column_start":5,"column_end":73}},{"value":"/ appropriate type through the helper methods on it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236560,"byte_end":236614,"line_start":892,"line_end":892,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237107,"byte_end":237123,"line_start":908,"line_end":908,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<PubSub>::set_read_timeout","value":"pub fn set_read_timeout(&Self, Option<Duration>) -> RedisResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout for the connection.","sig":null,"attributes":[{"value":"/ Sets the read timeout for the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236877,"byte_end":236922,"line_start":903,"line_end":903,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236927,"byte_end":236930,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ If the provided value is `None`, then `get_message` call will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":236935,"byte_end":237000,"line_start":905,"line_end":905,"column_start":5,"column_end":70}},{"value":"/ block indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237005,"byte_end":237079,"line_start":906,"line_end":906,"column_start":5,"column_end":79}},{"value":"/ method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237084,"byte_end":237095,"line_start":907,"line_end":907,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237525,"byte_end":237535,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"from_value","qualname":"<Msg>::from_value","value":"pub fn from_value(&Value) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert provided [`Value`] into [`Msg`].\n","sig":null,"attributes":[{"value":"/ Tries to convert provided [`Value`] into [`Msg`].","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237460,"byte_end":237513,"line_start":922,"line_end":922,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238301,"byte_end":238312,"line_start":950,"line_end":950,"column_start":12,"column_end":23},"name":"get_channel","qualname":"<Msg>::get_channel","value":"pub fn get_channel<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel this message came on.\n","sig":null,"attributes":[{"value":"/ Returns the channel this message came on.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238244,"byte_end":238289,"line_start":949,"line_end":949,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238689,"byte_end":238705,"line_start":958,"line_end":958,"column_start":12,"column_end":28},"name":"get_channel_name","qualname":"<Msg>::get_channel_name","value":"pub fn get_channel_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to get a string version of the channel.  Unless\n your channel contains non utf-8 bytes you can always use this\n method.  If the channel is not a valid string (which really should\n not happen) then the return value is `\"?\"`.\n","sig":null,"attributes":[{"value":"/ Convenience method to get a string version of the channel.  Unless","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238410,"byte_end":238480,"line_start":954,"line_end":954,"column_start":5,"column_end":75}},{"value":"/ your channel contains non utf-8 bytes you can always use this","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238485,"byte_end":238550,"line_start":955,"line_end":955,"column_start":5,"column_end":70}},{"value":"/ method.  If the channel is not a valid string (which really should","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238555,"byte_end":238625,"line_start":956,"line_end":956,"column_start":5,"column_end":75}},{"value":"/ not happen) then the return value is `\"?\"`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238630,"byte_end":238677,"line_start":957,"line_end":957,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238933,"byte_end":238944,"line_start":966,"line_end":966,"column_start":12,"column_end":23},"name":"get_payload","qualname":"<Msg>::get_payload","value":"pub fn get_payload<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the message's payload in a specific format.\n","sig":null,"attributes":[{"value":"/ Returns the message's payload in a specific format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":238866,"byte_end":238921,"line_start":965,"line_end":965,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239235,"byte_end":239252,"line_start":973,"line_end":973,"column_start":12,"column_end":29},"name":"get_payload_bytes","qualname":"<Msg>::get_payload_bytes","value":"pub fn get_payload_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes that are the message's payload.  This can be used\n as an alternative to the `get_payload` function if you are interested\n in the raw bytes in it.\n","sig":null,"attributes":[{"value":"/ Returns the bytes that are the message's payload.  This can be used","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239042,"byte_end":239113,"line_start":970,"line_end":970,"column_start":5,"column_end":76}},{"value":"/ as an alternative to the `get_payload` function if you are interested","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239118,"byte_end":239191,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"/ in the raw bytes in it.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239196,"byte_end":239223,"line_start":972,"line_end":972,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239528,"byte_end":239540,"line_start":983,"line_end":983,"column_start":12,"column_end":24},"name":"from_pattern","qualname":"<Msg>::from_pattern","value":"pub fn from_pattern(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message was constructed from a pattern\n subscription.\n","sig":null,"attributes":[{"value":"/ Returns true if the message was constructed from a pattern","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239388,"byte_end":239450,"line_start":980,"line_end":980,"column_start":5,"column_end":67}},{"value":"/ subscription.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239455,"byte_end":239472,"line_start":981,"line_end":981,"column_start":5,"column_end":22}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239477,"byte_end":239516,"line_start":982,"line_end":982,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239870,"byte_end":239881,"line_start":991,"line_end":991,"column_start":12,"column_end":23},"name":"get_pattern","qualname":"<Msg>::get_pattern","value":"pub fn get_pattern<T: FromRedisValue>(&Self) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If the message was constructed from a message pattern this can be\n used to find out which one.  It's recommended to match against\n an `Option<String>` so that you do not need to use `from_pattern`\n to figure out if a pattern was set.\n","sig":null,"attributes":[{"value":"/ If the message was constructed from a message pattern this can be","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239600,"byte_end":239669,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ used to find out which one.  It's recommended to match against","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239674,"byte_end":239740,"line_start":988,"line_end":988,"column_start":5,"column_end":71}},{"value":"/ an `Option<String>` so that you do not need to use `from_pattern`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239745,"byte_end":239814,"line_start":989,"line_end":989,"column_start":5,"column_end":74}},{"value":"/ to figure out if a pattern was set.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":239819,"byte_end":239858,"line_start":990,"line_end":990,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241401,"byte_end":241412,"line_start":1031,"line_end":1031,"column_start":8,"column_end":19},"name":"transaction","qualname":"::connection::transaction","value":"pub fn transaction<C: ConnectionLike, K: ToRedisArgs, T,\n                   F: FnMut(&mut C, &mut Pipeline) ->\n                   RedisResult<Option<T>>>(&mut C, &[K], F) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" This function simplifies transaction management slightly.  What it\n does is automatically watching keys and then going into a transaction\n loop util it succeeds.  Once it goes through the results are\n returned.","sig":null,"attributes":[{"value":"/ This function simplifies transaction management slightly.  What it","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240075,"byte_end":240145,"line_start":999,"line_end":999,"column_start":1,"column_end":71}},{"value":"/ does is automatically watching keys and then going into a transaction","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240146,"byte_end":240219,"line_start":1000,"line_end":1000,"column_start":1,"column_end":74}},{"value":"/ loop util it succeeds.  Once it goes through the results are","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240220,"byte_end":240284,"line_start":1001,"line_end":1001,"column_start":1,"column_end":65}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240285,"byte_end":240298,"line_start":1002,"line_end":1002,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240299,"byte_end":240302,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ To use the transaction two pieces of information are needed: a list","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240303,"byte_end":240374,"line_start":1004,"line_end":1004,"column_start":1,"column_end":72}},{"value":"/ of all the keys that need to be watched for modifications and a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240375,"byte_end":240442,"line_start":1005,"line_end":1005,"column_start":1,"column_end":68}},{"value":"/ closure with the code that should be execute in the context of the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240443,"byte_end":240513,"line_start":1006,"line_end":1006,"column_start":1,"column_end":71}},{"value":"/ transaction.  The closure is invoked with a fresh pipeline in atomic","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240514,"byte_end":240586,"line_start":1007,"line_end":1007,"column_start":1,"column_end":73}},{"value":"/ mode.  To use the transaction the function needs to return the result","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240587,"byte_end":240660,"line_start":1008,"line_end":1008,"column_start":1,"column_end":74}},{"value":"/ from querying the pipeline with the connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240661,"byte_end":240712,"line_start":1009,"line_end":1009,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240713,"byte_end":240716,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ The end result of the transaction is then available as the return","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240717,"byte_end":240786,"line_start":1011,"line_end":1011,"column_start":1,"column_end":70}},{"value":"/ value from the function call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240787,"byte_end":240820,"line_start":1012,"line_end":1012,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240821,"byte_end":240824,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240825,"byte_end":240837,"line_start":1014,"line_end":1014,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240838,"byte_end":240841,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240842,"byte_end":240860,"line_start":1016,"line_end":1016,"column_start":1,"column_end":19}},{"value":"/ use redis::Commands;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240861,"byte_end":240885,"line_start":1017,"line_end":1017,"column_start":1,"column_end":25}},{"value":"/ # fn do_something() -> redis::RedisResult<()> {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240886,"byte_end":240937,"line_start":1018,"line_end":1018,"column_start":1,"column_end":52}},{"value":"/ # let client = redis::Client::open(\"redis://127.0.0.1/\").unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":240938,"byte_end":241008,"line_start":1019,"line_end":1019,"column_start":1,"column_end":71}},{"value":"/ # let mut con = client.get_connection().unwrap();","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241009,"byte_end":241062,"line_start":1020,"line_end":1020,"column_start":1,"column_end":54}},{"value":"/ let key = \"the_key\";","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241063,"byte_end":241087,"line_start":1021,"line_end":1021,"column_start":1,"column_end":25}},{"value":"/ let (new_val,) : (isize,) = redis::transaction(&mut con, &[key], |con, pipe| {","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241088,"byte_end":241170,"line_start":1022,"line_end":1022,"column_start":1,"column_end":83}},{"value":"/     let old_val : isize = con.get(key)?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241171,"byte_end":241215,"line_start":1023,"line_end":1023,"column_start":1,"column_end":45}},{"value":"/     pipe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241216,"byte_end":241228,"line_start":1024,"line_end":1024,"column_start":1,"column_end":13}},{"value":"/         .set(key, old_val + 1).ignore()","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241229,"byte_end":241272,"line_start":1025,"line_end":1025,"column_start":1,"column_end":44}},{"value":"/         .get(key).query(con)","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241273,"byte_end":241305,"line_start":1026,"line_end":1026,"column_start":1,"column_end":33}},{"value":"/ })?;","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241306,"byte_end":241314,"line_start":1027,"line_end":1027,"column_start":1,"column_end":9}},{"value":"/ println!(\"The incremented number is: {}\", new_val);","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241315,"byte_end":241370,"line_start":1028,"line_end":1028,"column_start":1,"column_end":56}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241371,"byte_end":241385,"line_start":1029,"line_end":1029,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":241386,"byte_end":241393,"line_start":1030,"line_end":1030,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":254880,"byte_end":254903,"line_start":210,"line_end":210,"column_start":18,"column_end":41},"name":"parse_redis_value_async","qualname":"::parser::aio_support::parse_redis_value_async","value":"pub async fn parse_redis_value_async<R, '_,\n                                     '_>(&'_ mut combine::stream::Decoder<AnySendSyncPartialState,\n                                                                          PointerOffset<[u8]>>,\n                                         &'_ mut R) -> /*impl Trait*/ where\nR: AsyncRead + std::marker::Unpin","parent":null,"children":[],"decl_id":null,"docs":" Parses a redis value asynchronously.\n","sig":null,"attributes":[{"value":"/ Parses a redis value asynchronously.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":254822,"byte_end":254862,"line_start":209,"line_end":209,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256022,"byte_end":256028,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":935}],"decl_id":null,"docs":" The internal redis response parser.\n","sig":null,"attributes":[{"value":"/ The internal redis response parser.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":255971,"byte_end":256010,"line_start":240,"line_end":240,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256757,"byte_end":256760,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parser that parses the data behind the reader.  More\n than one value can be behind the reader in which case the parser can\n be invoked multiple times.  In other words: the stream does not have\n to be terminated.\n","sig":null,"attributes":[{"value":"/ Creates a new parser that parses the data behind the reader.  More","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256495,"byte_end":256565,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ than one value can be behind the reader in which case the parser can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256570,"byte_end":256642,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ be invoked multiple times.  In other words: the stream does not have","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256647,"byte_end":256719,"line_start":258,"line_end":258,"column_start":5,"column_end":77}},{"value":"/ to be terminated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256724,"byte_end":256745,"line_start":259,"line_end":259,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256968,"byte_end":256979,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"parse_value","qualname":"<Parser>::parse_value","value":"pub fn parse_value<T: Read>(&mut Self, T) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses synchronously into a single value from the reader.\n","sig":null,"attributes":[{"value":"/ Parses synchronously into a single value from the reader.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256895,"byte_end":256956,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":258018,"byte_end":258035,"line_start":294,"line_end":294,"column_start":8,"column_end":25},"name":"parse_redis_value","qualname":"::parser::parse_redis_value","value":"pub fn parse_redis_value(&[u8]) -> RedisResult<Value>","parent":null,"children":[],"decl_id":null,"docs":" Parses bytes into a redis value.","sig":null,"attributes":[{"value":"/ Parses bytes into a redis value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":257836,"byte_end":257872,"line_start":290,"line_end":290,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":257873,"byte_end":257876,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This is the most straightforward way to parse something into a low","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":257877,"byte_end":257947,"line_start":292,"line_end":292,"column_start":1,"column_end":71}},{"value":"/ level redis value instead of having to use a whole parser.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":257948,"byte_end":258010,"line_start":293,"line_end":293,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":258386,"byte_end":258392,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Script","qualname":"::script::Script","value":"Script {  }","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4846}],"decl_id":null,"docs":" Represents a lua script.\n","sig":null,"attributes":[{"value":"/ Represents a lua script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":258322,"byte_end":258350,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259079,"byte_end":259082,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Script>::new","value":"pub fn new(&str) -> Script","parent":null,"children":[],"decl_id":null,"docs":" Creates a new script object.\n","sig":null,"attributes":[{"value":"/ Creates a new script object.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259035,"byte_end":259067,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259369,"byte_end":259377,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"get_hash","qualname":"<Script>::get_hash","value":"pub fn get_hash(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the script's SHA1 hash in hexadecimal format.\n","sig":null,"attributes":[{"value":"/ Returns the script's SHA1 hash in hexadecimal format.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259300,"byte_end":259357,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259511,"byte_end":259514,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"key","qualname":"<Script>::key","value":"pub fn key<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with a key filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with a key filled in.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259425,"byte_end":259485,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259490,"byte_end":259499,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259803,"byte_end":259806,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"arg","qualname":"<Script>::arg","value":"pub fn arg<T: ToRedisArgs>(&Self, T) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Creates a script invocation object with an argument filled in.\n","sig":null,"attributes":[{"value":"/ Creates a script invocation object with an argument filled in.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259711,"byte_end":259777,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259782,"byte_end":259791,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260246,"byte_end":260260,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"prepare_invoke","qualname":"<Script>::prepare_invoke","value":"pub fn prepare_invoke(&Self) -> ScriptInvocation","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty script invocation object.  This is primarily useful\n for programmatically adding arguments and keys because the type will\n not change.  Normally you can use `arg` and `key` directly.\n","sig":null,"attributes":[{"value":"/ Returns an empty script invocation object.  This is primarily useful","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260003,"byte_end":260075,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ for programmatically adding arguments and keys because the type will","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260080,"byte_end":260152,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ not change.  Normally you can use `arg` and `key` directly.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260157,"byte_end":260220,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260225,"byte_end":260234,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260496,"byte_end":260502,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"invoke","qualname":"<Script>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script directly without arguments.\n","sig":null,"attributes":[{"value":"/ Invokes the script directly without arguments.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260420,"byte_end":260470,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260475,"byte_end":260484,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260774,"byte_end":260790,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"ScriptInvocation","qualname":"::script::ScriptInvocation","value":"ScriptInvocation {  }","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968}],"decl_id":null,"docs":" Represents a prepared script call.\n","sig":null,"attributes":[{"value":"/ Represents a prepared script call.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":260724,"byte_end":260762,"line_start":90,"line_end":90,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261284,"byte_end":261287,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"arg","qualname":"<ScriptInvocation>::arg","value":"pub fn arg<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a regular argument to the invocation.  This ends up as `ARGV[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a regular argument to the invocation.  This ends up as `ARGV[i]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261162,"byte_end":261235,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261240,"byte_end":261258,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261263,"byte_end":261272,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261582,"byte_end":261585,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"key","qualname":"<ScriptInvocation>::key","value":"pub fn key<'b, T: ToRedisArgs>(&'b mut Self, T) -> &'b mut ScriptInvocation\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a key argument to the invocation.  This ends up as `KEYS[i]`\n in the script.\n","sig":null,"attributes":[{"value":"/ Adds a key argument to the invocation.  This ends up as `KEYS[i]`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261464,"byte_end":261533,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ in the script.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261538,"byte_end":261556,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261561,"byte_end":261570,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261834,"byte_end":261840,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"invoke","qualname":"<ScriptInvocation>::invoke","value":"pub fn invoke<T: FromRedisValue>(&Self, &mut ConnectionLike) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the script and returns the result.\n","sig":null,"attributes":[{"value":"/ Invokes the script and returns the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261762,"byte_end":261808,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261813,"byte_end":261822,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":262784,"byte_end":262796,"line_start":155,"line_end":155,"column_start":18,"column_end":30},"name":"invoke_async","qualname":"<ScriptInvocation>::invoke_async","value":"pub async fn invoke_async<C, T, '_, '_>(&'_ Self, &'_ mut C) -> /*impl Trait*/\nwhere C: crate::aio::ConnectionLike, T: FromRedisValue","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously invokes the script and returns the result.\n","sig":null,"attributes":[{"value":"/ Asynchronously invokes the script and returns the result.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":262663,"byte_end":262724,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":262729,"byte_end":262738,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":262743,"byte_end":262766,"line_start":154,"line_end":154,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264687,"byte_end":264697,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"name":"NonNumeric","qualname":"::types::NumericBehavior::NonNumeric","value":"NumericBehavior::NonNumeric","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":" This argument is not numeric.\n","sig":null,"attributes":[{"value":"/ This argument is not numeric.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264649,"byte_end":264682,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4854},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264740,"byte_end":264755,"line_start":35,"line_end":35,"column_start":5,"column_end":20},"name":"NumberIsInteger","qualname":"::types::NumericBehavior::NumberIsInteger","value":"NumericBehavior::NumberIsInteger","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":" This argument is an integer.\n","sig":null,"attributes":[{"value":"/ This argument is an integer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264703,"byte_end":264735,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4856},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264810,"byte_end":264823,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"NumberIsFloat","qualname":"::types::NumericBehavior::NumberIsFloat","value":"NumericBehavior::NumberIsFloat","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":" This argument is a floating point value.\n","sig":null,"attributes":[{"value":"/ This argument is a floating point value.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264761,"byte_end":264805,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264627,"byte_end":264642,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"name":"NumericBehavior","qualname":"::types::NumericBehavior","value":"pub enum NumericBehavior {\n\n    /// This argument is not numeric.\n    NonNumeric,\n\n    /// This argument is an integer.\n    NumberIsInteger,\n\n    /// This argument is a floating point value.\n    NumberIsFloat,\n}","parent":null,"children":[{"krate":0,"index":4852},{"krate":0,"index":4854},{"krate":0,"index":4856}],"decl_id":null,"docs":" Helper enum that is used in some situations to describe\n the behavior of arguments in a numeric context.\n","sig":null,"attributes":[{"value":"/ Helper enum that is used in some situations to describe","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264461,"byte_end":264520,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ the behavior of arguments in a numeric context.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264521,"byte_end":264572,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4870},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264980,"byte_end":264993,"line_start":44,"line_end":44,"column_start":5,"column_end":18},"name":"ResponseError","qualname":"::types::ErrorKind::ResponseError","value":"ErrorKind::ResponseError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" The server generated an invalid response.\n","sig":null,"attributes":[{"value":"/ The server generated an invalid response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264930,"byte_end":264975,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265050,"byte_end":265070,"line_start":46,"line_end":46,"column_start":5,"column_end":25},"name":"AuthenticationFailed","qualname":"::types::ErrorKind::AuthenticationFailed","value":"ErrorKind::AuthenticationFailed","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" The authentication with the server failed.\n","sig":null,"attributes":[{"value":"/ The authentication with the server failed.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264999,"byte_end":265045,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4874},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265129,"byte_end":265138,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"TypeError","qualname":"::types::ErrorKind::TypeError","value":"ErrorKind::TypeError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" Operation failed because of a type mismatch.\n","sig":null,"attributes":[{"value":"/ Operation failed because of a type mismatch.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265076,"byte_end":265124,"line_start":47,"line_end":47,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265184,"byte_end":265198,"line_start":50,"line_end":50,"column_start":5,"column_end":19},"name":"ExecAbortError","qualname":"::types::ErrorKind::ExecAbortError","value":"ErrorKind::ExecAbortError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" A script execution was aborted.\n","sig":null,"attributes":[{"value":"/ A script execution was aborted.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265144,"byte_end":265179,"line_start":49,"line_end":49,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4878},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265268,"byte_end":265284,"line_start":52,"line_end":52,"column_start":5,"column_end":21},"name":"BusyLoadingError","qualname":"::types::ErrorKind::BusyLoadingError","value":"ErrorKind::BusyLoadingError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" The server cannot response because it's loading a dump.\n","sig":null,"attributes":[{"value":"/ The server cannot response because it's loading a dump.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265204,"byte_end":265263,"line_start":51,"line_end":51,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265351,"byte_end":265364,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"NoScriptError","qualname":"::types::ErrorKind::NoScriptError","value":"ErrorKind::NoScriptError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" A script that was requested does not actually exist.\n","sig":null,"attributes":[{"value":"/ A script that was requested does not actually exist.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265290,"byte_end":265346,"line_start":53,"line_end":53,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4882},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265459,"byte_end":265478,"line_start":57,"line_end":57,"column_start":5,"column_end":24},"name":"InvalidClientConfig","qualname":"::types::ErrorKind::InvalidClientConfig","value":"ErrorKind::InvalidClientConfig","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" An error that was caused because the parameter to the\n client were wrong.\n","sig":null,"attributes":[{"value":"/ An error that was caused because the parameter to the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265370,"byte_end":265427,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ client were wrong.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265432,"byte_end":265454,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265535,"byte_end":265540,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Moved","qualname":"::types::ErrorKind::Moved","value":"ErrorKind::Moved","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265484,"byte_end":265530,"line_start":58,"line_end":58,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265616,"byte_end":265619,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Ask","qualname":"::types::ErrorKind::Ask","value":"ErrorKind::Ask","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" Raised if a key moved to a different node but we need to ask.\n","sig":null,"attributes":[{"value":"/ Raised if a key moved to a different node but we need to ask.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265546,"byte_end":265611,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4888},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265674,"byte_end":265682,"line_start":63,"line_end":63,"column_start":5,"column_end":13},"name":"TryAgain","qualname":"::types::ErrorKind::TryAgain","value":"ErrorKind::TryAgain","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" Raised if a request needs to be retried.\n","sig":null,"attributes":[{"value":"/ Raised if a request needs to be retried.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265625,"byte_end":265669,"line_start":62,"line_end":62,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265731,"byte_end":265742,"line_start":65,"line_end":65,"column_start":5,"column_end":16},"name":"ClusterDown","qualname":"::types::ErrorKind::ClusterDown","value":"ErrorKind::ClusterDown","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" Raised if a redis cluster is down.\n","sig":null,"attributes":[{"value":"/ Raised if a redis cluster is down.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265688,"byte_end":265726,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4892},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265787,"byte_end":265796,"line_start":67,"line_end":67,"column_start":5,"column_end":14},"name":"CrossSlot","qualname":"::types::ErrorKind::CrossSlot","value":"ErrorKind::CrossSlot","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" A request spans multiple slots\n","sig":null,"attributes":[{"value":"/ A request spans multiple slots","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265748,"byte_end":265782,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4894},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265843,"byte_end":265853,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"MasterDown","qualname":"::types::ErrorKind::MasterDown","value":"ErrorKind::MasterDown","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" A cluster master is unavailable.\n","sig":null,"attributes":[{"value":"/ A cluster master is unavailable.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265802,"byte_end":265838,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266022,"byte_end":266029,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"IoError","qualname":"::types::ErrorKind::IoError","value":"ErrorKind::IoError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" This kind is returned if the redis error is one that is\n not native to the system.  This is usually the case if\n the cause is another error.\n","sig":null,"attributes":[{"value":"/ This kind is returned if the redis error is one that is","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265859,"byte_end":265918,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ not native to the system.  This is usually the case if","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265923,"byte_end":265981,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/ the cause is another error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":265986,"byte_end":266017,"line_start":72,"line_end":72,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266111,"byte_end":266122,"line_start":75,"line_end":75,"column_start":5,"column_end":16},"name":"ClientError","qualname":"::types::ErrorKind::ClientError","value":"ErrorKind::ClientError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" An error raised that was identified on the client before execution.\n","sig":null,"attributes":[{"value":"/ An error raised that was identified on the client before execution.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266035,"byte_end":266106,"line_start":74,"line_end":74,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266252,"byte_end":266266,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"ExtensionError","qualname":"::types::ErrorKind::ExtensionError","value":"ErrorKind::ExtensionError","parent":{"krate":0,"index":4869},"children":[],"decl_id":null,"docs":" An extension error.  This is an error created by the server\n that is not directly understood by the library.\n","sig":null,"attributes":[{"value":"/ An extension error.  This is an error created by the server","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266128,"byte_end":266191,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ that is not directly understood by the library.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266196,"byte_end":266247,"line_start":77,"line_end":77,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264914,"byte_end":264923,"line_start":42,"line_end":42,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::types::ErrorKind","value":"pub enum ErrorKind {\n\n    /// The server generated an invalid response.\n    ResponseError,\n\n    /// The authentication with the server failed.\n    AuthenticationFailed,\n\n    /// Operation failed because of a type mismatch.\n    TypeError,\n\n    /// A script execution was aborted.\n    ExecAbortError,\n\n    /// The server cannot response because it's loading a dump.\n    BusyLoadingError,\n\n    /// A script that was requested does not actually exist.\n    NoScriptError,\n\n    /// An error that was caused because the parameter to the\n    /// client were wrong.\n    InvalidClientConfig,\n\n    /// Raised if a key moved to a different node.\n    Moved,\n\n    /// Raised if a key moved to a different node but we need to ask.\n    Ask,\n\n    /// Raised if a request needs to be retried.\n    TryAgain,\n\n    /// Raised if a redis cluster is down.\n    ClusterDown,\n\n    /// A request spans multiple slots\n    CrossSlot,\n\n    /// A cluster master is unavailable.\n    MasterDown,\n\n    /// This kind is returned if the redis error is one that is\n    /// not native to the system.  This is usually the case if\n    /// the cause is another error.\n    IoError,\n\n    /// An error raised that was identified on the client before execution.\n    ClientError,\n\n    /// An extension error.  This is an error created by the server\n    /// that is not directly understood by the library.\n    ExtensionError,\n}","parent":null,"children":[{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4876},{"krate":0,"index":4878},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4892},{"krate":0,"index":4894},{"krate":0,"index":4896},{"krate":0,"index":4898},{"krate":0,"index":4900}],"decl_id":null,"docs":" An enum of all error kinds.\n","sig":null,"attributes":[{"value":"/ An enum of all error kinds.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":264828,"byte_end":264859,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4914},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266405,"byte_end":266408,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"Nil","qualname":"::types::Value::Nil","value":"Value::Nil","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" A nil response from the server.\n","sig":null,"attributes":[{"value":"/ A nil response from the server.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266365,"byte_end":266400,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266661,"byte_end":266664,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Int","qualname":"::types::Value::Int","value":"Value::Int(i64)","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" An integer response.  Note that there are a few situations\n in which redis actually returns a string for an integer which\n is why this library generally treats integers and strings\n the same for all numeric responses.\n","sig":null,"attributes":[{"value":"/ An integer response.  Note that there are a few situations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266414,"byte_end":266476,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ in which redis actually returns a string for an integer which","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266481,"byte_end":266546,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/ is why this library generally treats integers and strings","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266551,"byte_end":266612,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ the same for all numeric responses.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266617,"byte_end":266656,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4919},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266708,"byte_end":266712,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"Data","qualname":"::types::Value::Data","value":"Value::Data(Vec<u8>)","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" An arbitary binary data.\n","sig":null,"attributes":[{"value":"/ An arbitary binary data.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266675,"byte_end":266703,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266836,"byte_end":266840,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Bulk","qualname":"::types::Value::Bulk","value":"Value::Bulk(Vec<Value>)","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" A bulk response of more data.  This is generally used by redis\n to express nested structures.\n","sig":null,"attributes":[{"value":"/ A bulk response of more data.  This is generally used by redis","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266727,"byte_end":266793,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ to express nested structures.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266798,"byte_end":266831,"line_start":94,"line_end":94,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266885,"byte_end":266891,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Status","qualname":"::types::Value::Status","value":"Value::Status(String)","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" A status response.\n","sig":null,"attributes":[{"value":"/ A status response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266858,"byte_end":266880,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266965,"byte_end":266969,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Okay","qualname":"::types::Value::Okay","value":"Value::Okay","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":" A status response which represents the string \"OK\".\n","sig":null,"attributes":[{"value":"/ A status response which represents the string \"OK\".","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266905,"byte_end":266960,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":4913},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266353,"byte_end":266358,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::Value","value":"pub enum Value {\n\n    /// A nil response from the server.\n    Nil,\n\n    /// An integer response.  Note that there are a few situations\n    /// in which redis actually returns a string for an integer which\n    /// is why this library generally treats integers and strings\n    /// the same for all numeric responses.\n    Int(i64),\n\n    /// An arbitary binary data.\n    Data(Vec<u8>),\n\n    /// A bulk response of more data.  This is generally used by redis\n    /// to express nested structures.\n    Bulk(Vec<Value>),\n\n    /// A status response.\n    Status(String),\n\n    /// A status response which represents the string \"OK\".\n    Okay,\n}","parent":null,"children":[{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4919},{"krate":0,"index":4922},{"krate":0,"index":4925},{"krate":0,"index":4928}],"decl_id":null,"docs":" Internal low-level redis value enum.\n","sig":null,"attributes":[{"value":"/ Internal low-level redis value enum.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266271,"byte_end":266311,"line_start":81,"line_end":81,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":266985,"byte_end":266992,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"MapIter","qualname":"::types::MapIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267952,"byte_end":267969,"line_start":129,"line_end":129,"column_start":12,"column_end":29},"name":"looks_like_cursor","qualname":"<Value>::looks_like_cursor","value":"pub fn looks_like_cursor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the return value looks like it fulfils the cursor\n protocol.  That means the result is a bulk item of length\n two with the first one being a cursor and the second a\n bulk response.\n","sig":null,"attributes":[{"value":"/ Checks if the return value looks like it fulfils the cursor","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267725,"byte_end":267788,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ protocol.  That means the result is a bulk item of length","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267793,"byte_end":267854,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ two with the first one being a cursor and the second a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267859,"byte_end":267917,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ bulk response.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267922,"byte_end":267940,"line_start":128,"line_end":128,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":268660,"byte_end":268671,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"as_sequence","qualname":"<Value>::as_sequence","value":"pub fn as_sequence(&Self) -> Option<&[Value]>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `&[Value]` if `self` is compatible with a sequence type\n","sig":null,"attributes":[{"value":"/ Returns an `&[Value]` if `self` is compatible with a sequence type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":268578,"byte_end":268648,"line_start":153,"line_end":153,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":268952,"byte_end":268963,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"as_map_iter","qualname":"<Value>::as_map_iter","value":"pub fn as_map_iter(&Self) -> Option<MapIter>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type\n","sig":null,"attributes":[{"value":"/ Returns an iterator of `(&Value, &Value)` if `self` is compatible with a map type","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":268855,"byte_end":268940,"line_start":162,"line_end":162,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270253,"byte_end":270263,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"RedisError","qualname":"::types::RedisError","value":"RedisError {  }","parent":null,"children":[{"krate":0,"index":1022}],"decl_id":null,"docs":" Represents a redis error.  For the most part you should be using\n the Error trait to interact with this rather than the actual\n struct.\n","sig":null,"attributes":[{"value":"/ Represents a redis error.  For the most part you should be using","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270096,"byte_end":270164,"line_start":198,"line_end":198,"column_start":1,"column_end":69}},{"value":"/ the Error trait to interact with this rather than the actual","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270165,"byte_end":270229,"line_start":199,"line_end":199,"column_start":1,"column_end":65}},{"value":"/ struct.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270230,"byte_end":270241,"line_start":200,"line_end":200,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":274017,"byte_end":274021,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"kind","qualname":"<RedisError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of the error.\n","sig":null,"attributes":[{"value":"/ Returns the kind of the error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273971,"byte_end":274005,"line_start":330,"line_end":330,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":274382,"byte_end":274388,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"detail","qualname":"<RedisError>::detail","value":"pub fn detail(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error detail.\n","sig":null,"attributes":[{"value":"/ Returns the error detail.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":274341,"byte_end":274370,"line_start":340,"line_end":340,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":274687,"byte_end":274691,"line_start":350,"line_end":350,"column_start":12,"column_end":16},"name":"code","qualname":"<RedisError>::code","value":"pub fn code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw error code if available.\n","sig":null,"attributes":[{"value":"/ Returns the raw error code if available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":274631,"byte_end":274675,"line_start":349,"line_end":349,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":275535,"byte_end":275543,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"category","qualname":"<RedisError>::category","value":"pub fn category(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the error category for display purposes.\n","sig":null,"attributes":[{"value":"/ Returns the name of the error category for display purposes.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":275459,"byte_end":275523,"line_start":369,"line_end":369,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":276562,"byte_end":276573,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<RedisError>::is_io_error","value":"pub fn is_io_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this failure is an IO failure.\n","sig":null,"attributes":[{"value":"/ Indicates that this failure is an IO failure.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":276501,"byte_end":276550,"line_start":391,"line_end":391,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":276868,"byte_end":276884,"line_start":404,"line_end":404,"column_start":12,"column_end":28},"name":"is_cluster_error","qualname":"<RedisError>::is_cluster_error","value":"pub fn is_cluster_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that this is a cluster error.\n","sig":null,"attributes":[{"value":"/ Indicates that this is a cluster error.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":276813,"byte_end":276856,"line_start":403,"line_end":403,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277307,"byte_end":277328,"line_start":415,"line_end":415,"column_start":12,"column_end":33},"name":"is_connection_refusal","qualname":"<RedisError>::is_connection_refusal","value":"pub fn is_connection_refusal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error indicates that the connection was\n refused.  You should generally not rely much on this function\n unless you are writing unit tests that want to detect if a\n local server is available.\n","sig":null,"attributes":[{"value":"/ Returns true if this error indicates that the connection was","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277059,"byte_end":277123,"line_start":411,"line_end":411,"column_start":5,"column_end":69}},{"value":"/ refused.  You should generally not rely much on this function","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277128,"byte_end":277193,"line_start":412,"line_end":412,"column_start":5,"column_end":70}},{"value":"/ unless you are writing unit tests that want to detect if a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277198,"byte_end":277260,"line_start":413,"line_end":413,"column_start":5,"column_end":67}},{"value":"/ local server is available.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277265,"byte_end":277295,"line_start":414,"line_end":414,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278008,"byte_end":278018,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<RedisError>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by I/O time out.\n Note that this may not be accurate depending on platform.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by I/O time out.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277877,"byte_end":277930,"line_start":431,"line_end":431,"column_start":5,"column_end":58}},{"value":"/ Note that this may not be accurate depending on platform.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":277935,"byte_end":277996,"line_start":432,"line_end":432,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278344,"byte_end":278365,"line_start":444,"line_end":444,"column_start":12,"column_end":33},"name":"is_connection_dropped","qualname":"<RedisError>::is_connection_dropped","value":"pub fn is_connection_dropped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if error was caused by a dropped connection.\n","sig":null,"attributes":[{"value":"/ Returns true if error was caused by a dropped connection.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278271,"byte_end":278332,"line_start":443,"line_end":443,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278726,"byte_end":278739,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"redirect_node","qualname":"<RedisError>::redirect_node","value":"pub fn redirect_node(&Self) -> Option<(&str, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the node the error refers to.","sig":null,"attributes":[{"value":"/ Returns the node the error refers to.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278625,"byte_end":278666,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278671,"byte_end":278674,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This returns `(addr, slot_id)`.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":278679,"byte_end":278714,"line_start":456,"line_end":456,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279387,"byte_end":279407,"line_start":474,"line_end":474,"column_start":12,"column_end":32},"name":"extension_error_code","qualname":"<RedisError>::extension_error_code","value":"pub fn extension_error_code(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the extension error code.","sig":null,"attributes":[{"value":"/ Returns the extension error code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279086,"byte_end":279123,"line_start":468,"line_end":468,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279128,"byte_end":279131,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This method should not be used because every time the redis library","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279136,"byte_end":279207,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ adds support for a new error code it would disappear form this method.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279212,"byte_end":279286,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ `code()` always returns the code.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279291,"byte_end":279328,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"deprecated(note = \"use code() instead\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":279333,"byte_end":279375,"line_start":473,"line_end":473,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281106,"byte_end":281117,"line_start":520,"line_end":520,"column_start":10,"column_end":21},"name":"RedisResult","qualname":"::types::RedisResult","value":"Result<T, RedisError>","parent":null,"children":[],"decl_id":null,"docs":" Library generic result type.\n","sig":null,"attributes":[{"value":"/ Library generic result type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281064,"byte_end":281096,"line_start":519,"line_end":519,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281213,"byte_end":281224,"line_start":524,"line_end":524,"column_start":10,"column_end":21},"name":"RedisFuture","qualname":"::types::RedisFuture","value":"futures_util::future::BoxFuture","parent":null,"children":[],"decl_id":null,"docs":" Library generic future type.\n","sig":null,"attributes":[{"value":"/ Library generic future type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281147,"byte_end":281179,"line_start":522,"line_end":522,"column_start":1,"column_end":33}},{"value":"cfg(feature = \"aio\")","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281180,"byte_end":281203,"line_start":523,"line_end":523,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281345,"byte_end":281353,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"InfoDict","qualname":"::types::InfoDict","value":"InfoDict {  }","parent":null,"children":[{"krate":0,"index":4959}],"decl_id":null,"docs":" An info dictionary type.\n","sig":null,"attributes":[{"value":"/ An info dictionary type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":281288,"byte_end":281316,"line_start":526,"line_end":526,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282331,"byte_end":282334,"line_start":553,"line_end":553,"column_start":12,"column_end":15},"name":"new","qualname":"<InfoDict>::new","value":"pub fn new(&str) -> InfoDict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new info dictionary from a string in the response of\n the INFO command.  Each line is a key, value pair with the\n key and value separated by a colon (`:`).  Lines starting with a\n hash (`#`) are ignored.\n","sig":null,"attributes":[{"value":"/ Creates a new info dictionary from a string in the response of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282081,"byte_end":282147,"line_start":549,"line_end":549,"column_start":5,"column_end":71}},{"value":"/ the INFO command.  Each line is a key, value pair with the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282152,"byte_end":282214,"line_start":550,"line_end":550,"column_start":5,"column_end":67}},{"value":"/ key and value separated by a colon (`:`).  Lines starting with a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282219,"byte_end":282287,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/ hash (`#`) are ignored.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282292,"byte_end":282319,"line_start":552,"line_end":552,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282939,"byte_end":282942,"line_start":569,"line_end":569,"column_start":12,"column_end":15},"name":"get","qualname":"<InfoDict>::get","value":"pub fn get<T: FromRedisValue>(&Self, &str) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches a value by key and converts it into the given type.\n Typical types are `String`, `bool` and integer types.\n","sig":null,"attributes":[{"value":"/ Fetches a value by key and converts it into the given type.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282802,"byte_end":282865,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ Typical types are `String`, `bool` and integer types.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282870,"byte_end":282927,"line_start":568,"line_end":568,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283176,"byte_end":283180,"line_start":577,"line_end":577,"column_start":12,"column_end":16},"name":"find","qualname":"<InfoDict>::find","value":"pub fn find(&Self, &&str) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Looks up a key in the info dict.\n","sig":null,"attributes":[{"value":"/ Looks up a key in the info dict.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283128,"byte_end":283164,"line_start":576,"line_end":576,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283320,"byte_end":283332,"line_start":582,"line_end":582,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<InfoDict>::contains_key","value":"pub fn contains_key(&Self, &&str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a key is contained in the info dicf.\n","sig":null,"attributes":[{"value":"/ Checks if a key is contained in the info dicf.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283258,"byte_end":283308,"line_start":581,"line_end":581,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283456,"byte_end":283459,"line_start":587,"line_end":587,"column_start":12,"column_end":15},"name":"len","qualname":"<InfoDict>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the info dict.\n","sig":null,"attributes":[{"value":"/ Returns the size of the info dict.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283406,"byte_end":283444,"line_start":586,"line_end":586,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283556,"byte_end":283564,"line_start":592,"line_end":592,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InfoDict>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the dict is empty.\n","sig":null,"attributes":[{"value":"/ Checks if the dict is empty.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283512,"byte_end":283544,"line_start":591,"line_end":591,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283683,"byte_end":283693,"line_start":598,"line_end":598,"column_start":11,"column_end":21},"name":"RedisWrite","qualname":"::types::RedisWrite","value":"RedisWrite","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"decl_id":null,"docs":" Abstraction trait for redis command abstractions.\n","sig":null,"attributes":[{"value":"/ Abstraction trait for redis command abstractions.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283619,"byte_end":283672,"line_start":597,"line_end":597,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283747,"byte_end":283756,"line_start":600,"line_end":600,"column_start":8,"column_end":17},"name":"write_arg","qualname":"::types::RedisWrite::write_arg","value":"pub fn write_arg(&mut Self, &[u8])","parent":{"krate":0,"index":1069},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283700,"byte_end":283739,"line_start":599,"line_end":599,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283833,"byte_end":283846,"line_start":603,"line_end":603,"column_start":8,"column_end":21},"name":"write_arg_fmt","qualname":"::types::RedisWrite::write_arg_fmt","value":"pub fn write_arg_fmt<impl fmt::Display: fmt::Display>(&mut Self,\n                                                      impl fmt::Display)","parent":{"krate":0,"index":1069},"children":[],"decl_id":null,"docs":" Accepts a serialized redis command.\n","sig":null,"attributes":[{"value":"/ Accepts a serialized redis command.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283786,"byte_end":283825,"line_start":602,"line_end":602,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284377,"byte_end":284388,"line_start":621,"line_end":621,"column_start":11,"column_end":22},"name":"ToRedisArgs","qualname":"::types::ToRedisArgs","value":"ToRedisArgs: Sized","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1089}],"decl_id":null,"docs":" Used to convert a value into one or multiple redis argument\n strings.  Most values will produce exactly one item but in\n some cases it might make sense to produce more than one.\n","sig":null,"attributes":[{"value":"/ Used to convert a value into one or multiple redis argument","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284179,"byte_end":284242,"line_start":618,"line_end":618,"column_start":1,"column_end":64}},{"value":"/ strings.  Most values will produce exactly one item but in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284243,"byte_end":284305,"line_start":619,"line_end":619,"column_start":1,"column_end":63}},{"value":"/ some cases it might make sense to produce more than one.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284306,"byte_end":284366,"line_start":620,"line_end":620,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284633,"byte_end":284646,"line_start":627,"line_end":627,"column_start":8,"column_end":21},"name":"to_redis_args","qualname":"::types::ToRedisArgs::to_redis_args","value":"pub fn to_redis_args(&Self) -> Vec<Vec<u8>>","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" This converts the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a vector of a\n single item.","sig":null,"attributes":[{"value":"/ This converts the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284402,"byte_end":284464,"line_start":622,"line_end":622,"column_start":5,"column_end":67}},{"value":"/ is a single argument.  Most items generate a vector of a","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284469,"byte_end":284529,"line_start":623,"line_end":623,"column_start":5,"column_end":65}},{"value":"/ single item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284534,"byte_end":284550,"line_start":624,"line_end":624,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284555,"byte_end":284558,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284563,"byte_end":284625,"line_start":626,"line_end":626,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284979,"byte_end":284995,"line_start":637,"line_end":637,"column_start":8,"column_end":24},"name":"write_redis_args","qualname":"::types::ToRedisArgs::write_redis_args","value":"pub fn write_redis_args<W: ?Sized>(&Self, &mut W) where W: RedisWrite","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" This writes the value into a vector of bytes.  Each item\n is a single argument.  Most items generate a single item.","sig":null,"attributes":[{"value":"/ This writes the value into a vector of bytes.  Each item","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284770,"byte_end":284830,"line_start":633,"line_end":633,"column_start":5,"column_end":65}},{"value":"/ is a single argument.  Most items generate a single item.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284835,"byte_end":284896,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284901,"byte_end":284904,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The exception to this rule currently are vectors of items.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284909,"byte_end":284971,"line_start":636,"line_end":636,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285353,"byte_end":285378,"line_start":645,"line_end":645,"column_start":8,"column_end":33},"name":"describe_numeric_behavior","qualname":"::types::ToRedisArgs::describe_numeric_behavior","value":"pub fn describe_numeric_behavior(&Self) -> NumericBehavior","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" Returns an information about the contained value with regards\n to it's numeric behavior in a redis context.  This is used in\n some high level concepts to switch between different implementations\n of redis functions (for instance `INCR` vs `INCRBYFLOAT`).\n","sig":null,"attributes":[{"value":"/ Returns an information about the contained value with regards","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285066,"byte_end":285131,"line_start":641,"line_end":641,"column_start":5,"column_end":70}},{"value":"/ to it's numeric behavior in a redis context.  This is used in","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285136,"byte_end":285201,"line_start":642,"line_end":642,"column_start":5,"column_end":70}},{"value":"/ some high level concepts to switch between different implementations","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285206,"byte_end":285278,"line_start":643,"line_end":643,"column_start":5,"column_end":77}},{"value":"/ of redis functions (for instance `INCR` vs `INCRBYFLOAT`).","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285283,"byte_end":285345,"line_start":644,"line_end":644,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285711,"byte_end":285724,"line_start":653,"line_end":653,"column_start":8,"column_end":21},"name":"is_single_arg","qualname":"::types::ToRedisArgs::is_single_arg","value":"pub fn is_single_arg(&Self) -> bool","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" Returns an indiciation if the value contained is exactly one\n argument.  It returns false if it's zero or more than one.  This\n is used in some high level functions to intelligently switch\n between `GET` and `MGET` variants.\n","sig":null,"attributes":[{"value":"/ Returns an indiciation if the value contained is exactly one","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285454,"byte_end":285518,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ argument.  It returns false if it's zero or more than one.  This","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285523,"byte_end":285591,"line_start":650,"line_end":650,"column_start":5,"column_end":73}},{"value":"/ is used in some high level functions to intelligently switch","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285596,"byte_end":285660,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ between `GET` and `MGET` variants.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285665,"byte_end":285703,"line_start":652,"line_end":652,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285880,"byte_end":285892,"line_start":660,"line_end":660,"column_start":8,"column_end":20},"name":"make_arg_vec","qualname":"::types::ToRedisArgs::make_arg_vec","value":"pub fn make_arg_vec<W: ?Sized>(&[Self], &mut W) where W: RedisWrite","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285766,"byte_end":285829,"line_start":657,"line_end":657,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":285834,"byte_end":285853,"line_start":658,"line_end":658,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":286183,"byte_end":286200,"line_start":672,"line_end":672,"column_start":8,"column_end":25},"name":"make_arg_iter_ref","qualname":"::types::ToRedisArgs::make_arg_iter_ref","value":"pub fn make_arg_iter_ref<'a, I, W: ?Sized>(I, &mut W) where W: RedisWrite,\nI: Iterator<Item = &'a Self>, Self: 'a","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":286069,"byte_end":286132,"line_start":669,"line_end":669,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":286137,"byte_end":286156,"line_start":670,"line_end":670,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":286449,"byte_end":286466,"line_start":684,"line_end":684,"column_start":8,"column_end":25},"name":"is_single_vec_arg","qualname":"::types::ToRedisArgs::is_single_vec_arg","value":"pub fn is_single_vec_arg(&[Self]) -> bool","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294755,"byte_end":294769,"line_start":971,"line_end":971,"column_start":11,"column_end":25},"name":"FromRedisValue","qualname":"::types::FromRedisValue","value":"FromRedisValue: Sized","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1154}],"decl_id":null,"docs":" This trait is used to convert a redis value into a more appropriate\n type.  While a redis `Value` can represent any response that comes\n back from the redis server, usually you want to map this into something\n that works better in rust.  For instance you might want to convert the\n return value into a `String` or an integer.","sig":null,"attributes":[{"value":"/ This trait is used to convert a redis value into a more appropriate","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294156,"byte_end":294227,"line_start":960,"line_end":960,"column_start":1,"column_end":72}},{"value":"/ type.  While a redis `Value` can represent any response that comes","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294228,"byte_end":294298,"line_start":961,"line_end":961,"column_start":1,"column_end":71}},{"value":"/ back from the redis server, usually you want to map this into something","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294299,"byte_end":294374,"line_start":962,"line_end":962,"column_start":1,"column_end":76}},{"value":"/ that works better in rust.  For instance you might want to convert the","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294375,"byte_end":294449,"line_start":963,"line_end":963,"column_start":1,"column_end":75}},{"value":"/ return value into a `String` or an integer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294450,"byte_end":294497,"line_start":964,"line_end":964,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294498,"byte_end":294501,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ This trait is well supported throughout the library and you can","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294502,"byte_end":294569,"line_start":966,"line_end":966,"column_start":1,"column_end":68}},{"value":"/ implement it for your own types if you want.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294570,"byte_end":294618,"line_start":967,"line_end":967,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294619,"byte_end":294622,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ In addition to what you can see from the docs, this is also implemented","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294623,"byte_end":294698,"line_start":969,"line_end":969,"column_start":1,"column_end":76}},{"value":"/ for tuples up to size 12 and for Vec<u8>.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294699,"byte_end":294744,"line_start":970,"line_end":970,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294971,"byte_end":294987,"line_start":975,"line_end":975,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::FromRedisValue::from_redis_value","value":"pub fn from_redis_value(&Value) -> RedisResult<Self>","parent":{"krate":0,"index":1150},"children":[],"decl_id":null,"docs":" Given a redis `Value` this attempts to convert it into the given\n destination type.  If that fails because it's not compatible an\n appropriate error is generated.\n","sig":null,"attributes":[{"value":"/ Given a redis `Value` this attempts to convert it into the given","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294783,"byte_end":294851,"line_start":972,"line_end":972,"column_start":5,"column_end":73}},{"value":"/ destination type.  If that fails because it's not compatible an","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294856,"byte_end":294923,"line_start":973,"line_end":973,"column_start":5,"column_end":72}},{"value":"/ appropriate error is generated.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294928,"byte_end":294963,"line_start":974,"line_end":974,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295232,"byte_end":295249,"line_start":980,"line_end":980,"column_start":8,"column_end":25},"name":"from_redis_values","qualname":"::types::FromRedisValue::from_redis_values","value":"pub fn from_redis_values(&[Value]) -> RedisResult<Vec<Self>>","parent":{"krate":0,"index":1150},"children":[],"decl_id":null,"docs":" Similar to `from_redis_value` but constructs a vector of objects\n from another vector of values.  This primarily exists internally\n to customize the behavior for vectors of tuples.\n","sig":null,"attributes":[{"value":"/ Similar to `from_redis_value` but constructs a vector of objects","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295026,"byte_end":295094,"line_start":977,"line_end":977,"column_start":5,"column_end":73}},{"value":"/ from another vector of values.  This primarily exists internally","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295099,"byte_end":295167,"line_start":978,"line_end":978,"column_start":5,"column_end":73}},{"value":"/ to customize the behavior for vectors of tuples.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295172,"byte_end":295224,"line_start":979,"line_end":979,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295557,"byte_end":295570,"line_start":990,"line_end":990,"column_start":8,"column_end":21},"name":"from_byte_vec","qualname":"::types::FromRedisValue::from_byte_vec","value":"pub fn from_byte_vec(&[u8]) -> Option<Vec<Self>>","parent":{"krate":0,"index":1150},"children":[],"decl_id":null,"docs":" This only exists internally as a workaround for the lack of\n specialization.\n","sig":null,"attributes":[{"value":"/ This only exists internally as a workaround for the lack of","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295443,"byte_end":295506,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/ specialization.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":295511,"byte_end":295530,"line_start":988,"line_end":988,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":304291,"byte_end":304307,"line_start":1242,"line_end":1242,"column_start":8,"column_end":24},"name":"from_redis_value","qualname":"::types::from_redis_value","value":"pub fn from_redis_value<T: FromRedisValue>(&Value) -> RedisResult<T>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut function to invoke `FromRedisValue::from_redis_value`\n to make the API slightly nicer.\n","sig":null,"attributes":[{"value":"/ A shortcut function to invoke `FromRedisValue::from_redis_value`","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":304179,"byte_end":304247,"line_start":1240,"line_end":1240,"column_start":1,"column_end":69}},{"value":"/ to make the API slightly nicer.","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":304248,"byte_end":304283,"line_start":1241,"line_end":1241,"column_start":1,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17306,"byte_end":17310,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20174,"byte_end":20181,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":61100,"byte_end":61105,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":62378,"byte_end":62383,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":62882,"byte_end":62887,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":28708,"byte_end":28715,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29948,"byte_end":29949,"line_start":127,"line_end":127,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30112,"byte_end":30118,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":33183,"byte_end":33193,"line_start":225,"line_end":225,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":33548,"byte_end":33558,"line_start":244,"line_end":244,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41591,"byte_end":41601,"line_start":476,"line_end":476,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":43648,"byte_end":43656,"line_start":549,"line_end":549,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":43930,"byte_end":43942,"line_start":564,"line_end":564,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":46064,"byte_end":46076,"line_start":622,"line_end":622,"column_start":67,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":48377,"byte_end":48385,"line_start":702,"line_end":702,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":315},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":50580,"byte_end":50601,"line_start":771,"line_end":771,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":52031,"byte_end":52052,"line_start":813,"line_end":813,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":339},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65239,"byte_end":65243,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66064,"byte_end":66069,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66316,"byte_end":66321,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66866,"byte_end":66871,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67628,"byte_end":67639,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68682,"byte_end":68695,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":70065,"byte_end":70078,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71501,"byte_end":71519,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":72208,"byte_end":72226,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75247,"byte_end":75259,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76161,"byte_end":76179,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76945,"byte_end":76963,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78417,"byte_end":78434,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79583,"byte_end":79600,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82281,"byte_end":82299,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82391,"byte_end":82409,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87778,"byte_end":87786,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":89071,"byte_end":89086,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":89709,"byte_end":89725,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":90113,"byte_end":90129,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":90624,"byte_end":90642,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":91971,"byte_end":91994,"line_start":561,"line_end":561,"column_start":25,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":93854,"byte_end":93875,"line_start":603,"line_end":603,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":94816,"byte_end":94840,"line_start":629,"line_end":629,"column_start":25,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":95555,"byte_end":95576,"line_start":651,"line_end":651,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97248,"byte_end":97254,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98770,"byte_end":98776,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":106241,"byte_end":106247,"line_start":256,"line_end":256,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":108184,"byte_end":108188,"line_start":42,"line_end":42,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109573,"byte_end":109582,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":114067,"byte_end":114070,"line_start":246,"line_end":246,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":114431,"byte_end":114434,"line_start":259,"line_end":259,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115394,"byte_end":115397,"line_start":292,"line_end":292,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":123336,"byte_end":123344,"line_start":508,"line_end":508,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124394,"byte_end":124402,"line_start":535,"line_end":535,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202734,"byte_end":202735,"line_start":1987,"line_end":1987,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202814,"byte_end":202815,"line_start":1990,"line_end":1990,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202895,"byte_end":202905,"line_start":1992,"line_end":1992,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204542,"byte_end":204553,"line_start":2058,"line_end":2058,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":205031,"byte_end":205042,"line_start":2078,"line_end":2078,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207542,"byte_end":207556,"line_start":64,"line_end":64,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208219,"byte_end":208233,"line_start":81,"line_end":81,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209106,"byte_end":209120,"line_start":104,"line_end":104,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209605,"byte_end":209619,"line_start":120,"line_end":120,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":210375,"byte_end":210381,"line_start":149,"line_end":149,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":213975,"byte_end":213978,"line_start":254,"line_end":254,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215434,"byte_end":215450,"line_start":318,"line_end":318,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227866,"byte_end":227876,"line_start":650,"line_end":650,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":233817,"byte_end":233827,"line_start":798,"line_end":798,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235430,"byte_end":235436,"line_start":862,"line_end":862,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237241,"byte_end":237247,"line_start":913,"line_end":913,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237450,"byte_end":237453,"line_start":921,"line_end":921,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":248432,"byte_end":248444,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":248589,"byte_end":248601,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":253393,"byte_end":253403,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":253639,"byte_end":253649,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256145,"byte_end":256151,"line_start":245,"line_end":245,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256482,"byte_end":256488,"line_start":255,"line_end":255,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259022,"byte_end":259028,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261135,"byte_end":261151,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267050,"byte_end":267057,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267713,"byte_end":267718,"line_start":124,"line_end":124,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":269142,"byte_end":269147,"line_start":171,"line_end":171,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270515,"byte_end":270525,"line_start":213,"line_end":213,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271148,"byte_end":271158,"line_start":231,"line_end":231,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271313,"byte_end":271323,"line_start":239,"line_end":239,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271852,"byte_end":271862,"line_start":260,"line_end":260,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272089,"byte_end":272099,"line_start":268,"line_end":268,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272318,"byte_end":272328,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272553,"byte_end":272563,"line_start":284,"line_end":284,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273140,"byte_end":273150,"line_start":303,"line_end":303,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273770,"byte_end":273780,"line_start":322,"line_end":322,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273954,"byte_end":273964,"line_start":329,"line_end":329,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282066,"byte_end":282074,"line_start":548,"line_end":548,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283965,"byte_end":283968,"line_start":608,"line_end":608,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":288978,"byte_end":288984,"line_start":771,"line_end":771,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":289526,"byte_end":289529,"line_start":798,"line_end":798,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":290108,"byte_end":290114,"line_start":824,"line_end":824,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":290888,"byte_end":290895,"line_start":852,"line_end":852,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":291337,"byte_end":291345,"line_start":868,"line_end":868,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":291868,"byte_end":291876,"line_start":885,"line_end":885,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":298181,"byte_end":298187,"line_start":1076,"line_end":1076,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":298593,"byte_end":298596,"line_start":1087,"line_end":1087,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":299364,"byte_end":299371,"line_start":1104,"line_end":1104,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":299757,"byte_end":299765,"line_start":1114,"line_end":1114,"column_start":75,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300172,"byte_end":300179,"line_start":1126,"line_end":1126,"column_start":82,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300533,"byte_end":300541,"line_start":1135,"line_end":1135,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300878,"byte_end":300883,"line_start":1147,"line_end":1147,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":303783,"byte_end":303791,"line_start":1224,"line_end":1224,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":303984,"byte_end":303990,"line_start":1231,"line_end":1231,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":13942,"byte_end":13945,"line_start":407,"line_end":407,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":52}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":14027,"byte_end":14030,"line_start":411,"line_end":411,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27800,"byte_end":27805,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":14126,"byte_end":14129,"line_start":415,"line_end":415,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":345}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\lib.rs","byte_start":14400,"byte_end":14407,"line_start":427,"line_end":427,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":408}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":17306,"byte_end":17310,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1204},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\acl.rs","byte_start":20174,"byte_end":20181,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":61100,"byte_end":61105,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":149},"to":{"krate":17,"index":193}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":62378,"byte_end":62383,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":149},"to":{"krate":17,"index":142}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio\\tokio.rs","byte_start":62882,"byte_end":62887,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":149},"to":{"krate":0,"index":1280}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27922,"byte_end":27933,"line_start":56,"line_end":56,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":163},"to":{"krate":0,"index":1280}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27936,"byte_end":27940,"line_start":56,"line_end":56,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1280}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27943,"byte_end":27947,"line_start":56,"line_end":56,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":1280}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":27950,"byte_end":27955,"line_start":56,"line_end":56,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1280}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":28708,"byte_end":28715,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29898,"byte_end":29907,"line_start":126,"line_end":126,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":17,"index":142},"to":{"krate":0,"index":163}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29910,"byte_end":29920,"line_start":126,"line_end":126,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":17,"index":193},"to":{"krate":0,"index":163}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":29948,"byte_end":29949,"line_start":127,"line_end":127,"column_start":25,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":165},"to":{"krate":0,"index":163}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":30112,"byte_end":30118,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":33183,"byte_end":33193,"line_start":225,"line_end":225,"column_start":9,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":33548,"byte_end":33558,"line_start":244,"line_end":244,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":41591,"byte_end":41601,"line_start":476,"line_end":476,"column_start":28,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":201},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":43648,"byte_end":43656,"line_start":549,"line_end":549,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":43930,"byte_end":43942,"line_start":564,"line_end":564,"column_start":15,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":46064,"byte_end":46076,"line_start":622,"line_end":622,"column_start":67,"column_end":79},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1293},"to":{"krate":38,"index":9}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":48377,"byte_end":48385,"line_start":702,"line_end":702,"column_start":22,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":50580,"byte_end":50601,"line_start":771,"line_end":771,"column_start":6,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\aio.rs","byte_start":52031,"byte_end":52052,"line_start":813,"line_end":813,"column_start":25,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1351},"to":{"krate":0,"index":244}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":65239,"byte_end":65243,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":355},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66064,"byte_end":66069,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66316,"byte_end":66321,"line_start":73,"line_end":73,"column_start":44,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1356},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":66866,"byte_end":66871,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1356},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":67628,"byte_end":67639,"line_start":117,"line_end":117,"column_start":18,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":68682,"byte_end":68695,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":70065,"byte_end":70078,"line_start":200,"line_end":200,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":71501,"byte_end":71519,"line_start":257,"line_end":257,"column_start":25,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\geo.rs","byte_start":72208,"byte_end":72226,"line_start":279,"line_end":279,"column_start":6,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":75247,"byte_end":75259,"line_start":21,"line_end":21,"column_start":22,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1378},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76161,"byte_end":76179,"line_start":55,"line_end":55,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":76945,"byte_end":76963,"line_start":88,"line_end":88,"column_start":22,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1397},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":78417,"byte_end":78434,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":79583,"byte_end":79600,"line_start":176,"line_end":176,"column_start":22,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1407},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82281,"byte_end":82299,"line_start":263,"line_end":263,"column_start":18,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":82391,"byte_end":82409,"line_start":269,"line_end":269,"column_start":6,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":87778,"byte_end":87786,"line_start":429,"line_end":429,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":89071,"byte_end":89086,"line_start":471,"line_end":471,"column_start":25,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1416},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":89709,"byte_end":89725,"line_start":490,"line_end":490,"column_start":25,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1424},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":90113,"byte_end":90129,"line_start":501,"line_end":501,"column_start":25,"column_end":41},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":90624,"byte_end":90642,"line_start":518,"line_end":518,"column_start":25,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1440},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":91971,"byte_end":91994,"line_start":561,"line_end":561,"column_start":25,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1461},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":93854,"byte_end":93875,"line_start":603,"line_end":603,"column_start":25,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1469},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":94816,"byte_end":94840,"line_start":629,"line_end":629,"column_start":25,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\streams.rs","byte_start":95555,"byte_end":95576,"line_start":651,"line_end":651,"column_start":25,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1490},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":97248,"byte_end":97254,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":98770,"byte_end":98776,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\client.rs","byte_start":106241,"byte_end":106247,"line_start":256,"line_end":256,"column_start":25,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":802}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":108184,"byte_end":108188,"line_start":42,"line_end":42,"column_start":42,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":109573,"byte_end":109582,"line_start":84,"line_end":84,"column_start":34,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":114067,"byte_end":114070,"line_start":246,"line_end":246,"column_start":21,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1564},"to":{"krate":0,"index":1069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":114431,"byte_end":114434,"line_start":259,"line_end":259,"column_start":18,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":115394,"byte_end":115397,"line_start":292,"line_end":292,"column_start":6,"column_end":9},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":123336,"byte_end":123344,"line_start":508,"line_end":508,"column_start":18,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\cmd.rs","byte_start":124394,"byte_end":124402,"line_start":535,"line_end":535,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":201733,"byte_end":201738,"line_start":1963,"line_end":1963,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":697}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202734,"byte_end":202735,"line_start":1987,"line_end":1987,"column_start":22,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":707},"to":{"krate":0,"index":1576}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202814,"byte_end":202815,"line_start":1990,"line_end":1990,"column_start":27,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":709},"to":{"krate":0,"index":3064}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":202895,"byte_end":202905,"line_start":1992,"line_end":1992,"column_start":25,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":786},"to":{"krate":0,"index":697}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":204542,"byte_end":204553,"line_start":2058,"line_end":2058,"column_start":6,"column_end":17},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\commands.rs","byte_start":205031,"byte_end":205042,"line_start":2078,"line_end":2078,"column_start":22,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4732},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":207542,"byte_end":207556,"line_start":64,"line_end":64,"column_start":6,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":208219,"byte_end":208233,"line_start":81,"line_end":81,"column_start":23,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4738},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209106,"byte_end":209120,"line_start":104,"line_end":104,"column_start":18,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4758},"to":{"krate":2,"index":9028}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":209605,"byte_end":209619,"line_start":120,"line_end":120,"column_start":29,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4758},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":210375,"byte_end":210381,"line_start":149,"line_end":149,"column_start":29,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":213975,"byte_end":213978,"line_start":254,"line_end":254,"column_start":34,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":44,"index":723},"to":{"krate":0,"index":763}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":215434,"byte_end":215450,"line_start":318,"line_end":318,"column_start":6,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":227866,"byte_end":227876,"line_start":650,"line_end":650,"column_start":6,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":233817,"byte_end":233827,"line_start":798,"line_end":798,"column_start":25,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":786},"to":{"krate":0,"index":802}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":235430,"byte_end":235436,"line_start":862,"line_end":862,"column_start":10,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237241,"byte_end":237247,"line_start":913,"line_end":913,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\connection.rs","byte_start":237450,"byte_end":237453,"line_start":921,"line_end":921,"column_start":6,"column_end":9},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":248432,"byte_end":248444,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":248589,"byte_end":248601,"line_start":32,"line_end":32,"column_start":40,"column_end":52},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":253393,"byte_end":253403,"line_start":169,"line_end":169,"column_start":31,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4836},"to":{"krate":41,"index":383}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":253639,"byte_end":253649,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4836},"to":{"krate":41,"index":372}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256145,"byte_end":256151,"line_start":245,"line_end":245,"column_start":18,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\parser.rs","byte_start":256482,"byte_end":256488,"line_start":255,"line_end":255,"column_start":6,"column_end":12},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":259022,"byte_end":259028,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\script.rs","byte_start":261135,"byte_end":261151,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267050,"byte_end":267057,"line_start":104,"line_end":104,"column_start":23,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":267713,"byte_end":267718,"line_start":124,"line_end":124,"column_start":6,"column_end":11},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":269142,"byte_end":269147,"line_start":171,"line_end":171,"column_start":21,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4913},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":270515,"byte_end":270525,"line_start":213,"line_end":213,"column_start":20,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271148,"byte_end":271158,"line_start":231,"line_end":231,"column_start":26,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271313,"byte_end":271323,"line_start":239,"line_end":239,"column_start":26,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":271852,"byte_end":271862,"line_start":260,"line_end":260,"column_start":30,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272089,"byte_end":272099,"line_start":268,"line_end":268,"column_start":42,"column_end":52},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272318,"byte_end":272328,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":272553,"byte_end":272563,"line_start":284,"line_end":284,"column_start":23,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1021},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273140,"byte_end":273150,"line_start":303,"line_end":303,"column_start":23,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273770,"byte_end":273780,"line_start":322,"line_end":322,"column_start":21,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":273954,"byte_end":273964,"line_start":329,"line_end":329,"column_start":6,"column_end":16},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":282066,"byte_end":282074,"line_start":548,"line_end":548,"column_start":6,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":283965,"byte_end":283968,"line_start":608,"line_end":608,"column_start":21,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1069}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":284390,"byte_end":284395,"line_start":621,"line_end":621,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":288978,"byte_end":288984,"line_start":771,"line_end":771,"column_start":22,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":289526,"byte_end":289529,"line_start":798,"line_end":798,"column_start":38,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":290108,"byte_end":290114,"line_start":824,"line_end":824,"column_start":38,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":290888,"byte_end":290895,"line_start":852,"line_end":852,"column_start":76,"column_end":83},"kind":{"Impl":{"id":108}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":291337,"byte_end":291345,"line_start":868,"line_end":868,"column_start":56,"column_end":64},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":291868,"byte_end":291876,"line_start":885,"line_end":885,"column_start":72,"column_end":80},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":1077}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":294771,"byte_end":294776,"line_start":971,"line_end":971,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":298181,"byte_end":298187,"line_start":1076,"line_end":1076,"column_start":25,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":298593,"byte_end":298596,"line_start":1087,"line_end":1087,"column_start":44,"column_end":47},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":299364,"byte_end":299371,"line_start":1104,"line_end":1104,"column_start":9,"column_end":16},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":617},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":299757,"byte_end":299765,"line_start":1114,"line_end":1114,"column_start":75,"column_end":83},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":933},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300172,"byte_end":300179,"line_start":1126,"line_end":1126,"column_start":82,"column_end":89},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":1281},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300533,"byte_end":300541,"line_start":1135,"line_end":1135,"column_start":56,"column_end":64},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":5706},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":300878,"byte_end":300883,"line_start":1147,"line_end":1147,"column_start":25,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4913},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":303783,"byte_end":303791,"line_start":1224,"line_end":1224,"column_start":25,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4958},"to":{"krate":0,"index":1150}},{"span":{"file_name":"C:\\Users\\sumba\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\redis-0.19.0\\src\\types.rs","byte_start":303984,"byte_end":303990,"line_start":1231,"line_end":1231,"column_start":44,"column_end":50},"kind":{"Impl":{"id":134}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1150}}]}